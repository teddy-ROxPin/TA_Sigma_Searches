
[Powerview Add-DomainObjectAcl DCSync AD Extend Right - builtin]
description = backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5136" LDAPDisplayName="ntSecurityDescriptor" (Value="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR Value="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR Value="*89e95b76-444d-4c62-991a-0facbeda640c*")) | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Powerview Add-DomainObjectAcl DCSync AD Extend Right" | eval sigma_description="backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer"
dispatch.earliest_time = -24h@h
alert.track = 0

[AD Privileged Users or Groups Reconnaissance - builtin]
description = Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4661" (ObjectType="SAM_USER" OR ObjectType="SAM_GROUP")) ((ObjectName="*-512" OR ObjectName="*-502" OR ObjectName="*-500" OR ObjectName="*-505" OR ObjectName="*-519" OR ObjectName="*-520" OR ObjectName="*-544" OR ObjectName="*-551" OR ObjectName="*-555") OR (ObjectName="*admin*"))) | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1087.002" | eval sigma_title="AD Privileged Users or Groups Reconnaissance" | eval sigma_description="Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs"
dispatch.earliest_time = -24h@h
alert.track = 0

[AD Object WriteDAC Access - builtin]
description = Detects WRITE_DAC access to a domain object
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectServer="DS" AccessMask="0x40000" (ObjectType="19195a5b-6da0-11d0-afd3-00c04fd930c9" OR ObjectType="domainDNS")) | eval sigma_attack_tags="attack.defense_evasion attack.t1222 attack.t1222.001" | eval sigma_title="AD Object WriteDAC Access" | eval sigma_description="Detects WRITE_DAC access to a domain object"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Replication from Non Machine Account - builtin]
description = Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" AccessMask="0x100" (Properties="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*89e95b76-444d-4c62-991a-0facbeda640c*")) NOT (SubjectUserName="*$" OR SubjectUserName="MSOL_*")) | table ComputerName,SubjectDomainName,SubjectUserName | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.006" | eval sigma_title="Active Directory Replication from Non Machine Account" | eval sigma_description="Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[AD User Enumeration - builtin]
description = Detects access to a domain user from a non-machine account
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" (ObjectType="*bf967aba-0de6-11d0-a285-00aa003049e2*")) NOT (SubjectUserName="*$" OR SubjectUserName="MSOL_*")) | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1087.002" | eval sigma_title="AD User Enumeration" | eval sigma_description="Detects access to a domain user from a non-machine account"
dispatch.earliest_time = -24h@h
alert.track = 0

[Admin User Remote Logon - builtin]
description = Detect remote login by Administrator user depending on internal pattern
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="10" AuthenticationPackageName="Negotiate" AccountName="Admin-*") | eval sigma_attack_tags="attack.lateral_movement attack.t1078 attack.t1078.001 attack.t1078.002 attack.t1078.003 car.2016-04-005" | eval sigma_title="Admin User Remote Logon" | eval sigma_description="Detect remote login by Administrator user depending on internal pattern"
dispatch.earliest_time = -24h@h
alert.track = 0

[Access to ADMIN$ Share - builtin]
description = Detects access to $ADMIN share
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5140" ShareName="Admin$") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1077 attack.t1021.002" | eval sigma_title="Access to ADMIN$ Share" | eval sigma_description="Detects access to $ADMIN share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enabled User Right in AD to Control User Objects - builtin]
description = Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4704" (Message="*SeEnableDelegationPrivilege*")) | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Enabled User Right in AD to Control User Objects" | eval sigma_description="Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects."
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory User Backdoors - builtin]
description = Detects scenarios where one can control another users or computers account without having to use their credentials.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4738" NOT (AllowedToDelegateTo="-")) NOT (NOT AllowedToDelegateTo="*")) OR (EventCode="5136" AttributeLDAPDisplayName="msDS-AllowedToDelegateTo")) OR (EventCode="5136" ObjectClass="user" AttributeLDAPDisplayName="servicePrincipalName")) OR (EventCode="5136" AttributeLDAPDisplayName="msDS-AllowedToActOnBehalfOfOtherIdentity"))) | eval sigma_attack_tags="attack.t1098 attack.persistence" | eval sigma_title="Active Directory User Backdoors" | eval sigma_description="Detects scenarios where one can control another users or computers account without having to use their credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Weak Encryption Enabled and Kerberoast - builtin]
description = Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4738" (Message="*DES*" OR Message="*Preauth*" OR Message="*Encrypted*") (Message="*Enabled*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Weak Encryption Enabled and Kerberoast" | eval sigma_description="Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access Detected via Attack Surface Reduction - builtin]
description = Detects Access to LSASS Process
search = index=wineventlog* (EventCode="1121" Path="*\\lsass.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="LSASS Access Detected via Attack Surface Reduction" | eval sigma_description="Detects Access to LSASS Process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Use - builtin]
description = This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)
search = index=wineventlog* (Message="*mimikatz*" OR Message="*mimilib*" OR Message="*<3 eo.oe*" OR Message="*eo.oe.kiwi*" OR Message="*privilege::debug*" OR Message="*sekurlsa::logonpasswords*" OR Message="*lsadump::sam*" OR Message="*mimidrv.sys*" OR Message="* p::d *" OR Message="* s::l *") | eval sigma_attack_tags="attack.s0002 attack.t1003 attack.lateral_movement attack.credential_access car.2013-07-001 car.2019-04-004 attack.t1003.002 attack.t1003.004 attack.t1003.001 attack.t1003.006" | eval sigma_title="Mimikatz Use" | eval sigma_description="This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hacktool Ruler - builtin]
description = This events that are generated when using the hacktool Ruler by Sensepost
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((EventCode="4776") Workstation="RULER") OR ((EventCode="4624" OR EventCode="4625") WorkstationName="RULER"))) | eval sigma_attack_tags="attack.discovery attack.execution attack.t1087 attack.t1075 attack.t1114 attack.t1059 attack.t1550.002" | eval sigma_title="Hacktool Ruler" | eval sigma_description="This events that are generated when using the hacktool Ruler by Sensepost"
dispatch.earliest_time = -24h@h
alert.track = 0

[File Was Not Allowed To Run - builtin]
description = Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events.
search = index=wineventlog* ((source="Microsoft-Windows-AppLocker/MSI and Script" OR source="Microsoft-Windows-AppLocker/EXE and DLL" OR source="Microsoft-Windows-AppLocker/Packaged app-Deployment" OR source="Microsoft-Windows-AppLocker/Packaged app-Execution") (EventCode="8004" OR EventCode="8007")) | table PolicyName,RuleId,RuleName,TargetUser,TargetProcessId,FilePath,FileHash,Fqbn | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1064 attack.t1204 attack.t1035 attack.t1204.002 attack.t1059.001 attack.t1059.003 attack.t1059.005 attack.t1059.006 attack.t1059.007" | eval sigma_title="File Was Not Allowed To Run" | eval sigma_description="Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events."
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Service Install - builtin]
description = This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ServiceName="srservice" OR ServiceName="ipvpn" OR ServiceName="hkmsvc")) | eval sigma_attack_tags="attack.persistence attack.g0010 attack.t1050 attack.t1543.003" | eval sigma_title="Turla Service Install" | eval sigma_description="This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[StoneDrill Service Install - builtin]
description = This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="NtsSrv" ServiceFileName="* LocalService") | eval sigma_attack_tags="attack.persistence attack.g0064 attack.t1050 attack.t1543.003" | eval sigma_title="StoneDrill Service Install" | eval sigma_description="This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla PNG Dropper Service - builtin]
description = This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="WerFaultSvc") | eval sigma_attack_tags="attack.persistence attack.g0010 attack.t1050 attack.t1543.003" | eval sigma_title="Turla PNG Dropper Service" | eval sigma_description="This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Task Creation via ATSVC Named Pipe - builtin]
description = Detects remote task creation via at.exe or API interacting with ATSVC namedpipe
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="atsvc" Accesses="*WriteData*") | eval sigma_attack_tags="attack.lateral_movement attack.persistence attack.t1053 car.2013-05-004 car.2015-04-001 attack.t1053.002" | eval sigma_title="Remote Task Creation via ATSVC Named Pipe" | eval sigma_description="Detects remote task creation via at.exe or API interacting with ATSVC namedpipe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audit CVE Event - builtin]
description = Detects events generated by Windows to indicate the exploitation of a known vulnerability (e.g. CVE-2020-0601)
search = index=wineventlog* (source="WinEventLog:Application" Source="Microsoft-Windows-Audit-CVE") | eval sigma_attack_tags="attack.execution attack.t1203 attack.privilege_escalation attack.t1068 attack.defense_evasion attack.t1211 attack.credential_access attack.t1212 attack.lateral_movement attack.t1210 attack.impact attack.t1499.004" | eval sigma_title="Audit CVE Event" | eval sigma_description="Detects events generated by Windows to indicate the exploitation of a known vulnerability (e.g. CVE-2020-0601)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Relevant Anti-Virus Event - builtin]
description = This detection method points out highly relevant Antivirus events
search = index=wineventlog* (source="WinEventLog:Application" (Message="*HTool*" OR Message="*Hacktool*" OR Message="*ASP/Backdoor*" OR Message="*JSP/Backdoor*" OR Message="*PHP/Backdoor*" OR Message="*Backdoor.ASP*" OR Message="*Backdoor.JSP*" OR Message="*Backdoor.PHP*" OR Message="*Webshell*" OR Message="*Portscan*" OR Message="*Mimikatz*" OR Message="*WinCred*" OR Message="*PlugX*" OR Message="*Korplug*" OR Message="*Pwdump*" OR Message="*Chopper*" OR Message="*WmiExec*" OR Message="*Xscan*" OR Message="*Clearlog*" OR Message="*ASPXSpy*") NOT ((Message="*Keygen*" OR Message="*Crack*"))) | eval sigma_attack_tags="" | eval sigma_title="Relevant Anti-Virus Event" | eval sigma_description="This detection method points out highly relevant Antivirus events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Processes Accessing the Microphone and Webcam - builtin]
description = Potential adversaries accessing the microphone and webcam in an endpoint.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4657" OR EventCode="4656" OR EventCode="4663") (ObjectName="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\microphone\\NonPackaged*" OR ObjectName="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\webcam\\NonPackaged*")) | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Processes Accessing the Microphone and Webcam" | eval sigma_description="Potential adversaries accessing the microphone and webcam in an endpoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[DCERPC SMB Spoolss Named Pipe - builtin]
description = Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="spoolss") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="DCERPC SMB Spoolss Named Pipe" | eval sigma_description="Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled."
dispatch.earliest_time = -24h@h
alert.track = 0

[T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack - builtin]
description = Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network for a DCOM InternetExplorer DLL Hijack scenario.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\Internet Explorer\\iertutil.dll") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1021.003" | eval sigma_title="T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network for a DCOM InternetExplorer DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz DC Sync - builtin]
description = Detects Mimikatz DC sync security events
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((EventCode="4662" (Properties="*Replicating Directory Changes All*" OR Properties="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*")) NOT (SubjectDomainName="Window Manager")) NOT ((SubjectUserName="NT AUTHORITY*" OR SubjectUserName="MSOL_*"))) NOT ((SubjectUserName="*$"))) | eval sigma_attack_tags="attack.credential_access attack.s0002 attack.t1003 attack.t1003.006" | eval sigma_title="Mimikatz DC Sync" | eval sigma_description="Detects Mimikatz DC sync security events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabling Windows Event Auditing - builtin]
description = Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off 'Local Group Policy Object Processing' via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as 'gpedit.msc'. Please note, that disabling 'Local Group Policy Object Processing' may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4719" (AuditPolicyChanges="*%%8448*" OR AuditPolicyChanges="*%%8450*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1054 attack.t1562.002" | eval sigma_title="Disabling Windows Event Auditing" | eval sigma_description="Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off 'Local Group Policy Object Processing' via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as 'gpedit.msc'. Please note, that disabling 'Local Group Policy Object Processing' may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways."
dispatch.earliest_time = -24h@h
alert.track = 0

[DPAPI Domain Backup Key Extraction - builtin]
description = Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectType="SecretObject" AccessMask="0x2" ObjectName="BCKUPKEY") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.004" | eval sigma_title="DPAPI Domain Backup Key Extraction" | eval sigma_description="Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers"
dispatch.earliest_time = -24h@h
alert.track = 0

[DPAPI Domain Master Key Backup Attempt - builtin]
description = Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4692") | table ComputerName,SubjectDomainName,SubjectUserName | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.004" | eval sigma_title="DPAPI Domain Master Key Backup Attempt" | eval sigma_description="Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Registry Modification - builtin]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4657" ObjectName="*\\SOFTWARE\\Microsoft\\.NETFramework" ObjectValueName="ETWEnabled" NewValue="0") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="COMPlus_ETWEnabled Registry Modification" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[External Disk Drive or USB Storage Device - builtin]
description = Detects external diskdrives or plugged in USB devices
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((EventCode="6416") DeviceClassName="DiskDrive") OR DeviceDescription="USB Mass Storage Device")) | eval sigma_attack_tags="attack.t1091 attack.t1200 attack.lateral_movement attack.initial_access" | eval sigma_title="External Disk Drive or USB Storage Device" | eval sigma_description="Detects external diskdrives or plugged in USB devices"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumeration via the Global Catalog - builtin]
description = Detects enumeration of the global catalog (that can be performed using BloodHound or others AD reconnaissance tools). Adjust Threshold according to domain width.
search = index=wineventlog* (source="WinEventLog:System" EventCode="5156" (DestinationPort="3268" OR DestinationPort="3269")) | eventstats count as val by SourceAddress| search val > 2000 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1087.002" | eval sigma_title="Enumeration via the Global Catalog" | eval sigma_description="Detects enumeration of the global catalog (that can be performed using BloodHound or others AD reconnaissance tools). Adjust Threshold according to domain width."
dispatch.earliest_time = -24h@h
alert.track = 0

[Persistence and Execution at Scale via GPO Scheduled Task - builtin]
description = Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\SYSVOL" RelativeTargetName="*ScheduledTasks.xml" Accesses="*WriteData*") | eval sigma_attack_tags="attack.persistence attack.lateral_movement attack.t1053 attack.t1053.005" | eval sigma_title="Persistence and Execution at Scale via GPO Scheduled Task" | eval sigma_description="Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale"
dispatch.earliest_time = -24h@h
alert.track = 0

[smbexec.py Service Installation - builtin]
description = Detects the use of smbexec.py tool by detecting a specific service installation
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="BTOBTO" ServiceFileName="*\\execute.bat") | table ServiceName,ServiceFileName | eval sigma_attack_tags="attack.lateral_movement attack.execution attack.t1077 attack.t1021.002 attack.t1035 attack.t1569.002" | eval sigma_title="smbexec.py Service Installation" | eval sigma_description="Detects the use of smbexec.py tool by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[HybridConnectionManager Service Installation - builtin]
description = Rule to detect the Hybrid Connection Manager service installation.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4697") ServiceName="HybridConnectionManager" ServiceFileName="*HybridConnectionManager*") | eval sigma_attack_tags="attack.persistence" | eval sigma_title="HybridConnectionManager Service Installation" | eval sigma_description="Rule to detect the Hybrid Connection Manager service installation."
dispatch.earliest_time = -24h@h
alert.track = 0

[HybridConnectionManager Service Running - builtin]
description = Rule to detect the Hybrid Connection Manager service running on an endpoint.
search = index=wineventlog* ((EventCode="40300" OR EventCode="40301" OR EventCode="40302") (Message="*HybridConnection*" OR Message="*sb://*" OR Message="*servicebus.windows.net*" OR Message="*HybridConnectionManage*")) | eval sigma_attack_tags="attack.persistence" | eval sigma_title="HybridConnectionManager Service Running" | eval sigma_description="Rule to detect the Hybrid Connection Manager service running on an endpoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket PsExec Execution - builtin]
description = Detects execution of Impacket's psexec.py.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\IPC$" (RelativeTargetName="*RemCom_stdint*" OR RelativeTargetName="*RemCom_stdoutt*" OR RelativeTargetName="*RemCom_stderrt*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Impacket PsExec Execution" | eval sigma_description="Detects execution of Impacket's psexec.py."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Impacket SecretDump Remote Activity - builtin]
description = Detect AD credential dumping using impacket secretdump HKTL
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\ADMIN$" RelativeTargetName="SYSTEM32\\*.tmp") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.004 attack.t1003.003" | eval sigma_title="Possible Impacket SecretDump Remote Activity" | eval sigma_description="Detect AD credential dumping using impacket secretdump HKTL"
dispatch.earliest_time = -24h@h
alert.track = 0

[First Time Seen Remote Named Pipe - builtin]
description = This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="\\*\\IPC$") NOT (EventCode="5145" ShareName="\\*\\IPC$" (RelativeTargetName="atsvc" OR RelativeTargetName="samr" OR RelativeTargetName="lsarpc" OR RelativeTargetName="winreg" OR RelativeTargetName="netlogon" OR RelativeTargetName="srvsvc" OR RelativeTargetName="protected_storage" OR RelativeTargetName="wkssvc" OR RelativeTargetName="browser" OR RelativeTargetName="netdfs" OR RelativeTargetName="svcctl" OR RelativeTargetName="spoolss" OR RelativeTargetName="ntsvcs" OR RelativeTargetName="LSM_API_service" OR RelativeTargetName="HydraLsPipe" OR RelativeTargetName="TermSrv_API_service" OR RelativeTargetName="MsFteWds"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1077 attack.t1021.002" | eval sigma_title="First Time Seen Remote Named Pipe" | eval sigma_description="This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access from Non System Account - builtin]
description = Detects potential mimikatz-like tools accessing LSASS from non system account
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((EventCode="4663" OR EventCode="4656") (AccessMask="0x40" OR AccessMask="0x1400" OR AccessMask="0x1000" OR AccessMask="0x100000" OR AccessMask="0x1410" OR AccessMask="0x1010" OR AccessMask="0x1438" OR AccessMask="0x143a" OR AccessMask="0x1418" OR AccessMask="0x1f0fff" OR AccessMask="0x1f1fff" OR AccessMask="0x1f2fff" OR AccessMask="0x1f3fff" OR AccessMask="40" OR AccessMask="1400" OR AccessMask="1000" OR AccessMask="100000" OR AccessMask="1410" OR AccessMask="1010" OR AccessMask="1438" OR AccessMask="143a" OR AccessMask="1418" OR AccessMask="1f0fff" OR AccessMask="1f1fff" OR AccessMask="1f2fff" OR AccessMask="1f3fff") ObjectType="Process" ObjectName="*\\lsass.exe") NOT (SubjectUserName="*$")) NOT (ProcessName="C:\\Program Files*")) | table ComputerName,ObjectName,SubjectUserName,ProcessName | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="LSASS Access from Non System Account" | eval sigma_description="Detects potential mimikatz-like tools accessing LSASS from non system account"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Service Installations - builtin]
description = Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ServiceFileName="*\\PAExec*" OR ServiceName="mssecsvc2.0" OR ServiceFileName="*net user*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1003 attack.t1035 attack.t1050 car.2013-09-005 attack.t1543.003 attack.t1569.002" | eval sigma_title="Malicious Service Installations" | eval sigma_description="Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WCE wceaux.dll Access - builtin]
description = Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4658" OR EventCode="4660" OR EventCode="4663") ObjectName="*\\wceaux.dll") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="WCE wceaux.dll Access" | eval sigma_description="Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC20 Lateral Movement - builtin]
description = Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\svchost.exe" New_Process_Name="*\\mmc.exe" Process_Command_Line="*-Embedding*") | eval sigma_attack_tags="attack.execution attack.t1175 attack.t1021.003" | eval sigma_title="MMC20 Lateral Movement" | eval sigma_description="Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Windows Admin Shares with net.exe - builtin]
description = Detects when an admin share is mounted using net.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="* use *" Process_Command_Line="*\\\\*\*$*") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Mounted Windows Admin Shares with net.exe" | eval sigma_description="Detects when an admin share is mounted using net.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[New or Renamed User Account with '$' in Attribute 'SamAccountName'. - builtin]
description = Detects possible bypass EDR and SIEM via abnormal user account name.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4720" OR EventCode="4781") UserName="*$*") | table EventCode,UserName,SubjectAccountName | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="New or Renamed User Account with '$' in Attribute 'SamAccountName'." | eval sigma_description="Detects possible bypass EDR and SIEM via abnormal user account name."
dispatch.earliest_time = -24h@h
alert.track = 0

[Denied Access To Remote Desktop - builtin]
description = This event is generated when an authenticated user who is not allowed to log on remotely attempts to connect to this computer through Remote Desktop. Often, this event can be generated by attackers when searching for available windows servers in the network.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4825") | table EventCode,AccountName,ClientAddress | eval sigma_attack_tags="attack.lateral_movement attack.t1076 attack.t1021.001" | eval sigma_title="Denied Access To Remote Desktop" | eval sigma_description="This event is generated when an authenticated user who is not allowed to log on remotely attempts to connect to this computer through Remote Desktop. Often, this event can be generated by attackers when searching for available windows servers in the network."
dispatch.earliest_time = -24h@h
alert.track = 0

[NTFS Vulnerability Exploitation - builtin]
description = This the exploitation of a NTFS vulnerability as reported without many details via Twitter
search = index=wineventlog* (source="WinEventLog:System" EventCode="55" Origin="File System Driver" Description="*contains a corrupted file record*" Description="*The name of the file is \"\\\"*") | eval sigma_attack_tags="" | eval sigma_title="NTFS Vulnerability Exploitation" | eval sigma_description="This the exploitation of a NTFS vulnerability as reported without many details via Twitter"
dispatch.earliest_time = -24h@h
alert.track = 0

[Successful Overpass the Hash Attempt - builtin]
description = Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="9" LogonProcessName="seclogo" AuthenticationPackageName="Negotiate") | eval sigma_attack_tags="attack.lateral_movement attack.t1075 attack.s0002 attack.t1550.002" | eval sigma_title="Successful Overpass the Hash Attempt" | eval sigma_description="Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module."
dispatch.earliest_time = -24h@h
alert.track = 0

[Pass the Hash Activity 2 - builtin]
description = Detects the attack technique pass the hash which is used to move laterally inside the network
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4624" ((SubjectUserSid="S-1-0-0" LogonType="3" LogonProcessName="NtLmSsp" KeyLength="0") OR (LogonType="9" LogonProcessName="seclogo"))) NOT (AccountName="ANONYMOUS LOGON")) | eval sigma_attack_tags="attack.lateral_movement attack.t1075 attack.t1550.002" | eval sigma_title="Pass the Hash Activity 2" | eval sigma_description="Detects the attack technique pass the hash which is used to move laterally inside the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pass the Hash Activity - builtin]
description = Detects the attack technique pass the hash which is used to move laterally inside the network
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (LogonType="3" LogonProcessName="NtLmSsp" WorkstationName="%Workstations%" ComputerName="%Workstations%" (EventCode="4624" OR EventCode="4625")) NOT (AccountName="ANONYMOUS LOGON")) | eval sigma_attack_tags="attack.lateral_movement attack.t1075 car.2016-04-004 attack.t1550.002" | eval sigma_title="Pass the Hash Activity" | eval sigma_description="Detects the attack technique pass the hash which is used to move laterally inside the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible DC Shadow - builtin]
description = Detects DCShadow via create new SPN
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4742" ServicePrincipalNames="*GC/*") OR (EventCode="5136" LDAPDisplayName="servicePrincipalName" Value="GC/*"))) | eval sigma_attack_tags="attack.credential_access attack.t1207" | eval sigma_title="Possible DC Shadow" | eval sigma_description="Detects DCShadow via create new SPN"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Scripts Installed as Services - builtin]
description = Detects powershell script installed as a Service
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ServiceFileName="*powershell*" OR ServiceFileName="*pwsh*")) (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="6" (ServiceFileName="*powershell*" OR ServiceFileName="*pwsh*")) ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" (ServiceFileName="*powershell*" OR ServiceFileName="*pwsh*")) | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="PowerShell Scripts Installed as Services" | eval sigma_description="Detects powershell script installed as a Service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Zerologon (CVE-2020-1472) Exploitation - builtin]
description = Detects Netlogon Elevation of Privilege Vulnerability aka Zerologon (CVE-2020-1472)
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4742" SourceUserName="ANONYMOUS LOGON" TargetUserName="%DC-MACHINE-NAME%") NOT ((ChangedAttributes="*Password Last Set:	-*"))) | eval sigma_attack_tags="attack.t1068 attack.privilege_escalation" | eval sigma_title="Possible Zerologon (CVE-2020-1472) Exploitation" | eval sigma_description="Detects Netlogon Elevation of Privilege Vulnerability aka Zerologon (CVE-2020-1472)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Protected Storage Service Access - builtin]
description = Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="*IPC*" RelativeTargetName="protected_storage") | eval sigma_attack_tags="attack.lateral_movement attack.t1021 attack.t1021.002" | eval sigma_title="Protected Storage Service Access" | eval sigma_description="Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers"
dispatch.earliest_time = -24h@h
alert.track = 0

[QuarksPwDump Clearing Access History - builtin]
description = Detects QuarksPwDump clearing access history in hive
search = index=wineventlog* (source="WinEventLog:System" EventCode="16" HiveName="*\\AppData\\Local\\Temp\\SAM*" HiveName="*.dmp") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002" | eval sigma_title="QuarksPwDump Clearing Access History" | eval sigma_description="Detects QuarksPwDump clearing access history in hive"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Schtasks Creations - builtin]
description = Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4698") | eventstats count as val by TaskName| search val < 5 | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.persistence attack.t1053 car.2013-08-001 attack.t1053.005" | eval sigma_title="Rare Schtasks Creations" | eval sigma_description="Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Service Installs - builtin]
description = Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045") | eventstats count as val by ServiceFileName| search val < 5 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050 car.2013-09-005 attack.t1543.003" | eval sigma_title="Rare Service Installs" | eval sigma_description="Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scanner PoC for CVE-2019-0708 RDP RCE Vuln - builtin]
description = Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4625" AccountName="AAAAAAA") | eval sigma_attack_tags="attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Scanner PoC for CVE-2019-0708 RDP RCE Vuln" | eval sigma_description="Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Login from Localhost - builtin]
description = RDP login with localhost source address may be a tunnelled login
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="10" (SourceNetworkAddress="::1" OR SourceNetworkAddress="127.0.0.1")) | eval sigma_attack_tags="attack.lateral_movement attack.t1076 car.2013-07-002 attack.t1021.001" | eval sigma_title="RDP Login from Localhost" | eval sigma_description="RDP login with localhost source address may be a tunnelled login"
dispatch.earliest_time = -24h@h
alert.track = 0

[Potential RDP Exploit CVE-2019-0708 - builtin]
description = Detect suspicious error on protocol RDP, potential CVE-2019-0708
search = index=wineventlog* (source="WinEventLog:System" (EventCode="56" OR EventCode="50") Source="TermDD") | eval sigma_attack_tags="attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Potential RDP Exploit CVE-2019-0708" | eval sigma_description="Detect suspicious error on protocol RDP, potential CVE-2019-0708"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP over Reverse SSH Tunnel WFP - builtin]
description = Detects svchost hosting RDP termsvcs communicating with the loopback address
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5156" ((SourcePort="3389" (DestinationAddress="127.*" OR DestinationAddress="::1")) OR (DestinationPort="3389" (SourceAddress="127.*" OR SourceAddress="::1")))) | eval sigma_attack_tags="attack.defense_evasion attack.command_and_control attack.lateral_movement attack.t1076 attack.t1090 attack.t1090.001 attack.t1090.002 attack.t1021.001 car.2013-07-002" | eval sigma_title="RDP over Reverse SSH Tunnel WFP" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating with the loopback address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Register new Logon Process by Rubeus - builtin]
description = Detects potential use of Rubeus via registered new trusted logon process
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4611" LogonProcessName="User32LogonProcesss") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1208 attack.t1558.003" | eval sigma_title="Register new Logon Process by Rubeus" | eval sigma_description="Detects potential use of Rubeus via registered new trusted logon process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Sessions - builtin]
description = Detects basic PowerShell Remoting by monitoring for network inbound connections to ports 5985 OR 5986
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5156" (DestPort="5985" OR DestPort="5986") LayerRTID="44") | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Remote PowerShell Sessions" | eval sigma_description="Detects basic PowerShell Remoting by monitoring for network inbound connections to ports 5985 OR 5986"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Registry Management Using Reg Utility - builtin]
description = Remote registry management using REG utility from non-admin workstation
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\winreg*") NOT (IpAddress="%Admins_Workstations%")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112 attack.discovery attack.t1012 attack.credential_access attack.t1552.002 attack.s0075" | eval sigma_title="Remote Registry Management Using Reg Utility" | eval sigma_description="Remote registry management using REG utility from non-admin workstation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Root Certificate Installed - builtin]
description = Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-PowerShell/Operational" EventCode="4104" ScriptBlockText="*Cert:\\LocalMachine\\Root*" (ScriptBlockText="*Move-Item*" OR ScriptBlockText="*Import-Certificate*")) (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*root*" ((New_Process_Name="*\\certutil.exe" Process_Command_Line="*-addstore*") OR (New_Process_Name="*\\CertMgr.exe" Process_Command_Line="*/add*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1553.004" | eval sigma_title="Root Certificate Installed" | eval sigma_description="Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers."
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Registry Hive Handle Request - builtin]
description = Detects handles requested to SAM registry hive
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ObjectType="Key" ObjectName="*\\SAM") | table ComputerName,SubjectDomainName,SubjectUserName,ProcessName,ObjectName | eval sigma_attack_tags="attack.discovery attack.t1012 attack.credential_access attack.t1552.002" | eval sigma_title="SAM Registry Hive Handle Request" | eval sigma_description="Detects handles requested to SAM registry hive"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Deletion - builtin]
description = Detects scheduled task deletion events. Scheduled tasks are likely to be deleted if not used for persistence. Malicious Software often creates tasks directly under the root node e.g. \TASKNAME
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4699") | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.t1053 car.2013-08-001 attack.t1053.005" | eval sigma_title="Scheduled Task Deletion" | eval sigma_description="Detects scheduled task deletion events. Scheduled tasks are likely to be deleted if not used for persistence. Malicious Software often creates tasks directly under the root node e.g. \TASKNAME"
dispatch.earliest_time = -24h@h
alert.track = 0

[SCM Database Handle Failure - builtin]
description = Detects non-system users failing to get a handle of the SCM database.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ObjectType="SC_MANAGER OBJECT" ObjectName="servicesactive" Keywords="Audit Failure" SubjectLogonId="0x3e4") | eval sigma_attack_tags="attack.discovery" | eval sigma_title="SCM Database Handle Failure" | eval sigma_description="Detects non-system users failing to get a handle of the SCM database."
dispatch.earliest_time = -24h@h
alert.track = 0

[SCM Database Privileged Operation - builtin]
description = Detects non-system users performing privileged operation os the SCM database
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4674" ObjectType="SC_MANAGER OBJECT" ObjectName="servicesactive" PrivilegeList="SeTakeOwnershipPrivilege" SubjectLogonId="0x3e4") | eval sigma_attack_tags="" | eval sigma_title="SCM Database Privileged Operation" | eval sigma_description="Detects non-system users performing privileged operation os the SCM database"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote WMI ActiveScriptEventConsumers - builtin]
description = Detect potential adversaries leveraging WMI ActiveScriptEventConsumers remotely to move laterally in a network
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4624" LogonType="3" ProcessName="*scrcons.exe") NOT (TargetLogonId="0x3e7")) | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.persistence attack.t1546.003" | eval sigma_title="Remote WMI ActiveScriptEventConsumers" | eval sigma_description="Detect potential adversaries leveraging WMI ActiveScriptEventConsumers remotely to move laterally in a network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Set OabVirtualDirectory ExternalUrl Property - builtin]
description = Rule to detect an adversary setting OabVirtualDirectory External URL property to a script
search = index=wineventlog* (source="MSExchange Management" Message="*Set-OabVirtualDirectory*" Message="*ExternalUrl*" Message="*Page_Load*" Message="*script*") | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Set OabVirtualDirectory ExternalUrl Property" | eval sigma_description="Rule to detect an adversary setting OabVirtualDirectory External URL property to a script"
dispatch.earliest_time = -24h@h
alert.track = 0

[SMB Create Remote File Admin Share - builtin]
description = Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$).
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="*C$" AccessMask="0x2") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="SMB Create Remote File Admin Share" | eval sigma_description="Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detected Windows Software Discovery - builtin]
description = Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-PowerShell/Operational" EventCode="4104" ScriptBlockText="*get-itemProperty*" ScriptBlockText="*\\software\\*" ScriptBlockText="*select-object*" ScriptBlockText="*format-table*") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*query*" Process_Command_Line="*\\software\\*" Process_Command_Line="*/v*" Process_Command_Line="*svcversion*") | eval sigma_attack_tags="attack.discovery attack.t1518" | eval sigma_title="Detected Windows Software Discovery" | eval sigma_description="Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Addition of Domain Trusts - builtin]
description = Addition of domains is seldom and should be verified for legitimacy.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4706") | eval sigma_attack_tags="attack.persistence" | eval sigma_title="Addition of Domain Trusts" | eval sigma_description="Addition of domains is seldom and should be verified for legitimacy."
dispatch.earliest_time = -24h@h
alert.track = 0

[Addition of SID History to Active Directory Object - builtin]
description = An attacker can use the SID history attribute to gain additional privileges.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4765" OR EventCode="4766") OR ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4738" NOT ((SidHistory="-" OR SidHistory="%%1793"))) NOT (NOT SidHistory="*")))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1178 attack.t1134.005" | eval sigma_title="Addition of SID History to Active Directory Object" | eval sigma_description="An attacker can use the SID history attribute to gain additional privileges."
dispatch.earliest_time = -24h@h
alert.track = 0

[Backup Catalog Deleted - builtin]
description = Detects backup catalog deletions
search = index=wineventlog* (source="WinEventLog:Application" EventCode="524" Source="Microsoft-Windows-Backup") | eval sigma_attack_tags="attack.defense_evasion attack.t1107 attack.t1070.004" | eval sigma_title="Backup Catalog Deleted" | eval sigma_description="Detects backup catalog deletions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Code Integrity Checks - builtin]
description = Code integrity failures may indicate tampered executables.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5038" OR EventCode="6281")) | eval sigma_attack_tags="attack.defense_evasion attack.t1009 attack.t1027.001" | eval sigma_title="Failed Code Integrity Checks" | eval sigma_description="Code integrity failures may indicate tampered executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Server Error Failed Loading the CallOut DLL - builtin]
description = This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded
search = index=wineventlog* (source="WinEventLog:System" (EventCode="1031" OR EventCode="1032" OR EventCode="1034") Source="Microsoft-Windows-DHCP-Server") | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="DHCP Server Error Failed Loading the CallOut DLL" | eval sigma_description="This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Server Loaded the CallOut DLL - builtin]
description = This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded
search = index=wineventlog* (source="WinEventLog:System" EventCode="1033" Source="Microsoft-Windows-DHCP-Server") | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="DHCP Server Loaded the CallOut DLL" | eval sigma_description="This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Server Error Failed Loading the ServerLevelPluginDLL - builtin]
description = This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded
search = index=wineventlog* (EventCode="150" OR EventCode="770") | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="DNS Server Error Failed Loading the ServerLevelPluginDLL" | eval sigma_description="This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Change on Directory Service Restore Mode (DSRM) Account - builtin]
description = The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4794") | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Password Change on Directory Service Restore Mode (DSRM) Account" | eval sigma_description="The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Eventlog Cleared - builtin]
description = One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution
search = index=wineventlog* ((service="security" (EventCode="517" OR EventCode="1102")) OR (service="system" EventCode="104" Source="Microsoft-Windows-Eventlog")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1070.001 car.2016-04-002" | eval sigma_title="Eventlog Cleared" | eval sigma_description="One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Account Tampering - Suspicious Failed Logon Reasons - builtin]
description = This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4625" OR EventCode="4776") (Status="0xC0000072" OR Status="0xC000006F" OR Status="0xC0000070" OR Status="0xC0000413" OR Status="0xC000018C" OR Status="0xC000015B")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.initial_access attack.t1078" | eval sigma_title="Account Tampering - Suspicious Failed Logon Reasons" | eval sigma_description="This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logon From Public IP - builtin]
description = A login from a public IP can indicate a misconfigured firewall or network boundary.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4625" NOT (((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (IpAddress="*-*" OR (IpAddress="10.*" OR IpAddress="192.168.*" OR IpAddress="172.16.*" OR IpAddress="172.17.*" OR IpAddress="172.18.*" OR IpAddress="172.19.*" OR IpAddress="172.20.*" OR IpAddress="172.21.*" OR IpAddress="172.22.*" OR IpAddress="172.23.*" OR IpAddress="172.24.*" OR IpAddress="172.25.*" OR IpAddress="172.26.*" OR IpAddress="172.27.*" OR IpAddress="172.28.*" OR IpAddress="172.29.*" OR IpAddress="172.30.*" OR IpAddress="172.31.*" OR IpAddress="127.*" OR IpAddress="169.254.*") OR IpAddress="::1" OR (IpAddress="fe80::*" OR IpAddress="fc00::*"))))) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.t1078 attack.t1190 attack.t1133" | eval sigma_title="Failed Logon From Public IP" | eval sigma_description="A login from a public IP can indicate a misconfigured firewall or network boundary."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logins with Different Accounts from Single Source System - builtin]
description = Detects suspicious failed logins with different user accounts from a single source system
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="529" OR EventCode="4625") UserName="*" WorkstationName="*") | eventstats dc(UserName) as val by WorkstationName | search val > 3 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1078" | eval sigma_title="Failed Logins with Different Accounts from Single Source System" | eval sigma_description="Detects suspicious failed logins with different user accounts from a single source system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive Logon to Server Systems - builtin]
description = Detects interactive console logons to Server Systems
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="528" OR EventCode="529" OR EventCode="4624" OR EventCode="4625") LogonType="2" (ComputerName="%ServerSystems%" OR ComputerName="%DomainControllers%")) NOT (LogonProcessName="Advapi" ComputerName="%Workstations%")) | eval sigma_attack_tags="attack.lateral_movement attack.t1078" | eval sigma_title="Interactive Logon to Server Systems" | eval sigma_description="Detects interactive console logons to Server Systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Kerberos Manipulation - builtin]
description = This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="675" OR EventCode="4768" OR EventCode="4769" OR EventCode="4771") (FailureCode="0x9" OR FailureCode="0xA" OR FailureCode="0xB" OR FailureCode="0xF" OR FailureCode="0x10" OR FailureCode="0x11" OR FailureCode="0x13" OR FailureCode="0x14" OR FailureCode="0x1A" OR FailureCode="0x1F" OR FailureCode="0x21" OR FailureCode="0x22" OR FailureCode="0x23" OR FailureCode="0x24" OR FailureCode="0x26" OR FailureCode="0x27" OR FailureCode="0x28" OR FailureCode="0x29" OR FailureCode="0x2C" OR FailureCode="0x2D" OR FailureCode="0x2E" OR FailureCode="0x2F" OR FailureCode="0x31" OR FailureCode="0x32" OR FailureCode="0x3E" OR FailureCode="0x3F" OR FailureCode="0x40" OR FailureCode="0x41" OR FailureCode="0x43" OR FailureCode="0x44")) | eval sigma_attack_tags="attack.credential_access attack.t1212" | eval sigma_title="Kerberos Manipulation" | eval sigma_description="This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LDAP-Attributes Used - builtin]
description = Detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5136" AttributeValue="*" (AttributeLDAPDisplayName="primaryInternationalISDNNumber" OR AttributeLDAPDisplayName="otherFacsimileTelephoneNumber" OR AttributeLDAPDisplayName="primaryTelexNumber")) | eval sigma_attack_tags="attack.t1071 attack.t1001.003 attack.command_and_control" | eval sigma_title="Suspicious LDAP-Attributes Used" | eval sigma_description="Detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Windows ANONYMOUS LOGON Local Account Created - builtin]
description = Detects the creation of suspicious accounts similar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720" SAMAccountName="*ANONYMOUS*" SAMAccountName="*LOGON*") | eval sigma_attack_tags="attack.persistence attack.t1136 attack.t1136.001 attack.t1136.002" | eval sigma_title="Suspicious Windows ANONYMOUS LOGON Local Account Created" | eval sigma_description="Detects the creation of suspicious accounts similar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicous Remote Logon with Explicit Credentials - builtin]
description = Detects suspicious processes logging on with explicit credentials
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4648" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\pwsh.exe" OR New_Process_Name="*\\winrs.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe" OR New_Process_Name="*\\reg.exe")) NOT (Target_Server_Name="localhost")) | eval sigma_attack_tags="attack.t1078 attack.lateral_movement" | eval sigma_title="Suspicous Remote Logon with Explicit Credentials" | eval sigma_description="Detects suspicious processes logging on with explicit credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Generic Password Dumper Activity on LSASS - builtin]
description = Detects process handle on LSASS process with certain access mask
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4656" ObjectName="*\\lsass.exe" (AccessMask="*0x40*" OR AccessMask="*0x1400*" OR AccessMask="*0x1000*" OR AccessMask="*0x100000*" OR AccessMask="*0x1410*" OR AccessMask="*0x1010*" OR AccessMask="*0x1438*" OR AccessMask="*0x143a*" OR AccessMask="*0x1418*" OR AccessMask="*0x1f0fff*" OR AccessMask="*0x1f1fff*" OR AccessMask="*0x1f2fff*" OR AccessMask="*0x1f3fff*")) OR (((EventCode="4663" ObjectName="*\\lsass.exe" (AccessList="*4484*" OR AccessList="*4416*")) NOT ((ProcessName="*\\wmiprvse.exe" OR ProcessName="*\\taskmgr.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\lsm.exe" OR ProcessName="*\\csrss.exe" OR ProcessName="*\\wininit.exe" OR ProcessName="*\\vmtoolsd.exe" OR ProcessName="*\\minionhost.exe" OR ProcessName="*\\VsTskMgr.exe" OR ProcessName="*\\thor64.exe") (ProcessName="C:\\Windows\\System32\\*" OR ProcessName="C:\\Windows\\SysWow64\\*" OR ProcessName="C:\\Windows\\SysNative\\*" OR ProcessName="C:\\Program Files\\*" OR ProcessName="C:\\Windows\\Temp\\asgard2-agent\\*"))) NOT ((ProcessName="C:\\Program Files*"))))) | table ComputerName,SubjectDomainName,SubjectUserName,ProcessName,ProcessID | eval sigma_attack_tags="attack.credential_access attack.t1003 car.2019-04-004 attack.t1003.001" | eval sigma_title="Generic Password Dumper Activity on LSASS" | eval sigma_description="Detects process handle on LSASS process with certain access mask"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Dumper Activity on LSASS - builtin]
description = Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ProcessName="C:\\Windows\\System32\\lsass.exe" AccessMask="0x705" ObjectType="SAM_DOMAIN") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="Password Dumper Activity on LSASS" | eval sigma_description="Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Suspicious Execution 01 - builtin]
description = Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" (Process_Command_Line="*vbscript*" OR Process_Command_Line="*.jpg*" OR Process_Command_Line="*.png*" OR Process_Command_Line="*.lnk*" OR Process_Command_Line="*.xls*" OR Process_Command_Line="*.doc*" OR Process_Command_Line="*.zip*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1218.005" | eval sigma_title="MSHTA Suspicious Execution 01" | eval sigma_description="Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Malware Protection Engine Crash - builtin]
description = This rule detects a suspicious crash of the Microsoft Malware Protection Engine
search = index=wineventlog* (source="WinEventLog:Application" ((Source="Application Error" EventCode="1000") OR (Source="Windows Error Reporting" EventCode="1001")) (Message="*MsMpEng.exe*" OR Message="*mpengine.dll*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1211 attack.t1562.001" | eval sigma_title="Microsoft Malware Protection Engine Crash" | eval sigma_description="This rule detects a suspicious crash of the Microsoft Malware Protection Engine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity - builtin]
description = Detects activity as 'net user administrator /domain' and 'net group domain admins /domain'
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4661" (ObjectType="SAM_USER" OR ObjectType="SAM_GROUP") ObjectName="S-1-5-21-*" AccessMask="0x2d" (ObjectName="*-500" OR ObjectName="*-512")) | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1087.002 attack.t1069 attack.t1069.002 attack.s0039" | eval sigma_title="Reconnaissance Activity" | eval sigma_description="Detects activity as 'net user administrator /domain' and 'net group domain admins /domain'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Potential Remote Desktop Connection to Non-Domain Host - builtin]
description = Detects logons using NTLM to hosts that are potentially not part of the domain.
search = index=wineventlog* (source="Microsoft-Windows-NTLM/Operational" EventCode="8001" TargetName="TERMSRV*") | table Computer,UserName,DomainName,TargetName | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Potential Remote Desktop Connection to Non-Domain Host" | eval sigma_description="Detects logons using NTLM to hosts that are potentially not part of the domain."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PsExec Execution - builtin]
description = detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="\\*\\IPC$" (RelativeTargetName="*-stdin" OR RelativeTargetName="*-stdout" OR RelativeTargetName="*-stderr")) NOT (EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="PSEXESVC*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1077 attack.t1021.002" | eval sigma_title="Suspicious PsExec Execution" | eval sigma_description="detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Access to Sensitive File Extensions - builtin]
description = Detects known sensitive file extensions accessed on a network share
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145") (RelativeTargetName="*.pst" OR RelativeTargetName="*.ost" OR RelativeTargetName="*.msg" OR RelativeTargetName="*.nst" OR RelativeTargetName="*.oab" OR RelativeTargetName="*.edb" OR RelativeTargetName="*.nsf" OR RelativeTargetName="*.bak" OR RelativeTargetName="*.dmp" OR RelativeTargetName="*.kirbi" OR RelativeTargetName="*\\groups.xml" OR RelativeTargetName="*.rdp")) | table ComputerName,SubjectDomainName,SubjectUserName,RelativeTargetName | eval sigma_attack_tags="attack.collection attack.t1039" | eval sigma_title="Suspicious Access to Sensitive File Extensions" | eval sigma_description="Detects known sensitive file extensions accessed on a network share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Kerberos RC4 Ticket Encryption - builtin]
description = Detects service ticket requests using RC4 encryption type
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4769" TicketOptions="0x40810000" TicketEncryptionType="0x17") NOT (ServiceName="$*")) | eval sigma_attack_tags="attack.credential_access attack.t1208 attack.t1558.003" | eval sigma_title="Suspicious Kerberos RC4 Ticket Encryption" | eval sigma_description="Detects service ticket requests using RC4 encryption type"
dispatch.earliest_time = -24h@h
alert.track = 0

[RottenPotato Like Attack Pattern - builtin]
description = Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="3" TargetUserName="ANONYMOUS_LOGON" WorkstationName="-" SourceNetworkAddress="127.0.0.1") | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access attack.t1171 attack.t1557.001" | eval sigma_title="RottenPotato Like Attack Pattern" | eval sigma_description="Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like"
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Dump to AppData - builtin]
description = Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers
search = index=wineventlog* (source="WinEventLog:System" EventCode="16" Message="*\\AppData\\Local\\Temp\\SAM-*" Message="*.dmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002" | eval sigma_title="SAM Dump to AppData" | eval sigma_description="Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Secure Deletion with SDelete - builtin]
description = Detects renaming of file while deletion with SDelete tool
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4663" OR EventCode="4658") (ObjectName="*.AAA" OR ObjectName="*.ZZZ")) | eval sigma_attack_tags="attack.impact attack.defense_evasion attack.t1107 attack.t1070.004 attack.t1066 attack.t1027.005 attack.t1485 attack.t1553.002 attack.s0195" | eval sigma_title="Secure Deletion with SDelete" | eval sigma_description="Detects renaming of file while deletion with SDelete tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Eventlog Cleared - builtin]
description = Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="517" OR EventCode="1102")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1070.001 car.2016-04-002" | eval sigma_title="Security Eventlog Cleared" | eval sigma_description="Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Unauthorized System Time Modification - builtin]
description = Detect scenarios where a potentially unauthorized application or user is modifying the system time.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4616" NOT (((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((ProcessName="C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe" OR ProcessName="C:\\Windows\\System32\\VBoxService.exe") OR (ProcessName="C:\\Windows\\System32\\svchost.exe" SubjectUserSid="S-1-5-19"))))) | eval sigma_attack_tags="attack.defense_evasion attack.t1099 attack.t1070.006" | eval sigma_title="Unauthorized System Time Modification" | eval sigma_description="Detect scenarios where a potentially unauthorized application or user is modifying the system time."
dispatch.earliest_time = -24h@h
alert.track = 0

[Login with WMI - builtin]
description = Detection of logins performed with WMI
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" ProcessName="*\\WmiPrvSE.exe") | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Login with WMI" | eval sigma_description="Detection of logins performed with WMI"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound Kerberos Connection - builtin]
description = Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5156" DestinationPort="88") NOT ((New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\opera.exe" OR New_Process_Name="*\\chrome.exe" OR New_Process_Name="*\\firefox.exe"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1208 attack.t1558.003" | eval sigma_title="Suspicious Outbound Kerberos Connection" | eval sigma_description="Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Service Activity via SVCCTL Named Pipe - builtin]
description = Detects remote service activity via remote access to the svcctl named pipe
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="svcctl" Accesses="*WriteData*") | eval sigma_attack_tags="attack.lateral_movement attack.persistence attack.t1077 attack.t1021.002" | eval sigma_title="Remote Service Activity via SVCCTL Named Pipe" | eval sigma_description="Detects remote service activity via remote access to the svcctl named pipe"
dispatch.earliest_time = -24h@h
alert.track = 0

[SysKey Registry Keys Access - builtin]
description = Detects handle requests and access operations to specific registry keys to calculate the SysKey
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4663") ObjectType="key" (ObjectName="*lsa\\JD" OR ObjectName="*lsa\\GBG" OR ObjectName="*lsa\\Skew1" OR ObjectName="*lsa\\Data")) | eval sigma_attack_tags="attack.discovery attack.t1012" | eval sigma_title="SysKey Registry Keys Access" | eval sigma_description="Detects handle requests and access operations to specific registry keys to calculate the SysKey"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Channel Reference Deletion - builtin]
description = Potential threat actor tampering with Sysmon manifest and eventually disabling it
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (ObjectName="*WINEVT\\Publishers\\{5770385f-c22a-43e0-bf4c-06f5698ffbd9}*" OR ObjectName="*WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational*") ((EventCode="4657" ObjectValueName="Enabled" NewValue="0") OR (EventCode="4663" AccessMask="65536"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Sysmon Channel Reference Deletion" | eval sigma_description="Potential threat actor tampering with Sysmon manifest and eventually disabling it"
dispatch.earliest_time = -24h@h
alert.track = 0

[Transferring Files with Credential Data via Network Shares - builtin]
description = Transferring files with well-known filenames (sensitive files with credential data) using network shares
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" (RelativeTargetName="*\\mimidrv*" OR RelativeTargetName="*\\lsass*" OR RelativeTargetName="*\\windows\\minidump\\*" OR RelativeTargetName="*\\hiberfil*" OR RelativeTargetName="*\\sqldmpr*" OR RelativeTargetName="*\\sam*" OR RelativeTargetName="*\\ntds.dit*" OR RelativeTargetName="*\\security*")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.001 attack.t1003.003" | eval sigma_title="Transferring Files with Credential Data via Network Shares" | eval sigma_description="Transferring files with well-known filenames (sensitive files with credential data) using network shares"
dispatch.earliest_time = -24h@h
alert.track = 0

[USB Device Plugged - builtin]
description = Detects plugged USB devices
search = index=wineventlog* (source="Microsoft-Windows-DriverFrameworks-UserMode/Operational" (EventCode="2003" OR EventCode="2100" OR EventCode="2102")) | eval sigma_attack_tags="attack.initial_access attack.t1200" | eval sigma_title="USB Device Plugged" | eval sigma_description="Detects plugged USB devices"
dispatch.earliest_time = -24h@h
alert.track = 0

[User Added to Local Administrators - builtin]
description = This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4732" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (GroupName="Administrators" OR GroupSid="S-1-5-32-544")) NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1078 attack.persistence attack.t1098" | eval sigma_title="User Added to Local Administrators" | eval sigma_description="This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess' - builtin]
description = The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4673" Service="LsaRegisterLogonProcess()" Keywords="0x8010000000000000") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1208 attack.t1558.003" | eval sigma_title="User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess'" | eval sigma_description="The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA."
dispatch.earliest_time = -24h@h
alert.track = 0

[Local User Creation - builtin]
description = Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720") | table EventCode,AccountName,AccountDomain | eval sigma_attack_tags="attack.persistence attack.t1136 attack.t1136.001" | eval sigma_title="Local User Creation" | eval sigma_description="Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Loaded By User - builtin]
description = Detects the loading of drivers via 'SeLoadDriverPrivilege' required to load or unload a device driver. With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers. This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4673" PrivilegeList="SeLoadDriverPrivilege" Service="-") NOT ((ProcessName="*\\Windows\\System32\\Dism.exe" OR ProcessName="*\\Windows\\System32\\rundll32.exe" OR ProcessName="*\\Windows\\System32\\fltMC.exe" OR ProcessName="*\\Windows\\HelpPane.exe" OR ProcessName="*\\Windows\\System32\\mmc.exe" OR ProcessName="*\\Windows\\System32\\svchost.exe" OR ProcessName="*\\Windows\\System32\\wimserv.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\procmon64.exe" OR ProcessName="*\\procmon.exe" OR ProcessName="*\\Google\\Chrome\\Application\\chrome.exe"))) | eval sigma_attack_tags="attack.t1089 attack.defense_evasion attack.t1562.001" | eval sigma_title="Suspicious Driver Loaded By User" | eval sigma_description="Detects the loading of drivers via 'SeLoadDriverPrivilege' required to load or unload a device driver. With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers. This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff."
dispatch.earliest_time = -24h@h
alert.track = 0

[Volume Shadow Copy Mount - builtin]
description = Detects volume shadow copy mount
search = index=wineventlog* (source="WinEventLog:System" Source="Microsoft-Windows-Ntfs" EventCode="98" DeviceName="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="Volume Shadow Copy Mount" | eval sigma_description="Detects volume shadow copy mount"
dispatch.earliest_time = -24h@h
alert.track = 0

[VSSAudit Security Event Source Registration - builtin]
description = Detects the registration of the security event source VSSAudit. It would usually trigger when volume shadow copy operations happen.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") AuditSourceName="VSSAudit" (EventCode="4904" OR EventCode="4905")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="VSSAudit Security Event Source Registration" | eval sigma_description="Detects the registration of the security event source VSSAudit. It would usually trigger when volume shadow copy operations happen."
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2020-0688 Exploitation via Eventlog - builtin]
description = Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688
search = index=wineventlog* (source="WinEventLog:Application" (EventCode="4" Source="MSExchange Control Panel" Level="Error") "*&__VIEWSTATE=*") | eval sigma_attack_tags="attack.initial_access attack.t1190" | eval sigma_title="CVE-2020-0688 Exploitation via Eventlog" | eval sigma_description="Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688"
dispatch.earliest_time = -24h@h
alert.track = 0

[Vulnerable Netlogon Secure Channel Connection Allowed - builtin]
description = Detects that a vulnerable Netlogon secure channel connection was allowed, which could be an indicator of CVE-2020-1472.
search = index=wineventlog* (source="WinEventLog:System" (EventCode="5829")) | table SAMAccountName | eval sigma_attack_tags="attack.privilege_escalation" | eval sigma_title="Vulnerable Netlogon Secure Channel Connection Allowed" | eval sigma_description="Detects that a vulnerable Netlogon secure channel connection was allowed, which could be an indicator of CVE-2020-1472."
dispatch.earliest_time = -24h@h
alert.track = 0

[T1047 Wmiprvse Wbemcomn DLL Hijack - builtin]
description = Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network for a WMI DLL Hijack scenario.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\wbem\\wbemcomn.dll") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.002" | eval sigma_title="T1047 Wmiprvse Wbemcomn DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network for a WMI DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Accessing WinAPI in PowerShell - powershell]
description = Detecting use WinAPI Functions in PowerShell
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (EventCode="4104") (Message="*WaitForSingleObject*" OR Message="*QueueUserApc*" OR Message="*RtlCreateUserThread*" OR Message="*OpenProcess*" OR Message="*VirtualAlloc*" OR Message="*VirtualFree*" OR Message="*WriteProcessMemory*" OR Message="*CreateUserThread*" OR Message="*CloseHanlde*" OR Message="*GetDelegateForFunctionPointer*" OR Message="*CreateThread*" OR Message="*memcpy*" OR Message="*LoadLibrary*" OR Message="*GetModuleHandle*" OR Message="*GetProcAdress*" OR Message="*VirtualProtect*" OR Message="*FreeLibrary*" OR Message="*ReadProcessMemory*" OR Message="*CreateRemoteThread*" OR Message="*AdjustTokenPrivileges*" OR Message="*WriteByte*" OR Message="*WriteInt32*" OR Message="*OpenThreadToken*" OR Message="*PtrToString*" OR Message="*FreeHGlobal*" OR Message="*ZeroFreeGlobalAllocUnicode*" OR Message="*OpenProcessToken*" OR Message="*GetTokenInformation*" OR Message="*SetThreadToken*" OR Message="*ImpersonateLoggedOnUser*" OR Message="*RevertToSelf*" OR Message="*GetLogonSessionData*" OR Message="*CreateProcessWithToken*" OR Message="*DuplicateRokenEx*" OR Message="*OpenWindowStation*" OR Message="*OpenDesktop*" OR Message="*MiniDumpWrireDump*" OR Message="*AddSecurityPackage*" OR Message="*EnumerateSecurityPackages*" OR Message="*GetProcessHandle*" OR Message="*DangerousGetHandle*" OR Message="*Kernel32*" OR Message="*Advapi32*" OR Message="*Msvcrt*" OR Message="*ntdll*" OR Message="*User32*" OR Message="*Secur32*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1106" | eval sigma_title="Accessing WinAPI in PowerShell" | eval sigma_description="Detecting use WinAPI Functions in PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts - powershell]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((EventCode="4103" OR EventCode="400") ContextInfo="*") NOT (ContextInfo="powershell.exe" OR Message="powershell.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Alternate PowerShell Hosts" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bad Opsec Powershell Code Artifacts - powershell]
description = Focuses on trivial artifacts observed in variants of prevalent offensive ps1 payloads, including Cobalt Strike Beacon, PoshC2, Powerview, Letmein, Empire, Powersploit, and other attack payloads that often undergo minimal changes by attackers due to bad opsec.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((EventCode="4104" (ScriptBlockText="*$DoIt*" OR ScriptBlockText="*harmj0y*" OR ScriptBlockText="*mattifestation*" OR ScriptBlockText="*_RastaMouse*" OR ScriptBlockText="*tifkin_*" OR ScriptBlockText="*0xdeadbeef*")) OR (EventCode="4103" (Payload="*$DoIt*" OR Payload="*harmj0y*" OR Payload="*mattifestation*" OR Payload="*_RastaMouse*" OR Payload="*tifkin_*" OR Payload="*0xdeadbeef*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Bad Opsec Powershell Code Artifacts" | eval sigma_description="Focuses on trivial artifacts observed in variants of prevalent offensive ps1 payloads, including Cobalt Strike Beacon, PoshC2, Powerview, Letmein, Empire, Powersploit, and other attack payloads that often undergo minimal changes by attackers due to bad opsec."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 (2 Lines) - powershell]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (ScriptBlockText="*CL_Invocation.ps1*" OR ScriptBlockText="*SyncInvoke*")) | eventstats dc(ScriptBlockText) as val by Computer | search val > 2 | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1 (2 Lines)" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 - powershell]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*CL_Invocation.ps1*" ScriptBlockText="*SyncInvoke*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Mutexverifiers.ps1 (2 Lines) - powershell]
description = Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (ScriptBlockText="*CL_Mutexverifiers.ps1*" OR ScriptBlockText="*runAfterCancelProcess*")) | eventstats dc(ScriptBlockText) as val by Computer | search val > 2 | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Mutexverifiers.ps1 (2 Lines)" | eval sigma_description="Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Mutexverifiers.ps1 - powershell]
description = Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*CL_Mutexverifiers.ps1*" ScriptBlockText="*runAfterCancelProcess*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Mutexverifiers.ps1" | eval sigma_description="Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Clear PowerShell History - powershell]
description = Detects keywords that could indicate clearing PowerShell history
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((EventCode="4104" (((ScriptBlockText="*del*" OR ScriptBlockText="*Remove-Item*" OR ScriptBlockText="*rm*") ScriptBlockText="*(Get-PSReadlineOption).HistorySavePath*") OR (ScriptBlockText="*Set-PSReadlineOption*" ScriptBlockText="*–HistorySaveStyle*" ScriptBlockText="*SaveNothing*"))) OR (EventCode="4103" (((Payload="*del*" OR Payload="*Remove-Item*" OR Payload="*rm*") Payload="*(Get-PSReadlineOption).HistorySavePath*") OR (Payload="*Set-PSReadlineOption*" Payload="*–HistorySaveStyle*" Payload="*SaveNothing*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.003 attack.t1146" | eval sigma_title="Clear PowerShell History" | eval sigma_description="Detects keywords that could indicate clearing PowerShell history"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Cmdline - powershell]
description = Detects the PowerShell command lines with reversed strings
search = index=wineventlog* (Image="*\\powershell.exe" (CommandLine="*hctac*" OR CommandLine="*kearb*" OR CommandLine="*dnammoc*" OR CommandLine="*ekovn*" OR CommandLine="*eliFd*" OR CommandLine="*rahc*" OR CommandLine="*etirw*" OR CommandLine="*golon*" OR CommandLine="*tninon*" OR CommandLine="*eddih*" OR CommandLine="*tpircS*" OR CommandLine="*ssecorp*" OR CommandLine="*llehsrewop*" OR CommandLine="*esnopser*" OR CommandLine="*daolnwod*" OR CommandLine="*tneilCbeW*" OR CommandLine="*tneilc*" OR CommandLine="*ptth*" OR CommandLine="*elifotevas*" OR CommandLine="*46esab*" OR CommandLine="*htaPpmeTteG*" OR CommandLine="*tcejbO*" OR CommandLine="*maerts*" OR CommandLine="*hcaerof*" OR CommandLine="*ekovni*" OR CommandLine="*retupmoc*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Cmdline" | eval sigma_description="Detects the PowerShell command lines with reversed strings"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded PowerShell Command Line - powershell]
description = Detects specific combinations of encoding methods in the PowerShell command lines
search = index=wineventlog* (Image="*\\powershell.exe" (((((CommandLine="*ToInt*" OR CommandLine="*ToDecimal*" OR CommandLine="*ToByte*" OR CommandLine="*ToUint*" OR CommandLine="*ToSingle*" OR CommandLine="*ToSByte*") (CommandLine="*ToChar*" OR CommandLine="*ToString*" OR CommandLine="*String*")) OR (CommandLine="*char*" CommandLine="*join*")) OR (CommandLine="*split*" CommandLine="*join*")) OR (CommandLine="*ForEach*" CommandLine="*Xor*") OR (CommandLine="*cOnvErTTO-SECUreStRIng*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Encoded PowerShell Command Line" | eval sigma_description="Detects specific combinations of encoding methods in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Accessing WinAPI in PowerShell. Code Injection. - powershell]
description = Detecting Code injection with PowerShell in another process
search = index=wineventlog* SourceImage="*\\powershell.exe" | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Accessing WinAPI in PowerShell. Code Injection." | eval sigma_description="Detecting Code injection with PowerShell in another process"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Create Local User - powershell]
description = Detects creation of a local user via PowerShell
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (Message="*New-LocalUser*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.persistence attack.t1136.001 attack.t1136" | eval sigma_title="PowerShell Create Local User" | eval sigma_description="Detects creation of a local user via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - Powershell - powershell]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" keywords="*-Recurse*" keywords="*|*" keywords="*Compress-Archive*") | eval sigma_attack_tags="attack.exfiltration attack.t1560 attack.t1002" | eval sigma_title="Data Compressed - Powershell" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Decompress Commands - powershell]
description = A General detection for specific decompress commands in PowerShell logs. This could be an adversary decompressing files.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((EventCode="4104" ScriptBlockText="*Expand-Archive*") OR (EventCode="4103" Payload="*Expand-Archive*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="PowerShell Decompress Commands" | eval sigma_description="A General detection for specific decompress commands in PowerShell logs. This could be an adversary decompressing files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Dnscat Execution - powershell]
description = Dnscat exfiltration tool execution
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*Start-Dnscat2*") | eval sigma_attack_tags="attack.exfiltration attack.t1048 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Dnscat Execution" | eval sigma_description="Dnscat exfiltration tool execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - powershell]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=wineventlog* (source="Windows PowerShell" (EventCode="400" EngineVersion="2.*") NOT (HostVersion="2.*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Called from an Executable Version Mismatch - powershell]
description = Detects PowerShell called from an executable by the version mismatch method
search = index=wineventlog* (source="Windows PowerShell" EventCode="400" (EngineVersion="2.*" OR EngineVersion="4.*" OR EngineVersion="5.*") HostVersion="3.*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell Called from an Executable Version Mismatch" | eval sigma_description="Detects PowerShell called from an executable by the version mismatch method"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get Clipboard - powershell]
description = A General detection for the Get-Clipboard commands in PowerShell logs. This could be an adversary capturing clipboard contents.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((EventCode="4104" ScriptBlockText="*Get-Clipboard*") OR (EventCode="4103" Payload="*Get-Clipboard*"))) | eval sigma_attack_tags="attack.collection attack.t1115" | eval sigma_title="PowerShell Get Clipboard" | eval sigma_description="A General detection for the Get-Clipboard commands in PowerShell logs. This could be an adversary capturing clipboard contents."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell ICMP Exfiltration - powershell]
description = Detects Exfiltration Over Alternative Protocol - ICMP. Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*New-Object*" ScriptBlockText="*System.Net.NetworkInformation.Ping*" ScriptBlockText="*.Send(*") | eval sigma_attack_tags="attack.exfiltration attack.t1048.003" | eval sigma_title="PowerShell ICMP Exfiltration" | eval sigma_description="Detects Exfiltration Over Alternative Protocol - ICMP. Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Commandlets - powershell]
description = Detects Commandlet names from well-known PowerShell exploitation frameworks
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (EventCode="4104" (ScriptBlockText="*Invoke-DllInjection*" OR ScriptBlockText="*Invoke-Shellcode*" OR ScriptBlockText="*Invoke-WmiCommand*" OR ScriptBlockText="*Get-GPPPassword*" OR ScriptBlockText="*Get-Keystrokes*" OR ScriptBlockText="*Get-TimedScreenshot*" OR ScriptBlockText="*Get-VaultCredential*" OR ScriptBlockText="*Invoke-CredentialInjection*" OR ScriptBlockText="*Invoke-Mimikatz*" OR ScriptBlockText="*Invoke-NinjaCopy*" OR ScriptBlockText="*Invoke-TokenManipulation*" OR ScriptBlockText="*Out-Minidump*" OR ScriptBlockText="*VolumeShadowCopyTools*" OR ScriptBlockText="*Invoke-ReflectivePEInjection*" OR ScriptBlockText="*Invoke-UserHunter*" OR ScriptBlockText="*Find-GPOLocation*" OR ScriptBlockText="*Invoke-ACLScanner*" OR ScriptBlockText="*Invoke-DowngradeAccount*" OR ScriptBlockText="*Get-ServiceUnquoted*" OR ScriptBlockText="*Get-ServiceFilePermission*" OR ScriptBlockText="*Get-ServicePermission*" OR ScriptBlockText="*Invoke-ServiceAbuse*" OR ScriptBlockText="*Install-ServiceBinary*" OR ScriptBlockText="*Get-RegAutoLogon*" OR ScriptBlockText="*Get-VulnAutoRun*" OR ScriptBlockText="*Get-VulnSchTask*" OR ScriptBlockText="*Get-UnattendedInstallFile*" OR ScriptBlockText="*Get-ApplicationHost*" OR ScriptBlockText="*Get-RegAlwaysInstallElevated*" OR ScriptBlockText="*Get-Unconstrained*" OR ScriptBlockText="*Add-RegBackdoor*" OR ScriptBlockText="*Add-ScrnSaveBackdoor*" OR ScriptBlockText="*Gupt-Backdoor*" OR ScriptBlockText="*Invoke-ADSBackdoor*" OR ScriptBlockText="*Enabled-DuplicateToken*" OR ScriptBlockText="*Invoke-PsUaCme*" OR ScriptBlockText="*Remove-Update*" OR ScriptBlockText="*Check-VM*" OR ScriptBlockText="*Get-LSASecret*" OR ScriptBlockText="*Get-PassHashes*" OR ScriptBlockText="*Show-TargetScreen*" OR ScriptBlockText="*Port-Scan*" OR ScriptBlockText="*Invoke-PoshRatHttp*" OR ScriptBlockText="*Invoke-PowerShellTCP*" OR ScriptBlockText="*Invoke-PowerShellWMI*" OR ScriptBlockText="*Add-Exfiltration*" OR ScriptBlockText="*Add-Persistence*" OR ScriptBlockText="*Do-Exfiltration*" OR ScriptBlockText="*Start-CaptureServer*" OR ScriptBlockText="*Get-ChromeDump*" OR ScriptBlockText="*Get-ClipboardContents*" OR ScriptBlockText="*Get-FoxDump*" OR ScriptBlockText="*Get-IndexedItem*" OR ScriptBlockText="*Get-Screenshot*" OR ScriptBlockText="*Invoke-Inveigh*" OR ScriptBlockText="*Invoke-NetRipper*" OR ScriptBlockText="*Invoke-EgressCheck*" OR ScriptBlockText="*Invoke-PostExfil*" OR ScriptBlockText="*Invoke-PSInject*" OR ScriptBlockText="*Invoke-RunAs*" OR ScriptBlockText="*MailRaider*" OR ScriptBlockText="*New-HoneyHash*" OR ScriptBlockText="*Set-MacAttribute*" OR ScriptBlockText="*Invoke-DCSync*" OR ScriptBlockText="*Invoke-PowerDump*" OR ScriptBlockText="*Exploit-Jboss*" OR ScriptBlockText="*Invoke-ThunderStruck*" OR ScriptBlockText="*Invoke-VoiceTroll*" OR ScriptBlockText="*Set-Wallpaper*" OR ScriptBlockText="*Invoke-InveighRelay*" OR ScriptBlockText="*Invoke-PsExec*" OR ScriptBlockText="*Invoke-SSHCommand*" OR ScriptBlockText="*Get-SecurityPackages*" OR ScriptBlockText="*Install-SSP*" OR ScriptBlockText="*Invoke-BackdoorLNK*" OR ScriptBlockText="*PowerBreach*" OR ScriptBlockText="*Get-SiteListPassword*" OR ScriptBlockText="*Get-System*" OR ScriptBlockText="*Invoke-BypassUAC*" OR ScriptBlockText="*Invoke-Tater*" OR ScriptBlockText="*Invoke-WScriptBypassUAC*" OR ScriptBlockText="*PowerUp*" OR ScriptBlockText="*PowerView*" OR ScriptBlockText="*Get-RickAstley*" OR ScriptBlockText="*Find-Fruit*" OR ScriptBlockText="*HTTP-Login*" OR ScriptBlockText="*Find-TrustedDocuments*" OR ScriptBlockText="*Invoke-Paranoia*" OR ScriptBlockText="*Invoke-WinEnum*" OR ScriptBlockText="*Invoke-ARPScan*" OR ScriptBlockText="*Invoke-PortScan*" OR ScriptBlockText="*Invoke-ReverseDNSLookup*" OR ScriptBlockText="*Invoke-SMBScanner*" OR ScriptBlockText="*Invoke-Mimikittenz*" OR ScriptBlockText="*Invoke-AllChecks*")) NOT (EventCode="4104" (ScriptBlockText="*Get-SystemDriveInfo*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Malicious PowerShell Commandlets" | eval sigma_description="Detects Commandlet names from well-known PowerShell exploitation frameworks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Keywords - powershell]
description = Detects keywords from well-known PowerShell exploitation frameworks
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (Message="*AdjustTokenPrivileges*" OR Message="*IMAGE_NT_OPTIONAL_HDR64_MAGIC*" OR Message="*Microsoft.Win32.UnsafeNativeMethods*" OR Message="*ReadProcessMemory.Invoke*" OR Message="*SE_PRIVILEGE_ENABLED*" OR Message="*LSA_UNICODE_STRING*" OR Message="*MiniDumpWriteDump*" OR Message="*PAGE_EXECUTE_READ*" OR Message="*SECURITY_DELEGATION*" OR Message="*TOKEN_ADJUST_PRIVILEGES*" OR Message="*TOKEN_ALL_ACCESS*" OR Message="*TOKEN_ASSIGN_PRIMARY*" OR Message="*TOKEN_DUPLICATE*" OR Message="*TOKEN_ELEVATION*" OR Message="*TOKEN_IMPERSONATE*" OR Message="*TOKEN_INFORMATION_CLASS*" OR Message="*TOKEN_PRIVILEGES*" OR Message="*TOKEN_QUERY*" OR Message="*Metasploit*" OR Message="*Mimikatz*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Malicious PowerShell Keywords" | eval sigma_description="Detects keywords from well-known PowerShell exploitation frameworks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Nishang PowerShell Commandlets - powershell]
description = Detects Commandlet names and arguments from the Nishang exploitation framework
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ("Add-ConstrainedDelegationBackdoor" OR "Set-DCShadowPermissions" OR "DNS_TXT_Pwnage" OR "Execute-OnTime" OR "HTTP-Backdoor" OR "Set-RemotePSRemoting" OR "Set-RemoteWMI" OR "Invoke-AmsiBypass" OR "Out-CHM" OR "Out-HTA" OR "Out-SCF" OR "Out-SCT" OR "Out-Shortcut" OR "Out-WebQuery" OR "Out-Word" OR "Enable-Duplication" OR "Remove-Update" OR "Download-Execute-PS" OR "Download_Execute" OR "Execute-Command-MSSQL" OR "Execute-DNSTXT-Code" OR "Out-RundllCommand" OR "Copy-VSS" OR "FireBuster" OR "FireListener" OR "Get-Information" OR "Get-PassHints" OR "Get-WLAN-Keys" OR "Get-Web-Credentials" OR "Invoke-CredentialsPhish" OR "Invoke-MimikatzWDigestDowngrade" OR "Invoke-SSIDExfil" OR "Invoke-SessionGopher" OR "Keylogger" OR "Invoke-Interceptor" OR "Create-MultipleSessions" OR "Invoke-NetworkRelay" OR "Run-EXEonRemote" OR "Invoke-Prasadhak" OR "Invoke-BruteForce" OR "Password-List" OR "Invoke-JSRatRegsvr" OR "Invoke-JSRatRundll" OR "Invoke-PoshRatHttps" OR "Invoke-PowerShellIcmp" OR "Invoke-PowerShellUdp" OR "Invoke-PSGcat" OR "Invoke-PsGcatAgent" OR "Remove-PoshRat" OR "Add-Persistance" OR "ExetoText" OR "Invoke-Decode" OR "Invoke-Encode" OR "Parse_Keys" OR "Remove-Persistence" OR "StringtoBase64" OR "TexttoExe" OR "Powerpreter" OR "Nishang" OR "DataToEncode" OR "LoggedKeys" OR "OUT-DNSTXT" OR "ExfilOption" OR "DumpCerts" OR "DumpCreds" OR "Shellcode32" OR "Shellcode64" OR "NotAllNameSpaces" OR "exfill" OR "FakeDC")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Malicious Nishang PowerShell Commandlets" | eval sigma_description="Detects Commandlet names and arguments from the Nishang exploitation framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTFS Alternate Data Stream - powershell]
description = Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ("set-content" OR "add-content") "-stream") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004 attack.t1096 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="NTFS Alternate Data Stream" | eval sigma_description="Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Credential Prompt - powershell]
description = Detects PowerShell calling a credential prompt
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (Message="*PromptForCredential*")) | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell Credential Prompt" | eval sigma_description="Detects PowerShell calling a credential prompt"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell PSAttack - powershell]
description = Detects the use of PSAttack PowerShell hack tool
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4103" "PS ATTACK!!!") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell PSAttack" | eval sigma_description="Detects the use of PSAttack PowerShell hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - powershell]
description = Detects remote PowerShell sessions
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (EventCode="4103" OR EventCode="400") HostName="ServerRemoteHost" HostApplication="*wsmprovhost.exe*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.lateral_movement attack.t1021.006 attack.t1028" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell sessions"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell ShellCode - powershell]
description = Detects Base64 encoded Shellcode
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*AAAAYInlM*" (ScriptBlockText="*OiCAAAAYInlM*" OR ScriptBlockText="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell ShellCode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download - powershell]
description = Detects suspicious PowerShell download command
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") Message="*System.Net.WebClient*" (Message="*.DownloadFile(*" OR Message="*.DownloadString(*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Download" | eval sigma_description="Detects suspicious PowerShell download command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Export-PfxCertificate - powershell]
description = Detects Commandlet that is used to export certificates from the local certificate store and sometimes used by threat actors to steal provate keys from compromised machines
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (ScriptBlockText="*Export-PfxCertificate*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="Suspicious Export-PfxCertificate" | eval sigma_description="Detects Commandlet that is used to export certificates from the local certificate store and sometimes used by threat actors to steal provate keys from compromised machines"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Process LSASS in ScriptBlock - powershell]
description = Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (ScriptBlockText="*Get-Process lsass*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="PowerShell Get-Process LSASS in ScriptBlock" | eval sigma_description="Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Generic - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (" -enc " OR " -EncodedCommand ") (" -w hidden " OR " -window hidden " OR " -windowstyle hidden ") (" -noni " OR " -noninteractive ")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Invocations - Generic" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Specific - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((Message="*-nop*" Message="* -w *" Message="*hidden*" Message="* -c *" Message="*[Convert]::FromBase64String*") OR (Message="* -w *" Message="*hidden*" Message="*-noni*" Message="*-nop*" Message="* -c *" Message="*iex*" Message="*New-Object*") OR (Message="* -w *" Message="*hidden*" Message="*-ep*" Message="*bypass*" Message="*-Enc*") OR (Message="*powershell*" Message="*reg*" Message="*add*" Message="*HKCU\\software\\microsoft\\windows\\currentversion\\run*") OR (Message="*bypass*" Message="*-noprofile*" Message="*-windowstyle*" Message="*hidden*" Message="*new-object*" Message="*system.net.webclient*" Message="*.download*") OR (Message="*iex*" Message="*New-Object*" Message="*Net.WebClient*" Message="*.Download*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Invocations - Specific" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Keywords - powershell]
description = Detects keywords that could indicate the use of some PowerShell exploitation framework
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (Message="*System.Reflection.Assembly.Load*" OR Message="*[System.Reflection.Assembly]::Load*" OR Message="*[Reflection.Assembly]::Load*" OR Message="*System.Reflection.AssemblyName*" OR Message="*Reflection.Emit.AssemblyBuilderAccess*" OR Message="*Runtime.InteropServices.DllImportAttribute*" OR Message="*SuspendThread*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Keywords" | eval sigma_description="Detects keywords that could indicate the use of some PowerShell exploitation framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Deleted Mounted Share - powershell]
description = Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (ScriptBlockText="*Remove-SmbShare*" OR ScriptBlockText="*Remove-FileShare*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.005" | eval sigma_title="PowerShell Deleted Mounted Share" | eval sigma_description="Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Profile.ps1 Modification - powershell]
description = Detects a change in profile.ps1 of the Powershell profile
search = index=wineventlog* (TargetFilename="*\\profile.ps1*" (TargetFilename="*\\My Documents\\PowerShell\\*" OR TargetFilename="*C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.013" | eval sigma_title="Powershell Profile.ps1 Modification" | eval sigma_description="Detects a change in profile.ps1 of the Powershell profile"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winlogon Helper DLL - powershell]
description = Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*CurrentVersion\\Winlogon*" (ScriptBlockText="*Set-ItemProperty*" OR ScriptBlockText="*New-Item*")) | eval sigma_attack_tags="attack.persistence attack.t1547.004 attack.t1004" | eval sigma_title="Winlogon Helper DLL" | eval sigma_description="Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[WMImplant Hack Tool - powershell]
description = Detects parameters used by WMImplant
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (ScriptBlockText="*WMImplant*" OR ScriptBlockText="* change_user *" OR ScriptBlockText="* gen_cli *" OR ScriptBlockText="* command_exec *" OR ScriptBlockText="* disable_wdigest *" OR ScriptBlockText="* disable_winrm *" OR ScriptBlockText="* enable_wdigest *" OR ScriptBlockText="* enable_winrm *" OR ScriptBlockText="* registry_mod *" OR ScriptBlockText="* remote_posh *" OR ScriptBlockText="* sched_job *" OR ScriptBlockText="* service_mod *" OR ScriptBlockText="* process_kill *" OR ScriptBlockText="* active_users *" OR ScriptBlockText="* basic_info *" OR ScriptBlockText="* power_off *" OR ScriptBlockText="* vacant_system *" OR ScriptBlockText="* logon_events *")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1059.001 attack.t1086" | eval sigma_title="WMImplant Hack Tool" | eval sigma_description="Detects parameters used by WMImplant"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Non PowerShell WSMAN COM Provider - powershell]
description = Detects suspicious use of the WSMAN provider without PowerShell.exe as the host application.
search = index=wineventlog* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") Message="*ProviderName=WSMan*" NOT (Message="*HostApplication=*powershell*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.003" | eval sigma_title="Suspicious Non PowerShell WSMAN COM Provider" | eval sigma_description="Detects suspicious use of the WSMAN provider without PowerShell.exe as the host application."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - powershell]
description = Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.
search = index=wineventlog* (source="Windows PowerShell" EventCode="400" HostName="ConsoleHost" (CommandLine="*bxor*" OR CommandLine="*join*" OR CommandLine="*char*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Accessing WinAPI in PowerShell for Credentials Dumping - sysmon]
description = Detects Accessing to lsass.exe by Powershell
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="8" OR EventCode="10") SourceImage="*\\powershell.exe" TargetImage="*\\lsass.exe") | eval sigma_attack_tags="" | eval sigma_title="Accessing WinAPI in PowerShell for Credentials Dumping" | eval sigma_description="Detects Accessing to lsass.exe by Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack - sysmon]
description = Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network and loading it for a DCOM InternetExplorer DLL Hijack scenario.
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="11" Image="System" TargetFilename="*\\Internet Explorer\\iertutil.dll") OR (EventCode="7" Image="*\\Internet Explorer\\iexplore.exe" ImageLoaded="*\\Internet Explorer\\iertutil.dll"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1021.003" | eval sigma_title="T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network and loading it for a DCOM InternetExplorer DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS HybridConnectionManager Service Bus - sysmon]
description = Detects Azure Hybrid Connection Manager services querying the Azure service bus service
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="22" QueryName="*servicebus.windows.net*" Image="*HybridConnectionManager*") | eval sigma_attack_tags="attack.persistence" | eval sigma_title="DNS HybridConnectionManager Service Bus" | eval sigma_description="Detects Azure Hybrid Connection Manager services querying the Azure service bus service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Wbemcomn DLL Hijack - sysmon]
description = Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario.
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="11" Image="System" TargetFilename="*\\wbem\\wbemcomn.dll") OR (EventCode="7" Image="*\\wmiprvse.exe" ImageLoaded="*\\wbem\\wbemcomn.dll"))) | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.002" | eval sigma_title="Wmiprvse Wbemcomn DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Load from Temp - sysmon]
description = Detects a driver load from a temporary directory
search = index=sysmon* (EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ImageLoaded="*\\Temp\\*") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050 attack.t1543.003" | eval sigma_title="Suspicious Driver Load from Temp" | eval sigma_description="Detects a driver load from a temporary directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[File Created with System Process Name - sysmon]
description = Detects the creation of a executable with a system process name in a suspicious folder
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\svchost.exe" OR TargetFilename="*\\rundll32.exe" OR TargetFilename="*\\services.exe" OR TargetFilename="*\\powershell.exe" OR TargetFilename="*\\regsvr32.exe" OR TargetFilename="*\\spoolsv.exe" OR TargetFilename="*\\lsass.exe" OR TargetFilename="*\\smss.exe" OR TargetFilename="*\\csrss.exe" OR TargetFilename="*\\conhost.exe" OR TargetFilename="*\\wininit.exe" OR TargetFilename="*\\lsm.exe" OR TargetFilename="*\\winlogon.exe" OR TargetFilename="*\\explorer.exe" OR TargetFilename="*\\taskhost.exe" OR TargetFilename="*\\Taskmgr.exe" OR TargetFilename="*\\taskmgr.exe" OR TargetFilename="*\\sihost.exe" OR TargetFilename="*\\RuntimeBroker.exe" OR TargetFilename="*\\runtimebroker.exe" OR TargetFilename="*\\smartscreen.exe" OR TargetFilename="*\\dllhost.exe" OR TargetFilename="*\\audiodg.exe" OR TargetFilename="*\\wlanext.exe") NOT ((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\system32\\*" OR TargetFilename="C:\\Windows\\SysWow64\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*" OR TargetFilename="C:\\Windows\\winsxs\\*" OR TargetFilename="C:\\Windows\\WinSxS\\*" OR TargetFilename="\\SystemRoot\\System32\\*"))) | table Image | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.005" | eval sigma_title="File Created with System Process Name" | eval sigma_description="Detects the creation of a executable with a system process name in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cred Dump Tools Dropped Files - sysmon]
description = Files with well-known filenames (parts of credential dump software or files produced by them) creation
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*\\pwdump*" OR TargetFilename="*\\kirbi*" OR TargetFilename="*\\pwhashes*" OR TargetFilename="*\\wce_ccache*" OR TargetFilename="*\\wce_krbtkts*" OR TargetFilename="*\\fgdump-log*") (TargetFilename="*\\test.pwd" OR TargetFilename="*\\lsremora64.dll" OR TargetFilename="*\\lsremora.dll" OR TargetFilename="*\\fgexec.exe" OR TargetFilename="*\\wceaux.dll" OR TargetFilename="*\\SAM.out" OR TargetFilename="*\\SECURITY.out" OR TargetFilename="*\\SYSTEM.out" OR TargetFilename="*\\NTDS.out" OR TargetFilename="*\\DumpExt.dll" OR TargetFilename="*\\DumpSvc.exe" OR TargetFilename="*\\cachedump64.exe" OR TargetFilename="*\\cachedump.exe" OR TargetFilename="*\\pstgdump.exe" OR TargetFilename="*\\servpw.exe" OR TargetFilename="*\\servpw64.exe" OR TargetFilename="*\\pwdump.exe" OR TargetFilename="*\\procdump64.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001 attack.t1003.002 attack.t1003.003 attack.t1003.004 attack.t1003.005" | eval sigma_title="Cred Dump Tools Dropped Files" | eval sigma_description="Files with well-known filenames (parts of credential dump software or files produced by them) creation"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-26858 Exchange Exploitation - sysmon]
description = Detects possible successful exploitation for vulnerability described in CVE-2021-26858 by looking for | creation of non-standard files on disk by Exchange Server’s Unified Messaging service | which could indicate dropping web shells or other malicious content
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*UMWorkerProcess.exe" NOT ((TargetFilename="*CacheCleanup.bin" OR TargetFilename="*.txt" OR TargetFilename="*.LOG" OR TargetFilename="*.cfg" OR TargetFilename="*cleanup.bin"))) | table ComputerName,TargetFileName | eval sigma_attack_tags="attack.t1203 attack.execution cve.2021-26858" | eval sigma_title="CVE-2021-26858 Exchange Exploitation" | eval sigma_description="Detects possible successful exploitation for vulnerability described in CVE-2021-26858 by looking for | creation of non-standard files on disk by Exchange Server’s Unified Messaging service | which could indicate dropping web shells or other malicious content"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of SafetyKatz - sysmon]
description = Detects possible SafetyKatz Behaviour
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\Temp\\debug.bin") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="Detection of SafetyKatz" | eval sigma_description="Detects possible SafetyKatz Behaviour"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dump File Creation - sysmon]
description = LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*lsass*" TargetFilename="*dmp") | table ComputerName,TargetFileName | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="LSASS Memory Dump File Creation" | eval sigma_description="LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified"
dispatch.earliest_time = -24h@h
alert.track = 0

[Files Dropped to Program Files by Non-Priviledged Process - sysmon]
description = Search for dropping of files to Windows/Program Files fodlers by non-priviledged processes
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") IntegrityLevel="Medium" (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\Program Files\\*" OR TargetFilename="*\\Program Files (x86)\\*") OR (TargetFilename="\\Windows\\*" NOT (TargetFilename="*temp*")))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1574 attack.t1574.010" | eval sigma_title="Files Dropped to Program Files by Non-Priviledged Process" | eval sigma_description="Search for dropping of files to Windows/Program Files fodlers by non-priviledged processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Add-In Loading - sysmon]
description = Detects add-ins that load when Microsoft Word or Excel starts (.wll/.xll are simply .dll fit for Word or Excel).
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((TargetFilename="*\\Microsoft\\Word\\Startup\\*" TargetFilename="*.wll") OR (TargetFilename="*\\Microsoft\\Excel\\Startup\\*" TargetFilename="*.xll")) OR (TargetFilename="*\\Microsoft\\Addins\\*" (TargetFilename="*.xlam" OR TargetFilename="*.xla")))) | eval sigma_attack_tags="attack.persistence attack.t1137 attack.t1137.006" | eval sigma_title="Microsoft Office Add-In Loading" | eval sigma_description="Detects add-ins that load when Microsoft Word or Excel starts (.wll/.xll are simply .dll fit for Word or Excel)."
dispatch.earliest_time = -24h@h
alert.track = 0

[PCRE.NET Package Temp Files - sysmon]
description = Detects processes creating temp files related to PCRE.NET package
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="PCRE.NET Package Temp Files" | eval sigma_description="Detects processes creating temp files related to PCRE.NET package"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Commandlet Names - sysmon]
description = Detects the creation of known powershell scripts for exploitation
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*\\Invoke-DllInjection.ps1" OR TargetFilename="*\\Invoke-WmiCommand.ps1" OR TargetFilename="*\\Get-GPPPassword.ps1" OR TargetFilename="*\\Get-Keystrokes.ps1" OR TargetFilename="*\\Get-VaultCredential.ps1" OR TargetFilename="*\\Invoke-CredentialInjection.ps1" OR TargetFilename="*\\Invoke-Mimikatz.ps1" OR TargetFilename="*\\Invoke-NinjaCopy.ps1" OR TargetFilename="*\\Invoke-TokenManipulation.ps1" OR TargetFilename="*\\Out-Minidump.ps1" OR TargetFilename="*\\VolumeShadowCopyTools.ps1" OR TargetFilename="*\\Invoke-ReflectivePEInjection.ps1" OR TargetFilename="*\\Get-TimedScreenshot.ps1" OR TargetFilename="*\\Invoke-UserHunter.ps1" OR TargetFilename="*\\Find-GPOLocation.ps1" OR TargetFilename="*\\Invoke-ACLScanner.ps1" OR TargetFilename="*\\Invoke-DowngradeAccount.ps1" OR TargetFilename="*\\Get-ServiceUnquoted.ps1" OR TargetFilename="*\\Get-ServiceFilePermission.ps1" OR TargetFilename="*\\Get-ServicePermission.ps1" OR TargetFilename="*\\Invoke-ServiceAbuse.ps1" OR TargetFilename="*\\Install-ServiceBinary.ps1" OR TargetFilename="*\\Get-RegAutoLogon.ps1" OR TargetFilename="*\\Get-VulnAutoRun.ps1" OR TargetFilename="*\\Get-VulnSchTask.ps1" OR TargetFilename="*\\Get-UnattendedInstallFile.ps1" OR TargetFilename="*\\Get-WebConfig.ps1" OR TargetFilename="*\\Get-ApplicationHost.ps1" OR TargetFilename="*\\Get-RegAlwaysInstallElevated.ps1" OR TargetFilename="*\\Get-Unconstrained.ps1" OR TargetFilename="*\\Add-RegBackdoor.ps1" OR TargetFilename="*\\Add-ScrnSaveBackdoor.ps1" OR TargetFilename="*\\Gupt-Backdoor.ps1" OR TargetFilename="*\\Invoke-ADSBackdoor.ps1" OR TargetFilename="*\\Enabled-DuplicateToken.ps1" OR TargetFilename="*\\Invoke-PsUaCme.ps1" OR TargetFilename="*\\Remove-Update.ps1" OR TargetFilename="*\\Check-VM.ps1" OR TargetFilename="*\\Get-LSASecret.ps1" OR TargetFilename="*\\Get-PassHashes.ps1" OR TargetFilename="*\\Show-TargetScreen.ps1" OR TargetFilename="*\\Port-Scan.ps1" OR TargetFilename="*\\Invoke-PoshRatHttp.ps1" OR TargetFilename="*\\Invoke-PowerShellTCP.ps1" OR TargetFilename="*\\Invoke-PowerShellWMI.ps1" OR TargetFilename="*\\Add-Exfiltration.ps1" OR TargetFilename="*\\Add-Persistence.ps1" OR TargetFilename="*\\Do-Exfiltration.ps1" OR TargetFilename="*\\Start-CaptureServer.ps1" OR TargetFilename="*\\Invoke-ShellCode.ps1" OR TargetFilename="*\\Get-ChromeDump.ps1" OR TargetFilename="*\\Get-ClipboardContents.ps1" OR TargetFilename="*\\Get-FoxDump.ps1" OR TargetFilename="*\\Get-IndexedItem.ps1" OR TargetFilename="*\\Get-Screenshot.ps1" OR TargetFilename="*\\Invoke-Inveigh.ps1" OR TargetFilename="*\\Invoke-NetRipper.ps1" OR TargetFilename="*\\Invoke-EgressCheck.ps1" OR TargetFilename="*\\Invoke-PostExfil.ps1" OR TargetFilename="*\\Invoke-PSInject.ps1" OR TargetFilename="*\\Invoke-RunAs.ps1" OR TargetFilename="*\\MailRaider.ps1" OR TargetFilename="*\\New-HoneyHash.ps1" OR TargetFilename="*\\Set-MacAttribute.ps1" OR TargetFilename="*\\Invoke-DCSync.ps1" OR TargetFilename="*\\Invoke-PowerDump.ps1" OR TargetFilename="*\\Exploit-Jboss.ps1" OR TargetFilename="*\\Invoke-ThunderStruck.ps1" OR TargetFilename="*\\Invoke-VoiceTroll.ps1" OR TargetFilename="*\\Set-Wallpaper.ps1" OR TargetFilename="*\\Invoke-InveighRelay.ps1" OR TargetFilename="*\\Invoke-PsExec.ps1" OR TargetFilename="*\\Invoke-SSHCommand.ps1" OR TargetFilename="*\\Get-SecurityPackages.ps1" OR TargetFilename="*\\Install-SSP.ps1" OR TargetFilename="*\\Invoke-BackdoorLNK.ps1" OR TargetFilename="*\\PowerBreach.ps1" OR TargetFilename="*\\Get-SiteListPassword.ps1" OR TargetFilename="*\\Get-System.ps1" OR TargetFilename="*\\Invoke-BypassUAC.ps1" OR TargetFilename="*\\Invoke-Tater.ps1" OR TargetFilename="*\\Invoke-WScriptBypassUAC.ps1" OR TargetFilename="*\\PowerUp.ps1" OR TargetFilename="*\\PowerView.ps1" OR TargetFilename="*\\Get-RickAstley.ps1" OR TargetFilename="*\\Find-Fruit.ps1" OR TargetFilename="*\\HTTP-Login.ps1" OR TargetFilename="*\\Find-TrustedDocuments.ps1" OR TargetFilename="*\\Invoke-Paranoia.ps1" OR TargetFilename="*\\Invoke-WinEnum.ps1" OR TargetFilename="*\\Invoke-ARPScan.ps1" OR TargetFilename="*\\Invoke-PortScan.ps1" OR TargetFilename="*\\Invoke-ReverseDNSLookup.ps1" OR TargetFilename="*\\Invoke-SMBScanner.ps1" OR TargetFilename="*\\Invoke-Mimikittenz.ps1")) | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Malicious PowerShell Commandlet Names" | eval sigma_description="Detects the creation of known powershell scripts for exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[QuarksPwDump Dump File - sysmon]
description = Detects a dump file written by QuarksPwDump password dumper
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Temp\\SAM-*" TargetFilename="*.dmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002" | eval sigma_title="QuarksPwDump Dump File" | eval sigma_description="Detects a dump file written by QuarksPwDump password dumper"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Dropped File - sysmon]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*gthread-3.6.dll*" OR TargetFilename="*sigcmm-2.4.dll*" OR TargetFilename="*\\Windows\\Temp\\tmp.bat*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="RedMimicry Winnti Playbook Dropped File" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Startup Folder File Write - sysmon]
description = A General detection for files being created in the Windows startup directory. This could be an indicator of persistence.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp*") | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Startup Folder File Write" | eval sigma_description="A General detection for files being created in the Windows startup directory. This could be an indicator of persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ADSI-Cache Usage By Unknown Tool - sysmon]
description = Detects the usage of ADSI (LDAP) operations by tools. This may also detect tools like LDAPFragger.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\Local\\Microsoft\\Windows\\SchCache\\*" TargetFilename="*.sch") NOT ((Image="C:\\windows\\system32\\svchost.exe" OR Image="C:\\windows\\system32\\dllhost.exe" OR Image="C:\\windows\\system32\\mmc.exe" OR Image="C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe" OR Image="C:\\Windows\\CCM\\CcmExec.exe"))) | eval sigma_attack_tags="attack.t1071 attack.t1001.003 attack.command_and_control" | eval sigma_title="Suspicious ADSI-Cache Usage By Unknown Tool" | eval sigma_description="Detects the usage of ADSI (LDAP) operations by tools. This may also detect tools like LDAPFragger."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspcious CLR Logs Creation - sysmon]
description = Detects suspicious .NET assembly executions
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Microsoft\\CLR*" TargetFilename="*\\UsageLogs\\*" (TargetFilename="*mshta*" OR TargetFilename="*cscript*" OR TargetFilename="*wscript*" OR TargetFilename="*regsvr32*" OR TargetFilename="*wmic*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspcious CLR Logs Creation" | eval sigma_description="Detects suspicious .NET assembly executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious desktop.ini Action - sysmon]
description = Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*\\desktop.ini" NOT ((Image="C:\\Windows\\explorer.exe" OR Image="C:\\Windows\\System32\\msiexec.exe" OR Image="C:\\Windows\\System32\\mmc.exe"))) | eval sigma_attack_tags="attack.persistence attack.t1023 attack.t1547.009" | eval sigma_title="Suspicious desktop.ini Action" | eval sigma_description="Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PFX File Creation - sysmon]
description = A General detection for processes creating PFX files. This could be an inidicator of an adversary exporting a local certificate to a pfx file.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*.pfx") | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="Suspicious PFX File Creation" | eval sigma_description="A General detection for processes creating PFX files. This could be an inidicator of an adversary exporting a local certificate to a pfx file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PROCEXP152.sys File Created In TMP - sysmon]
description = Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder. This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\AppData\\Local\\Temp\\*" TargetFilename="*PROCEXP152.sys") NOT ((Image="*\\procexp64.exe*" OR Image="*\\procexp.exe*" OR Image="*\\procmon64.exe*" OR Image="*\\procmon.exe*"))) | eval sigma_attack_tags="attack.t1089 attack.t1562.001 attack.defense_evasion" | eval sigma_title="Suspicious PROCEXP152.sys File Created In TMP" | eval sigma_description="Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder. This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU."
dispatch.earliest_time = -24h@h
alert.track = 0

[Hijack Legit RDP Session to Move Laterally - sysmon]
description = Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mstsc.exe" TargetFilename="*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*") | eval sigma_attack_tags="" | eval sigma_title="Hijack Legit RDP Session to Move Laterally" | eval sigma_description="Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Webshell Creation - sysmon]
description = Possible webshell file creation on a static web site
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\inetpub\\wwwroot\\*" (TargetFilename="*.asp*" OR TargetFilename="*.ashx*" OR TargetFilename="*.ph*")) NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*"))) OR ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\www\\*" OR TargetFilename="*\\htdocs\\*" OR TargetFilename="*\\html\\*") TargetFilename="*.ph*") NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*")))) OR ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*.jsp" OR (TargetFilename="*\\cgi-bin\\*" TargetFilename="*.pl*")) NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*"))))) | eval sigma_attack_tags="attack.persistence attack.t1100 attack.t1505.003" | eval sigma_title="Windows Webshell Creation" | eval sigma_description="Possible webshell file creation on a static web site"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer File Write - sysmon]
description = Detects file writes of WMI script event consumer
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\WINDOWS\\system32\\wbem\\scrcons.exe") | eval sigma_attack_tags="attack.t1084 attack.t1546.003 attack.persistence" | eval sigma_title="WMI Persistence - Script Event Consumer File Write" | eval sigma_description="Detects file writes of WMI script event consumer"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Desktopimgdownldr Target File - sysmon]
description = Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*svchost.exe" TargetFilename="*\\Personalization\\LockScreenImage\\*") NOT (TargetFilename="*C:\\Windows\\*")) NOT ((TargetFilename="*.jpg*" OR TargetFilename="*.jpeg*" OR TargetFilename="*.png*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1105" | eval sigma_title="Suspicious Desktopimgdownldr Target File" | eval sigma_description="Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Multiple File Rename Or Delete Occurred - sysmon]
description = Detects multiple file rename or delete events occurrence within a specified period of time by a same user (these events may signalize about ransomware activity).
search = index=sysmon* (source="WinEventLog:Security" EventCode="4663" ObjectType="File" AccessList="%%1537" Keywords="0x8020000000000000") | eventstats count as val by SubjectLogonId| search val > 10 | eval sigma_attack_tags="attack.impact attack.t1486" | eval sigma_title="Suspicious Multiple File Rename Or Delete Occurred" | eval sigma_description="Detects multiple file rename or delete events occurrence within a specified period of time by a same user (these events may signalize about ransomware activity)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Azure Browser SSO - sysmon]
description = Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser. An attacker can use this to authenticate to Azure AD in a browser as that user.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ImageLoaded="*MicrosoftAccountTokenProvider.dll" NOT ((Image="*BackgroundTaskHost.exe" OR Image="*devenv.exe" OR Image="*iexplore.exe" OR Image="*MicrosoftEdge.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1073 attack.t1574.002" | eval sigma_title="Abusing Azure Browser SSO" | eval sigma_description="Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser. An attacker can use this to authenticate to Azure AD in a browser as that user."
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts - sysmon]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=sysmon* ((Description="system.management.automation" ImageLoaded="*system.management.automation*") NOT (Image="*\\powershell.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Alternate PowerShell Hosts" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[In-memory PowerShell - sysmon]
description = Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's 'load powershell' extension.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ImageLoaded="*\\System.Management.Automation.Dll" OR ImageLoaded="*\\System.Management.Automation.ni.Dll") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\WINDOWS\\System32\\sdiagnhost.exe" OR Image="*\\mscorsvw.exe" OR Image="*\\WINDOWS\\System32\\RemoteFXvGPUDisablement.exe" OR Image="*\\sqlps.exe" OR Image="*\\wsmprovhost.exe" OR Image="*\\winrshost.exe" OR Image="*\\syncappvpublishingserver.exe" OR Image="*\\runscripthelper.exe" OR Image="*\\ServerManager.exe"))) | eval sigma_attack_tags="attack.t1086 attack.t1059.001 attack.execution" | eval sigma_title="In-memory PowerShell" | eval sigma_description="Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's 'load powershell' extension."
dispatch.earliest_time = -24h@h
alert.track = 0

[PCRE.NET Package Image Load - sysmon]
description = Detects processes loading modules related to PCRE.NET package
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ImageLoaded="*\\AppData\\Local\\Temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="PCRE.NET Package Image Load" | eval sigma_description="Detects processes loading modules related to PCRE.NET package"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Execution - sysmon]
description = Detects execution of PowerShell
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="system.management.automation" ImageLoaded="*system.management.automation*") | table ComputerName,Image,ProcessID,ImageLoaded | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="PowerShell Execution" | eval sigma_description="Detects execution of PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Script Host Process Image Loaded - sysmon]
description = Detects signs of the WMI script host process %SystemRoot%\system32\wbem\scrcons.exe functionality being used via images being loaded by a process.
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\scrcons.exe" (ImageLoaded="*\\vbscript.dll" OR ImageLoaded="*\\wbemdisp.dll" OR ImageLoaded="*\\wshom.ocx" OR ImageLoaded="*\\scrrun.dll")) | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.persistence attack.t1546.003" | eval sigma_title="WMI Script Host Process Image Loaded" | eval sigma_description="Detects signs of the WMI script host process %SystemRoot%\system32\wbem\scrcons.exe functionality being used via images being loaded by a process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Fax Service DLL Search Order Hijack - sysmon]
description = The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*fxssvc.exe") (ImageLoaded="*ualapi.dll")) NOT ((ImageLoaded="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1073 attack.t1038 attack.t1574.001 attack.t1574.002" | eval sigma_title="Fax Service DLL Search Order Hijack" | eval sigma_description="The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Process Hollowing Image Loading - sysmon]
description = Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\notepad.exe") (ImageLoaded="*\\samlib.dll" OR ImageLoaded="*\\WinSCard.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="Possible Process Hollowing Image Loading" | eval sigma_description="Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz"
dispatch.earliest_time = -24h@h
alert.track = 0

[dotNET DLL Loaded Via Office Applications - sysmon]
description = Detects any assembly DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="C:\\Windows\\assembly\\*")) | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="dotNET DLL Loaded Via Office Applications" | eval sigma_description="Detects any assembly DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[CLR DLL Loaded Via Office Applications - sysmon]
description = Detects CLR DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\clr.dll*")) | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="CLR DLL Loaded Via Office Applications" | eval sigma_description="Detects CLR DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[GAC DLL Loaded Via Office Applications - sysmon]
description = Detects any GAC DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL*")) | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="GAC DLL Loaded Via Office Applications" | eval sigma_description="Detects any GAC DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Parsing DLL Loaded Via Office Applications - sysmon]
description = Detects DSParse DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\dsparse.dll*")) | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="Active Directory Parsing DLL Loaded Via Office Applications" | eval sigma_description="Detects DSParse DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Kerberos DLL Loaded Via Office Applications - sysmon]
description = Detects Kerberos DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\kerberos.dll")) | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="Active Directory Kerberos DLL Loaded Via Office Applications" | eval sigma_description="Detects Kerberos DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Python Py2Exe Image Load - sysmon]
description = Detects the image load of Python Core indicative of a Python script bundled with Py2Exe.
search = index=sysmon* Description="Python Core" | table Description | eval sigma_attack_tags="attack.defense_evasion attack.t1027.002" | eval sigma_title="Python Py2Exe Image Load" | eval sigma_description="Detects the image load of Python Core indicative of a Python script bundled with Py2Exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[CLR DLL Loaded Via Scripting Applications - sysmon]
description = Detects CLR DLL being loaded by an scripting applications
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\mshta.exe") (ImageLoaded="*\\clr.dll" OR ImageLoaded="*\\mscoree.dll" OR ImageLoaded="*\\mscorlib.dll")) | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.t1055" | eval sigma_title="CLR DLL Loaded Via Scripting Applications" | eval sigma_description="Detects CLR DLL being loaded by an scripting applications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious System.Drawing Load - sysmon]
description = A General detection for processes loading System.Drawing.ni.dll. This could be an indicator of potential Screen Capture.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ImageLoaded="*\\System.Drawing.ni.dll" NOT (Image="*\\WmiPrvSE.exe")) | eval sigma_attack_tags="attack.collection attack.t1113" | eval sigma_title="Suspicious System.Drawing Load" | eval sigma_description="A General detection for processes loading System.Drawing.ni.dll. This could be an indicator of potential Screen Capture."
dispatch.earliest_time = -24h@h
alert.track = 0

[VBA DLL Loaded Via Microsoft Word - sysmon]
description = Detects DLL's Loaded Via Word Containing VBA Macros
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\VBE7.DLL" OR ImageLoaded="*\\VBEUI.DLL" OR ImageLoaded="*\\VBE7INTL.DLL")) | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="VBA DLL Loaded Via Microsoft Word" | eval sigma_description="Detects DLL's Loaded Via Word Containing VBA Macros"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Management Instrumentation DLL Loaded Via Microsoft Word - sysmon]
description = Detects DLL's Loaded Via Word Containing VBA Macros Executing WMI Commands
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\wmiutils.dll" OR ImageLoaded="*\\wbemcomn.dll" OR ImageLoaded="*\\wbemprox.dll" OR ImageLoaded="*\\wbemdisp.dll" OR ImageLoaded="*\\wbemsvc.dll")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Windows Management Instrumentation DLL Loaded Via Microsoft Word" | eval sigma_description="Detects DLL's Loaded Via Word Containing VBA Macros Executing WMI Commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Load of dbghelp/dbgcore DLL from Suspicious Process - sysmon]
description = Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes. Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ImageLoaded="*\\dbghelp.dll" OR ImageLoaded="*\\dbgcore.dll") (Image="*\\msbuild.exe" OR Image="*\\cmd.exe" OR Image="*\\svchost.exe" OR Image="*\\rundll32.exe" OR Image="*\\powershell.exe" OR Image="*\\word.exe" OR Image="*\\excel.exe" OR Image="*\\powerpnt.exe" OR Image="*\\outlook.exe" OR Image="*\\monitoringhost.exe" OR Image="*\\wmic.exe" OR Image="*\\bash.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\schtasks.exe" OR Image="*\\dnx.exe" OR Image="*\\regsvcs.exe" OR Image="*\\sc.exe" OR Image="*\\scriptrunner.exe")) NOT (Image="*Visual Studio*")) OR ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ImageLoaded="*\\dbghelp.dll" OR ImageLoaded="*\\dbgcore.dll") Signed="FALSE") NOT (Image="*Visual Studio*")))) | table ComputerName,User,Image,ImageLoaded | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="Load of dbghelp/dbgcore DLL from Suspicious Process" | eval sigma_description="Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes. Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Svchost DLL Search Order Hijack - sysmon]
description = IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services 'svchost.exe -k netsvcs' to gain code execution on a remote machine.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\svchost.exe") (ImageLoaded="*\\tsmsisrv.dll" OR ImageLoaded="*\\tsvipsrv.dll" OR ImageLoaded="*\\wlbsctrl.dll")) NOT ((ImageLoaded="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1073 attack.t1574.002 attack.t1038 attack.t1574.001" | eval sigma_title="Svchost DLL Search Order Hijack" | eval sigma_description="IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services 'svchost.exe -k netsvcs' to gain code execution on a remote machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Time Travel Debugging Utility Usage - sysmon]
description = Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ImageLoaded="*\\ttdrecord.dll" OR ImageLoaded="*\\ttdwriter.dll" OR ImageLoaded="*\\ttdloader.dll")) (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\tttracer.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.credential_access attack.t1218 attack.t1003.001" | eval sigma_title="Time Travel Debugging Utility Usage" | eval sigma_description="Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass With Fake DLL - sysmon]
description = Attempts to load dismcore.dll after dropping it
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\dism.exe") (ImageLoaded="*\\dismcore.dll")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1574.002" | eval sigma_title="UAC Bypass With Fake DLL" | eval sigma_description="Attempts to load dismcore.dll after dropping it"
dispatch.earliest_time = -24h@h
alert.track = 0

[UIPromptForCredentials DLLs - sysmon]
description = Detects potential use of UIPromptForCredentials functions by looking for some of the DLLs needed for it.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ImageLoaded="*\\credui.dll" OR ImageLoaded="*\\wincredui.dll") OR (OriginalFileName="credui.dll" OR OriginalFileName="wincredui.dll"))) | eval sigma_attack_tags="attack.credential_access attack.collection attack.t1056.002" | eval sigma_title="UIPromptForCredentials DLLs" | eval sigma_description="Detects potential use of UIPromptForCredentials functions by looking for some of the DLLs needed for it."
dispatch.earliest_time = -24h@h
alert.track = 0

[Unsigned Image Loaded Into LSASS Process - sysmon]
description = Loading unsigned image (DLL, EXE) into LSASS process
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\lsass.exe" Signed="false") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="Unsigned Image Loaded Into LSASS Process" | eval sigma_description="Loading unsigned image (DLL, EXE) into LSASS process"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Modules Loaded - sysmon]
description = Detects non wmiprvse loading WMI modules
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ImageLoaded="*\\wmiclnt.dll" OR ImageLoaded="*\\WmiApRpl.dll" OR ImageLoaded="*\\wmiprov.dll" OR ImageLoaded="*\\wmiutils.dll" OR ImageLoaded="*\\wbemcomn.dll" OR ImageLoaded="*\\wbemprox.dll" OR ImageLoaded="*\\WMINet_Utils.dll" OR ImageLoaded="*\\wbemsvc.dll" OR ImageLoaded="*\\fastprox.dll") NOT ((Image="*\\WmiPrvSe.exe" OR Image="*\\WmiAPsrv.exe" OR Image="*\\svchost.exe" OR Image="*\\DeviceCensus.exe" OR Image="*\\CompatTelRunner.exe" OR Image="*\\sdiagnhost.exe" OR Image="*\\SIHClient.exe" OR Image="*\\ngentask.exe" OR Image="*\\windows\\system32\\taskhostw.exe" OR Image="*\\windows\\system32\\MoUsoCoreWorker.exe"))) | table ComputerName,User,Image,ImageLoaded | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Modules Loaded" | eval sigma_description="Detects non wmiprvse loading WMI modules"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Command Line Event Consumer - sysmon]
description = Detects WMI command line event consumers
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\Windows\\System32\\wbem\\WmiPrvSE.exe" ImageLoaded="*\\wbemcons.dll") | eval sigma_attack_tags="attack.t1084 attack.t1546.003 attack.persistence" | eval sigma_title="WMI Persistence - Command Line Event Consumer" | eval sigma_description="Detects WMI command line event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Loading Scripting Libraries - sysmon]
description = Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc).
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wmic.exe" (ImageLoaded="*\\jscript.dll" OR ImageLoaded="*\\vbscript.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1220" | eval sigma_title="WMIC Loading Scripting Libraries" | eval sigma_description="Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WSMAN Provider Image Loads - sysmon]
description = Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ImageLoaded="*\\WsmSvc.dll" OR ImageLoaded="*\\WsmAuto.dll" OR ImageLoaded="*\\Microsoft.WSMan.Management.ni.dll") OR (OriginalFileName="WsmSvc.dll" OR OriginalFileName="WSMANAUTOMATION.DLL" OR OriginalFileName="Microsoft.WSMan.Management.dll")) NOT (Image="*\\powershell.exe")) OR (Image="*\\svchost.exe" OriginalFileName="WsmWmiPl.dll"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.003" | eval sigma_title="Suspicious WSMAN Provider Image Loads" | eval sigma_description="Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution."
dispatch.earliest_time = -24h@h
alert.track = 0

[Silenttrinity Stager Msbuild Activity - sysmon]
description = Detects a possible remote connections to Silenttrinity c2
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\msbuild.exe" (DestinationPort="80" OR DestinationPort="443") Initiated="true") | eval sigma_attack_tags="attack.execution attack.t1127.001" | eval sigma_title="Silenttrinity Stager Msbuild Activity" | eval sigma_description="Detects a possible remote connections to Silenttrinity c2"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dllhost Internet Connection - sysmon]
description = Detects Dllhost that communicates with public IP addresses
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\dllhost.exe" Initiated="true") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution attack.t1559.001 attack.t1175" | eval sigma_title="Dllhost Internet Connection" | eval sigma_description="Detects Dllhost that communicates with public IP addresses"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Typical Malware Back Connect Ports - sysmon]
description = Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Initiated="true" (DestinationPort="4443" OR DestinationPort="2448" OR DestinationPort="8143" OR DestinationPort="1777" OR DestinationPort="1443" OR DestinationPort="243" OR DestinationPort="65535" OR DestinationPort="13506" OR DestinationPort="3360" OR DestinationPort="200" OR DestinationPort="198" OR DestinationPort="49180" OR DestinationPort="13507" OR DestinationPort="6625" OR DestinationPort="4444" OR DestinationPort="4438" OR DestinationPort="1904" OR DestinationPort="13505" OR DestinationPort="13504" OR DestinationPort="12102" OR DestinationPort="9631" OR DestinationPort="5445" OR DestinationPort="2443" OR DestinationPort="777" OR DestinationPort="13394" OR DestinationPort="13145" OR DestinationPort="12103" OR DestinationPort="5552" OR DestinationPort="3939" OR DestinationPort="3675" OR DestinationPort="666" OR DestinationPort="473" OR DestinationPort="5649" OR DestinationPort="4455" OR DestinationPort="4433" OR DestinationPort="1817" OR DestinationPort="100" OR DestinationPort="65520" OR DestinationPort="1960" OR DestinationPort="1515" OR DestinationPort="743" OR DestinationPort="700" OR DestinationPort="14154" OR DestinationPort="14103" OR DestinationPort="14102" OR DestinationPort="12322" OR DestinationPort="10101" OR DestinationPort="7210" OR DestinationPort="4040" OR DestinationPort="9943")) NOT (((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\Program Files*" OR ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*") DestinationIsIpv6="false"))))) | eval sigma_attack_tags="attack.command_and_control attack.t1571 attack.t1043" | eval sigma_title="Suspicious Typical Malware Back Connect Ports" | eval sigma_description="Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases"
dispatch.earliest_time = -24h@h
alert.track = 0

[Notepad Making Network Connection - sysmon]
description = Detects suspicious network connection by Notepad
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\notepad.exe" NOT (DestinationPort="9100")) | eval sigma_attack_tags="attack.command_and_control attack.execution attack.defense_evasion attack.t1055" | eval sigma_title="Notepad Making Network Connection" | eval sigma_description="Detects suspicious network connection by Notepad"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Network Connections - sysmon]
description = Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\powershell.exe" Initiated="true") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.0.0.1*") DestinationIsIpv6="false" User="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell Network Connections" | eval sigma_description="Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Over Reverse SSH Tunnel - sysmon]
description = Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" Initiated="true" SourcePort="3389") ((DestinationIp="127.*") OR (DestinationIP="::1"))) | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001 attack.t1076 car.2013-07-002" | eval sigma_title="RDP Over Reverse SSH Tunnel" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - sysmon]
description = Detects remote PowerShell connections by monitoring network outbount connections to ports 5985 or 5986 from not network service account
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (DestinationPort="5985" OR DestinationPort="5986") NOT (User="NT AUTHORITY\\NETWORK SERVICE")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.lateral_movement attack.t1021.006 attack.t1028" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell connections by monitoring network outbount connections to ports 5985 or 5986 from not network service account"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Internet Connection - sysmon]
description = Detects a rundll32 that communicates with public IP addresses
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" Initiated="true") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.t1085 attack.execution" | eval sigma_title="Rundll32 Internet Connection" | eval sigma_description="Detects a rundll32 that communicates with public IP addresses"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Location with Network Connections - sysmon]
description = Detects programs with network connections running in suspicious files system locations
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\Public\\*" OR Image="*\\Users\\Contacts\\*" OR Image="*\\Users\\Searches\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*") OR (Image="*\\$Recycle.bin") OR (Image="C:\\Perflogs\\*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Program Location with Network Connections" | eval sigma_description="Detects programs with network connections running in suspicious files system locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound RDP Connections - sysmon]
description = Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (DestinationPort="3389" Initiated="true") NOT ((Image="*\\mstsc.exe" OR Image="*\\RTSApp.exe" OR Image="*\\RTS2App.exe" OR Image="*\\RDCMan.exe" OR Image="*\\ws_TunnelService.exe" OR Image="*\\RSSensor.exe" OR Image="*\\RemoteDesktopManagerFree.exe" OR Image="*\\RemoteDesktopManager.exe" OR Image="*\\RemoteDesktopManager64.exe" OR Image="*\\mRemoteNG.exe" OR Image="*\\mRemote.exe" OR Image="*\\Terminals.exe" OR Image="*\\spiceworks-finder.exe" OR Image="*\\FSDiscovery.exe" OR Image="*\\FSAssessment.exe" OR Image="*\\MobaRTE.exe" OR Image="*\\chrome.exe" OR Image="*\\thor.exe" OR Image="*\\thor64.exe"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.001 attack.t1076 car.2013-07-002" | eval sigma_title="Suspicious Outbound RDP Connections" | eval sigma_description="Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound Kerberos Connection - sysmon]
description = Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (DestinationPort="88" Initiated="true") NOT ((Image="*\\lsass.exe" OR Image="*\\opera.exe" OR Image="*\\chrome.exe" OR Image="*\\firefox.exe"))) | eval sigma_attack_tags="attack.credential_access attack.t1558 attack.t1208 attack.lateral_movement attack.t1550.003 attack.t1097" | eval sigma_title="Suspicious Outbound Kerberos Connection" | eval sigma_description="Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Binary Github Communication - sysmon]
description = Detects an executable in the Windows folder accessing github.com
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Initiated="true" (DestinationHostname="*.github.com" OR DestinationHostname="*.githubusercontent.com") Image="C:\\Windows\\*") | eval sigma_attack_tags="attack.lateral_movement attack.t1105 attack.exfiltration attack.t1567.001 attack.t1048" | eval sigma_title="Microsoft Binary Github Communication" | eval sigma_description="Detects an executable in the Windows folder accessing github.com"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Binary Suspicious Communication Endpoint - sysmon]
description = Detects an executable in the Windows folder accessing suspicious domains
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Initiated="true" (DestinationHostname="*dl.dropboxusercontent.com" OR DestinationHostname="*.pastebin.com" OR DestinationHostname="*.githubusercontent.com") Image="C:\\Windows\\*") | eval sigma_attack_tags="attack.lateral_movement attack.t1105" | eval sigma_title="Microsoft Binary Suspicious Communication Endpoint" | eval sigma_description="Detects an executable in the Windows folder accessing suspicious domains"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wuauclt Network Connection - sysmon]
description = Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making a network connections. One could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule.
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*wuauclt*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Wuauclt Network Connection" | eval sigma_description="Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making a network connections. One could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[Credentials Dumping Tools Accessing LSASS Memory - sysmon]
description = Detects process access LSASS memory which is typical for credentials dumping tools
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" (GrantedAccess="*0x40*" OR GrantedAccess="*0x1000*" OR GrantedAccess="*0x1400*" OR GrantedAccess="*0x100000*" OR GrantedAccess="*0x1410*" OR GrantedAccess="*0x1010*" OR GrantedAccess="*0x1438*" OR GrantedAccess="*0x143a*" OR GrantedAccess="*0x1418*" OR GrantedAccess="*0x1f0fff*" OR GrantedAccess="*0x1f1fff*" OR GrantedAccess="*0x1f2fff*" OR GrantedAccess="*0x1f3fff*")) NOT ((ProcessName="*\\wmiprvse.exe" OR ProcessName="*\\taskmgr.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\lsm.exe" OR ProcessName="*\\csrss.exe" OR ProcessName="*\\wininit.exe" OR ProcessName="*\\vmtoolsd.exe"))) | table ComputerName,User,SourceImage | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003 attack.s0002 car.2019-04-004" | eval sigma_title="Credentials Dumping Tools Accessing LSASS Memory" | eval sigma_description="Detects process access LSASS memory which is typical for credentials dumping tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious In-Memory Module Execution - sysmon]
description = Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display 'UNKNOWN' as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CallTrace="*C:\\Windows\\SYSTEM32\\ntdll.dll+*" CallTrace="*|C:\\Windows\\System32\\KERNELBASE.dll+*" CallTrace="*|UNKNOWN(*" CallTrace="*)*") OR (CallTrace="*UNKNOWN(*" CallTrace="*)|UNKNOWN(*" CallTrace="*)"))) OR (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CallTrace="*UNKNOWN*" (GrantedAccess="0x1F0FFF" OR GrantedAccess="0x1F1FFF" OR GrantedAccess="0x143A" OR GrantedAccess="0x1410" OR GrantedAccess="0x1010" OR GrantedAccess="0x1F2FFF" OR GrantedAccess="0x1F3FFF" OR GrantedAccess="0x1FFFFF")))) | table ComputerName,User,SourceImage,TargetImage,CallTrace | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1055.001 attack.t1055.002 attack.t1055" | eval sigma_title="Suspicious In-Memory Module Execution" | eval sigma_description="Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display 'UNKNOWN' as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Memory Asccess - sysmon]
description = Detects suspect access to svchost process memory such as that used by Invoke-Phantom to kill the winRM windows event logging service.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\windows\\system32\\svchost.exe" GrantedAccess="0x1f3fff" (CallTrace="*unknown*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002 attack.t1089" | eval sigma_title="Suspect Svchost Memory Asccess" | eval sigma_description="Detects suspect access to svchost process memory such as that used by Invoke-Phantom to kill the winRM windows event logging service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Credential Dumping by LaZagne - sysmon]
description = Detects LSASS process access by LaZagne for credential dumping.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" CallTrace="*C:\\Windows\\SYSTEM32\\ntdll.dll+*" CallTrace="*|C:\\Windows\\System32\\KERNELBASE.dll+*" CallTrace="*_ctypes.pyd+*" CallTrace="*python27.dll+*" GrantedAccess="0x1FFFFF") | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0349" | eval sigma_title="Credential Dumping by LaZagne" | eval sigma_description="Detects LSASS process access by LaZagne for credential dumping."
dispatch.earliest_time = -24h@h
alert.track = 0

[Load Undocumented Autoelevated COM Interface - sysmon]
description = COM interface (EditionUpgradeManager) that is not used by standard executables.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CallTrace="*editionupgrademanagerobj.dll*") | table ComputerName,User,SourceImage,TargetImage,CallTrace | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="Load Undocumented Autoelevated COM Interface" | eval sigma_description="COM interface (EditionUpgradeManager) that is not used by standard executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[Lsass Memory Dump via Comsvcs DLL - sysmon]
description = Detects adversaries leveraging the MiniDump export function from comsvcs.dll via rundll32 to perform a memory dump from lsass.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="C:\\windows\\system32\\lsass.exe" SourceImage="C:\\Windows\\System32\\rundll32.exe" CallTrace="*comsvcs.dll*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Lsass Memory Dump via Comsvcs DLL" | eval sigma_description="Detects adversaries leveraging the MiniDump export function from comsvcs.dll via rundll32 to perform a memory dump from lsass."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dump - sysmon]
description = Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="C:\\windows\\system32\\lsass.exe" GrantedAccess="0x1fffff" (CallTrace="*dbghelp.dll*" OR CallTrace="*dbgcore.dll*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003 attack.s0002" | eval sigma_title="LSASS Memory Dump" | eval sigma_description="Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malware Shellcode in Verclsid Target Process - sysmon]
description = Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\verclsid.exe" GrantedAccess="0x1FFFFF") ((CallTrace="*|UNKNOWN(*" CallTrace="*VBE7.DLL*") OR (SourceImage="*\\Microsoft Office\\*" CallTrace="*|UNKNOWN*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Malware Shellcode in Verclsid Target Process" | eval sigma_description="Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz through Windows Remote Management - sysmon]
description = Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="C:\\windows\\system32\\lsass.exe" SourceImage="C:\\Windows\\system32\\wsmprovhost.exe") | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1003.001 attack.t1003 attack.t1059.001 attack.t1086 attack.lateral_movement attack.t1021.006 attack.t1028 attack.s0002" | eval sigma_title="Mimikatz through Windows Remote Management" | eval sigma_description="Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Leviathan Registry Key Activity - sysmon]
description = Detects registry key used by Leviathan APT in Malaysian focused campaign
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ntkd") | eval sigma_attack_tags="attack.persistence attack.t1060 attack.t1547.001" | eval sigma_title="Leviathan Registry Key Activity" | eval sigma_description="Detects registry key used by Leviathan APT in Malaysian focused campaign"
dispatch.earliest_time = -24h@h
alert.track = 0

[OceanLotus Registry Activity - sysmon]
description = Detects registry keys created in OceanLotus (also known as APT32) attacks
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((TargetObject="HKCR\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model") (TargetObject="*\\SOFTWARE\\App\\AppXbf13d4ea2945444d8b13e2121cb6b663\\Application" OR TargetObject="*\\SOFTWARE\\App\\AppXbf13d4ea2945444d8b13e2121cb6b663\\DefaultIcon" OR TargetObject="*\\SOFTWARE\\App\\AppX70162486c7554f7f80f481985d67586d\\Application" OR TargetObject="*\\SOFTWARE\\App\\AppX70162486c7554f7f80f481985d67586d\\DefaultIcon" OR TargetObject="*\\SOFTWARE\\App\\AppX37cc7fdccd644b4f85f4b22d5a3f105a\\Application" OR TargetObject="*\\SOFTWARE\\App\\AppX37cc7fdccd644b4f85f4b22d5a3f105a\\DefaultIcon")) OR ((TargetObject="HKU\\*") (TargetObject="*_Classes\\AppXc52346ec40fb4061ad96be0e6cb7d16a\\*" OR TargetObject="*_Classes\\AppX3bbba44c6cae4d9695755183472171e2\\*" OR TargetObject="*_Classes\\CLSID\\{E3517E26-8E93-458D-A6DF-8030BC80528B}\\*" OR TargetObject="*_Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="OceanLotus Registry Activity" | eval sigma_description="Detects registry keys created in OceanLotus (also known as APT32) attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Autorun Keys Modification - sysmon]
description = Detects modification of autostart extensibility point (ASEP) in registry.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((((((((((((TargetObject="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStart*" OR TargetObject="*\\Software\\Wow6432Node\\Microsoft\\Command Processor\\Autorun*" OR TargetObject="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components*" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect*" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnConnect*" OR TargetObject="*\\SYSTEM\\Setup\\CmdLine*" OR TargetObject="*\\Software\\Microsoft\\Ctf\\LangBarAddin*" OR TargetObject="*\\Software\\Microsoft\\Command Processor\\Autorun*" OR TargetObject="*\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components*" OR TargetObject="*\\SOFTWARE\\Classes\\Protocols\\Handler*" OR TargetObject="*\\SOFTWARE\\Classes\\Protocols\\Filter*" OR TargetObject="*\\SOFTWARE\\Classes\\Htmlfile\\Shell\\Open\\Command\\(Default)*" OR TargetObject="*\\Environment\\UserInitMprLogonScript*" OR TargetObject="*\\SOFTWARE\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\Scrnsave.exe*" OR TargetObject="*\\Software\\Microsoft\\Internet Explorer\\UrlSearchHooks*" OR TargetObject="*\\SOFTWARE\\Microsoft\\Internet Explorer\\Desktop\\Components*" OR TargetObject="*\\Software\\Classes\\Clsid\\{AB8902B4-09CA-4bb6-B78D-A8F59079A8D5}\\Inprocserver32*" OR TargetObject="*\\Control Panel\\Desktop\\Scrnsave.exe*") OR (TargetObject="*\\System\\CurrentControlSet\\Control\\Session Manager*" (TargetObject="*\\SetupExecute*" OR TargetObject="*\\S0InitialCommand*" OR TargetObject="*\\KnownDlls*" OR TargetObject="*\\Execute*" OR TargetObject="*\\BootExecute*" OR TargetObject="*\\AppCertDlls*"))) OR (TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion*" (TargetObject="*\\ShellServiceObjectDelayLoad*" OR TargetObject="*\\Run*" OR TargetObject="*\\Policies\\System\\Shell*" OR TargetObject="*\\Policies\\Explorer\\Run*" OR TargetObject="*\\Group Policy\\Scripts\\Startup*" OR TargetObject="*\\Group Policy\\Scripts\\Shutdown*" OR TargetObject="*\\Group Policy\\Scripts\\Logon*" OR TargetObject="*\\Group Policy\\Scripts\\Logoff*" OR TargetObject="*\\Explorer\\ShellServiceObjects*" OR TargetObject="*\\Explorer\\ShellIconOverlayIdentifiers*" OR TargetObject="*\\Explorer\\ShellExecuteHooks*" OR TargetObject="*\\Explorer\\SharedTaskScheduler*" OR TargetObject="*\\Explorer\\Browser Helper Objects*" OR TargetObject="*\\Authentication\\PLAP Providers*" OR TargetObject="*\\Authentication\\Credential Providers*" OR TargetObject="*\\Authentication\\Credential Provider Filters*"))) OR (TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion*" (TargetObject="*\\Winlogon\\VmApplet*" OR TargetObject="*\\Winlogon\\Userinit*" OR TargetObject="*\\Winlogon\\Taskman*" OR TargetObject="*\\Winlogon\\Shell*" OR TargetObject="*\\Winlogon\\GpExtensions*" OR TargetObject="*\\Winlogon\\AppSetup*" OR TargetObject="*\\Winlogon\\AlternateShells\\AvailableShells*" OR TargetObject="*\\Windows\\IconServiceLib*" OR TargetObject="*\\Windows\\Appinit_Dlls*" OR TargetObject="*\\Image File Execution Options*" OR TargetObject="*\\Font Drivers*" OR TargetObject="*\\Drivers32*" OR TargetObject="*\\Windows\\Run*" OR TargetObject="*\\Windows\\Load*"))) OR (TargetObject="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion*" (TargetObject="*\\ShellServiceObjectDelayLoad*" OR TargetObject="*\\Run*" OR TargetObject="*\\Explorer\\ShellServiceObjects*" OR TargetObject="*\\Explorer\\ShellIconOverlayIdentifiers*" OR TargetObject="*\\Explorer\\ShellExecuteHooks*" OR TargetObject="*\\Explorer\\SharedTaskScheduler*" OR TargetObject="*\\Explorer\\Browser Helper Objects*"))) OR (TargetObject="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion*" (TargetObject="*\\Windows\\Appinit_Dlls*" OR TargetObject="*\\Image File Execution Options*" OR TargetObject="*\\Drivers32*"))) OR (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*\\Software\\Wow6432Node\\Microsoft\\Office*" OR TargetObject="*\\Software\\Microsoft\\Office*") (TargetObject="*\\Word\\Addins*" OR TargetObject="*\\PowerPoint\\Addins*" OR TargetObject="*\\Outlook\\Addins*" OR TargetObject="*\\Onenote\\Addins*" OR TargetObject="*\\Excel\\Addins*" OR TargetObject="*\\Access\\Addins*" OR TargetObject="*test\\Special\\Perf*"))) OR (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*\\Software\\Wow6432Node\\Microsoft\\Internet Explorer*" OR TargetObject="*\\Software\\Microsoft\\Internet Explorer*") (TargetObject="*\\Toolbar*" OR TargetObject="*\\Extensions*" OR TargetObject="*\\Explorer Bars*"))) OR (TargetObject="*\\Software\\Wow6432Node\\Classes*" (TargetObject="*\\Folder\\ShellEx\\ExtShellFolderViews*" OR TargetObject="*\\Folder\\ShellEx\\DragDropHandlers*" OR TargetObject="*\\Folder\\ShellEx\\ColumnHandlers*" OR TargetObject="*\\Directory\\Shellex\\DragDropHandlers*" OR TargetObject="*\\Directory\\Shellex\\CopyHookHandlers*" OR TargetObject="*\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance*" OR TargetObject="*\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance*" OR TargetObject="*\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance*" OR TargetObject="*\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance*" OR TargetObject="*\\AllFileSystemObjects\\ShellEx\\DragDropHandlers*" OR TargetObject="*\\ShellEx\\PropertySheetHandlers*" OR TargetObject="*\\ShellEx\\ContextMenuHandlers*"))) OR (TargetObject="*\\Software\\Classes*" (TargetObject="*\\Folder\\ShellEx\\ExtShellFolderViews*" OR TargetObject="*\\Folder\\ShellEx\\DragDropHandlers*" OR TargetObject="*\\Folder\\Shellex\\ColumnHandlers*" OR TargetObject="*\\Filter*" OR TargetObject="*\\Exefile\\Shell\\Open\\Command\\(Default)*" OR TargetObject="*\\Directory\\Shellex\\DragDropHandlers*" OR TargetObject="*\\Directory\\Shellex\\CopyHookHandlers*" OR TargetObject="*\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance*" OR TargetObject="*\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance*" OR TargetObject="*\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance*" OR TargetObject="*\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance*" OR TargetObject="*\\Classes\\AllFileSystemObjects\\ShellEx\\DragDropHandlers*" OR TargetObject="*\\.exe*" OR TargetObject="*\\.cmd*" OR TargetObject="*\\ShellEx\\PropertySheetHandlers*" OR TargetObject="*\\ShellEx\\ContextMenuHandlers*"))) OR (TargetObject="*\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts*" (TargetObject="*\\Startup*" OR TargetObject="*\\Shutdown*" OR TargetObject="*\\Logon*" OR TargetObject="*\\Logoff*"))) OR (TargetObject="*\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters*" (TargetObject="*\\Protocol_Catalog9\\Catalog_Entries*" OR TargetObject="*\\NameSpace_Catalog5\\Catalog_Entries*"))) OR (TargetObject="*\\SYSTEM\\CurrentControlSet\\Control*" (TargetObject="*\\Terminal Server\\WinStations\\RDP-Tcp\\InitialProgram*" OR TargetObject="*\\Terminal Server\\Wds\\rdpwd\\StartupPrograms*" OR TargetObject="*\\SecurityProviders\\SecurityProviders*" OR TargetObject="*\\SafeBoot\\AlternateShell*" OR TargetObject="*\\Print\\Providers*" OR TargetObject="*\\Print\\Monitors*" OR TargetObject="*\\NetworkProvider\\Order*" OR TargetObject="*\\Lsa\\Notification Packages*" OR TargetObject="*\\Lsa\\Authentication Packages*" OR TargetObject="*\\BootVerificationProgram\\ImagePath*")))) | table SecurityID,ObjectName,OldValueType,NewValueType | eval sigma_attack_tags="attack.persistence attack.t1547.001 attack.t1060" | eval sigma_title="Autorun Keys Modification" | eval sigma_description="Detects modification of autostart extensibility point (ASEP) in registry."
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Via Wsreset - sysmon]
description = Unfixed method for UAC bypass from windows 10. WSReset.exe file associated with the Windows Store. It will run a binary file contained in a low-privilege registry.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command")) | table ComputerName,Image,EventType,TargetObject | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Via Wsreset" | eval sigma_description="Unfixed method for UAC bypass from windows 10. WSReset.exe file associated with the Windows Store. It will run a binary file contained in a low-privilege registry."
dispatch.earliest_time = -24h@h
alert.track = 0

[COM Hijack via Sdclt - sysmon]
description = Detects changes to 'HKCU\Software\Classes\Folder\shell\open\command\DelegateExecute'
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="HKCU\\Software\\Classes\\Folder\\shell\\open\\command\\DelegateExecute")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1546 attack.t1548" | eval sigma_title="COM Hijack via Sdclt" | eval sigma_description="Detects changes to 'HKCU\Software\Classes\Folder\shell\open\command\DelegateExecute'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious New Printer Ports in Registry (CVE-2020-1048) - sysmon]
description = Detects a new and suspicious printer port creation in Registry that could be an attempt to exploit CVE-2020-1048
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Ports*" (Details="*.dll*" OR Details="*.exe*" OR Details="*.bat*" OR Details="*.com*" OR Details="*C:*")) | eval sigma_attack_tags="attack.persistence attack.execution attack.defense_evasion attack.t1112" | eval sigma_title="Suspicious New Printer Ports in Registry (CVE-2020-1048)" | eval sigma_description="Detects a new and suspicious printer port creation in Registry that could be an attempt to exploit CVE-2020-1048"
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Callout DLL Installation - sysmon]
description = Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\Services\\DHCPServer\\Parameters\\CalloutDlls" OR TargetObject="*\\Services\\DHCPServer\\Parameters\\CalloutEnabled")) | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002 attack.t1112" | eval sigma_title="DHCP Callout DLL Installation" | eval sigma_description="Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable Security Events Logging Adding Reg Key MiniNt - sysmon]
description = Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetObject="HKLM\\SYSTEM\\CurrentControlSet\\Control\\MiniNt" EventType="CreateKey") OR NewName="HKLM\\SYSTEM\\CurrentControlSet\\Control\\MiniNt")) | table EventCode,Image,TargetObject,NewName | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.001 attack.t1112" | eval sigma_title="Disable Security Events Logging Adding Reg Key MiniNt" | eval sigma_description="Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events."
dispatch.earliest_time = -24h@h
alert.track = 0

[Wdigest CredGuard Registry Modification - sysmon]
description = Detects potential malicious modification of the property value of IsCredGuardEnabled from HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest to disable Cred Guard on a system. This is usually used with UseLogonCredential to manipulate the caching credentials.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*\\IsCredGuardEnabled") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Wdigest CredGuard Registry Modification" | eval sigma_description="Detects potential malicious modification of the property value of IsCredGuardEnabled from HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest to disable Cred Guard on a system. This is usually used with UseLogonCredential to manipulate the caching credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Enabling COR Profiler Environment Variables - sysmon]
description = This rule detects cor_enable_profiling and cor_profiler environment variables being set and configured.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\COR_ENABLE_PROFILING" OR TargetObject="*\\COR_PROFILER")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.defense_evasion attack.t1574.012" | eval sigma_title="Enabling COR Profiler Environment Variables" | eval sigma_description="This rule detects cor_enable_profiling and cor_profiler environment variables being set and configured."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Registry Modification - sysmon]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*SOFTWARE\\Microsoft\\.NETFramework\\ETWEnabled" Details="DWORD (0x00000000)") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="COMPlus_ETWEnabled Registry Modification" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Credential Editor Registry - sysmon]
description = Detects the use of Windows Credential Editor (WCE)
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*Services\\WCESERVICE\\Start*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001 attack.s0005" | eval sigma_title="Windows Credential Editor Registry" | eval sigma_description="Detects the use of Windows Credential Editor (WCE)"
dispatch.earliest_time = -24h@h
alert.track = 0

[HybridConnectionManager Service Installation - sysmon]
description = Detects the installation of the Azure Hybrid Connection Manager service to allow remote code execution from Azure function.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*\\Services\\HybridConnectionManager*" OR Details="*Microsoft.HybridConnectionManager.Listener.exe*")) | eval sigma_attack_tags="attack.persistence" | eval sigma_title="HybridConnectionManager Service Installation" | eval sigma_description="Detects the installation of the Azure Hybrid Connection Manager service to allow remote code execution from Azure function."
dispatch.earliest_time = -24h@h
alert.track = 0

[Logon Scripts (UserInitMprLogonScript) Registry - sysmon]
description = Detects creation or execution of UserInitMprLogonScript persistence method
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*UserInitMprLogonScript*") | eval sigma_attack_tags="attack.t1037 attack.t1037.001 attack.persistence attack.lateral_movement" | eval sigma_title="Logon Scripts (UserInitMprLogonScript) Registry" | eval sigma_description="Detects creation or execution of UserInitMprLogonScript persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Path To Screensaver Binary Modified - sysmon]
description = Detects value modification of registry key containing path to binary used as screensaver.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetObject="*\\Control Panel\\Desktop\\SCRNSAVE.EXE" NOT ((Image="*\\rundll32.exe" OR Image="*\\explorer.exe"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.002" | eval sigma_title="Path To Screensaver Binary Modified" | eval sigma_description="Detects value modification of registry key containing path to binary used as screensaver."
dispatch.earliest_time = -24h@h
alert.track = 0

[Narrator's Feedback-Hub Persistence - sysmon]
description = Detects abusing Windows 10 Narrator's Feedback-Hub
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventType="DeleteValue" TargetObject="*\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\DelegateExecute") OR TargetObject="*\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\(Default)")) | eval sigma_attack_tags="attack.persistence attack.t1060 attack.t1547.001" | eval sigma_title="Narrator's Feedback-Hub Persistence" | eval sigma_description="Detects abusing Windows 10 Narrator's Feedback-Hub"
dispatch.earliest_time = -24h@h
alert.track = 0

[New Application in AppCompat - sysmon]
description = A General detection for a new application in AppCompat. This indicates an application executing for the first time on an endpoint.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*\\AppCompatFlags\\Compatibility Assistant\\Store\\*") | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="New Application in AppCompat" | eval sigma_description="A General detection for a new application in AppCompat. This indicates an application executing for the first time on an endpoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[New DLL Added to AppCertDlls Registry Key - sysmon]
description = Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls" OR NewName="HKLM\\SYSTEM\\CurentControlSet\\Control\\Session Manager\\AppCertDlls")) | table EventCode,Image,TargetObject,NewName | eval sigma_attack_tags="attack.persistence attack.t1182 attack.t1546.009" | eval sigma_title="New DLL Added to AppCertDlls Registry Key" | eval sigma_description="Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer."
dispatch.earliest_time = -24h@h
alert.track = 0

[New DLL Added to AppInit_DLLs Registry Key - sysmon]
description = DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls" OR TargetObject="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls") OR (NewName="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls" OR NewName="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls"))) | table EventCode,Image,TargetObject,NewName | eval sigma_attack_tags="attack.persistence attack.t1103 attack.t1546.010" | eval sigma_title="New DLL Added to AppInit_DLLs Registry Key" | eval sigma_description="DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Application Startup - Office Test - sysmon]
description = Detects the addition of office test registry that allows a user to specify an arbitrary DLL that will be executed everytime an Office application is started
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf" OR TargetObject="HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf")) | eval sigma_attack_tags="attack.persistence attack.t1137.002" | eval sigma_title="Office Application Startup - Office Test" | eval sigma_description="Detects the addition of office test registry that allows a user to specify an arbitrary DLL that will be executed everytime an Office application is started"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stealthy VSTO Persistence - sysmon]
description = Detects persistence via Visual Studio Tools for Office (VSTO) add-ins in Office applications.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\Software\\Microsoft\\Office\\Outlook\\Addins\\*" OR TargetObject="*\\Software\\Microsoft\\Office\\Word\\Addins\\*" OR TargetObject="*\\Software\\Microsoft\\Office\\Excel\\Addins\\*" OR TargetObject="*\\Software\\Microsoft\\Office\\Powerpoint\\Addins\\*" OR TargetObject="*\\Software\\Microsoft\\VSTO\\Security\\Inclusion\\*")) | eval sigma_attack_tags="attack.t1137.006 attack.persistence" | eval sigma_title="Stealthy VSTO Persistence" | eval sigma_description="Detects persistence via Visual Studio Tools for Office (VSTO) add-ins in Office applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Service Permissions Weakness - sysmon]
description = Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") IntegrityLevel="Medium" TargetObject="*\\services\\*" (TargetObject="*\\ImagePath" OR TargetObject="*\\FailureCommand" OR TargetObject="*\\Parameters\\ServiceDll")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1058 attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Service Permissions Weakness" | eval sigma_description="Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell as a Service in Registry - sysmon]
description = Detects that a powershell code is written to the registry as a service.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*\\Services\\*" TargetObject="*\\ImagePath" (Details="*powershell*" OR Details="*pwsh*")) | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="PowerShell as a Service in Registry" | eval sigma_description="Detects that a powershell code is written to the registry as a service."
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Registry Modification - sysmon]
description = Detects potential malicious modification of the property value of fDenyTSConnections and UserAuthentication to enable remote desktop connections.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\UserAuthentication" OR TargetObject="*\\CurrentControlSet\\Control\\Terminal Server\\fDenyTSConnections") Details="DWORD (0x00000000)") | table ComputerName,Image,EventType,TargetObject | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="RDP Registry Modification" | eval sigma_description="Detects potential malicious modification of the property value of fDenyTSConnections and UserAuthentication to enable remote desktop connections."
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Sensitive Settings Changed - sysmon]
description = Detects changes to RDP terminal service sensitive settings
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\services\\TermService\\Parameters\\ServiceDll*" OR TargetObject="*\\Control\\Terminal Server\\fSingleSessionPerUser*" OR TargetObject="*\\Control\\Terminal Server\\fDenyTSConnections*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="RDP Sensitive Settings Changed" | eval sigma_description="Detects changes to RDP terminal service sensitive settings"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Registry Manipulation - sysmon]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*HKLM\\SOFTWARE\\Microsoft\\HTMLHelp\\data*") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="RedMimicry Winnti Playbook Registry Manipulation" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Security Settings Changed - sysmon]
description = Detects registry changes to Office macro settings
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\Security\\Trusted Documents\\TrustRecords" OR TargetObject="*\\Security\\AccessVBOM" OR TargetObject="*\\Security\\VBAWarnings")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Office Security Settings Changed" | eval sigma_description="Detects registry changes to Office macro settings"
dispatch.earliest_time = -24h@h
alert.track = 0

[SilentProcessExit Monitor Registrytion for LSASS - sysmon]
description = Detects changes to the Registry in which a monitor program gets registered to dump process memory of the lsass.exe process memory
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\lsass.exe*") | eval sigma_attack_tags="attack.credential_access attack.t1003.007" | eval sigma_title="SilentProcessExit Monitor Registrytion for LSASS" | eval sigma_description="Detects changes to the Registry in which a monitor program gets registered to dump process memory of the lsass.exe process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[SilentProcessExit Monitor Registrytion - sysmon]
description = Detects changes to the Registry in which a monitor program gets registered to monitor the exit of another process
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit*" Details="*MonitorProcess*") | eval sigma_attack_tags="attack.persistence attack.t1546.012" | eval sigma_title="SilentProcessExit Monitor Registrytion" | eval sigma_description="Detects changes to the Registry in which a monitor program gets registered to monitor the exit of another process"
dispatch.earliest_time = -24h@h
alert.track = 0

[VBScript Payload Stored in Registry - sysmon]
description = Detects VBScript content stored into registry keys as seen being used by UNC2452 group
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*Software\\Microsoft\\Windows\\CurrentVersion*" (Details="*vbscript*" OR Details="*jscript*" OR Details="*mshtml*" OR Details="*mshtml,*" OR Details="*mshtml *" OR Details="*RunHTMLApplication*" OR Details="*Execute(*" OR Details="*CreateObject*" OR Details="*RegRead*" OR Details="*window.close*")) NOT (TargetObject="*Software\\Microsoft\\Windows\\CurrentVersion\\Run*")) | eval sigma_attack_tags="" | eval sigma_title="VBScript Payload Stored in Registry" | eval sigma_description="Detects VBScript content stored into registry keys as seen being used by UNC2452 group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Registry Persistence COM Key Linking - sysmon]
description = Detects COM object hijacking via TreatAs subkey
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventType="CreateKey" TargetObject="*HKU\\*" TargetObject="*_Classes\\CLSID\\*" TargetObject="*\\TreatAs*") | eval sigma_attack_tags="attack.persistence attack.t1122" | eval sigma_title="Windows Registry Persistence COM Key Linking" | eval sigma_description="Detects COM object hijacking via TreatAs subkey"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Registry Persistence COM Search Order Hijacking - sysmon]
description = Detects potential COM object hijacking leveraging the COM Search Order
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*HKU\\*" TargetObject="*_Classes\\CLSID\\*" TargetObject="*\\InProcServer32\\(Default)*") NOT ((Details="*%%systemroot%%\\system32\\*" OR Details="*%%systemroot%%\\SysWow64\\*") OR Details="*\\AppData\\Local\\Microsoft\\OneDrive\\*" Details="*\\FileCoAuthLib64.dll*" OR Details="*\\AppData\\Local\\Microsoft\\OneDrive\\*" Details="*\\FileSyncShell64.dll*" OR Details="*\\AppData\\Local\\Microsoft\\TeamsMeetingAddin\\*" Details="*\\Microsoft.Teams.AddinLoader.dll*")) | eval sigma_attack_tags="attack.persistence attack.t1038 attack.t1574.001" | eval sigma_title="Windows Registry Persistence COM Search Order Hijacking" | eval sigma_description="Detects potential COM object hijacking leveraging the COM Search Order"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Registry Trust Record Modification - sysmon]
description = Alerts on trust record modification within the registry, indicating usage of macros
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*TrustRecords*") | eval sigma_attack_tags="attack.initial_access attack.t1193 attack.t1566.001" | eval sigma_title="Windows Registry Trust Record Modification" | eval sigma_description="Alerts on trust record modification within the registry, indicating usage of macros"
dispatch.earliest_time = -24h@h
alert.track = 0

[Removal of Potential COM Hijacking Registry Keys - sysmon]
description = A General detection to trigger for processes removing .*\shell\open\command registry keys. Registry keys that might have been used for COM hijacking activities.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventType="DeleteKey" TargetObject="*\\shell\\open\\command") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Removal of Potential COM Hijacking Registry Keys" | eval sigma_description="A General detection to trigger for processes removing .*\shell\open\command registry keys. Registry keys that might have been used for COM hijacking activities."
dispatch.earliest_time = -24h@h
alert.track = 0

[WINEKEY Registry Modification - sysmon]
description = Detects potential malicious modification of run keys by winekey or team9 backdoor
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Backup Mgr")) | table ComputerName,Image,EventType,TargetObject | eval sigma_attack_tags="attack.persistence attack.t1547" | eval sigma_title="WINEKEY Registry Modification" | eval sigma_description="Detects potential malicious modification of run keys by winekey or team9 backdoor"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Once Task Configuration in Registry - sysmon]
description = Rule to detect the configuration of Run Once registry key. Configured payload can be run by runonce.exe /AlternateShellStartup
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components*" TargetObject="*\\StubPath") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Run Once Task Configuration in Registry" | eval sigma_description="Rule to detect the configuration of Run Once registry key. Configured payload can be run by runonce.exe /AlternateShellStartup"
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Support Provider (SSP) Added to LSA Configuration - sysmon]
description = Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages" OR TargetObject="HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages") NOT (Image="C:\\Windows\\system32\\msiexec.exe" OR Image="C:\\Windows\\syswow64\\MsiExec.exe")) | eval sigma_attack_tags="attack.persistence attack.t1101 attack.t1547.005" | eval sigma_title="Security Support Provider (SSP) Added to LSA Configuration" | eval sigma_description="Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows."
dispatch.earliest_time = -24h@h
alert.track = 0

[Atbroker Registry Change - sysmon]
description = Detects creation/modification of Assisitive Technology applications and persistance with usage of ATs
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\ATs*" OR TargetObject="*Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\Configuration*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.persistence attack.t1547" | eval sigma_title="Atbroker Registry Change" | eval sigma_description="Detects creation/modification of Assisitive Technology applications and persistance with usage of ATs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Run Key from Download - sysmon]
description = Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\Downloads\\*" OR Image="*\\Temporary Internet Files\\Content.Outlook\\*" OR Image="*\\Local Settings\\Temporary Internet Files\\*") TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\*") | eval sigma_attack_tags="attack.persistence attack.t1060 attack.t1547.001" | eval sigma_title="Suspicious Run Key from Download" | eval sigma_description="Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Load via LSASS - sysmon]
description = Detects a method to load DLL via LSASS process using an undocumented Registry key
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt*" OR TargetObject="*\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt*")) | eval sigma_attack_tags="attack.execution attack.persistence attack.t1177 attack.t1547.008" | eval sigma_title="DLL Load via LSASS" | eval sigma_description="Detects a method to load DLL via LSASS process using an undocumented Registry key"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Camera and Microphone Access - sysmon]
description = Detects Processes accessing the camera and microphone from suspicious folder
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*\\Software\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\*" TargetObject="*\\NonPackaged*" (TargetObject="*microphone*" OR TargetObject="*webcam*") (TargetObject="*#C:#Windows#Temp#*" OR TargetObject="*#C:#$Recycle.bin#*" OR TargetObject="*#C:#Temp#*" OR TargetObject="*#C:#Users#Public#*" OR TargetObject="*#C:#Users#Default#*" OR TargetObject="*#C:#Users#Desktop#*")) | eval sigma_attack_tags="attack.collection attack.t1125 attack.t1123" | eval sigma_title="Suspicious Camera and Microphone Access" | eval sigma_description="Detects Processes accessing the camera and microphone from suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Persistence via Explorer Run Key - sysmon]
description = Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetObject="*\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run" ((Details="C:\\Windows\\Temp\\*" OR Details="C:\\ProgramData\\*" OR Details="C:\\$Recycle.bin\\*" OR Details="C:\\Temp\\*" OR Details="C:\\Users\\Public\\*" OR Details="C:\\Users\\Default\\*") OR (Details="*\\AppData\\*"))) | table Image,ParentImage | eval sigma_attack_tags="attack.persistence attack.t1060 attack.t1547.001 capec.270" | eval sigma_title="Registry Persistence via Explorer Run Key" | eval sigma_description="Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[New RUN Key Pointing to Suspicious Folder - sysmon]
description = Detects suspicious new RUN key element pointing to an executable in a suspicious folder
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\*" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*") ((Details="*C:\\Windows\\Temp\\*" OR Details="*C:\\$Recycle.bin\\*" OR Details="*C:\\Temp\\*" OR Details="*C:\\Users\\Public\\*" OR Details="*C:\\Users\\Default\\*" OR Details="*C:\\Users\\Desktop\\*") OR (Details="%Public%\\*" OR Details="wscript*" OR Details="cscript*"))) | table Image | eval sigma_attack_tags="attack.persistence attack.t1060 attack.t1547.001" | eval sigma_title="New RUN Key Pointing to Suspicious Folder" | eval sigma_description="Detects suspicious new RUN key element pointing to an executable in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Installed - sysmon]
description = Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders. Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetObject="HKLM\\System\\CurrentControlSet\\Services\\NalDrv\\ImagePath" OR TargetObject="HKLM\\System\\CurrentControlSet\\Services\\PROCEXP152\\ImagePath") NOT ((Image="*\\procexp64.exe" OR Image="*\\procexp.exe" OR Image="*\\procmon64.exe" OR Image="*\\procmon.exe"))) NOT ((Details="*\\WINDOWS\\system32\\Drivers\\PROCEXP152.SYS*"))) | eval sigma_attack_tags="attack.t1089 attack.t1562.001 attack.defense_evasion" | eval sigma_title="Suspicious Service Installed" | eval sigma_description="Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders. Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Keyboard Layout Load - sysmon]
description = Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetObject="*\\Keyboard Layout\\Preload\\*" OR TargetObject="*\\Keyboard Layout\\Substitutes\\*") (Details="*00000429*" OR Details="*00050429*" OR Details="*0000042a*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Keyboard Layout Load" | eval sigma_description="Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysinternals SDelete Registry Keys - sysmon]
description = A General detection to trigger for the creation or modification of .*\Software\Sysinternals\SDelete registry keys. Indicators of the use of Sysinternals SDelete tool.
search = index=sysmon* TargetObject="*\\Software\\Sysinternals\\SDelete*" | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Sysinternals SDelete Registry Keys" | eval sigma_description="A General detection to trigger for the creation or modification of .*\Software\Sysinternals\SDelete registry keys. Indicators of the use of Sysinternals SDelete tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass via Sdclt - sysmon]
description = Detects changes to HKCU:\Software\Classes\exefile\shell\runas\command\isolatedCommand
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="HKU\\*" TargetObject="*_Classes\\exefile\\shell\\runas\\command\\isolatedCommand") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1088 attack.t1548.002 car.2019-04-001" | eval sigma_title="UAC Bypass via Sdclt" | eval sigma_description="Detects changes to HKCU:\Software\Classes\exefile\shell\runas\command\isolatedCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Volume Shadow Copy Service Keys - sysmon]
description = Detects the volume shadow copy service initialization and processing. Registry keys such as HKLM\\System\\CurrentControlSet\\Services\\VSS\\Diag\\VolSnap\\Volume are captured.
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*System\\CurrentControlSet\\Services\\VSS*") | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="Volume Shadow Copy Service Keys" | eval sigma_description="Detects the volume shadow copy service initialization and processing. Registry keys such as HKLM\\System\\CurrentControlSet\\Services\\VSS\\Diag\\VolSnap\\Volume are captured."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution DLL of Choice Using WAB.EXE - sysmon]
description = This rule detects that the path to the DLL written in the registry is different from the default one. Launched WAB.exe tries to load the DLL from Registry.
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetObject="*\\Software\\Microsoft\\WAB\\DLLPath" NOT (Details="%CommonProgramFiles%\\System\\wab32.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Execution DLL of Choice Using WAB.EXE" | eval sigma_description="This rule detects that the path to the DLL written in the registry is different from the default one. Launched WAB.exe tries to load the DLL from Registry."
dispatch.earliest_time = -24h@h
alert.track = 0

[Wdigest Enable UseLogonCredential - sysmon]
description = Detects potential malicious modification of the property value of UseLogonCredential from HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest to enable clear-text credentials
search = index=sysmon* ((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetObject="*WDigest\\UseLogonCredential") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Wdigest Enable UseLogonCredential" | eval sigma_description="Detects potential malicious modification of the property value of UseLogonCredential from HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest to enable clear-text credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Persistence Mechanisms - sysmon]
description = Detects persistence registry keys
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion*") ((TargetObject="*\\Image File Execution Options\\*" TargetObject="*\\GlobalFlag*") OR (TargetObject="*SilentProcessExit\\*" TargetObject="*\\ReportingMode*") OR (TargetObject="*SilentProcessExit\\*" TargetObject="*\\MonitorProcess*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.defense_evasion attack.t1183 attack.t1546.012 car.2013-01-002" | eval sigma_title="Registry Persistence Mechanisms" | eval sigma_description="Detects persistence registry keys"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Persistence Mechanism via Windows Telemetry - sysmon]
description = Detects persistence method using windows telemetry
search = index=sysmon* (((EventCode="12" OR EventCode="13" OR EventCode="14") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\TelemetryController\\*" TargetObject="*\\Command*" Details="*.exe*") NOT ((Details="*\\system32\\CompatTelRunner.exe*" OR Details="*\\system32\\DeviceCensus.exe*"))) | eval sigma_attack_tags="attack.persistence attack.t1053.005" | eval sigma_title="Registry Persistence Mechanism via Windows Telemetry" | eval sigma_description="Detects persistence method using windows telemetry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN - winevent]
description = dotnet.exe will execute any DLL and execute unsigned code
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*.dll" OR Process_Command_Line="*.csproj") (New_Process_Name="*\\dotnet.exe")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN" | eval sigma_description="dotnet.exe will execute any DLL and execute unsigned code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN - sysmon]
description = dotnet.exe will execute any DLL and execute unsigned code
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*.dll" OR CommandLine="*.csproj") (Image="*\\dotnet.exe")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN" | eval sigma_description="dotnet.exe will execute any DLL and execute unsigned code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Files with Msdeploy.exe - winevent]
description = Detects file execution using the msdeploy.exe lolbin
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*verb:sync*" Process_Command_Line="*-source:RunCommand*" Process_Command_Line="*-dest:runCommand*" (New_Process_Name="*\\msdeploy.exe")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execute Files with Msdeploy.exe" | eval sigma_description="Detects file execution using the msdeploy.exe lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Files with Msdeploy.exe - sysmon]
description = Detects file execution using the msdeploy.exe lolbin
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*verb:sync*" CommandLine="*-source:RunCommand*" CommandLine="*-dest:runCommand*" (Image="*\\msdeploy.exe")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execute Files with Msdeploy.exe" | eval sigma_description="Detects file execution using the msdeploy.exe lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abused Debug Privilege by Arbitrary Parent Processes - winevent]
description = Detection of unusual child processes by different system processes
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\winlogon.exe" OR Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\lsass.exe" OR Creator_Process_Name="*\\csrss.exe" OR Creator_Process_Name="*\\smss.exe" OR Creator_Process_Name="*\\wininit.exe" OR Creator_Process_Name="*\\spoolsv.exe" OR Creator_Process_Name="*\\searchindexer.exe") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\cmd.exe") Account_Name="NT AUTHORITY\\SYSTEM") NOT (Process_Command_Line="* route *" Process_Command_Line="* ADD *")) | table Creator_Process_Name,New_Process_Name,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Abused Debug Privilege by Arbitrary Parent Processes" | eval sigma_description="Detection of unusual child processes by different system processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abused Debug Privilege by Arbitrary Parent Processes - sysmon]
description = Detection of unusual child processes by different system processes
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\winlogon.exe" OR ParentImage="*\\services.exe" OR ParentImage="*\\lsass.exe" OR ParentImage="*\\csrss.exe" OR ParentImage="*\\smss.exe" OR ParentImage="*\\wininit.exe" OR ParentImage="*\\spoolsv.exe" OR ParentImage="*\\searchindexer.exe") (Image="*\\powershell.exe" OR Image="*\\cmd.exe") User="NT AUTHORITY\\SYSTEM") NOT (CommandLine="* route *" CommandLine="* ADD *")) | table ParentImage,Image,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Abused Debug Privilege by Arbitrary Parent Processes" | eval sigma_description="Detection of unusual child processes by different system processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Accesschk Usage After Privilege Escalation - winevent]
description = Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify if a privilege escalation process succesfull or not
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") IntegrityLevel="Medium" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="*AccessChk" OR Description="*Reports effective permissions*")) | table IntegrityLevel,Product,Description | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Accesschk Usage After Privilege Escalation" | eval sigma_description="Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify if a privilege escalation process succesfull or not"
dispatch.earliest_time = -24h@h
alert.track = 0

[Accesschk Usage After Privilege Escalation - sysmon]
description = Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify if a privilege escalation process succesfull or not
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") IntegrityLevel="Medium" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="*AccessChk" OR Description="*Reports effective permissions*")) | table IntegrityLevel,Product,Description | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Accesschk Usage After Privilege Escalation" | eval sigma_description="Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify if a privilege escalation process succesfull or not"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSI Spawned Cmd and Powershell Spawned Processes - winevent]
description = This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell that spawned other processes
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\cmd.exe" OR Creator_Process_Name="*\\powershell.exe") ParentOfParentImage="*\\Windows\\Installer\\*" ParentOfParentImage="*msi*" (ParentOfParentImage="*tmp")) | table Creator_Process_Name,ParentOfParentImage | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="MSI Spawned Cmd and Powershell Spawned Processes" | eval sigma_description="This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell that spawned other processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSI Spawned Cmd and Powershell Spawned Processes - sysmon]
description = This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell that spawned other processes
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\cmd.exe" OR ParentImage="*\\powershell.exe") ParentOfParentImage="*\\Windows\\Installer\\*" ParentOfParentImage="*msi*" (ParentOfParentImage="*tmp")) | table ParentImage,ParentOfParentImage | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="MSI Spawned Cmd and Powershell Spawned Processes" | eval sigma_description="This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell that spawned other processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated MSI Spawned Cmd And Powershell - winevent]
description = This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe") Creator_Process_Name="*\\Windows\\Installer\\*" Creator_Process_Name="*msi*" (Creator_Process_Name="*tmp")) | table New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated MSI Spawned Cmd And Powershell" | eval sigma_description="This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated MSI Spawned Cmd And Powershell - sysmon]
description = This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\cmd.exe" OR Image="*\\powershell.exe") ParentImage="*\\Windows\\Installer\\*" ParentImage="*msi*" (ParentImage="*tmp")) | table Image,ParentImage | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated MSI Spawned Cmd And Powershell" | eval sigma_description="This rule will looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated Windows Installer - winevent]
description = This rule will looks for Windows Installer service (msiexec.exe) when it tries to install MSI packages with SYSTEM privilege
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" ((New_Process_Name="*\\Windows\\Installer\\*" New_Process_Name="*msi*" (New_Process_Name="*tmp")) OR ((New_Process_Name="*\\msiexec.exe") IntegrityLevel="System"))) | table IntegrityLevel,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated Windows Installer" | eval sigma_description="This rule will looks for Windows Installer service (msiexec.exe) when it tries to install MSI packages with SYSTEM privilege"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated Windows Installer - sysmon]
description = This rule will looks for Windows Installer service (msiexec.exe) when it tries to install MSI packages with SYSTEM privilege
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" ((Image="*\\Windows\\Installer\\*" Image="*msi*" (Image="*tmp")) OR ((Image="*\\msiexec.exe") IntegrityLevel="System"))) | table IntegrityLevel,User,Image | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated Windows Installer" | eval sigma_description="This rule will looks for Windows Installer service (msiexec.exe) when it tries to install MSI packages with SYSTEM privilege"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Tunnel Technique from MuddyWater - winevent]
description = Detecting DNS tunnel activity for Muddywater actor
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe") (Creator_Process_Name="*\\excel.exe") (Process_Command_Line="*DataExchange.dll*")) | eval sigma_attack_tags="attack.command_and_control attack.t1071 attack.t1071.004" | eval sigma_title="DNS Tunnel Technique from MuddyWater" | eval sigma_description="Detecting DNS tunnel activity for Muddywater actor"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Tunnel Technique from MuddyWater - sysmon]
description = Detecting DNS tunnel activity for Muddywater actor
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe") (ParentImage="*\\excel.exe") (CommandLine="*DataExchange.dll*")) | eval sigma_attack_tags="attack.command_and_control attack.t1071 attack.t1071.004" | eval sigma_title="DNS Tunnel Technique from MuddyWater" | eval sigma_description="Detecting DNS tunnel activity for Muddywater actor"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP Execution Process Creation - winevent]
description = Detects various indicators of Microsoft Connection Manager Profile Installer execution
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\cmstp.exe") | table Process_Command_Line,ParentCommandLine,NewValue | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1191 attack.t1218.003 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP Execution Process Creation" | eval sigma_description="Detects various indicators of Microsoft Connection Manager Profile Installer execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP Execution Process Creation - sysmon]
description = Detects various indicators of Microsoft Connection Manager Profile Installer execution
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\cmstp.exe") | table CommandLine,ParentCommandLine,Details | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1191 attack.t1218.003 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP Execution Process Creation" | eval sigma_description="Detects various indicators of Microsoft Connection Manager Profile Installer execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-26857 Exchange Exploitation - winevent]
description = Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server’s Unified Messaging service
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*UMWorkerProcess.exe" NOT ((New_Process_Name="*wermgr.exe" OR New_Process_Name="*WerFault.exe"))) | eval sigma_attack_tags="attack.t1203 attack.execution cve.2021-26857" | eval sigma_title="CVE-2021-26857 Exchange Exploitation" | eval sigma_description="Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server’s Unified Messaging service"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-26857 Exchange Exploitation - sysmon]
description = Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server’s Unified Messaging service
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*UMWorkerProcess.exe" NOT ((Image="*wermgr.exe" OR Image="*WerFault.exe"))) | eval sigma_attack_tags="attack.t1203 attack.execution cve.2021-26857" | eval sigma_title="CVE-2021-26857 Exchange Exploitation" | eval sigma_description="Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server’s Unified Messaging service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Credential Editor - winevent]
description = Detects the use of Windows Credential Editor (WCE)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Imphash="a53a02b997935fd8eedcb5f7abab9b9f" OR Imphash="e96a73c7bf33a464c510ede582318bf2") OR (Process_Command_Line="*.exe -S" Creator_Process_Name="*\\services.exe"))) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001 attack.s0005" | eval sigma_title="Windows Credential Editor" | eval sigma_description="Detects the use of Windows Credential Editor (WCE)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Credential Editor - sysmon]
description = Detects the use of Windows Credential Editor (WCE)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Imphash="a53a02b997935fd8eedcb5f7abab9b9f" OR Imphash="e96a73c7bf33a464c510ede582318bf2") OR (CommandLine="*.exe -S" ParentImage="*\\services.exe"))) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001 attack.s0005" | eval sigma_title="Windows Credential Editor" | eval sigma_description="Detects the use of Windows Credential Editor (WCE)"
dispatch.earliest_time = -24h@h
alert.track = 0

[High Integrity Sdclt Process - winevent]
description = A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*sdclt.exe" IntegrityLevel="High") | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002" | eval sigma_title="High Integrity Sdclt Process" | eval sigma_description="A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[High Integrity Sdclt Process - sysmon]
description = A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*sdclt.exe" IntegrityLevel="High") | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002" | eval sigma_title="High Integrity Sdclt Process" | eval sigma_description="A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[Logon Scripts (UserInitMprLogonScript) - winevent]
description = Detects creation or execution of UserInitMprLogonScript persistence method
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\userinit.exe" NOT (New_Process_Name="*\\explorer.exe")) NOT ((Process_Command_Line="*netlogon.bat*" OR Process_Command_Line="*UsrLogon.cmd*"))) OR Process_Command_Line="*UserInitMprLogonScript*")) | eval sigma_attack_tags="attack.t1037 attack.t1037.001 attack.persistence" | eval sigma_title="Logon Scripts (UserInitMprLogonScript)" | eval sigma_description="Detects creation or execution of UserInitMprLogonScript persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Logon Scripts (UserInitMprLogonScript) - sysmon]
description = Detects creation or execution of UserInitMprLogonScript persistence method
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\userinit.exe" NOT (Image="*\\explorer.exe")) NOT ((CommandLine="*netlogon.bat*" OR CommandLine="*UsrLogon.cmd*"))) OR CommandLine="*UserInitMprLogonScript*")) | eval sigma_attack_tags="attack.t1037 attack.t1037.001 attack.persistence" | eval sigma_title="Logon Scripts (UserInitMprLogonScript)" | eval sigma_description="Detects creation or execution of UserInitMprLogonScript persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution via Wuauclt - winevent]
description = Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*wuauclt*" OR OriginalFileName="wuauclt.exe") (Process_Command_Line="*UpdateDeploymentProvider*" Process_Command_Line="*.dll*" Process_Command_Line="*RunHandlerComServer*")) NOT (Process_Command_Line="* /UpdateDeploymentProvider UpdateDeploymentProvider.dll *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Proxy Execution via Wuauclt" | eval sigma_description="Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution via Wuauclt - sysmon]
description = Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*wuauclt*" OR OriginalFileName="wuauclt.exe") (CommandLine="*UpdateDeploymentProvider*" CommandLine="*.dll*" CommandLine="*RunHandlerComServer*")) NOT (CommandLine="* /UpdateDeploymentProvider UpdateDeploymentProvider.dll *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Proxy Execution via Wuauclt" | eval sigma_description="Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sdclt Child Processes - winevent]
description = A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sdclt.exe") | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Sdclt Child Processes" | eval sigma_description="A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sdclt Child Processes - sysmon]
description = A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sdclt.exe") | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Sdclt Child Processes" | eval sigma_description="A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Plink Remote Forwarding - winevent]
description = Detects suspicious Plink tunnel remote forarding to a local port
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Description="Command-line SSH, Telnet, and Rlogin client" Process_Command_Line="* -R *") | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001" | eval sigma_title="Suspicious Plink Remote Forwarding" | eval sigma_description="Detects suspicious Plink tunnel remote forarding to a local port"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Plink Remote Forwarding - sysmon]
description = Detects suspicious Plink tunnel remote forarding to a local port
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="Command-line SSH, Telnet, and Rlogin client" CommandLine="* -R *") | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001" | eval sigma_title="Suspicious Plink Remote Forwarding" | eval sigma_description="Detects suspicious Plink tunnel remote forarding to a local port"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WebDav Client Execution - winevent]
description = A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*C:\\windows\\system32\\davclnt.dll,DavSetCookie*") | eval sigma_attack_tags="attack.exfiltration attack.t1048.003" | eval sigma_title="Suspicious WebDav Client Execution" | eval sigma_description="A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WebDav Client Execution - sysmon]
description = A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*C:\\windows\\system32\\davclnt.dll,DavSetCookie*") | eval sigma_attack_tags="attack.exfiltration attack.t1048.003" | eval sigma_title="Suspicious WebDav Client Execution" | eval sigma_description="A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server)."
dispatch.earliest_time = -24h@h
alert.track = 0

[AdFind Usage Detection - winevent]
description = AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*domainlist*" OR Process_Command_Line="*trustdmp*" OR Process_Command_Line="*dcmodes*" OR Process_Command_Line="*adinfo*" OR Process_Command_Line="* dclist *" OR Process_Command_Line="*computer_pwdnotreqd*" OR Process_Command_Line="*objectcategory=*" OR Process_Command_Line="*-subnets -f*" OR Process_Command_Line="*name=\"Domain Admins\"*" OR Process_Command_Line="*-sc u:*" OR Process_Command_Line="*domainncs*" OR Process_Command_Line="*dompol*" OR Process_Command_Line="* oudmp *" OR Process_Command_Line="*subnetdmp*" OR Process_Command_Line="*gpodmp*" OR Process_Command_Line="*fspdmp*" OR Process_Command_Line="*users_noexpire*" OR Process_Command_Line="*computers_active*")) | eval sigma_attack_tags="attack.discovery attack.t1482 attack.t1018" | eval sigma_title="AdFind Usage Detection" | eval sigma_description="AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain."
dispatch.earliest_time = -24h@h
alert.track = 0

[AdFind Usage Detection - sysmon]
description = AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*domainlist*" OR CommandLine="*trustdmp*" OR CommandLine="*dcmodes*" OR CommandLine="*adinfo*" OR CommandLine="* dclist *" OR CommandLine="*computer_pwdnotreqd*" OR CommandLine="*objectcategory=*" OR CommandLine="*-subnets -f*" OR CommandLine="*name=\"Domain Admins\"*" OR CommandLine="*-sc u:*" OR CommandLine="*domainncs*" OR CommandLine="*dompol*" OR CommandLine="* oudmp *" OR CommandLine="*subnetdmp*" OR CommandLine="*gpodmp*" OR CommandLine="*fspdmp*" OR CommandLine="*users_noexpire*" OR CommandLine="*computers_active*")) | eval sigma_attack_tags="attack.discovery attack.t1482 attack.t1018" | eval sigma_title="AdFind Usage Detection" | eval sigma_description="AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - winevent]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\advanced_ip_scanner*") | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - sysmon]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\advanced_ip_scanner*") | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[APT29 - winevent]
description = This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-noni*" Process_Command_Line="*-ep*" Process_Command_Line="*bypass*" Process_Command_Line="*$*") | eval sigma_attack_tags="attack.execution attack.g0016 attack.t1086 attack.t1059 attack.t1059.001" | eval sigma_title="APT29" | eval sigma_description="This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks"
dispatch.earliest_time = -24h@h
alert.track = 0

[APT29 - sysmon]
description = This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-noni*" CommandLine="*-ep*" CommandLine="*bypass*" CommandLine="*$*") | eval sigma_attack_tags="attack.execution attack.g0016 attack.t1086 attack.t1059 attack.t1059.001" | eval sigma_title="APT29" | eval sigma_description="This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Baby Shark Activity - winevent]
description = Detects activity that could be related to Baby Shark malware
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="reg*query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"" OR Process_Command_Line="powershell.exe mshta.exe http*" OR Process_Command_Line="cmd.exe /c taskkill /im cmd.exe")) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1086 attack.t1059.003 attack.t1059.001 attack.discovery attack.t1012 attack.defense_evasion attack.t1170 attack.t1218 attack.t1218.005" | eval sigma_title="Baby Shark Activity" | eval sigma_description="Detects activity that could be related to Baby Shark malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Baby Shark Activity - sysmon]
description = Detects activity that could be related to Baby Shark malware
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="reg*query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"" OR CommandLine="powershell.exe mshta.exe http*" OR CommandLine="cmd.exe /c taskkill /im cmd.exe")) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1086 attack.t1059.003 attack.t1059.001 attack.discovery attack.t1012 attack.defense_evasion attack.t1170 attack.t1218 attack.t1218.005" | eval sigma_title="Baby Shark Activity" | eval sigma_description="Detects activity that could be related to Baby Shark malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Credential Access Activity - winevent]
description = Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\xcopy.exe" Process_Command_Line="*/S*" Process_Command_Line="*/E*" Process_Command_Line="*/C*" Process_Command_Line="*/Q*" Process_Command_Line="*/H*" Process_Command_Line="*\\\*") OR (New_Process_Name="*\\adexplorer.exe" Process_Command_Line="*-snapshot*" Process_Command_Line="*\"\"*" Process_Command_Line="*c:\\users\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1081 attack.t1003 attack.t1552.001 attack.t1003.003" | eval sigma_title="Judgement Panda Credential Access Activity" | eval sigma_description="Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Credential Access Activity - sysmon]
description = Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\xcopy.exe" CommandLine="*/S*" CommandLine="*/E*" CommandLine="*/C*" CommandLine="*/Q*" CommandLine="*/H*" CommandLine="*\\\*") OR (Image="*\\adexplorer.exe" CommandLine="*-snapshot*" CommandLine="*\"\"*" CommandLine="*c:\\users\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1081 attack.t1003 attack.t1552.001 attack.t1003.003" | eval sigma_title="Judgement Panda Credential Access Activity" | eval sigma_description="Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlueMashroom DLL Load - winevent]
description = Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\AppData\\Local\\*" (Process_Command_Line="*\\regsvr32*" OR Process_Command_Line="*,DllEntry*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1117 attack.t1218.010" | eval sigma_title="BlueMashroom DLL Load" | eval sigma_description="Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlueMashroom DLL Load - sysmon]
description = Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\AppData\\Local\\*" (CommandLine="*\\regsvr32*" OR CommandLine="*,DllEntry*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1117 attack.t1218.010" | eval sigma_title="BlueMashroom DLL Load" | eval sigma_description="Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIExec VBS Script - winevent]
description = Detects suspicious file execution by wscript and cscript
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cscript.exe" Process_Command_Line="*.vbs*" Process_Command_Line="*/shell*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.g0045 attack.t1064 attack.t1059.005" | eval sigma_title="WMIExec VBS Script" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIExec VBS Script - sysmon]
description = Detects suspicious file execution by wscript and cscript
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cscript.exe" CommandLine="*.vbs*" CommandLine="*/shell*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.g0045 attack.t1064 attack.t1059.005" | eval sigma_title="WMIExec VBS Script" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExecWin - winevent]
description = Detects CrackMapExecWin Activity as Described by NCSC
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\crackmapexec.exe")) | eval sigma_attack_tags="attack.g0035" | eval sigma_title="CrackMapExecWin" | eval sigma_description="Detects CrackMapExecWin Activity as Described by NCSC"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExecWin - sysmon]
description = Detects CrackMapExecWin Activity as Described by NCSC
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\crackmapexec.exe")) | eval sigma_attack_tags="attack.g0035" | eval sigma_title="CrackMapExecWin" | eval sigma_description="Detects CrackMapExecWin Activity as Described by NCSC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Elise Backdoor - winevent]
description = Detects Elise backdoor acitivty as used by APT32
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="C:\\Windows\\SysWOW64\\cmd.exe" Process_Command_Line="*\\Windows\\Caches\\NavShExt.dll *") OR Process_Command_Line="*\\AppData\\Roaming\\MICROS~1\\Windows\\Caches\\NavShExt.dll,Setting")) | eval sigma_attack_tags="attack.g0030 attack.g0050 attack.s0081 attack.execution attack.t1059 attack.t1059.003" | eval sigma_title="Elise Backdoor" | eval sigma_description="Detects Elise backdoor acitivty as used by APT32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Elise Backdoor - sysmon]
description = Detects Elise backdoor acitivty as used by APT32
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="C:\\Windows\\SysWOW64\\cmd.exe" CommandLine="*\\Windows\\Caches\\NavShExt.dll *") OR CommandLine="*\\AppData\\Roaming\\MICROS~1\\Windows\\Caches\\NavShExt.dll,Setting")) | eval sigma_attack_tags="attack.g0030 attack.g0050 attack.s0081 attack.execution attack.t1059 attack.t1059.003" | eval sigma_title="Elise Backdoor" | eval sigma_description="Detects Elise backdoor acitivty as used by APT32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emissary Panda Malware SLLauncher - winevent]
description = Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sllauncher.exe" New_Process_Name="*\\svchost.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="Emissary Panda Malware SLLauncher" | eval sigma_description="Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emissary Panda Malware SLLauncher - sysmon]
description = Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sllauncher.exe" Image="*\\svchost.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="Emissary Panda Malware SLLauncher" | eval sigma_description="Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire Monkey - winevent]
description = Detects EmpireMonkey APT reported Activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*/i:%APPDATA%\\logs.txt scrobj.dll") ((New_Process_Name="*\\cutil.exe") OR (Description="Microsoft(C) Registerserver"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.t1117" | eval sigma_title="Empire Monkey" | eval sigma_description="Detects EmpireMonkey APT reported Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire Monkey - sysmon]
description = Detects EmpireMonkey APT reported Activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*/i:%APPDATA%\\logs.txt scrobj.dll") ((Image="*\\cutil.exe") OR (Description="Microsoft(C) Registerserver"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.t1117" | eval sigma_title="Empire Monkey" | eval sigma_description="Detects EmpireMonkey APT reported Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Group DLL_U Load - winevent]
description = Detects a specific tool and export used by EquationGroup
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe" Process_Command_Line="*,dll_u") OR Process_Command_Line="* -export dll_u *")) | eval sigma_attack_tags="attack.g0020 attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Equation Group DLL_U Load" | eval sigma_description="Detects a specific tool and export used by EquationGroup"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Group DLL_U Load - sysmon]
description = Detects a specific tool and export used by EquationGroup
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe" CommandLine="*,dll_u") OR CommandLine="* -export dll_u *")) | eval sigma_attack_tags="attack.g0020 attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Equation Group DLL_U Load" | eval sigma_description="Detects a specific tool and export used by EquationGroup"
dispatch.earliest_time = -24h@h
alert.track = 0

[EvilNum Golden Chickens Deployment via OCX Files - winevent]
description = Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*regsvr32*" Process_Command_Line="*/s*" Process_Command_Line="*/i*" Process_Command_Line="*\\AppData\\Roaming\\*" Process_Command_Line="*.ocx*") | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="EvilNum Golden Chickens Deployment via OCX Files" | eval sigma_description="Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[EvilNum Golden Chickens Deployment via OCX Files - sysmon]
description = Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*regsvr32*" CommandLine="*/s*" CommandLine="*/i*" CommandLine="*\\AppData\\Roaming\\*" CommandLine="*.ocx*") | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="EvilNum Golden Chickens Deployment via OCX Files" | eval sigma_description="Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Greenbug Campaign Indicators - winevent]
description = Detects tools and process executions as observed in a Greenbug campaign in May 2020
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*bitsadmin*" Process_Command_Line="*/transfer*" Process_Command_Line="*CSIDL_APPDATA*") OR (Process_Command_Line="*CSIDL_SYSTEM_DRIVE*") OR (Process_Command_Line="*\\msf.ps1*" OR Process_Command_Line="*8989 -e cmd.exe*" OR Process_Command_Line="*system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill*" OR Process_Command_Line="*-nop -w hidden -c $k=new-object*" OR Process_Command_Line="*[Net.CredentialCache]::DefaultCredentials;IEX *" OR Process_Command_Line="* -nop -w hidden -c $m=new-object net.webclient;$m*" OR Process_Command_Line="*-noninteractive -executionpolicy bypass whoami*" OR Process_Command_Line="*-noninteractive -executionpolicy bypass netstat -a*" OR Process_Command_Line="*L3NlcnZlc*") OR (New_Process_Name="*\\adobe\\Adobe.exe" OR New_Process_Name="*\\oracle\\local.exe" OR New_Process_Name="*\\revshell.exe" OR New_Process_Name="*infopagesbackup\\ncat.exe" OR New_Process_Name="*CSIDL_SYSTEM\\cmd.exe" OR New_Process_Name="*\\programdata\\oracle\\java.exe" OR New_Process_Name="*CSIDL_COMMON_APPDATA\\comms\\comms.exe" OR New_Process_Name="*\\Programdata\\VMware\\Vmware.exe"))) | eval sigma_attack_tags="attack.g0049 attack.execution attack.t1059.001 attack.t1086 attack.command_and_control attack.t1105 attack.defense_evasion attack.t1036 attack.t1036.005" | eval sigma_title="Greenbug Campaign Indicators" | eval sigma_description="Detects tools and process executions as observed in a Greenbug campaign in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Greenbug Campaign Indicators - sysmon]
description = Detects tools and process executions as observed in a Greenbug campaign in May 2020
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*bitsadmin*" CommandLine="*/transfer*" CommandLine="*CSIDL_APPDATA*") OR (CommandLine="*CSIDL_SYSTEM_DRIVE*") OR (CommandLine="*\\msf.ps1*" OR CommandLine="*8989 -e cmd.exe*" OR CommandLine="*system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill*" OR CommandLine="*-nop -w hidden -c $k=new-object*" OR CommandLine="*[Net.CredentialCache]::DefaultCredentials;IEX *" OR CommandLine="* -nop -w hidden -c $m=new-object net.webclient;$m*" OR CommandLine="*-noninteractive -executionpolicy bypass whoami*" OR CommandLine="*-noninteractive -executionpolicy bypass netstat -a*" OR CommandLine="*L3NlcnZlc*") OR (Image="*\\adobe\\Adobe.exe" OR Image="*\\oracle\\local.exe" OR Image="*\\revshell.exe" OR Image="*infopagesbackup\\ncat.exe" OR Image="*CSIDL_SYSTEM\\cmd.exe" OR Image="*\\programdata\\oracle\\java.exe" OR Image="*CSIDL_COMMON_APPDATA\\comms\\comms.exe" OR Image="*\\Programdata\\VMware\\Vmware.exe"))) | eval sigma_attack_tags="attack.g0049 attack.execution attack.t1059.001 attack.t1086 attack.command_and_control attack.t1105 attack.defense_evasion attack.t1036 attack.t1036.005" | eval sigma_title="Greenbug Campaign Indicators" | eval sigma_description="Detects tools and process executions as observed in a Greenbug campaign in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange Exploitation Activity - winevent]
description = Detects activity observed by different researchers to be HAFNIUM group acitivity (or related) on Exchange servers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*attrib*" Process_Command_Line="* +h *" Process_Command_Line="* +s *" Process_Command_Line="* +r *" Process_Command_Line="*.aspx*") OR (Process_Command_Line="*schtasks*" Process_Command_Line="*VSPerfMon*") OR (Process_Command_Line="*vssadmin list shadows*" Process_Command_Line="*Temp\\__output*") OR Process_Command_Line="*%TEMP%\\execute.bat*" OR New_Process_Name="*Users\\Public\\opera\\Opera_browser.exe" OR (New_Process_Name="*Opera_browser.exe" (Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\svchost.exe")) OR New_Process_Name="*\\ProgramData\\VSPerfMon\\*" OR (Process_Command_Line="* -t7z *" Process_Command_Line="*C:\\Programdata\\pst*" Process_Command_Line="*\\it.zip*") OR (New_Process_Name="*\\makecab.exe" (Process_Command_Line="*Microsoft\\Exchange Server\\*" OR Process_Command_Line="*inetpub\\wwwroot*")) OR (Process_Command_Line="*\\Temp\\xx.bat*" OR Process_Command_Line="*Windows\\WwanSvcdcs*" OR Process_Command_Line="*Windows\\Temp\\cw.exe*") OR (Process_Command_Line="*\\comsvcs.dll*" Process_Command_Line="*Minidump*" Process_Command_Line="*\\inetpub\\wwwroot*") OR (Process_Command_Line="*dsquery*" Process_Command_Line="* -uco *" Process_Command_Line="*\\inetpub\\wwwroot*"))) | eval sigma_attack_tags="" | eval sigma_title="Exchange Exploitation Activity" | eval sigma_description="Detects activity observed by different researchers to be HAFNIUM group acitivity (or related) on Exchange servers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange Exploitation Activity - sysmon]
description = Detects activity observed by different researchers to be HAFNIUM group acitivity (or related) on Exchange servers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*attrib*" CommandLine="* +h *" CommandLine="* +s *" CommandLine="* +r *" CommandLine="*.aspx*") OR (CommandLine="*schtasks*" CommandLine="*VSPerfMon*") OR (CommandLine="*vssadmin list shadows*" CommandLine="*Temp\\__output*") OR CommandLine="*%TEMP%\\execute.bat*" OR Image="*Users\\Public\\opera\\Opera_browser.exe" OR (Image="*Opera_browser.exe" (ParentImage="*\\services.exe" OR ParentImage="*\\svchost.exe")) OR Image="*\\ProgramData\\VSPerfMon\\*" OR (CommandLine="* -t7z *" CommandLine="*C:\\Programdata\\pst*" CommandLine="*\\it.zip*") OR (Image="*\\makecab.exe" (CommandLine="*Microsoft\\Exchange Server\\*" OR CommandLine="*inetpub\\wwwroot*")) OR (CommandLine="*\\Temp\\xx.bat*" OR CommandLine="*Windows\\WwanSvcdcs*" OR CommandLine="*Windows\\Temp\\cw.exe*") OR (CommandLine="*\\comsvcs.dll*" CommandLine="*Minidump*" CommandLine="*\\inetpub\\wwwroot*") OR (CommandLine="*dsquery*" CommandLine="* -uco *" CommandLine="*\\inetpub\\wwwroot*"))) | eval sigma_attack_tags="" | eval sigma_title="Exchange Exploitation Activity" | eval sigma_description="Detects activity observed by different researchers to be HAFNIUM group acitivity (or related) on Exchange servers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hurricane Panda Activity - winevent]
description = Detects Hurricane Panda Activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*localgroup*" Process_Command_Line="*admin*" Process_Command_Line="*/add*") OR (Process_Command_Line="*\\Win64.exe*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.g0009 attack.t1068" | eval sigma_title="Hurricane Panda Activity" | eval sigma_description="Detects Hurricane Panda Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hurricane Panda Activity - sysmon]
description = Detects Hurricane Panda Activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*localgroup*" CommandLine="*admin*" CommandLine="*/add*") OR (CommandLine="*\\Win64.exe*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.g0009 attack.t1068" | eval sigma_title="Hurricane Panda Activity" | eval sigma_description="Detects Hurricane Panda Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Exfil Activity - winevent]
description = Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*eprod.ldf" OR (Process_Command_Line="*\\ldifde.exe -f -n *" OR Process_Command_Line="*\\7za.exe a 1.7z *" OR Process_Command_Line="*\\aaaa\\procdump64.exe*" OR Process_Command_Line="*\\aaaa\\netsess.exe*" OR Process_Command_Line="*\\aaaa\\7za.exe*" OR Process_Command_Line="*copy .\\1.7z \\*" OR Process_Command_Line="*copy \\client\\c$\\aaaa\\*") OR New_Process_Name="C:\\Users\\Public\\7za.exe")) | eval sigma_attack_tags="attack.lateral_movement attack.g0010 attack.credential_access attack.t1003 attack.t1003.001 attack.exfiltration attack.t1002 attack.t1560.001" | eval sigma_title="Judgement Panda Exfil Activity" | eval sigma_description="Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Exfil Activity - sysmon]
description = Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*eprod.ldf" OR (CommandLine="*\\ldifde.exe -f -n *" OR CommandLine="*\\7za.exe a 1.7z *" OR CommandLine="*\\aaaa\\procdump64.exe*" OR CommandLine="*\\aaaa\\netsess.exe*" OR CommandLine="*\\aaaa\\7za.exe*" OR CommandLine="*copy .\\1.7z \\*" OR CommandLine="*copy \\client\\c$\\aaaa\\*") OR Image="C:\\Users\\Public\\7za.exe")) | eval sigma_attack_tags="attack.lateral_movement attack.g0010 attack.credential_access attack.t1003 attack.t1003.001 attack.exfiltration attack.t1002 attack.t1560.001" | eval sigma_title="Judgement Panda Exfil Activity" | eval sigma_description="Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ke3chang Registry Key Modifications - winevent]
description = Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*-Property DWORD -name DisableFirstRunCustomize -value 2 -Force*" OR Process_Command_Line="*-Property String -name Check_Associations -value*" OR Process_Command_Line="*-Property DWORD -name IEHarden -value 0 -Force*")) | eval sigma_attack_tags="attack.g0004 attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Ke3chang Registry Key Modifications" | eval sigma_description="Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ke3chang Registry Key Modifications - sysmon]
description = Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*-Property DWORD -name DisableFirstRunCustomize -value 2 -Force*" OR CommandLine="*-Property String -name Check_Associations -value*" OR CommandLine="*-Property DWORD -name IEHarden -value 0 -Force*")) | eval sigma_attack_tags="attack.g0004 attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Ke3chang Registry Key Modifications" | eval sigma_description="Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - winevent]
description = Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*mshta*" Process_Command_Line="*.zip*") OR ((Creator_Process_Name="C:\\Windows\\System32\\wbem\\wmiprvse.exe") (New_Process_Name="C:\\Windows\\System32\\mshta.exe")) OR ((Creator_Process_Name="C:\\Users\\Public\*") (New_Process_Name="C:\\Windows\\System32\\rundll32.exe")))) | eval sigma_attack_tags="attack.g0032" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - sysmon]
description = Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*mshta*" CommandLine="*.zip*") OR ((ParentImage="C:\\Windows\\System32\\wbem\\wmiprvse.exe") (Image="C:\\Windows\\System32\\mshta.exe")) OR ((ParentImage="C:\\Users\\Public\*") (Image="C:\\Windows\\System32\\rundll32.exe")))) | eval sigma_attack_tags="attack.g0032" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - winevent]
description = Detects different process creation events as described in various threat reports on Lazarus group activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*reg.exe save hklm\\sam %temp%\\~reg_sam.save*" OR Process_Command_Line="*1q2w3e4r@#$@#$@#$*" OR Process_Command_Line="* -hp1q2w3e4 *" OR Process_Command_Line="*.dat data03 10000 -p *") OR (Process_Command_Line="*process call create*" Process_Command_Line="* > %temp%\\~*") OR (Process_Command_Line="*netstat -aon | find *" Process_Command_Line="* > %temp%\\~*") OR (Process_Command_Line="*.255 10 C:\\ProgramData\\\*"))) | eval sigma_attack_tags="attack.g0032" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - sysmon]
description = Detects different process creation events as described in various threat reports on Lazarus group activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*reg.exe save hklm\\sam %temp%\\~reg_sam.save*" OR CommandLine="*1q2w3e4r@#$@#$@#$*" OR CommandLine="* -hp1q2w3e4 *" OR CommandLine="*.dat data03 10000 -p *") OR (CommandLine="*process call create*" CommandLine="* > %temp%\\~*") OR (CommandLine="*netstat -aon | find *" CommandLine="* > %temp%\\~*") OR (CommandLine="*.255 10 C:\\ProgramData\\\*"))) | eval sigma_attack_tags="attack.g0032" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Loaders - winevent]
description = Detects different loaders as described in various threat reports on Lazarus group activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((Process_Command_Line="*cmd.exe /c *" Process_Command_Line="* -p 0x*" (Process_Command_Line="*C:\\ProgramData\\\*" OR Process_Command_Line="*C:\\RECYCLER\\\*")) OR (Process_Command_Line="*rundll32.exe *" Process_Command_Line="*C:\\ProgramData\\\*" (Process_Command_Line="*.bin,*" OR Process_Command_Line="*.tmp,*" OR Process_Command_Line="*.dat,*" OR Process_Command_Line="*.io,*" OR Process_Command_Line="*.ini,*" OR Process_Command_Line="*.db,*")))) | eval sigma_attack_tags="attack.g0032" | eval sigma_title="Lazarus Loaders" | eval sigma_description="Detects different loaders as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Loaders - sysmon]
description = Detects different loaders as described in various threat reports on Lazarus group activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((CommandLine="*cmd.exe /c *" CommandLine="* -p 0x*" (CommandLine="*C:\\ProgramData\\\*" OR CommandLine="*C:\\RECYCLER\\\*")) OR (CommandLine="*rundll32.exe *" CommandLine="*C:\\ProgramData\\\*" (CommandLine="*.bin,*" OR CommandLine="*.tmp,*" OR CommandLine="*.dat,*" OR CommandLine="*.io,*" OR CommandLine="*.ini,*" OR CommandLine="*.db,*")))) | eval sigma_attack_tags="attack.g0032" | eval sigma_title="Lazarus Loaders" | eval sigma_description="Detects different loaders as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Session Highjacker - winevent]
description = Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msdtc.exe" OR New_Process_Name="*\\gpvc.exe") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.005" | eval sigma_title="Lazarus Session Highjacker" | eval sigma_description="Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Session Highjacker - sysmon]
description = Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msdtc.exe" OR Image="*\\gpvc.exe") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.005" | eval sigma_title="Lazarus Session Highjacker" | eval sigma_description="Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mustang Panda Dropper - winevent]
description = Detects specific process parameters as used by Mustang Panda droppers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*Temp\\wtask.exe /create*" OR Process_Command_Line="*%windir:~-3,1%%PUBLIC:~-9,1%*" OR Process_Command_Line="*/tn \"Security Script *" OR Process_Command_Line="*%windir:~-1,1%*") OR (Process_Command_Line="*/E:vbscript*" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*.txt*" Process_Command_Line="*/F*") OR New_Process_Name="*Temp\\winwsh.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Mustang Panda Dropper" | eval sigma_description="Detects specific process parameters as used by Mustang Panda droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mustang Panda Dropper - sysmon]
description = Detects specific process parameters as used by Mustang Panda droppers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*Temp\\wtask.exe /create*" OR CommandLine="*%windir:~-3,1%%PUBLIC:~-9,1%*" OR CommandLine="*/tn \"Security Script *" OR CommandLine="*%windir:~-1,1%*") OR (CommandLine="*/E:vbscript*" CommandLine="*C:\\Users\\*" CommandLine="*.txt*" CommandLine="*/F*") OR Image="*Temp\\winwsh.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Mustang Panda Dropper" | eval sigma_description="Detects specific process parameters as used by Mustang Panda droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sofacy Trojan Loader Activity - winevent]
description = Detects Trojan loader acitivty as used by APT28
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*rundll32.exe*" Process_Command_Line="*%APPDATA%\\*") (Process_Command_Line="*.dat\",*" OR Process_Command_Line="*.dll\",#1")) | eval sigma_attack_tags="attack.g0007 attack.execution attack.t1059 attack.t1059.003 attack.defense_evasion attack.t1085 car.2013-10-002 attack.t1218.011" | eval sigma_title="Sofacy Trojan Loader Activity" | eval sigma_description="Detects Trojan loader acitivty as used by APT28"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sofacy Trojan Loader Activity - sysmon]
description = Detects Trojan loader acitivty as used by APT28
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*rundll32.exe*" CommandLine="*%APPDATA%\\*") (CommandLine="*.dat\",*" OR CommandLine="*.dll\",#1")) | eval sigma_attack_tags="attack.g0007 attack.execution attack.t1059 attack.t1059.003 attack.defense_evasion attack.t1085 car.2013-10-002 attack.t1218.011" | eval sigma_title="Sofacy Trojan Loader Activity" | eval sigma_description="Detects Trojan loader acitivty as used by APT28"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ps.exe Renamed SysInternals Tool - winevent]
description = Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="ps.exe -accepteula") | eval sigma_attack_tags="attack.defense_evasion attack.g0035 attack.t1036 attack.t1036.003 car.2013-05-009" | eval sigma_title="Ps.exe Renamed SysInternals Tool" | eval sigma_description="Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ps.exe Renamed SysInternals Tool - sysmon]
description = Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="ps.exe -accepteula") | eval sigma_attack_tags="attack.defense_evasion attack.g0035 attack.t1036 attack.t1036.003 car.2013-05-009" | eval sigma_title="Ps.exe Renamed SysInternals Tool" | eval sigma_description="Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report"
dispatch.earliest_time = -24h@h
alert.track = 0

[TA505 Dropper Load Pattern - winevent]
description = Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" Creator_Process_Name="*\\wmiprvse.exe") | eval sigma_attack_tags="attack.execution attack.g0092" | eval sigma_title="TA505 Dropper Load Pattern" | eval sigma_description="Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents"
dispatch.earliest_time = -24h@h
alert.track = 0

[TA505 Dropper Load Pattern - sysmon]
description = Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mshta.exe" ParentImage="*\\wmiprvse.exe") | eval sigma_attack_tags="attack.execution attack.g0092" | eval sigma_title="TA505 Dropper Load Pattern" | eval sigma_description="Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents"
dispatch.earliest_time = -24h@h
alert.track = 0

[TAIDOOR RAT DLL Load - winevent]
description = Detects specific process characteristics of Chinese TAIDOOR RAT malware load
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*dll,MyStart*" OR Process_Command_Line="*dll MyStart*") OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* MyStart") (Process_Command_Line="*rundll32.exe*")))) | eval sigma_attack_tags="attack.execution attack.t1055 attack.t1055.001" | eval sigma_title="TAIDOOR RAT DLL Load" | eval sigma_description="Detects specific process characteristics of Chinese TAIDOOR RAT malware load"
dispatch.earliest_time = -24h@h
alert.track = 0

[TAIDOOR RAT DLL Load - sysmon]
description = Detects specific process characteristics of Chinese TAIDOOR RAT malware load
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*dll,MyStart*" OR CommandLine="*dll MyStart*") OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* MyStart") (CommandLine="*rundll32.exe*")))) | eval sigma_attack_tags="attack.execution attack.t1055 attack.t1055.001" | eval sigma_title="TAIDOOR RAT DLL Load" | eval sigma_description="Detects specific process characteristics of Chinese TAIDOOR RAT malware load"
dispatch.earliest_time = -24h@h
alert.track = 0

[TropicTrooper Campaign November 2018 - winevent]
description = Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*") | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1059.001" | eval sigma_title="TropicTrooper Campaign November 2018" | eval sigma_description="Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia"
dispatch.earliest_time = -24h@h
alert.track = 0

[TropicTrooper Campaign November 2018 - sysmon]
description = Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*") | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1059.001" | eval sigma_title="TropicTrooper Campaign November 2018" | eval sigma_description="Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Commands May 2020 - winevent]
description = Detects commands used by Turla group as reported by ESET in May 2020
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*tracert -h 10 yahoo.com*" OR Process_Command_Line="*.WSqmCons))|iex;*" OR Process_Command_Line="*Fr`omBa`se6`4Str`ing*") OR (Process_Command_Line="*net use https://docs.live.net*" Process_Command_Line="*@aol.co.uk*"))) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1086 attack.t1059.001 attack.t1053 attack.t1053.005 attack.t1027" | eval sigma_title="Turla Group Commands May 2020" | eval sigma_description="Detects commands used by Turla group as reported by ESET in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Commands May 2020 - sysmon]
description = Detects commands used by Turla group as reported by ESET in May 2020
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*tracert -h 10 yahoo.com*" OR CommandLine="*.WSqmCons))|iex;*" OR CommandLine="*Fr`omBa`se6`4Str`ing*") OR (CommandLine="*net use https://docs.live.net*" CommandLine="*@aol.co.uk*"))) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1086 attack.t1059.001 attack.t1053 attack.t1053.005 attack.t1027" | eval sigma_title="Turla Group Commands May 2020" | eval sigma_description="Detects commands used by Turla group as reported by ESET in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[UNC2452 Process Creation Patterns - winevent]
description = Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((((Process_Command_Line="*7z.exe a -v500m -mx9 -r0 -p*") OR (ParentCommandLine="*wscript.exe*" ParentCommandLine="*.vbs*" Process_Command_Line="*rundll32.exe*" Process_Command_Line="*C:\\Windows*" Process_Command_Line="*.dll,Tk_*")) OR (Creator_Process_Name="*\\rundll32.exe" ParentCommandLine="*C:\\Windows*" Process_Command_Line="*cmd.exe /C *")) OR (Process_Command_Line="*rundll32 c:\\windows\\\*" Process_Command_Line="*.dll *")) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\rundll32.exe" New_Process_Name="*\\dllhost.exe") NOT ((Process_Command_Line=" " OR Process_Command_Line=""))))) | eval sigma_attack_tags="attack.execution attack.t1059.001 sunburst unc2452" | eval sigma_title="UNC2452 Process Creation Patterns" | eval sigma_description="Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries"
dispatch.earliest_time = -24h@h
alert.track = 0

[UNC2452 Process Creation Patterns - sysmon]
description = Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((((CommandLine="*7z.exe a -v500m -mx9 -r0 -p*") OR (ParentCommandLine="*wscript.exe*" ParentCommandLine="*.vbs*" CommandLine="*rundll32.exe*" CommandLine="*C:\\Windows*" CommandLine="*.dll,Tk_*")) OR (ParentImage="*\\rundll32.exe" ParentCommandLine="*C:\\Windows*" CommandLine="*cmd.exe /C *")) OR (CommandLine="*rundll32 c:\\windows\\\*" CommandLine="*.dll *")) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\rundll32.exe" Image="*\\dllhost.exe") NOT ((CommandLine=" " OR CommandLine=""))))) | eval sigma_attack_tags="attack.execution attack.t1059.001 sunburst unc2452" | eval sigma_title="UNC2452 Process Creation Patterns" | eval sigma_description="Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries"
dispatch.earliest_time = -24h@h
alert.track = 0

[UNC2452 PowerShell Pattern - winevent]
description = Detects a specific PowerShell command line pattern used by the UNC2452 actors as mentioned in Microsoft and Symantec reports
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*Invoke-WMIMethod win32_process -name create -argumentlist*" Process_Command_Line="*rundll32 c:\\windows*") OR (Process_Command_Line="*wmic /node:*" Process_Command_Line="*process call create \"rundll32 c:\\windows*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1047 sunburst" | eval sigma_title="UNC2452 PowerShell Pattern" | eval sigma_description="Detects a specific PowerShell command line pattern used by the UNC2452 actors as mentioned in Microsoft and Symantec reports"
dispatch.earliest_time = -24h@h
alert.track = 0

[UNC2452 PowerShell Pattern - sysmon]
description = Detects a specific PowerShell command line pattern used by the UNC2452 actors as mentioned in Microsoft and Symantec reports
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*Invoke-WMIMethod win32_process -name create -argumentlist*" CommandLine="*rundll32 c:\\windows*") OR (CommandLine="*wmic /node:*" CommandLine="*process call create \"rundll32 c:\\windows*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1047 sunburst" | eval sigma_title="UNC2452 PowerShell Pattern" | eval sigma_description="Detects a specific PowerShell command line pattern used by the UNC2452 actors as mentioned in Microsoft and Symantec reports"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Malware HK University Campaign - winevent]
description = Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*C:\\Windows\\Temp*" OR Creator_Process_Name="*\\hpqhvind.exe*") New_Process_Name="C:\\ProgramData\\DRM*") OR (Creator_Process_Name="C:\\ProgramData\\DRM*" New_Process_Name="*\\wmplayer.exe") OR (Creator_Process_Name="*\\Test.exe" New_Process_Name="*\\wmplayer.exe") OR New_Process_Name="C:\\ProgramData\\DRM\\CLR\\CLR.exe" OR (Creator_Process_Name="C:\\ProgramData\\DRM\\Windows*" New_Process_Name="*\\SearchFilterHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1073 attack.g0044" | eval sigma_title="Winnti Malware HK University Campaign" | eval sigma_description="Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Malware HK University Campaign - sysmon]
description = Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*C:\\Windows\\Temp*" OR ParentImage="*\\hpqhvind.exe*") Image="C:\\ProgramData\\DRM*") OR (ParentImage="C:\\ProgramData\\DRM*" Image="*\\wmplayer.exe") OR (ParentImage="*\\Test.exe" Image="*\\wmplayer.exe") OR Image="C:\\ProgramData\\DRM\\CLR\\CLR.exe" OR (ParentImage="C:\\ProgramData\\DRM\\Windows*" Image="*\\SearchFilterHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1073 attack.g0044" | eval sigma_title="Winnti Malware HK University Campaign" | eval sigma_description="Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Pipemon Characteristics - winevent]
description = Detects specific process characteristics of Winnti Pipemon malware reported by ESET
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*setup0.exe -p*") OR (Process_Command_Line="*setup.exe*" (Process_Command_Line="*-x:0" OR Process_Command_Line="*-x:1" OR Process_Command_Line="*-x:2")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1073 attack.g0044" | eval sigma_title="Winnti Pipemon Characteristics" | eval sigma_description="Detects specific process characteristics of Winnti Pipemon malware reported by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Pipemon Characteristics - sysmon]
description = Detects specific process characteristics of Winnti Pipemon malware reported by ESET
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*setup0.exe -p*") OR (CommandLine="*setup.exe*" (CommandLine="*-x:0" OR CommandLine="*-x:1" OR CommandLine="*-x:2")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1073 attack.g0044" | eval sigma_title="Winnti Pipemon Characteristics" | eval sigma_description="Detects specific process characteristics of Winnti Pipemon malware reported by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZxShell Malware - winevent]
description = Detects a ZxShell start by the called and well-known function name
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\rundll32.exe") (Process_Command_Line="*zxFunction*" OR Process_Command_Line="*RemoteDiskXXXXX*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059 attack.defense_evasion attack.t1218.011 attack.t1085 attack.s0412 attack.g0001" | eval sigma_title="ZxShell Malware" | eval sigma_description="Detects a ZxShell start by the called and well-known function name"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZxShell Malware - sysmon]
description = Detects a ZxShell start by the called and well-known function name
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\rundll32.exe") (CommandLine="*zxFunction*" OR CommandLine="*RemoteDiskXXXXX*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059 attack.defense_evasion attack.t1218.011 attack.t1085 attack.s0412 attack.g0001" | eval sigma_title="ZxShell Malware" | eval sigma_description="Detects a ZxShell start by the called and well-known function name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hiding Files with Attrib.exe - winevent]
description = Detects usage of attrib.exe to hide files from users.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\attrib.exe" Process_Command_Line="* +h *") NOT (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\desktop.ini *" OR (Creator_Process_Name="*\\cmd.exe" Process_Command_Line="+R +H +S +A \\*.cui" ParentCommandLine="C:\\WINDOWS\\system32\\*.bat"))))) | table Process_Command_Line,ParentCommandLine,Account_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1564.001 attack.t1158" | eval sigma_title="Hiding Files with Attrib.exe" | eval sigma_description="Detects usage of attrib.exe to hide files from users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Hiding Files with Attrib.exe - sysmon]
description = Detects usage of attrib.exe to hide files from users.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\attrib.exe" CommandLine="* +h *") NOT (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\desktop.ini *" OR (ParentImage="*\\cmd.exe" CommandLine="+R +H +S +A \\*.cui" ParentCommandLine="C:\\WINDOWS\\system32\\*.bat"))))) | table CommandLine,ParentCommandLine,User | eval sigma_attack_tags="attack.defense_evasion attack.t1564.001 attack.t1158" | eval sigma_title="Hiding Files with Attrib.exe" | eval sigma_description="Detects usage of attrib.exe to hide files from users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bad Opsec Defaults Sacrificial Processes With Improper Arguments - winevent]
description = Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\WerFault.exe" OR Process_Command_Line="*\\rundll32.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Bad Opsec Defaults Sacrificial Processes With Improper Arguments" | eval sigma_description="Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bad Opsec Defaults Sacrificial Processes With Improper Arguments - sysmon]
description = Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\WerFault.exe" OR CommandLine="*\\rundll32.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Bad Opsec Defaults Sacrificial Processes With Improper Arguments" | eval sigma_description="Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples."
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification of Boot Configuration - winevent]
description = Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\bcdedit.exe" Process_Command_Line="*set*") ((Process_Command_Line="*bootstatuspolicy*" Process_Command_Line="*ignoreallfailures*") OR (Process_Command_Line="*recoveryenabled*" Process_Command_Line="*no*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Modification of Boot Configuration" | eval sigma_description="Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique."
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification of Boot Configuration - sysmon]
description = Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\bcdedit.exe" CommandLine="*set*") ((CommandLine="*bootstatuspolicy*" CommandLine="*ignoreallfailures*") OR (CommandLine="*recoveryenabled*" CommandLine="*no*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Modification of Boot Configuration" | eval sigma_description="Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique."
dispatch.earliest_time = -24h@h
alert.track = 0

[SquiblyTwo - winevent]
description = Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*http*" (((New_Process_Name="*\\wmic.exe") Process_Command_Line="*wmic*" Process_Command_Line="*format*") OR ((Imphash="1B1A3F43BF37B5BFE60751F2EE2F326E" OR Imphash="37777A96245A3C74EB217308F3546F4C" OR Imphash="9D87C9D67CE724033C0B40CC4CA1B206") Process_Command_Line="*format:*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1047 attack.t1220 attack.execution attack.t1059.005 attack.t1059.007 attack.t1059" | eval sigma_title="SquiblyTwo" | eval sigma_description="Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash"
dispatch.earliest_time = -24h@h
alert.track = 0

[SquiblyTwo - sysmon]
description = Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*http*" (((Image="*\\wmic.exe") CommandLine="*wmic*" CommandLine="*format*") OR ((Imphash="1B1A3F43BF37B5BFE60751F2EE2F326E" OR Imphash="37777A96245A3C74EB217308F3546F4C" OR Imphash="9D87C9D67CE724033C0B40CC4CA1B206") CommandLine="*format:*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1047 attack.t1220 attack.execution attack.t1059.005 attack.t1059.007 attack.t1059" | eval sigma_title="SquiblyTwo" | eval sigma_description="Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association - winevent]
description = When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cmd*" Process_Command_Line="*/c*" Process_Command_Line="*assoc*") | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.001 attack.t1042" | eval sigma_title="Change Default File Association" | eval sigma_description="When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association - sysmon]
description = When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cmd*" CommandLine="*/c*" CommandLine="*assoc*") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.001 attack.t1042" | eval sigma_title="Change Default File Association" | eval sigma_description="When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 - winevent]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*CL_Invocation.ps1*" Process_Command_Line="*SyncInvoke*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 - sysmon]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*CL_Invocation.ps1*" CommandLine="*SyncInvoke*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Mutexverifiers.ps1 - winevent]
description = Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*CL_Mutexverifiers.ps1*" Process_Command_Line="*runAfterCancelProcess*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Mutexverifiers.ps1" | eval sigma_description="Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Mutexverifiers.ps1 - sysmon]
description = Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*CL_Mutexverifiers.ps1*" CommandLine="*runAfterCancelProcess*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Mutexverifiers.ps1" | eval sigma_description="Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmdkey Cached Credentials Recon - winevent]
description = Detects usage of cmdkey to look for cached credentials
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmdkey.exe" Process_Command_Line="* /list *") | table Process_Command_Line,ParentCommandLine,Account_Name | eval sigma_attack_tags="attack.credential_access attack.t1003.005 attack.t1003" | eval sigma_title="Cmdkey Cached Credentials Recon" | eval sigma_description="Detects usage of cmdkey to look for cached credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmdkey Cached Credentials Recon - sysmon]
description = Detects usage of cmdkey to look for cached credentials
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmdkey.exe" CommandLine="* /list *") | table CommandLine,ParentCommandLine,User | eval sigma_attack_tags="attack.credential_access attack.t1003.005 attack.t1003" | eval sigma_title="Cmdkey Cached Credentials Recon" | eval sigma_description="Detects usage of cmdkey to look for cached credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP UAC Bypass via COM Object Access - winevent]
description = Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="*\\DllHost.exe *" (ParentCommandLine="*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}" OR ParentCommandLine="*{3E000D72-A845-4CD9-BD83-80C07C3B881F}")) | table Process_Command_Line,ParentCommandLine,Hashes | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1088 attack.t1218.003 attack.t1191 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP UAC Bypass via COM Object Access" | eval sigma_description="Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP UAC Bypass via COM Object Access - sysmon]
description = Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="*\\DllHost.exe *" (ParentCommandLine="*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}" OR ParentCommandLine="*{3E000D72-A845-4CD9-BD83-80C07C3B881F}")) | table CommandLine,ParentCommandLine,Hashes | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1088 attack.t1218.003 attack.t1191 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP UAC Bypass via COM Object Access" | eval sigma_description="Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmd.exe CommandLine Path Traversal - winevent]
description = detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="*cmd*" ParentCommandLine="*/c*" Process_Command_Line="*/../../*") | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059" | eval sigma_title="Cmd.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmd.exe CommandLine Path Traversal - sysmon]
description = detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="*cmd*" ParentCommandLine="*/c*" CommandLine="*/../../*") | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059" | eval sigma_title="Cmd.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Control Panel Items - winevent]
description = Detects the malicious use of a control panel item
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Process_Command_Line="*.cpl" NOT ((Process_Command_Line="*\\System32\\*" OR Process_Command_Line="*%System%*"))) OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*add*" (Process_Command_Line="*CurrentVersion\\Control Panel\\CPLs*")))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.002 attack.t1196 attack.persistence attack.t1546" | eval sigma_title="Control Panel Items" | eval sigma_description="Detects the malicious use of a control panel item"
dispatch.earliest_time = -24h@h
alert.track = 0

[Control Panel Items - sysmon]
description = Detects the malicious use of a control panel item
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CommandLine="*.cpl" NOT ((CommandLine="*\\System32\\*" OR CommandLine="*%System%*"))) OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" CommandLine="*add*" (CommandLine="*CurrentVersion\\Control Panel\\CPLs*")))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.002 attack.t1196 attack.persistence attack.t1546" | eval sigma_title="Control Panel Items" | eval sigma_description="Detects the malicious use of a control panel item"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copying Sensitive Files with Credential Data - winevent]
description = Files with well-known filenames (sensitive files with credential data) copying
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\esentutl.exe" (Process_Command_Line="*vss*" OR Process_Command_Line="* /m *" OR Process_Command_Line="* /y *")) OR (Process_Command_Line="*\\windows\\ntds\\ntds.dit*" OR Process_Command_Line="*\\config\\sam*" OR Process_Command_Line="*\\config\\security*" OR Process_Command_Line="*\\config\\system *" OR Process_Command_Line="*\\repair\\sam*" OR Process_Command_Line="*\\repair\\system*" OR Process_Command_Line="*\\repair\\security*" OR Process_Command_Line="*\\config\\RegBack\\sam*" OR Process_Command_Line="*\\config\\RegBack\\system*" OR Process_Command_Line="*\\config\\RegBack\\security*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003 attack.t1003 car.2013-07-001 attack.s0404" | eval sigma_title="Copying Sensitive Files with Credential Data" | eval sigma_description="Files with well-known filenames (sensitive files with credential data) copying"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copying Sensitive Files with Credential Data - sysmon]
description = Files with well-known filenames (sensitive files with credential data) copying
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\esentutl.exe" (CommandLine="*vss*" OR CommandLine="* /m *" OR CommandLine="* /y *")) OR (CommandLine="*\\windows\\ntds\\ntds.dit*" OR CommandLine="*\\config\\sam*" OR CommandLine="*\\config\\security*" OR CommandLine="*\\config\\system *" OR CommandLine="*\\repair\\sam*" OR CommandLine="*\\repair\\system*" OR CommandLine="*\\repair\\security*" OR CommandLine="*\\config\\RegBack\\sam*" OR CommandLine="*\\config\\RegBack\\system*" OR CommandLine="*\\config\\RegBack\\security*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003 attack.t1003 car.2013-07-001 attack.s0404" | eval sigma_title="Copying Sensitive Files with Credential Data" | eval sigma_description="Files with well-known filenames (sensitive files with credential data) copying"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fireball Archer Install - winevent]
description = Detects Archer malware invocation via rundll32
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*InstallArcherSvc*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.011 attack.t1085" | eval sigma_title="Fireball Archer Install" | eval sigma_description="Detects Archer malware invocation via rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fireball Archer Install - sysmon]
description = Detects Archer malware invocation via rundll32
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*InstallArcherSvc*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.011 attack.t1085" | eval sigma_title="Fireball Archer Install" | eval sigma_description="Detects Archer malware invocation via rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Maze Ransomware - winevent]
description = Detects specific process characteristics of Maze ransomware word document droppers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\WINWORD.exe") (New_Process_Name="*.tmp")) OR (New_Process_Name="*\\wmic.exe" Creator_Process_Name="*\\Temp\\*" Process_Command_Line="*shadowcopy delete") OR (Process_Command_Line="*shadowcopy delete" Process_Command_Line="*\\..\\..\\system32*"))) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.t1204 attack.t1047 attack.impact attack.t1490" | eval sigma_title="Maze Ransomware" | eval sigma_description="Detects specific process characteristics of Maze ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Maze Ransomware - sysmon]
description = Detects specific process characteristics of Maze ransomware word document droppers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\WINWORD.exe") (Image="*.tmp")) OR (Image="*\\wmic.exe" ParentImage="*\\Temp\\*" CommandLine="*shadowcopy delete") OR (CommandLine="*shadowcopy delete" CommandLine="*\\..\\..\\system32*"))) | table ComputerName,User,Image | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.t1204 attack.t1047 attack.impact attack.t1490" | eval sigma_title="Maze Ransomware" | eval sigma_description="Detects specific process characteristics of Maze ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Snatch Ransomware - winevent]
description = Detects specific process characteristics of Snatch ransomware word document droppers
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*shutdown /r /f /t 00*" OR Process_Command_Line="*net stop SuperBackupMan*")) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Snatch Ransomware" | eval sigma_description="Detects specific process characteristics of Snatch ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Snatch Ransomware - sysmon]
description = Detects specific process characteristics of Snatch ransomware word document droppers
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*shutdown /r /f /t 00*" OR CommandLine="*net stop SuperBackupMan*")) | table ComputerName,User,Image | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Snatch Ransomware" | eval sigma_description="Detects specific process characteristics of Snatch ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - rar.exe - winevent]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rar.exe" Process_Command_Line="* a *") | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1002 attack.collection attack.t1560.001" | eval sigma_title="Data Compressed - rar.exe" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - rar.exe - sysmon]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rar.exe" CommandLine="* a *") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1002 attack.collection attack.t1560.001" | eval sigma_title="Data Compressed - rar.exe" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Exfiltration and Tunneling Tools Execution - winevent]
description = Well-known DNS Exfiltration tools execution
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\iodine.exe" OR New_Process_Name="*\\dnscat2*")) | eval sigma_attack_tags="attack.exfiltration attack.t1048.001 attack.t1048 attack.command_and_control attack.t1071.004 attack.t1071 attack.t1132.001 attack.t1132" | eval sigma_title="DNS Exfiltration and Tunneling Tools Execution" | eval sigma_description="Well-known DNS Exfiltration tools execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Exfiltration and Tunneling Tools Execution - sysmon]
description = Well-known DNS Exfiltration tools execution
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\iodine.exe" OR Image="*\\dnscat2*")) | eval sigma_attack_tags="attack.exfiltration attack.t1048.001 attack.t1048 attack.command_and_control attack.t1071.004 attack.t1071 attack.t1132.001 attack.t1132" | eval sigma_title="DNS Exfiltration and Tunneling Tools Execution" | eval sigma_description="Well-known DNS Exfiltration tools execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNSCat2 Powershell Implementation Detection Via Process Creation - winevent]
description = The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\nslookup.exe" Process_Command_Line="*\\nslookup.exe") | eventstats dc(New_Process_Name) as val by Creator_Process_Name | search val > 100 | table New_Process_Name,Process_Command_Line,Creator_Process_Name | eval sigma_attack_tags="attack.command_and_control attack.t1071 attack.t1071.004 attack.t1001.003 attack.t1041" | eval sigma_title="DNSCat2 Powershell Implementation Detection Via Process Creation" | eval sigma_description="The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally."
dispatch.earliest_time = -24h@h
alert.track = 0

[DNSCat2 Powershell Implementation Detection Via Process Creation - sysmon]
description = The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\nslookup.exe" CommandLine="*\\nslookup.exe") | eventstats dc(Image) as val by ParentImage | search val > 100 | table Image,CommandLine,ParentImage | eval sigma_attack_tags="attack.command_and_control attack.t1071 attack.t1071.004 attack.t1001.003 attack.t1041" | eval sigma_title="DNSCat2 Powershell Implementation Detection Via Process Creation" | eval sigma_description="The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally."
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - winevent]
description = Detects a discovery of domain trusts
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\dsquery.exe" Process_Command_Line="*-filter*" Process_Command_Line="*trustedDomain*") OR (New_Process_Name="*\\nltest.exe" Process_Command_Line="*domain_trusts*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Detects a discovery of domain trusts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - sysmon]
description = Detects a discovery of domain trusts
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\dsquery.exe" CommandLine="*-filter*" CommandLine="*trustedDomain*") OR (Image="*\\nltest.exe" CommandLine="*domain_trusts*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Detects a discovery of domain trusts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded FromBase64String - winevent]
description = Detects a base64 encoded FromBase64String keyword in a process command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*OjpGcm9tQmFzZTY0U3RyaW5n*" OR Process_Command_Line="*o6RnJvbUJhc2U2NFN0cmluZ*" OR Process_Command_Line="*6OkZyb21CYXNlNjRTdHJpbm*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Encoded FromBase64String" | eval sigma_description="Detects a base64 encoded FromBase64String keyword in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded FromBase64String - sysmon]
description = Detects a base64 encoded FromBase64String keyword in a process command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*OjpGcm9tQmFzZTY0U3RyaW5n*" OR CommandLine="*o6RnJvbUJhc2U2NFN0cmluZ*" OR CommandLine="*6OkZyb21CYXNlNjRTdHJpbm*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Encoded FromBase64String" | eval sigma_description="Detects a base64 encoded FromBase64String keyword in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded IEX - winevent]
description = Detects a base64 encoded IEX command string in a process command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*SUVYIChb*" OR Process_Command_Line="*lFWCAoW*" OR Process_Command_Line="*JRVggKF*" OR Process_Command_Line="*aWV4IChb*" OR Process_Command_Line="*lleCAoW*" OR Process_Command_Line="*pZXggKF*" OR Process_Command_Line="*aWV4IChOZX*" OR Process_Command_Line="*lleCAoTmV3*" OR Process_Command_Line="*pZXggKE5ld*" OR Process_Command_Line="*SUVYIChOZX*" OR Process_Command_Line="*lFWCAoTmV3*" OR Process_Command_Line="*JRVggKE5ld*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Encoded IEX" | eval sigma_description="Detects a base64 encoded IEX command string in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded IEX - sysmon]
description = Detects a base64 encoded IEX command string in a process command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*SUVYIChb*" OR CommandLine="*lFWCAoW*" OR CommandLine="*JRVggKF*" OR CommandLine="*aWV4IChb*" OR CommandLine="*lleCAoW*" OR CommandLine="*pZXggKF*" OR CommandLine="*aWV4IChOZX*" OR CommandLine="*lleCAoTmV3*" OR CommandLine="*pZXggKE5ld*" OR CommandLine="*SUVYIChOZX*" OR CommandLine="*lFWCAoTmV3*" OR CommandLine="*JRVggKE5ld*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Encoded IEX" | eval sigma_description="Detects a base64 encoded IEX command string in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Command Line Arguments - winevent]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*COMPlus_ETWEnabled=0*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562" | eval sigma_title="COMPlus_ETWEnabled Command Line Arguments" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Command Line Arguments - sysmon]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*COMPlus_ETWEnabled=0*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562" | eval sigma_title="COMPlus_ETWEnabled Command Line Arguments" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - winevent]
description = Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*cl*" Process_Command_Line="*/Trace*") OR (Process_Command_Line="*clear-log*" Process_Command_Line="*/Trace*") OR (Process_Command_Line="*sl*" Process_Command_Line="*/e:false*") OR (Process_Command_Line="*set-log*" Process_Command_Line="*/e:false*") OR (Process_Command_Line="*Remove-EtwTraceProvider*" Process_Command_Line="*EventLog-Microsoft-Windows-WMI-Activity-Trace*" Process_Command_Line="*{1418ef04-b0b4-4623-bf7e-d74ab47bbdaa}*") OR (Process_Command_Line="*Set-EtwTraceProvider*" Process_Command_Line="*{1418ef04-b0b4-4623-bf7e-d74ab47bbdaa}*" Process_Command_Line="*EventLog-Microsoft-Windows-WMI-Activity-Trace*" Process_Command_Line="*0x11*") OR (Process_Command_Line="*logman*" Process_Command_Line="*update*" Process_Command_Line="*trace*" Process_Command_Line="*--p*" Process_Command_Line="*-ets*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562.006 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects a command that clears or disables any ETW trace log which could indicate a logging evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - sysmon]
description = Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*cl*" CommandLine="*/Trace*") OR (CommandLine="*clear-log*" CommandLine="*/Trace*") OR (CommandLine="*sl*" CommandLine="*/e:false*") OR (CommandLine="*set-log*" CommandLine="*/e:false*") OR (CommandLine="*Remove-EtwTraceProvider*" CommandLine="*EventLog-Microsoft-Windows-WMI-Activity-Trace*" CommandLine="*{1418ef04-b0b4-4623-bf7e-d74ab47bbdaa}*") OR (CommandLine="*Set-EtwTraceProvider*" CommandLine="*{1418ef04-b0b4-4623-bf7e-d74ab47bbdaa}*" CommandLine="*EventLog-Microsoft-Windows-WMI-Activity-Trace*" CommandLine="*0x11*") OR (CommandLine="*logman*" CommandLine="*update*" CommandLine="*trace*" CommandLine="*--p*" CommandLine="*-ets*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562.006 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects a command that clears or disables any ETW trace log which could indicate a logging evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exfiltration and Tunneling Tools Execution - winevent]
description = Execution of well known tools for data exfiltration and tunneling
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\plink.exe" OR New_Process_Name="*\\socat.exe" OR New_Process_Name="*\\stunnel.exe" OR New_Process_Name="*\\httptunnel.exe")) | eval sigma_attack_tags="attack.exfiltration attack.command_and_control attack.t1043 attack.t1041 attack.t1572 attack.t1071.001" | eval sigma_title="Exfiltration and Tunneling Tools Execution" | eval sigma_description="Execution of well known tools for data exfiltration and tunneling"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exfiltration and Tunneling Tools Execution - sysmon]
description = Execution of well known tools for data exfiltration and tunneling
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\plink.exe" OR Image="*\\socat.exe" OR Image="*\\stunnel.exe" OR Image="*\\httptunnel.exe")) | eval sigma_attack_tags="attack.exfiltration attack.command_and_control attack.t1043 attack.t1041 attack.t1572 attack.t1071.001" | eval sigma_title="Exfiltration and Tunneling Tools Execution" | eval sigma_description="Execution of well known tools for data exfiltration and tunneling"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2015-1641 - winevent]
description = Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\MicroScMgmt.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005 attack.t1036" | eval sigma_title="Exploit for CVE-2015-1641" | eval sigma_description="Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2015-1641 - sysmon]
description = Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\MicroScMgmt.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005 attack.t1036" | eval sigma_title="Exploit for CVE-2015-1641" | eval sigma_description="Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-0261 - winevent]
description = Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\FLTLDR.exe*") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.t1204 attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Exploit for CVE-2017-0261" | eval sigma_description="Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-0261 - sysmon]
description = Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\FLTLDR.exe*") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.t1204 attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Exploit for CVE-2017-0261" | eval sigma_description="Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262"
dispatch.earliest_time = -24h@h
alert.track = 0

[Droppers Exploiting CVE-2017-11882 - winevent]
description = Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\EQNEDT32.EXE") | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.t1204 attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Droppers Exploiting CVE-2017-11882" | eval sigma_description="Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Droppers Exploiting CVE-2017-11882 - sysmon]
description = Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\EQNEDT32.EXE") | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.t1204 attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Droppers Exploiting CVE-2017-11882" | eval sigma_description="Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-8759 - winevent]
description = Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\csc.exe") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.t1204 attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Exploit for CVE-2017-8759" | eval sigma_description="Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-8759 - sysmon]
description = Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\csc.exe") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.t1204 attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Exploit for CVE-2017-8759" | eval sigma_description="Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting SetupComplete.cmd CVE-2019-1378 - winevent]
description = Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (ParentCommandLine="*\\cmd.exe*" ParentCommandLine="*/c*" ParentCommandLine="*C:\\Windows\\Setup\\Scripts\\*" (ParentCommandLine="*SetupComplete.cmd" OR ParentCommandLine="*PartnerSetupComplete.cmd")) NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*" OR New_Process_Name="C:\\Windows\\Setup\\*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068 attack.execution attack.t1059.003 attack.t1059 attack.t1574" | eval sigma_title="Exploiting SetupComplete.cmd CVE-2019-1378" | eval sigma_description="Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting SetupComplete.cmd CVE-2019-1378 - sysmon]
description = Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentCommandLine="*\\cmd.exe*" ParentCommandLine="*/c*" ParentCommandLine="*C:\\Windows\\Setup\\Scripts\\*" (ParentCommandLine="*SetupComplete.cmd" OR ParentCommandLine="*PartnerSetupComplete.cmd")) NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*" OR Image="C:\\Windows\\Setup\\*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068 attack.execution attack.t1059.003 attack.t1059 attack.t1574" | eval sigma_title="Exploiting SetupComplete.cmd CVE-2019-1378" | eval sigma_description="Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting CVE-2019-1388 - winevent]
description = Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\consent.exe" New_Process_Name="*\\iexplore.exe" Process_Command_Line="* http*" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (IntegrityLevel="System" OR Account_Name="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Exploiting CVE-2019-1388" | eval sigma_description="Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting CVE-2019-1388 - sysmon]
description = Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\consent.exe" Image="*\\iexplore.exe" CommandLine="* http*" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (IntegrityLevel="System" OR User="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Exploiting CVE-2019-1388" | eval sigma_description="Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploited CVE-2020-10189 Zoho ManageEngine - winevent]
description = Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*DesktopCentral_Server\\jre\\bin\\java.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1059.001 attack.t1086 attack.t1059.003 attack.t1059 attack.s0190" | eval sigma_title="Exploited CVE-2020-10189 Zoho ManageEngine" | eval sigma_description="Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploited CVE-2020-10189 Zoho ManageEngine - sysmon]
description = Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*DesktopCentral_Server\\jre\\bin\\java.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1059.001 attack.t1086 attack.t1059.003 attack.t1059 attack.s0190" | eval sigma_title="Exploited CVE-2020-10189 Zoho ManageEngine" | eval sigma_description="Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PrinterPorts Creation (CVE-2020-1048) - winevent]
description = Detects new commands that add new printer port which point to suspicious file
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*Add-PrinterPort -Name*") (Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bat*")) OR (Process_Command_Line="*Generic / Text Only*"))) | eval sigma_attack_tags="attack.persistence attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PrinterPorts Creation (CVE-2020-1048)" | eval sigma_description="Detects new commands that add new printer port which point to suspicious file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PrinterPorts Creation (CVE-2020-1048) - sysmon]
description = Detects new commands that add new printer port which point to suspicious file
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*Add-PrinterPort -Name*") (CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bat*")) OR (CommandLine="*Generic / Text Only*"))) | eval sigma_attack_tags="attack.persistence attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PrinterPorts Creation (CVE-2020-1048)" | eval sigma_description="Detects new commands that add new printer port which point to suspicious file"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS RCE CVE-2020-1350 - winevent]
description = Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\System32\\dns.exe" NOT ((New_Process_Name="*\\System32\\werfault.exe" OR New_Process_Name="*\\System32\\conhost.exe" OR New_Process_Name="*\\System32\\dnscmd.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1569.002" | eval sigma_title="DNS RCE CVE-2020-1350" | eval sigma_description="Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS RCE CVE-2020-1350 - sysmon]
description = Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\System32\\dns.exe" NOT ((Image="*\\System32\\werfault.exe" OR Image="*\\System32\\conhost.exe" OR Image="*\\System32\\dnscmd.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1569.002" | eval sigma_title="DNS RCE CVE-2020-1350" | eval sigma_description="Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process"
dispatch.earliest_time = -24h@h
alert.track = 0

[File or Folder Permissions Modifications - winevent]
description = Detects a file or folder permissions modifications
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\takeown.exe" OR New_Process_Name="*\\cacls.exe" OR New_Process_Name="*\\icacls.exe") Process_Command_Line="*/grant*") OR (New_Process_Name="*\\attrib.exe" Process_Command_Line="*-r*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1222" | eval sigma_title="File or Folder Permissions Modifications" | eval sigma_description="Detects a file or folder permissions modifications"
dispatch.earliest_time = -24h@h
alert.track = 0

[File or Folder Permissions Modifications - sysmon]
description = Detects a file or folder permissions modifications
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\takeown.exe" OR Image="*\\cacls.exe" OR Image="*\\icacls.exe") CommandLine="*/grant*") OR (Image="*\\attrib.exe" CommandLine="*-r*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1222" | eval sigma_title="File or Folder Permissions Modifications" | eval sigma_description="Detects a file or folder permissions modifications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Grabbing Sensitive Hives via Reg Utility - winevent]
description = Dump sam, system or security hives using REG.exe utility
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*save*" OR Process_Command_Line="*export*") (Process_Command_Line="*hklm*" OR Process_Command_Line="*hkey_local_machine*") (Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003 car.2013-07-001" | eval sigma_title="Grabbing Sensitive Hives via Reg Utility" | eval sigma_description="Dump sam, system or security hives using REG.exe utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Grabbing Sensitive Hives via Reg Utility - sysmon]
description = Dump sam, system or security hives using REG.exe utility
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*save*" OR CommandLine="*export*") (CommandLine="*hklm*" OR CommandLine="*hkey_local_machine*") (CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003 car.2013-07-001" | eval sigma_title="Grabbing Sensitive Hives via Reg Utility" | eval sigma_description="Dump sam, system or security hives using REG.exe utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bloodhound and Sharphound Hack Tool - winevent]
description = Detects command line parameters used by Bloodhound and Sharphound hack tools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\Bloodhound.exe*" OR New_Process_Name="*\\SharpHound.exe*") OR (Process_Command_Line="* -CollectionMethod All *" OR Process_Command_Line="*.exe -c All -d *" OR Process_Command_Line="*Invoke-Bloodhound*" OR Process_Command_Line="*Get-BloodHoundData*") OR (Process_Command_Line="* -JsonFolder *" Process_Command_Line="* -ZipFileName *") OR (Process_Command_Line="* DCOnly *" Process_Command_Line="* --NoSaveCache *"))) | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002 attack.t1087 attack.t1482 attack.t1069.001 attack.t1069.002 attack.t1069 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Bloodhound and Sharphound Hack Tool" | eval sigma_description="Detects command line parameters used by Bloodhound and Sharphound hack tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bloodhound and Sharphound Hack Tool - sysmon]
description = Detects command line parameters used by Bloodhound and Sharphound hack tools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Bloodhound.exe*" OR Image="*\\SharpHound.exe*") OR (CommandLine="* -CollectionMethod All *" OR CommandLine="*.exe -c All -d *" OR CommandLine="*Invoke-Bloodhound*" OR CommandLine="*Get-BloodHoundData*") OR (CommandLine="* -JsonFolder *" CommandLine="* -ZipFileName *") OR (CommandLine="* DCOnly *" CommandLine="* --NoSaveCache *"))) | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002 attack.t1087 attack.t1482 attack.t1069.001 attack.t1069.002 attack.t1069 attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Bloodhound and Sharphound Hack Tool" | eval sigma_description="Detects command line parameters used by Bloodhound and Sharphound hack tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Koadic Execution - winevent]
description = Detects command line parameters used by Koadic hack tool
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Process_Command_Line="*/q*" Process_Command_Line="*/c*" Process_Command_Line="*chcp*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059 attack.t1059.005 attack.t1059.007 attack.t1064" | eval sigma_title="Koadic Execution" | eval sigma_description="Detects command line parameters used by Koadic hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Koadic Execution - sysmon]
description = Detects command line parameters used by Koadic hack tool
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" CommandLine="*/q*" CommandLine="*/c*" CommandLine="*chcp*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059 attack.t1059.005 attack.t1059.007 attack.t1064" | eval sigma_title="Koadic Execution" | eval sigma_description="Detects command line parameters used by Koadic hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rubeus Hack Tool - winevent]
description = Detects command line parameters used by Rubeus hack tool
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* asreproast *" OR Process_Command_Line="* dump /service:krbtgt *" OR Process_Command_Line="* kerberoast *" OR Process_Command_Line="* createnetonly /program:*" OR Process_Command_Line="* ptt /ticket:*" OR Process_Command_Line="* /impersonateuser:*" OR Process_Command_Line="* renew /ticket:*" OR Process_Command_Line="* asktgt /user:*" OR Process_Command_Line="* harvest /interval:*" OR Process_Command_Line="* s4u /user:*" OR Process_Command_Line="* s4u /ticket:*" OR Process_Command_Line="* hash /password:*")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1558.003 attack.t1558 attack.lateral_movement attack.t1550.003 attack.t1097" | eval sigma_title="Rubeus Hack Tool" | eval sigma_description="Detects command line parameters used by Rubeus hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rubeus Hack Tool - sysmon]
description = Detects command line parameters used by Rubeus hack tool
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* asreproast *" OR CommandLine="* dump /service:krbtgt *" OR CommandLine="* kerberoast *" OR CommandLine="* createnetonly /program:*" OR CommandLine="* ptt /ticket:*" OR CommandLine="* /impersonateuser:*" OR CommandLine="* renew /ticket:*" OR CommandLine="* asktgt /user:*" OR CommandLine="* harvest /interval:*" OR CommandLine="* s4u /user:*" OR CommandLine="* s4u /ticket:*" OR CommandLine="* hash /password:*")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1558.003 attack.t1558 attack.lateral_movement attack.t1550.003 attack.t1097" | eval sigma_title="Rubeus Hack Tool" | eval sigma_description="Detects command line parameters used by Rubeus hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[SecurityXploded Tool - winevent]
description = Detects the execution of SecurityXploded Tools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Company="SecurityXploded" OR New_Process_Name="*PasswordDump.exe" OR OriginalFilename="*PasswordDump.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1555 attack.t1003 attack.t1503" | eval sigma_title="SecurityXploded Tool" | eval sigma_description="Detects the execution of SecurityXploded Tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[SecurityXploded Tool - sysmon]
description = Detects the execution of SecurityXploded Tools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Company="SecurityXploded" OR Image="*PasswordDump.exe" OR OriginalFilename="*PasswordDump.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1555 attack.t1003 attack.t1503" | eval sigma_title="SecurityXploded Tool" | eval sigma_description="Detects the execution of SecurityXploded Tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[HH.exe Execution - winevent]
description = Identifies usage of hh.exe executing recently modified .chm files.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\hh.exe" Process_Command_Line="*.chm*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001 attack.execution attack.t1223" | eval sigma_title="HH.exe Execution" | eval sigma_description="Identifies usage of hh.exe executing recently modified .chm files."
dispatch.earliest_time = -24h@h
alert.track = 0

[HH.exe Execution - sysmon]
description = Identifies usage of hh.exe executing recently modified .chm files.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\hh.exe" CommandLine="*.chm*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001 attack.execution attack.t1223" | eval sigma_title="HH.exe Execution" | eval sigma_description="Identifies usage of hh.exe executing recently modified .chm files."
dispatch.earliest_time = -24h@h
alert.track = 0

[HTML Help Shell Spawn - winevent]
description = Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="C:\\Windows\\hh.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\rundll32.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001 attack.t1218.010 attack.t1218.011 attack.execution attack.t1223 attack.t1059.001 attack.t1059.003 attack.t1059.005 attack.t1059.007 attack.t1047" | eval sigma_title="HTML Help Shell Spawn" | eval sigma_description="Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)"
dispatch.earliest_time = -24h@h
alert.track = 0

[HTML Help Shell Spawn - sysmon]
description = Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="C:\\Windows\\hh.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\rundll32.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001 attack.t1218.010 attack.t1218.011 attack.execution attack.t1223 attack.t1059.001 attack.t1059.003 attack.t1059.005 attack.t1059.007 attack.t1047" | eval sigma_title="HTML Help Shell Spawn" | eval sigma_description="Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious HWP Sub Processes - winevent]
description = Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\Hwp.exe" New_Process_Name="*\\gbb.exe") | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.t1193 attack.execution attack.t1203 attack.t1059.003 attack.t1059 attack.g0032" | eval sigma_title="Suspicious HWP Sub Processes" | eval sigma_description="Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious HWP Sub Processes - sysmon]
description = Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\Hwp.exe" Image="*\\gbb.exe") | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.t1193 attack.execution attack.t1203 attack.t1059.003 attack.t1059 attack.g0032" | eval sigma_title="Suspicious HWP Sub Processes" | eval sigma_description="Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Lateralization Detection - winevent]
description = Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cmd.exe*" Process_Command_Line="*&1*" (((Creator_Process_Name="*\\wmiprvse.exe" OR Creator_Process_Name="*\\mmc.exe" OR Creator_Process_Name="*\\explorer.exe" OR Creator_Process_Name="*\\services.exe") Process_Command_Line="*/Q*" Process_Command_Line="*/c*" Process_Command_Line="*\\\\127.0.0.1\\*") OR ((ParentCommandLine="*svchost.exe -k netsvcs*" OR ParentCommandLine="*taskeng.exe*") Process_Command_Line="*/C*" Process_Command_Line="*Windows\\Temp\\*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1175 attack.t1021.003 attack.t1021" | eval sigma_title="Impacket Lateralization Detection" | eval sigma_description="Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Lateralization Detection - sysmon]
description = Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cmd.exe*" CommandLine="*&1*" (((ParentImage="*\\wmiprvse.exe" OR ParentImage="*\\mmc.exe" OR ParentImage="*\\explorer.exe" OR ParentImage="*\\services.exe") CommandLine="*/Q*" CommandLine="*/c*" CommandLine="*\\\\127.0.0.1\\*") OR ((ParentCommandLine="*svchost.exe -k netsvcs*" OR ParentCommandLine="*taskeng.exe*") CommandLine="*/C*" CommandLine="*Windows\\Temp\\*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1175 attack.t1021.003 attack.t1021" | eval sigma_title="Impacket Lateralization Detection" | eval sigma_description="Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution By Program Compatibility Wizard - winevent]
description = Detect indirect command execution via Program Compatibility Assistant pcwrun.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\pcwrun.exe") | table ComputerName,Account_Name,ParentCommandLine,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Indirect Command Execution By Program Compatibility Wizard" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcwrun.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution By Program Compatibility Wizard - sysmon]
description = Detect indirect command execution via Program Compatibility Assistant pcwrun.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\pcwrun.exe") | table ComputerName,User,ParentCommandLine,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Indirect Command Execution By Program Compatibility Wizard" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcwrun.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution - winevent]
description = Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\pcalua.exe" OR Creator_Process_Name="*\\forfiles.exe")) | table ComputerName,Account_Name,ParentCommandLine,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Indirect Command Execution" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution - sysmon]
description = Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\pcalua.exe" OR ParentImage="*\\forfiles.exe")) | table ComputerName,User,ParentCommandLine,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Indirect Command Execution" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Debugger Registration Cmdline - winevent]
description = Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\*" (Process_Command_Line="*sethc.exe*" OR Process_Command_Line="*utilman.exe*" OR Process_Command_Line="*osk.exe*" OR Process_Command_Line="*magnify.exe*" OR Process_Command_Line="*narrator.exe*" OR Process_Command_Line="*displayswitch.exe*" OR Process_Command_Line="*atbroker.exe*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.008 attack.t1015" | eval sigma_title="Suspicious Debugger Registration Cmdline" | eval sigma_description="Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Debugger Registration Cmdline - sysmon]
description = Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\CurrentVersion\\Image File Execution Options\\*" (CommandLine="*sethc.exe*" OR CommandLine="*utilman.exe*" OR CommandLine="*osk.exe*" OR CommandLine="*magnify.exe*" OR CommandLine="*narrator.exe*" OR CommandLine="*displayswitch.exe*" OR CommandLine="*atbroker.exe*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.008 attack.t1015" | eval sigma_title="Suspicious Debugger Registration Cmdline" | eval sigma_description="Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive AT Job - winevent]
description = Detect an interactive AT job, which may be used as a form of privilege escalation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\at.exe" Process_Command_Line="*interactive*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.002 attack.t1053" | eval sigma_title="Interactive AT Job" | eval sigma_description="Detect an interactive AT job, which may be used as a form of privilege escalation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive AT Job - sysmon]
description = Detect an interactive AT job, which may be used as a form of privilege escalation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\at.exe" CommandLine="*interactive*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.002 attack.t1053" | eval sigma_title="Interactive AT Job" | eval sigma_description="Detect an interactive AT job, which may be used as a form of privilege escalation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Kernel and 3rd-Party Drivers Exploits Token Stealing - winevent]
description = Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentIntegrityLevel="Medium" IntegrityLevel="System" Account_Name="NT AUTHORITY\\SYSTEM") | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Windows Kernel and 3rd-Party Drivers Exploits Token Stealing" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Kernel and 3rd-Party Drivers Exploits Token Stealing - sysmon]
description = Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentIntegrityLevel="Medium" IntegrityLevel="System" User="NT AUTHORITY\\SYSTEM") | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Windows Kernel and 3rd-Party Drivers Exploits Token Stealing" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spwaned by SVCHOST - winevent]
description = Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\svchost.exe" New_Process_Name="*\\mshta.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005 attack.execution attack.t1170" | eval sigma_title="MSHTA Spwaned by SVCHOST" | eval sigma_description="Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spwaned by SVCHOST - sysmon]
description = Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\svchost.exe" Image="*\\mshta.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005 attack.execution attack.t1170" | eval sigma_title="MSHTA Spwaned by SVCHOST" | eval sigma_description="Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Local Accounts Discovery - winevent]
description = Local accounts, System Owner/User discovery using operating systems utilities
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\whoami.exe" OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="*useraccount*" Process_Command_Line="*get*") OR (New_Process_Name="*\\quser.exe" OR New_Process_Name="*\\qwinsta.exe") OR (New_Process_Name="*\\cmdkey.exe" Process_Command_Line="*/list*") OR (New_Process_Name="*\\cmd.exe" Process_Command_Line="*/c*" Process_Command_Line="*dir *" Process_Command_Line="*\\Users\\*")) NOT ((Process_Command_Line="* rmdir *"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*user*") NOT ((Process_Command_Line="*/domain*" OR Process_Command_Line="*/add*" OR Process_Command_Line="*/delete*" OR Process_Command_Line="*/active*" OR Process_Command_Line="*/expires*" OR Process_Command_Line="*/passwordreq*" OR Process_Command_Line="*/scriptpath*" OR Process_Command_Line="*/times*" OR Process_Command_Line="*/workstations*"))))) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1033 attack.t1087.001 attack.t1087" | eval sigma_title="Local Accounts Discovery" | eval sigma_description="Local accounts, System Owner/User discovery using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Local Accounts Discovery - sysmon]
description = Local accounts, System Owner/User discovery using operating systems utilities
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\whoami.exe" OR (Image="*\\wmic.exe" CommandLine="*useraccount*" CommandLine="*get*") OR (Image="*\\quser.exe" OR Image="*\\qwinsta.exe") OR (Image="*\\cmdkey.exe" CommandLine="*/list*") OR (Image="*\\cmd.exe" CommandLine="*/c*" CommandLine="*dir *" CommandLine="*\\Users\\*")) NOT ((CommandLine="* rmdir *"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*user*") NOT ((CommandLine="*/domain*" OR CommandLine="*/add*" OR CommandLine="*/delete*" OR CommandLine="*/active*" OR CommandLine="*/expires*" OR CommandLine="*/passwordreq*" OR CommandLine="*/scriptpath*" OR CommandLine="*/times*" OR CommandLine="*/workstations*"))))) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1033 attack.t1087.001 attack.t1087" | eval sigma_title="Local Accounts Discovery" | eval sigma_description="Local accounts, System Owner/User discovery using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dumping - winevent]
description = Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*lsass*" Process_Command_Line="*.dmp*") NOT (New_Process_Name="*\\werfault.exe")) OR (New_Process_Name="*\\procdump*" New_Process_Name="*.exe" Process_Command_Line="*lsass*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003" | eval sigma_title="LSASS Memory Dumping" | eval sigma_description="Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dumping - sysmon]
description = Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*lsass*" CommandLine="*.dmp*") NOT (Image="*\\werfault.exe")) OR (Image="*\\procdump*" Image="*.exe" CommandLine="*lsass*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003" | eval sigma_title="LSASS Memory Dumping" | eval sigma_description="Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Dridex Process Pattern - winevent]
description = Detects typical Dridex process patterns
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\svchost.exe" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\Desktop\\*") OR (Creator_Process_Name="*\\svchost.exe" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\whoami.exe" Process_Command_Line="*all*") OR ((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*view*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055 attack.discovery attack.t1135 attack.t1033" | eval sigma_title="Dridex Process Pattern" | eval sigma_description="Detects typical Dridex process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dridex Process Pattern - sysmon]
description = Detects typical Dridex process patterns
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\svchost.exe" CommandLine="*C:\\Users\\*" CommandLine="*\\Desktop\\*") OR (ParentImage="*\\svchost.exe" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\whoami.exe" CommandLine="*all*") OR ((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*view*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055 attack.discovery attack.t1135 attack.t1033" | eval sigma_title="Dridex Process Pattern" | eval sigma_description="Detects typical Dridex process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[DTRACK Process Creation - winevent]
description = Detects specific process parameters as seen in DTRACK infections
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* echo EEEE > *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="DTRACK Process Creation" | eval sigma_description="Detects specific process parameters as seen in DTRACK infections"
dispatch.earliest_time = -24h@h
alert.track = 0

[DTRACK Process Creation - sysmon]
description = Detects specific process parameters as seen in DTRACK infections
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* echo EEEE > *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="DTRACK Process Creation" | eval sigma_description="Detects specific process parameters as seen in DTRACK infections"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet Process Creation - winevent]
description = Detects all Emotet like process executions that are not covered by the more generic rules
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -e* PAA*" OR Process_Command_Line="*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*" OR Process_Command_Line="*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*" OR Process_Command_Line="*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*" OR Process_Command_Line="*IgAoACcAKgAnACkAOwAkA*" OR Process_Command_Line="*IAKAAnACoAJwApADsAJA*" OR Process_Command_Line="*iACgAJwAqACcAKQA7ACQA*" OR Process_Command_Line="*JABGAGwAeAByAGgAYwBmAGQ*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.defense_evasion attack.t1027" | eval sigma_title="Emotet Process Creation" | eval sigma_description="Detects all Emotet like process executions that are not covered by the more generic rules"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet Process Creation - sysmon]
description = Detects all Emotet like process executions that are not covered by the more generic rules
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -e* PAA*" OR CommandLine="*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*" OR CommandLine="*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*" OR CommandLine="*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*" OR CommandLine="*IgAoACcAKgAnACkAOwAkA*" OR CommandLine="*IAKAAnACoAJwApADsAJA*" OR CommandLine="*iACgAJwAqACcAKQA7ACQA*" OR CommandLine="*JABGAGwAeAByAGgAYwBmAGQ*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.defense_evasion attack.t1027" | eval sigma_title="Emotet Process Creation" | eval sigma_description="Detects all Emotet like process executions that are not covered by the more generic rules"
dispatch.earliest_time = -24h@h
alert.track = 0

[Formbook Process Creation - winevent]
description = Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (ParentCommandLine="C:\\Windows\\System32\\*" OR ParentCommandLine="C:\\Windows\\SysWOW64\\*") (ParentCommandLine="*.exe") Process_Command_Line="*C:\\Users\\*" ((Process_Command_Line="*/c*" Process_Command_Line="*del*" Process_Command_Line="*\\AppData\\Local\\Temp\\*") OR (Process_Command_Line="*/c*" Process_Command_Line="*del*" Process_Command_Line="*\\Desktop\\*") OR (Process_Command_Line="*/C*" Process_Command_Line="*type nul >*" Process_Command_Line="*\\Desktop\\*")) Process_Command_Line="*.exe") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Formbook Process Creation" | eval sigma_description="Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters."
dispatch.earliest_time = -24h@h
alert.track = 0

[Formbook Process Creation - sysmon]
description = Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentCommandLine="C:\\Windows\\System32\\*" OR ParentCommandLine="C:\\Windows\\SysWOW64\\*") (ParentCommandLine="*.exe") CommandLine="*C:\\Users\\*" ((CommandLine="*/c*" CommandLine="*del*" CommandLine="*\\AppData\\Local\\Temp\\*") OR (CommandLine="*/c*" CommandLine="*del*" CommandLine="*\\Desktop\\*") OR (CommandLine="*/C*" CommandLine="*type nul >*" CommandLine="*\\Desktop\\*")) CommandLine="*.exe") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Formbook Process Creation" | eval sigma_description="Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters."
dispatch.earliest_time = -24h@h
alert.track = 0

[NotPetya Ransomware Activity - winevent]
description = Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\AppData\\Local\\Temp\\*" Process_Command_Line="*\\.\\pipe\\\*") OR (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*.dat,#1") OR "\\perfc.dat")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.execution attack.t1085 attack.t1070.001 attack.t1070 attack.credential_access attack.t1003.001 attack.t1003 car.2016-04-002" | eval sigma_title="NotPetya Ransomware Activity" | eval sigma_description="Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil"
dispatch.earliest_time = -24h@h
alert.track = 0

[NotPetya Ransomware Activity - sysmon]
description = Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\AppData\\Local\\Temp\\*" CommandLine="*\\.\\pipe\\\*") OR (Image="*\\rundll32.exe" CommandLine="*.dat,#1") OR "\\perfc.dat")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.execution attack.t1085 attack.t1070.001 attack.t1070 attack.credential_access attack.t1003.001 attack.t1003 car.2016-04-002" | eval sigma_title="NotPetya Ransomware Activity" | eval sigma_description="Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil"
dispatch.earliest_time = -24h@h
alert.track = 0

[QBot Process Creation - winevent]
description = Detects QBot like process executions
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\WinRAR.exe" New_Process_Name="*\\wscript.exe") OR Process_Command_Line="* /c ping.exe -n 6 127.0.0.1 & type *") OR (Process_Command_Line="*regsvr32.exe*" Process_Command_Line="*C:\\ProgramData*" Process_Command_Line="*.tmp*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.defense_evasion attack.t1064" | eval sigma_title="QBot Process Creation" | eval sigma_description="Detects QBot like process executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[QBot Process Creation - sysmon]
description = Detects QBot like process executions
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\WinRAR.exe" Image="*\\wscript.exe") OR CommandLine="* /c ping.exe -n 6 127.0.0.1 & type *") OR (CommandLine="*regsvr32.exe*" CommandLine="*C:\\ProgramData*" CommandLine="*.tmp*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.defense_evasion attack.t1064" | eval sigma_title="QBot Process Creation" | eval sigma_description="Detects QBot like process executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - winevent]
description = Detects Ryuk ransomware activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Microsoft\\Windows\\CurrentVersion\\Run*" Process_Command_Line="*C:\\users\\Public\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001 attack.t1060" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - sysmon]
description = Detects Ryuk ransomware activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Microsoft\\Windows\\CurrentVersion\\Run*" CommandLine="*C:\\users\\Public\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001 attack.t1060" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - winevent]
description = Detects wscript/cscript executions of scripts located in user directories
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="*C:\\Users\\*" OR Process_Command_Line="*C:\\ProgramData\\*") (Process_Command_Line="*.jse*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.vba*" OR Process_Command_Line="*.vbs*")) NOT (Creator_Process_Name="*\\winzip*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.defense_evasion attack.t1064" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects wscript/cscript executions of scripts located in user directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - sysmon]
description = Detects wscript/cscript executions of scripts located in user directories
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="*C:\\Users\\*" OR CommandLine="*C:\\ProgramData\\*") (CommandLine="*.jse*" OR CommandLine="*.vbe*" OR CommandLine="*.js*" OR CommandLine="*.vba*" OR CommandLine="*.vbs*")) NOT (ParentImage="*\\winzip*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.defense_evasion attack.t1064" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects wscript/cscript executions of scripts located in user directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Recon Activity - winevent]
description = Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\cmd.exe") (New_Process_Name="*\\nltest.exe") (Process_Command_Line="*/domain_trusts /all_trusts*")) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Trickbot Malware Recon Activity" | eval sigma_description="Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Recon Activity - sysmon]
description = Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\cmd.exe") (Image="*\\nltest.exe") (CommandLine="*/domain_trusts /all_trusts*")) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Trickbot Malware Recon Activity" | eval sigma_description="Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Activity - winevent]
description = Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wermgr.exe") (Creator_Process_Name="*\\rundll32.exe") (ParentCommandLine="*DllRegisterServer*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Trickbot Malware Activity" | eval sigma_description="Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Activity - sysmon]
description = Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wermgr.exe") (ParentImage="*\\rundll32.exe") (ParentCommandLine="*DllRegisterServer*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Trickbot Malware Activity" | eval sigma_description="Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[WannaCry Ransomware - winevent]
description = Detects WannaCry ransomware activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tasksche.exe" OR New_Process_Name="*\\mssecsvc.exe" OR New_Process_Name="*\\taskdl.exe" OR New_Process_Name="*\\taskhsvc.exe" OR New_Process_Name="*\\taskse.exe" OR New_Process_Name="*\\111.exe" OR New_Process_Name="*\\lhdfrgui.exe" OR New_Process_Name="*\\diskpart.exe" OR New_Process_Name="*\\linuxnew.exe" OR New_Process_Name="*\\wannacry.exe") OR New_Process_Name="*WanaDecryptor*" OR (Process_Command_Line="*icacls*" Process_Command_Line="*/grant*" Process_Command_Line="*Everyone:F*" Process_Command_Line="*/T*" Process_Command_Line="*/C*" Process_Command_Line="*/Q*") OR (Process_Command_Line="*bcdedit*" Process_Command_Line="*/set*" Process_Command_Line="*{default}*" Process_Command_Line="*recoveryenabled*" Process_Command_Line="*no*") OR (Process_Command_Line="*wbadmin*" Process_Command_Line="*delete*" Process_Command_Line="*catalog*" Process_Command_Line="*-quiet*") OR Process_Command_Line="*@Please_Read_Me@.txt*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1210 attack.discovery attack.t1083 attack.defense_evasion attack.t1222.001 attack.t1222 attack.impact attack.t1486 attack.t1490" | eval sigma_title="WannaCry Ransomware" | eval sigma_description="Detects WannaCry ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WannaCry Ransomware - sysmon]
description = Detects WannaCry ransomware activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tasksche.exe" OR Image="*\\mssecsvc.exe" OR Image="*\\taskdl.exe" OR Image="*\\taskhsvc.exe" OR Image="*\\taskse.exe" OR Image="*\\111.exe" OR Image="*\\lhdfrgui.exe" OR Image="*\\diskpart.exe" OR Image="*\\linuxnew.exe" OR Image="*\\wannacry.exe") OR Image="*WanaDecryptor*" OR (CommandLine="*icacls*" CommandLine="*/grant*" CommandLine="*Everyone:F*" CommandLine="*/T*" CommandLine="*/C*" CommandLine="*/Q*") OR (CommandLine="*bcdedit*" CommandLine="*/set*" CommandLine="*{default}*" CommandLine="*recoveryenabled*" CommandLine="*no*") OR (CommandLine="*wbadmin*" CommandLine="*delete*" CommandLine="*catalog*" CommandLine="*-quiet*") OR CommandLine="*@Please_Read_Me@.txt*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1210 attack.discovery attack.t1083 attack.defense_evasion attack.t1222.001 attack.t1222 attack.impact attack.t1486 attack.t1490" | eval sigma_title="WannaCry Ransomware" | eval sigma_description="Detects WannaCry ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Usage of the Manage-bde.wsf Script - winevent]
description = Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cscript*" Process_Command_Line="*manage-bde.wsf*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Suspicious Usage of the Manage-bde.wsf Script" | eval sigma_description="Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Usage of the Manage-bde.wsf Script - sysmon]
description = Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cscript*" CommandLine="*manage-bde.wsf*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Suspicious Usage of the Manage-bde.wsf Script" | eval sigma_description="Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script"
dispatch.earliest_time = -24h@h
alert.track = 0

[MavInject Process Injection - winevent]
description = Detects process injection using the signed Windows tool Mavinject32.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /INJECTRUNNING *") | eval sigma_attack_tags="attack.t1055 attack.t1055.001 attack.t1218" | eval sigma_title="MavInject Process Injection" | eval sigma_description="Detects process injection using the signed Windows tool Mavinject32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[MavInject Process Injection - sysmon]
description = Detects process injection using the signed Windows tool Mavinject32.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /INJECTRUNNING *") | eval sigma_attack_tags="attack.t1055 attack.t1055.001 attack.t1218" | eval sigma_title="MavInject Process Injection" | eval sigma_description="Detects process injection using the signed Windows tool Mavinject32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Start - winevent]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\services.exe" ((Process_Command_Line="*cmd*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*%COMSPEC%*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*rundll32*" Process_Command_Line="*.dll,a*" Process_Command_Line="*/p:*"))) NOT (Process_Command_Line="*MpCmdRun*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1134 attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Start" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Start - sysmon]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\services.exe" ((CommandLine="*cmd*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*%COMSPEC%*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*rundll32*" CommandLine="*.dll,a*" CommandLine="*/p:*"))) NOT (CommandLine="*MpCmdRun*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1134 attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Start" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Command Line - winevent]
description = Detection well-known mimikatz command line arguments
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*DumpCreds*" OR Process_Command_Line="*invoke-mimikatz*") OR ((Process_Command_Line="*rpc*" OR Process_Command_Line="*token*" OR Process_Command_Line="*crypto*" OR Process_Command_Line="*dpapi*" OR Process_Command_Line="*sekurlsa*" OR Process_Command_Line="*kerberos*" OR Process_Command_Line="*lsadump*" OR Process_Command_Line="*privilege*" OR Process_Command_Line="*process*") (Process_Command_Line="*::*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006" | eval sigma_title="Mimikatz Command Line" | eval sigma_description="Detection well-known mimikatz command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Command Line - sysmon]
description = Detection well-known mimikatz command line arguments
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*DumpCreds*" OR CommandLine="*invoke-mimikatz*") OR ((CommandLine="*rpc*" OR CommandLine="*token*" OR CommandLine="*crypto*" OR CommandLine="*dpapi*" OR CommandLine="*sekurlsa*" OR CommandLine="*kerberos*" OR CommandLine="*lsadump*" OR CommandLine="*privilege*" OR CommandLine="*process*") (CommandLine="*::*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006" | eval sigma_title="Mimikatz Command Line" | eval sigma_description="Detection well-known mimikatz command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from MMC
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\mmc.exe" ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\reg.exe" OR New_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\BITSADMIN*"))) | table Process_Command_Line,New_Process_Name,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1175 attack.t1021.003" | eval sigma_title="MMC Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MMC"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from MMC
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\mmc.exe" ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\reg.exe" OR Image="*\\regsvr32.exe") OR (Image="*\\BITSADMIN*"))) | table CommandLine,Image,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1175 attack.t1021.003" | eval sigma_title="MMC Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MMC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mouse Lock Credential Gathering - winevent]
description = In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="*Mouse Lock*" OR Company="*Misc314*" OR Process_Command_Line="*Mouse Lock_*")) | table Product,Company,Process_Command_Line | eval sigma_attack_tags="attack.credential_access attack.collection attack.t1056.002" | eval sigma_title="Mouse Lock Credential Gathering" | eval sigma_description="In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mouse Lock Credential Gathering - sysmon]
description = In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="*Mouse Lock*" OR Company="*Misc314*" OR CommandLine="*Mouse Lock_*")) | table Product,Company,CommandLine | eval sigma_attack_tags="attack.credential_access attack.collection attack.t1056.002" | eval sigma_title="Mouse Lock Credential Gathering" | eval sigma_description="In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mshta JavaScript Execution - winevent]
description = Identifies suspicious mshta.exe commands
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" Process_Command_Line="*javascript*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1170 attack.t1218.005" | eval sigma_title="Mshta JavaScript Execution" | eval sigma_description="Identifies suspicious mshta.exe commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mshta JavaScript Execution - sysmon]
description = Identifies suspicious mshta.exe commands
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mshta.exe" CommandLine="*javascript*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1170 attack.t1218.005" | eval sigma_title="Mshta JavaScript Execution" | eval sigma_description="Identifies suspicious mshta.exe commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from MSHTA
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\mshta.exe" ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\reg.exe" OR New_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\BITSADMIN*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1170 attack.t1218.005 car.2013-02-003 car.2013-03-001 car.2014-04-003" | eval sigma_title="MSHTA Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MSHTA"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from MSHTA
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\mshta.exe" ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\reg.exe" OR Image="*\\regsvr32.exe") OR (Image="*\\BITSADMIN*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1170 attack.t1218.005 car.2013-02-003 car.2013-03-001 car.2014-04-003" | eval sigma_title="MSHTA Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MSHTA"
dispatch.earliest_time = -24h@h
alert.track = 0

[Quick Execution of a Series of Suspicious Commands - winevent]
description = Detects multiple suspicious process in a limited timeframe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="arp.exe" OR Process_Command_Line="at.exe" OR Process_Command_Line="attrib.exe" OR Process_Command_Line="cscript.exe" OR Process_Command_Line="dsquery.exe" OR Process_Command_Line="hostname.exe" OR Process_Command_Line="ipconfig.exe" OR Process_Command_Line="mimikatz.exe" OR Process_Command_Line="nbtstat.exe" OR Process_Command_Line="net.exe" OR Process_Command_Line="netsh.exe" OR Process_Command_Line="nslookup.exe" OR Process_Command_Line="ping.exe" OR Process_Command_Line="quser.exe" OR Process_Command_Line="qwinsta.exe" OR Process_Command_Line="reg.exe" OR Process_Command_Line="runas.exe" OR Process_Command_Line="sc.exe" OR Process_Command_Line="schtasks.exe" OR Process_Command_Line="ssh.exe" OR Process_Command_Line="systeminfo.exe" OR Process_Command_Line="taskkill.exe" OR Process_Command_Line="telnet.exe" OR Process_Command_Line="tracert.exe" OR Process_Command_Line="wscript.exe" OR Process_Command_Line="xcopy.exe" OR Process_Command_Line="pscp.exe" OR Process_Command_Line="copy.exe" OR Process_Command_Line="robocopy.exe" OR Process_Command_Line="certutil.exe" OR Process_Command_Line="vssadmin.exe" OR Process_Command_Line="powershell.exe" OR Process_Command_Line="wevtutil.exe" OR Process_Command_Line="psexec.exe" OR Process_Command_Line="bcedit.exe" OR Process_Command_Line="wbadmin.exe" OR Process_Command_Line="icacls.exe" OR Process_Command_Line="diskpart.exe")) | eventstats count as val by MachineName| search val > 5 | eval sigma_attack_tags="car.2013-04-002" | eval sigma_title="Quick Execution of a Series of Suspicious Commands" | eval sigma_description="Detects multiple suspicious process in a limited timeframe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Quick Execution of a Series of Suspicious Commands - sysmon]
description = Detects multiple suspicious process in a limited timeframe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="arp.exe" OR CommandLine="at.exe" OR CommandLine="attrib.exe" OR CommandLine="cscript.exe" OR CommandLine="dsquery.exe" OR CommandLine="hostname.exe" OR CommandLine="ipconfig.exe" OR CommandLine="mimikatz.exe" OR CommandLine="nbtstat.exe" OR CommandLine="net.exe" OR CommandLine="netsh.exe" OR CommandLine="nslookup.exe" OR CommandLine="ping.exe" OR CommandLine="quser.exe" OR CommandLine="qwinsta.exe" OR CommandLine="reg.exe" OR CommandLine="runas.exe" OR CommandLine="sc.exe" OR CommandLine="schtasks.exe" OR CommandLine="ssh.exe" OR CommandLine="systeminfo.exe" OR CommandLine="taskkill.exe" OR CommandLine="telnet.exe" OR CommandLine="tracert.exe" OR CommandLine="wscript.exe" OR CommandLine="xcopy.exe" OR CommandLine="pscp.exe" OR CommandLine="copy.exe" OR CommandLine="robocopy.exe" OR CommandLine="certutil.exe" OR CommandLine="vssadmin.exe" OR CommandLine="powershell.exe" OR CommandLine="wevtutil.exe" OR CommandLine="psexec.exe" OR CommandLine="bcedit.exe" OR CommandLine="wbadmin.exe" OR CommandLine="icacls.exe" OR CommandLine="diskpart.exe")) | eventstats count as val by MachineName| search val > 5 | eval sigma_attack_tags="car.2013-04-002" | eval sigma_title="Quick Execution of a Series of Suspicious Commands" | eval sigma_description="Detects multiple suspicious process in a limited timeframe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Enumeration - winevent]
description = Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*view*") NOT (Process_Command_Line="*\\\\*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Windows Network Enumeration" | eval sigma_description="Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Enumeration - sysmon]
description = Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*view*") NOT (CommandLine="*\\\\*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Windows Network Enumeration" | eval sigma_description="Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe User Account Creation - winevent]
description = Identifies creation of local users via the net.exe command
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*user*" Process_Command_Line="*add*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.persistence attack.t1136 attack.t1136.001" | eval sigma_title="Net.exe User Account Creation" | eval sigma_description="Identifies creation of local users via the net.exe command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe User Account Creation - sysmon]
description = Identifies creation of local users via the net.exe command
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*user*" CommandLine="*add*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.persistence attack.t1136 attack.t1136.001" | eval sigma_title="Net.exe User Account Creation" | eval sigma_description="Identifies creation of local users via the net.exe command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Opening - winevent]
description = Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*netsh*" ((Process_Command_Line="*firewall add portopening*" Process_Command_Line="*tcp 3389*") OR (Process_Command_Line="*advfirewall firewall add rule*" Process_Command_Line="*action=allow*" Process_Command_Line="*protocol=TCP*" Process_Command_Line="*localport=3389*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.004" | eval sigma_title="Netsh RDP Port Opening" | eval sigma_description="Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Opening - sysmon]
description = Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*netsh*" ((CommandLine="*firewall add portopening*" CommandLine="*tcp 3389*") OR (CommandLine="*advfirewall firewall add rule*" CommandLine="*action=allow*" CommandLine="*protocol=TCP*" CommandLine="*localport=3389*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.004" | eval sigma_title="Netsh RDP Port Opening" | eval sigma_description="Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Program Allowed with Suspcious Location - winevent]
description = Detects Netsh commands that allows a suspcious application location on Windows Firewall
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*firewall*" Process_Command_Line="*add*" (Process_Command_Line="*allowedprogram*" OR (Process_Command_Line="*advfirewall*" Process_Command_Line="*rule*" Process_Command_Line="*action=allow*" Process_Command_Line="*program=*"))) ((Process_Command_Line="*%TEMP%*" OR Process_Command_Line="*:\\RECYCLER\\*" OR Process_Command_Line="*C:\\$Recycle.bin\\*" OR Process_Command_Line="*:\\SystemVolumeInformation\\*" OR Process_Command_Line="*C:\\Windows\\Temp\\*" OR Process_Command_Line="*C:\\Temp\\*" OR Process_Command_Line="*C:\\Users\\Public\\*" OR Process_Command_Line="*C:\\Users\\Default\\*" OR Process_Command_Line="*C:\\Users\\Desktop\\*" OR Process_Command_Line="*\\Downloads\\*" OR Process_Command_Line="*\\Temporary Internet Files\\Content.Outlook\\*" OR Process_Command_Line="*\\Local Settings\\Temporary Internet Files\\*") OR (Process_Command_Line="C:\\Windows\\Tasks\\*" OR Process_Command_Line="C:\\Windows\\debug\\*" OR Process_Command_Line="C:\\Windows\\fonts\\*" OR Process_Command_Line="C:\\Windows\\help\\*" OR Process_Command_Line="C:\\Windows\\drivers\\*" OR Process_Command_Line="C:\\Windows\\addins\\*" OR Process_Command_Line="C:\\Windows\\cursors\\*" OR Process_Command_Line="C:\\Windows\\system32\\tasks\\*" OR Process_Command_Line="%Public%\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.004" | eval sigma_title="Netsh Program Allowed with Suspcious Location" | eval sigma_description="Detects Netsh commands that allows a suspcious application location on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Program Allowed with Suspcious Location - sysmon]
description = Detects Netsh commands that allows a suspcious application location on Windows Firewall
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*firewall*" CommandLine="*add*" (CommandLine="*allowedprogram*" OR (CommandLine="*advfirewall*" CommandLine="*rule*" CommandLine="*action=allow*" CommandLine="*program=*"))) ((CommandLine="*%TEMP%*" OR CommandLine="*:\\RECYCLER\\*" OR CommandLine="*C:\\$Recycle.bin\\*" OR CommandLine="*:\\SystemVolumeInformation\\*" OR CommandLine="*C:\\Windows\\Temp\\*" OR CommandLine="*C:\\Temp\\*" OR CommandLine="*C:\\Users\\Public\\*" OR CommandLine="*C:\\Users\\Default\\*" OR CommandLine="*C:\\Users\\Desktop\\*" OR CommandLine="*\\Downloads\\*" OR CommandLine="*\\Temporary Internet Files\\Content.Outlook\\*" OR CommandLine="*\\Local Settings\\Temporary Internet Files\\*") OR (CommandLine="C:\\Windows\\Tasks\\*" OR CommandLine="C:\\Windows\\debug\\*" OR CommandLine="C:\\Windows\\fonts\\*" OR CommandLine="C:\\Windows\\help\\*" OR CommandLine="C:\\Windows\\drivers\\*" OR CommandLine="C:\\Windows\\addins\\*" OR CommandLine="C:\\Windows\\cursors\\*" OR CommandLine="C:\\Windows\\system32\\tasks\\*" OR CommandLine="%Public%\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.004" | eval sigma_title="Netsh Program Allowed with Suspcious Location" | eval sigma_description="Detects Netsh commands that allows a suspcious application location on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port or Application Allowed - winevent]
description = Allow Incoming Connections by Port or Application on Windows Firewall
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*firewall*" Process_Command_Line="*add*") | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.004" | eval sigma_title="Netsh Port or Application Allowed" | eval sigma_description="Allow Incoming Connections by Port or Application on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port or Application Allowed - sysmon]
description = Allow Incoming Connections by Port or Application on Windows Firewall
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*firewall*" CommandLine="*add*") | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.004" | eval sigma_title="Netsh Port or Application Allowed" | eval sigma_description="Allow Incoming Connections by Port or Application on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture a Network Trace with netsh.exe - winevent]
description = Detects capture a network trace via netsh.exe trace functionality
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*netsh*" Process_Command_Line="*trace*" Process_Command_Line="*start*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Capture a Network Trace with netsh.exe" | eval sigma_description="Detects capture a network trace via netsh.exe trace functionality"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture a Network Trace with netsh.exe - sysmon]
description = Detects capture a network trace via netsh.exe trace functionality
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*netsh*" CommandLine="*trace*" CommandLine="*start*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Capture a Network Trace with netsh.exe" | eval sigma_description="Detects capture a network trace via netsh.exe trace functionality"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Forwarding - winevent]
description = Detects netsh commands that configure a port forwarding of port 3389 used for RDP
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*i*" Process_Command_Line="* p*" Process_Command_Line="*=3389*" Process_Command_Line="* c*") | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh RDP Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding of port 3389 used for RDP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Forwarding - sysmon]
description = Detects netsh commands that configure a port forwarding of port 3389 used for RDP
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*i*" CommandLine="* p*" CommandLine="*=3389*" CommandLine="* c*") | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh RDP Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding of port 3389 used for RDP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port Forwarding - winevent]
description = Detects netsh commands that configure a port forwarding
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" ((Process_Command_Line="*interface*" Process_Command_Line="*portproxy*" Process_Command_Line="*add*" Process_Command_Line="*v4tov4*") OR (Process_Command_Line="*connectp*" Process_Command_Line="*listena*" Process_Command_Line="*c=*"))) | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port Forwarding - sysmon]
description = Detects netsh commands that configure a port forwarding
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" ((CommandLine="*interface*" CommandLine="*portproxy*" CommandLine="*add*" CommandLine="*v4tov4*") OR (CommandLine="*connectp*" CommandLine="*listena*" CommandLine="*c=*"))) | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding"
dispatch.earliest_time = -24h@h
alert.track = 0

[Harvesting of Wifi Credentials Using netsh.exe - winevent]
description = Detect the harvesting of wifi credentials using netsh.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*wlan*" Process_Command_Line="* s*" Process_Command_Line="* p*" Process_Command_Line="* k*" Process_Command_Line="*=clear*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Harvesting of Wifi Credentials Using netsh.exe" | eval sigma_description="Detect the harvesting of wifi credentials using netsh.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Harvesting of Wifi Credentials Using netsh.exe - sysmon]
description = Detect the harvesting of wifi credentials using netsh.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*wlan*" CommandLine="* s*" CommandLine="* p*" CommandLine="* k*" CommandLine="*=clear*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Harvesting of Wifi Credentials Using netsh.exe" | eval sigma_description="Detect the harvesting of wifi credentials using netsh.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Sniffing - winevent]
description = Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tshark.exe" Process_Command_Line="*-i*") OR New_Process_Name="*\\windump.exe")) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.discovery attack.t1040" | eval sigma_title="Network Sniffing" | eval sigma_description="Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Sniffing - sysmon]
description = Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tshark.exe" CommandLine="*-i*") OR Image="*\\windump.exe")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.discovery attack.t1040" | eval sigma_title="Network Sniffing" | eval sigma_description="Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Creation - winevent]
description = Detects creation of a new service
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\sc.exe" Process_Command_Line="*create*" Process_Command_Line="*binpath*") OR (New_Process_Name="*\\powershell.exe" Process_Command_Line="*new-service*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050 attack.t1543.003" | eval sigma_title="New Service Creation" | eval sigma_description="Detects creation of a new service"
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Creation - sysmon]
description = Detects creation of a new service
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\sc.exe" CommandLine="*create*" CommandLine="*binpath*") OR (Image="*\\powershell.exe" CommandLine="*new-service*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050 attack.t1543.003" | eval sigma_title="New Service Creation" | eval sigma_description="Detects creation of a new service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Nltest Credential Hash Theft - winevent]
description = Detects nltest query commands which may leak credential hashes
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\nltest.exe" Process_Command_Line="*\\query*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Nltest Credential Hash Theft" | eval sigma_description="Detects nltest query commands which may leak credential hashes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Nltest Credential Hash Theft - sysmon]
description = Detects nltest query commands which may leak credential hashes
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\nltest.exe" CommandLine="*\\query*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Nltest Credential Hash Theft" | eval sigma_description="Detects nltest query commands which may leak credential hashes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Non Interactive PowerShell - winevent]
description = Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\powershell.exe" NOT (Creator_Process_Name="*\\explorer.exe")) | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Non Interactive PowerShell" | eval sigma_description="Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent."
dispatch.earliest_time = -24h@h
alert.track = 0

[Non Interactive PowerShell - sysmon]
description = Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\powershell.exe" NOT (ParentImage="*\\explorer.exe")) | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Non Interactive PowerShell" | eval sigma_description="Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent."
dispatch.earliest_time = -24h@h
alert.track = 0

[Non-privileged Usage of Reg or Powershell - winevent]
description = Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") IntegrityLevel="Medium" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*reg*" Process_Command_Line="*add*") OR (Process_Command_Line="*powershell*" (Process_Command_Line="*set-itemproperty*" OR Process_Command_Line="* sp *" OR Process_Command_Line="*new-itemproperty*"))) Process_Command_Line="*ControlSet*" Process_Command_Line="*Services*" (Process_Command_Line="*ImagePath*" OR Process_Command_Line="*FailureCommand*" OR Process_Command_Line="*ServiceDLL*")) | table EventCode,IntegrityLevel,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Non-privileged Usage of Reg or Powershell" | eval sigma_description="Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Non-privileged Usage of Reg or Powershell - sysmon]
description = Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") IntegrityLevel="Medium" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*reg*" CommandLine="*add*") OR (CommandLine="*powershell*" (CommandLine="*set-itemproperty*" OR CommandLine="* sp *" OR CommandLine="*new-itemproperty*"))) CommandLine="*ControlSet*" CommandLine="*Services*" (CommandLine="*ImagePath*" OR CommandLine="*FailureCommand*" OR CommandLine="*ServiceDLL*")) | table EventCode,IntegrityLevel,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Non-privileged Usage of Reg or Powershell" | eval sigma_description="Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Product Spawning Windows Shell - winevent]
description = Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\WINWORD.EXE" OR Creator_Process_Name="*\\EXCEL.EXE" OR Creator_Process_Name="*\\POWERPNT.exe" OR Creator_Process_Name="*\\MSPUB.exe" OR Creator_Process_Name="*\\VISIO.exe" OR Creator_Process_Name="*\\OUTLOOK.EXE" OR Creator_Process_Name="*\\MSACCESS.EXE" OR Creator_Process_Name="*\\EQNEDT32.EXE") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe" OR New_Process_Name="*\\mftrace.exe" OR New_Process_Name="*\\AppVLP.exe" OR New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\msbuild.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="Microsoft Office Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Product Spawning Windows Shell - sysmon]
description = Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\WINWORD.EXE" OR ParentImage="*\\EXCEL.EXE" OR ParentImage="*\\POWERPNT.exe" OR ParentImage="*\\MSPUB.exe" OR ParentImage="*\\VISIO.exe" OR ParentImage="*\\OUTLOOK.EXE" OR ParentImage="*\\MSACCESS.EXE" OR ParentImage="*\\EQNEDT32.EXE") (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\scrcons.exe" OR Image="*\\schtasks.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\msiexec.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\mftrace.exe" OR Image="*\\AppVLP.exe" OR Image="*\\svchost.exe" OR Image="*\\msbuild.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002" | eval sigma_title="Microsoft Office Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[MS Office Product Spawning Exe in User Dir - winevent]
description = Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\WINWORD.EXE" OR Creator_Process_Name="*\\EXCEL.EXE" OR Creator_Process_Name="*\\POWERPNT.exe" OR Creator_Process_Name="*\\MSPUB.exe" OR Creator_Process_Name="*\\VISIO.exe") New_Process_Name="C:\\users\\*" New_Process_Name="*.exe") NOT (New_Process_Name="*\\Teams.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002 FIN7 car.2013-05-002" | eval sigma_title="MS Office Product Spawning Exe in User Dir" | eval sigma_description="Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[MS Office Product Spawning Exe in User Dir - sysmon]
description = Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\WINWORD.EXE" OR ParentImage="*\\EXCEL.EXE" OR ParentImage="*\\POWERPNT.exe" OR ParentImage="*\\MSPUB.exe" OR ParentImage="*\\VISIO.exe") Image="C:\\users\\*" Image="*.exe") NOT (Image="*\\Teams.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204 attack.t1204.002 FIN7 car.2013-05-002" | eval sigma_title="MS Office Product Spawning Exe in User Dir" | eval sigma_description="Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable Used by PlugX in Uncommon Location - winevent]
description = Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((((((((((((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\CamMute.exe" NOT ((New_Process_Name="*\\Lenovo\\Communication Utility\\*" OR New_Process_Name="*\\Lenovo\\Communications Utility\\*"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\chrome_frame_helper.exe" NOT (New_Process_Name="*\\Google\\Chrome\\application\\*"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\dvcemumanager.exe" NOT (New_Process_Name="*\\Microsoft Device Emulator\\*"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\Gadget.exe" NOT (New_Process_Name="*\\Windows Media Player\\*"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\hcc.exe" NOT (New_Process_Name="*\\HTML Help Workshop\\*"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\hkcmd.exe" NOT ((New_Process_Name="*\\System32\\*" OR New_Process_Name="*\\SysNative\\*" OR New_Process_Name="*\\SysWowo64\\*")))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\Mc.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*")))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\MsMpEng.exe" NOT ((New_Process_Name="*\\Microsoft Security Client\\*" OR New_Process_Name="*\\Windows Defender\\*" OR New_Process_Name="*\\AntiMalware\\*")))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\msseces.exe" NOT ((New_Process_Name="*\\Microsoft Security Center\\*" OR New_Process_Name="*\\Microsoft Security Client\\*" OR New_Process_Name="*\\Microsoft Security Essentials\\*")))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\OInfoP11.exe" NOT (New_Process_Name="*\\Common Files\\Microsoft Shared\\*"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\OleView.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*" OR New_Process_Name="*\\Windows Resource Kit\\*")))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\rc.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*" OR New_Process_Name="*\\Windows Resource Kit\\*" OR New_Process_Name="*\\Microsoft.NET\\*"))))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.s0013 attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="Executable Used by PlugX in Uncommon Location" | eval sigma_description="Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable Used by PlugX in Uncommon Location - sysmon]
description = Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((((((((((((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\CamMute.exe" NOT ((Image="*\\Lenovo\\Communication Utility\\*" OR Image="*\\Lenovo\\Communications Utility\\*"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\chrome_frame_helper.exe" NOT (Image="*\\Google\\Chrome\\application\\*"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\dvcemumanager.exe" NOT (Image="*\\Microsoft Device Emulator\\*"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\Gadget.exe" NOT (Image="*\\Windows Media Player\\*"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\hcc.exe" NOT (Image="*\\HTML Help Workshop\\*"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\hkcmd.exe" NOT ((Image="*\\System32\\*" OR Image="*\\SysNative\\*" OR Image="*\\SysWowo64\\*")))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\Mc.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*")))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\MsMpEng.exe" NOT ((Image="*\\Microsoft Security Client\\*" OR Image="*\\Windows Defender\\*" OR Image="*\\AntiMalware\\*")))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\msseces.exe" NOT ((Image="*\\Microsoft Security Center\\*" OR Image="*\\Microsoft Security Client\\*" OR Image="*\\Microsoft Security Essentials\\*")))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\OInfoP11.exe" NOT (Image="*\\Common Files\\Microsoft Shared\\*"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\OleView.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*" OR Image="*\\Windows Resource Kit\\*")))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\rc.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*" OR Image="*\\Windows Resource Kit\\*" OR Image="*\\Microsoft.NET\\*"))))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.s0013 attack.defense_evasion attack.t1073 attack.t1574.002" | eval sigma_title="Executable Used by PlugX in Uncommon Location" | eval sigma_description="Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Applocker Bypass - winevent]
description = Detects execution of executables that can be used to bypass Applocker whitelisting
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\msdt.exe*" OR Process_Command_Line="*\\installutil.exe*" OR Process_Command_Line="*\\regsvcs.exe*" OR Process_Command_Line="*\\regasm.exe*" OR Process_Command_Line="*\\msbuild.exe*" OR Process_Command_Line="*\\ieexec.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1118 attack.t1218.004 attack.t1121 attack.t1218.009 attack.t1127 attack.t1127.001 attack.t1170 attack.t1218.005 attack.t1218" | eval sigma_title="Possible Applocker Bypass" | eval sigma_description="Detects execution of executables that can be used to bypass Applocker whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Applocker Bypass - sysmon]
description = Detects execution of executables that can be used to bypass Applocker whitelisting
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\msdt.exe*" OR CommandLine="*\\installutil.exe*" OR CommandLine="*\\regsvcs.exe*" OR CommandLine="*\\regasm.exe*" OR CommandLine="*\\msbuild.exe*" OR CommandLine="*\\ieexec.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1118 attack.t1218.004 attack.t1121 attack.t1218.009 attack.t1127 attack.t1127.001 attack.t1170 attack.t1218.005 attack.t1218" | eval sigma_title="Possible Applocker Bypass" | eval sigma_description="Detects execution of executables that can be used to bypass Applocker whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of Possible Rotten Potato - winevent]
description = Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((ParentUser="NT AUTHORITY\\NETWORK SERVICE" OR ParentUser="NT AUTHORITY\\LOCAL SERVICE") Account_Name="NT AUTHORITY\\SYSTEM") NOT (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*DavSetCookie*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134 attack.t1134.002" | eval sigma_title="Detection of Possible Rotten Potato" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of Possible Rotten Potato - sysmon]
description = Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentUser="NT AUTHORITY\\NETWORK SERVICE" OR ParentUser="NT AUTHORITY\\LOCAL SERVICE") User="NT AUTHORITY\\SYSTEM") NOT (Image="*\\rundll32.exe" CommandLine="*DavSetCookie*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134 attack.t1134.002" | eval sigma_title="Detection of Possible Rotten Potato" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell AMSI Bypass via .NET Reflection - winevent]
description = Detects Request to amsiInitFailed that can be used to disable AMSI Scanning
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*System.Management.Automation.AmsiUtils*") (Process_Command_Line="*amsiInitFailed*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Powershell AMSI Bypass via .NET Reflection" | eval sigma_description="Detects Request to amsiInitFailed that can be used to disable AMSI Scanning"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell AMSI Bypass via .NET Reflection - sysmon]
description = Detects Request to amsiInitFailed that can be used to disable AMSI Scanning
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*System.Management.Automation.AmsiUtils*") (CommandLine="*amsiInitFailed*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Powershell AMSI Bypass via .NET Reflection" | eval sigma_description="Detects Request to amsiInitFailed that can be used to disable AMSI Scanning"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via PowerShell - winevent]
description = Detects audio capture via PowerShell Cmdlet
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*WindowsAudioDevice-Powershell-Cmdlet*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via PowerShell" | eval sigma_description="Detects audio capture via PowerShell Cmdlet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via PowerShell - sysmon]
description = Detects audio capture via PowerShell Cmdlet
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*WindowsAudioDevice-Powershell-Cmdlet*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via PowerShell" | eval sigma_description="Detects audio capture via PowerShell Cmdlet"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Base64 Encoded Shellcode - winevent]
description = Detects Base64 encoded Shellcode
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*AAAAYInlM*" (Process_Command_Line="*OiCAAAAYInlM*" OR Process_Command_Line="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Base64 Encoded Shellcode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Base64 Encoded Shellcode - sysmon]
description = Detects Base64 encoded Shellcode
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*AAAAYInlM*" (CommandLine="*OiCAAAAYInlM*" OR CommandLine="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Base64 Encoded Shellcode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitsadmin Job via PowerShell - winevent]
description = Detect download by BITS jobs via PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*Start-BitsTransfer*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitsadmin Job via PowerShell" | eval sigma_description="Detect download by BITS jobs via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitsadmin Job via PowerShell - sysmon]
description = Detect download by BITS jobs via PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*Start-BitsTransfer*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitsadmin Job via PowerShell" | eval sigma_description="Detect download by BITS jobs via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Exclusion - winevent]
description = Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="Add-MpPreference" (Process_Command_Line="* -ExclusionPath *" OR Process_Command_Line="* -ExclusionExtension *" OR Process_Command_Line="* -ExclusionProcess *")) OR (Process_Command_Line="*QWRkLU1wUHJlZmVyZW5jZ*" OR Process_Command_Line="*FkZC1NcFByZWZlcmVuY2*" OR Process_Command_Line="*BZGQtTXBQcmVmZXJlbmNl*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Exclusion" | eval sigma_description="Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Exclusion - sysmon]
description = Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="Add-MpPreference" (CommandLine="* -ExclusionPath *" OR CommandLine="* -ExclusionExtension *" OR CommandLine="* -ExclusionProcess *")) OR (CommandLine="*QWRkLU1wUHJlZmVyZW5jZ*" OR CommandLine="*FkZC1NcFByZWZlcmVuY2*" OR CommandLine="*BZGQtTXBQcmVmZXJlbmNl*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Exclusion" | eval sigma_description="Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Used To Disable Windows Defender AV Security Monitoring - winevent]
description = Detects attackers attempting to disable Windows Defender using Powershell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" (Process_Command_Line="*-DisableBehaviorMonitoring $true*" OR Process_Command_Line="*-DisableRuntimeMonitoring $true*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Powershell Used To Disable Windows Defender AV Security Monitoring" | eval sigma_description="Detects attackers attempting to disable Windows Defender using Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Used To Disable Windows Defender AV Security Monitoring - sysmon]
description = Detects attackers attempting to disable Windows Defender using Powershell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" (CommandLine="*-DisableBehaviorMonitoring $true*" OR CommandLine="*-DisableRuntimeMonitoring $true*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1562.001" | eval sigma_title="Powershell Used To Disable Windows Defender AV Security Monitoring" | eval sigma_description="Detects attackers attempting to disable Windows Defender using Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via DLL - winevent]
description = Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe") OR (Description="*Windows-Hostprozess (Rundll32)*")) (Process_Command_Line="*Default.GetString*" OR Process_Command_Line="*FromBase64String*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Detection of PowerShell Execution via DLL" | eval sigma_description="Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via DLL - sysmon]
description = Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe") OR (Description="*Windows-Hostprozess (Rundll32)*")) (CommandLine="*Default.GetString*" OR CommandLine="*FromBase64String*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Detection of PowerShell Execution via DLL" | eval sigma_description="Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - winevent]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -version 2 *" OR Process_Command_Line="* -versio 2 *" OR Process_Command_Line="* -versi 2 *" OR Process_Command_Line="* -vers 2 *" OR Process_Command_Line="* -ver 2 *" OR Process_Command_Line="* -ve 2 *") New_Process_Name="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - sysmon]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -version 2 *" OR CommandLine="* -versio 2 *" OR CommandLine="* -versi 2 *" OR CommandLine="* -vers 2 *" OR CommandLine="* -ver 2 *" OR CommandLine="* -ve 2 *") Image="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Download from URL - winevent]
description = Detects a Powershell process that contains download commands in its command line string
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*new-object*" Process_Command_Line="*net.webclient).*" Process_Command_Line="*download*" (Process_Command_Line="*string(*" OR Process_Command_Line="*file(*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.execution attack.t1059.001" | eval sigma_title="PowerShell Download from URL" | eval sigma_description="Detects a Powershell process that contains download commands in its command line string"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Download from URL - sysmon]
description = Detects a Powershell process that contains download commands in its command line string
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*new-object*" CommandLine="*net.webclient).*" CommandLine="*download*" (CommandLine="*string(*" OR CommandLine="*file(*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.execution attack.t1059.001" | eval sigma_title="PowerShell Download from URL" | eval sigma_description="Detects a Powershell process that contains download commands in its command line string"
dispatch.earliest_time = -24h@h
alert.track = 0

[FromBase64String Command Line - winevent]
description = Detects suspicious FromBase64String expressions in command line arguments
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*::FromBase64String(*") | eval sigma_attack_tags="attack.t1027 attack.defense_evasion attack.t1140 attack.t1059.001" | eval sigma_title="FromBase64String Command Line" | eval sigma_description="Detects suspicious FromBase64String expressions in command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[FromBase64String Command Line - sysmon]
description = Detects suspicious FromBase64String expressions in command line arguments
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*::FromBase64String(*") | eval sigma_attack_tags="attack.t1027 attack.defense_evasion attack.t1140 attack.t1059.001" | eval sigma_title="FromBase64String Command Line" | eval sigma_description="Detects suspicious FromBase64String expressions in command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Reverse Shell Connection - winevent]
description = Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" (Process_Command_Line="*new-object system.net.sockets.tcpclient*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.005" | eval sigma_title="Powershell Reverse Shell Connection" | eval sigma_description="Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Reverse Shell Connection - sysmon]
description = Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" (CommandLine="*new-object system.net.sockets.tcpclient*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.005" | eval sigma_title="Powershell Reverse Shell Connection" | eval sigma_description="Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parameter Substring - winevent]
description = Detects suspicious PowerShell invocation with a parameter substring
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\Powershell.exe") (Process_Command_Line="* -windowstyle h *" OR Process_Command_Line="* -windowstyl h*" OR Process_Command_Line="* -windowsty h*" OR Process_Command_Line="* -windowst h*" OR Process_Command_Line="* -windows h*" OR Process_Command_Line="* -windo h*" OR Process_Command_Line="* -wind h*" OR Process_Command_Line="* -win h*" OR Process_Command_Line="* -wi h*" OR Process_Command_Line="* -win h *" OR Process_Command_Line="* -win hi *" OR Process_Command_Line="* -win hid *" OR Process_Command_Line="* -win hidd *" OR Process_Command_Line="* -win hidde *" OR Process_Command_Line="* -NoPr *" OR Process_Command_Line="* -NoPro *" OR Process_Command_Line="* -NoProf *" OR Process_Command_Line="* -NoProfi *" OR Process_Command_Line="* -NoProfil *" OR Process_Command_Line="* -nonin *" OR Process_Command_Line="* -nonint *" OR Process_Command_Line="* -noninte *" OR Process_Command_Line="* -noninter *" OR Process_Command_Line="* -nonintera *" OR Process_Command_Line="* -noninterac *" OR Process_Command_Line="* -noninteract *" OR Process_Command_Line="* -noninteracti *" OR Process_Command_Line="* -noninteractiv *" OR Process_Command_Line="* -ec *" OR Process_Command_Line="* -encodedComman *" OR Process_Command_Line="* -encodedComma *" OR Process_Command_Line="* -encodedComm *" OR Process_Command_Line="* -encodedCom *" OR Process_Command_Line="* -encodedCo *" OR Process_Command_Line="* -encodedC *" OR Process_Command_Line="* -encoded *" OR Process_Command_Line="* -encode *" OR Process_Command_Line="* -encod *" OR Process_Command_Line="* -enco *" OR Process_Command_Line="* -en *")) | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Suspicious PowerShell Parameter Substring" | eval sigma_description="Detects suspicious PowerShell invocation with a parameter substring"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parameter Substring - sysmon]
description = Detects suspicious PowerShell invocation with a parameter substring
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\Powershell.exe") (CommandLine="* -windowstyle h *" OR CommandLine="* -windowstyl h*" OR CommandLine="* -windowsty h*" OR CommandLine="* -windowst h*" OR CommandLine="* -windows h*" OR CommandLine="* -windo h*" OR CommandLine="* -wind h*" OR CommandLine="* -win h*" OR CommandLine="* -wi h*" OR CommandLine="* -win h *" OR CommandLine="* -win hi *" OR CommandLine="* -win hid *" OR CommandLine="* -win hidd *" OR CommandLine="* -win hidde *" OR CommandLine="* -NoPr *" OR CommandLine="* -NoPro *" OR CommandLine="* -NoProf *" OR CommandLine="* -NoProfi *" OR CommandLine="* -NoProfil *" OR CommandLine="* -nonin *" OR CommandLine="* -nonint *" OR CommandLine="* -noninte *" OR CommandLine="* -noninter *" OR CommandLine="* -nonintera *" OR CommandLine="* -noninterac *" OR CommandLine="* -noninteract *" OR CommandLine="* -noninteracti *" OR CommandLine="* -noninteractiv *" OR CommandLine="* -ec *" OR CommandLine="* -encodedComman *" OR CommandLine="* -encodedComma *" OR CommandLine="* -encodedComm *" OR CommandLine="* -encodedCom *" OR CommandLine="* -encodedCo *" OR CommandLine="* -encodedC *" OR CommandLine="* -encoded *" OR CommandLine="* -encode *" OR CommandLine="* -encod *" OR CommandLine="* -enco *" OR CommandLine="* -en *")) | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Suspicious PowerShell Parameter Substring" | eval sigma_description="Detects suspicious PowerShell invocation with a parameter substring"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - winevent]
description = Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Windows PowerShell" OR Product="PowerShell Core 6") (Process_Command_Line="*bxor*" OR Process_Command_Line="*join*" OR Process_Command_Line="*char*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1086 attack.t1059.001 attack.t1140 attack.t1027" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - sysmon]
description = Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Windows PowerShell" OR Product="PowerShell Core 6") (CommandLine="*bxor*" OR CommandLine="*join*" OR CommandLine="*char*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1086 attack.t1059.001 attack.t1140 attack.t1027" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Default PowerSploit and Empire Schtasks Persistence - winevent]
description = Detects the creation of a schtask via PowerSploit or Empire Default Configuration.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create*" Process_Command_Line="*/SC*" (Process_Command_Line="*ONLOGON*" OR Process_Command_Line="*DAILY*" OR Process_Command_Line="*ONIDLE*" OR Process_Command_Line="*Updater*") Process_Command_Line="*/TN*" Process_Command_Line="*Updater*" Process_Command_Line="*/TR*" Process_Command_Line="*powershell*") | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053 attack.t1086 attack.s0111 attack.g0022 attack.g0060 car.2013-08-001 attack.t1053.005 attack.t1059.001" | eval sigma_title="Default PowerSploit and Empire Schtasks Persistence" | eval sigma_description="Detects the creation of a schtask via PowerSploit or Empire Default Configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[Default PowerSploit and Empire Schtasks Persistence - sysmon]
description = Detects the creation of a schtask via PowerSploit or Empire Default Configuration.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\schtasks.exe" CommandLine="*/Create*" CommandLine="*/SC*" (CommandLine="*ONLOGON*" OR CommandLine="*DAILY*" OR CommandLine="*ONIDLE*" OR CommandLine="*Updater*") CommandLine="*/TN*" CommandLine="*Updater*" CommandLine="*/TR*" CommandLine="*powershell*") | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053 attack.t1086 attack.s0111 attack.g0022 attack.g0060 car.2013-08-001 attack.t1053.005 attack.t1059.001" | eval sigma_title="Default PowerSploit and Empire Schtasks Persistence" | eval sigma_description="Detects the creation of a schtask via PowerSploit or Empire Default Configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Processes Suspicious Parent Directory - winevent]
description = Detect suspicious parent processes of well-known Windows processes
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\taskhost.exe" OR New_Process_Name="*\\lsm.exe" OR New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\services.exe" OR New_Process_Name="*\\lsaiso.exe" OR New_Process_Name="*\\csrss.exe" OR New_Process_Name="*\\wininit.exe" OR New_Process_Name="*\\winlogon.exe") NOT (Creator_Process_Name="*\\SavService.exe" OR (Creator_Process_Name="*\\System32\\*" OR Creator_Process_Name="*\\SysWOW64\\*"))) NOT ((Creator_Process_Name="*\\Windows Defender\\*" OR Creator_Process_Name="*\\Microsoft Security Client\\*") Creator_Process_Name="*\\MsMpEng.exe")) NOT (NOT Creator_Process_Name="*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003 attack.t1036.005" | eval sigma_title="Windows Processes Suspicious Parent Directory" | eval sigma_description="Detect suspicious parent processes of well-known Windows processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Processes Suspicious Parent Directory - sysmon]
description = Detect suspicious parent processes of well-known Windows processes
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\svchost.exe" OR Image="*\\taskhost.exe" OR Image="*\\lsm.exe" OR Image="*\\lsass.exe" OR Image="*\\services.exe" OR Image="*\\lsaiso.exe" OR Image="*\\csrss.exe" OR Image="*\\wininit.exe" OR Image="*\\winlogon.exe") NOT (ParentImage="*\\SavService.exe" OR (ParentImage="*\\System32\\*" OR ParentImage="*\\SysWOW64\\*"))) NOT ((ParentImage="*\\Windows Defender\\*" OR ParentImage="*\\Microsoft Security Client\\*") ParentImage="*\\MsMpEng.exe")) NOT (NOT ParentImage="*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003 attack.t1036.005" | eval sigma_title="Windows Processes Suspicious Parent Directory" | eval sigma_description="Detect suspicious parent processes of well-known Windows processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download - winevent]
description = Detects usage of bitsadmin downloading a file
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\bitsadmin.exe") (Process_Command_Line="* /transfer *")) OR (Process_Command_Line="*copy bitsadmin.exe*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download" | eval sigma_description="Detects usage of bitsadmin downloading a file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download - sysmon]
description = Detects usage of bitsadmin downloading a file
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\bitsadmin.exe") (CommandLine="* /transfer *")) OR (CommandLine="*copy bitsadmin.exe*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download" | eval sigma_description="Detects usage of bitsadmin downloading a file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Rundll32 and Comsvcs.dll - winevent]
description = Detects a process memory dump performed via ordinal function 24 in comsvcs.dll
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*comsvcs.dll,#24*" OR Process_Command_Line="*comsvcs.dll,MiniDump*" OR Process_Command_Line="*comsvcs.dll MiniDump*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003 car.2013-05-009 attack.t1003.001" | eval sigma_title="Process Dump via Rundll32 and Comsvcs.dll" | eval sigma_description="Detects a process memory dump performed via ordinal function 24 in comsvcs.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Rundll32 and Comsvcs.dll - sysmon]
description = Detects a process memory dump performed via ordinal function 24 in comsvcs.dll
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*comsvcs.dll,#24*" OR CommandLine="*comsvcs.dll,MiniDump*" OR CommandLine="*comsvcs.dll MiniDump*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003 car.2013-05-009 attack.t1003.001" | eval sigma_title="Process Dump via Rundll32 and Comsvcs.dll" | eval sigma_description="Detects a process memory dump performed via ordinal function 24 in comsvcs.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Service Start - winevent]
description = Detects a PsExec service start
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="C:\\Windows\\PSEXESVC.exe") | eval sigma_attack_tags="attack.execution attack.t1035 attack.s0029 attack.t1569.002" | eval sigma_title="PsExec Service Start" | eval sigma_description="Detects a PsExec service start"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Service Start - sysmon]
description = Detects a PsExec service start
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="C:\\Windows\\PSEXESVC.exe") | eval sigma_attack_tags="attack.execution attack.t1035 attack.s0029 attack.t1569.002" | eval sigma_title="PsExec Service Start" | eval sigma_description="Detects a PsExec service start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Query Registry - winevent]
description = Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*query*" OR Process_Command_Line="*save*" OR Process_Command_Line="*export*") (Process_Command_Line="*currentVersion\\windows*" OR Process_Command_Line="*currentVersion\\runServicesOnce*" OR Process_Command_Line="*currentVersion\\runServices*" OR Process_Command_Line="*winlogon\\*" OR Process_Command_Line="*currentVersion\\shellServiceObjectDelayLoad*" OR Process_Command_Line="*currentVersion\\runOnce*" OR Process_Command_Line="*currentVersion\\runOnceEx*" OR Process_Command_Line="*currentVersion\\run*" OR Process_Command_Line="*currentVersion\\policies\\explorer\\run*" OR Process_Command_Line="*currentcontrolset\\services*")) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1012 attack.t1007" | eval sigma_title="Query Registry" | eval sigma_description="Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
dispatch.earliest_time = -24h@h
alert.track = 0

[Query Registry - sysmon]
description = Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*query*" OR CommandLine="*save*" OR CommandLine="*export*") (CommandLine="*currentVersion\\windows*" OR CommandLine="*currentVersion\\runServicesOnce*" OR CommandLine="*currentVersion\\runServices*" OR CommandLine="*winlogon\\*" OR CommandLine="*currentVersion\\shellServiceObjectDelayLoad*" OR CommandLine="*currentVersion\\runOnce*" OR CommandLine="*currentVersion\\runOnceEx*" OR CommandLine="*currentVersion\\run*" OR CommandLine="*currentVersion\\policies\\explorer\\run*" OR CommandLine="*currentcontrolset\\services*")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1012 attack.t1007" | eval sigma_title="Query Registry" | eval sigma_description="Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution via Rasautou.exe - winevent]
description = Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rasautou.exe" OR OriginalFileName="rasdlui.exe") (Process_Command_Line="*-d*" Process_Command_Line="*-p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="DLL Execution via Rasautou.exe" | eval sigma_description="Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p."
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution via Rasautou.exe - sysmon]
description = Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rasautou.exe" OR OriginalFileName="rasdlui.exe") (CommandLine="*-d*" CommandLine="*-p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="DLL Execution via Rasautou.exe" | eval sigma_description="Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p."
dispatch.earliest_time = -24h@h
alert.track = 0

[MSTSC Shadowing - winevent]
description = Detects RDP session hijacking by using MSTSC shadowing
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*noconsentprompt*" Process_Command_Line="*shadow:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002" | eval sigma_title="MSTSC Shadowing" | eval sigma_description="Detects RDP session hijacking by using MSTSC shadowing"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSTSC Shadowing - sysmon]
description = Detects RDP session hijacking by using MSTSC shadowing
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*noconsentprompt*" CommandLine="*shadow:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002" | eval sigma_title="MSTSC Shadowing" | eval sigma_description="Detects RDP session hijacking by using MSTSC shadowing"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Execute - winevent]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*rundll32.exe*" OR New_Process_Name="*cmd.exe*") (Process_Command_Line="*gthread-3.6.dll*" OR Process_Command_Line="*\\Windows\\Temp\\tmp.bat*" OR Process_Command_Line="*sigcmm-2.4.dll*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059 attack.t1106 attack.t1059.003 attack.t1218.011" | eval sigma_title="RedMimicry Winnti Playbook Execute" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Execute - sysmon]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*rundll32.exe*" OR Image="*cmd.exe*") (CommandLine="*gthread-3.6.dll*" OR CommandLine="*\\Windows\\Temp\\tmp.bat*" OR CommandLine="*sigcmm-2.4.dll*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059 attack.t1106 attack.t1059.003 attack.t1218.011" | eval sigma_title="RedMimicry Winnti Playbook Execute" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Critical Registry Keys To a File - winevent]
description = Detects the export of a crital Registry key to a file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\regedit.exe" Process_Command_Line="* /E *" (Process_Command_Line="*hklm*" OR Process_Command_Line="*hkey_local_machine*") (Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security")) | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Critical Registry Keys To a File" | eval sigma_description="Detects the export of a crital Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Critical Registry Keys To a File - sysmon]
description = Detects the export of a crital Registry key to a file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\regedit.exe" CommandLine="* /E *" (CommandLine="*hklm*" OR CommandLine="*hkey_local_machine*") (CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security")) | table ParentImage,CommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Critical Registry Keys To a File" | eval sigma_description="Detects the export of a crital Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Registry Key To a File - winevent]
description = Detects the export of the target Registry key to a file.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\regedit.exe" Process_Command_Line="* /E *") NOT ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*hklm*" OR Process_Command_Line="*hkey_local_machine*") (Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security")))) | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Registry Key To a File" | eval sigma_description="Detects the export of the target Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Registry Key To a File - sysmon]
description = Detects the export of the target Registry key to a file.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\regedit.exe" CommandLine="* /E *") NOT ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*hklm*" OR CommandLine="*hkey_local_machine*") (CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security")))) | table ParentImage,CommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Registry Key To a File" | eval sigma_description="Detects the export of the target Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - winevent]
description = Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wsmprovhost.exe" OR Creator_Process_Name="*\\wsmprovhost.exe")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - sysmon]
description = Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wsmprovhost.exe" OR ParentImage="*\\wsmprovhost.exe")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1086 attack.t1059.001" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Discovery of a System Time - winevent]
description = Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*time*") OR (New_Process_Name="*\\w32tm.exe" Process_Command_Line="*tz*") OR (New_Process_Name="*\\powershell.exe" Process_Command_Line="*Get-Date*"))) | eval sigma_attack_tags="attack.discovery attack.t1124" | eval sigma_title="Discovery of a System Time" | eval sigma_description="Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Discovery of a System Time - sysmon]
description = Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*time*") OR (Image="*\\w32tm.exe" CommandLine="*tz*") OR (Image="*\\powershell.exe" CommandLine="*Get-Date*"))) | eval sigma_attack_tags="attack.discovery attack.t1124" | eval sigma_title="Discovery of a System Time" | eval sigma_description="Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Highly Relevant Renamed Binary - winevent]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe") NOT ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\psexec.exe" OR New_Process_Name="*\\psexec64.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Highly Relevant Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Highly Relevant Renamed Binary - sysmon]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\psexec.exe" OR Image="*\\psexec64.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\certutil.exe" OR Image="*\\rundll32.exe" OR Image="*\\cmstp.exe" OR Image="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Highly Relevant Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Binary - winevent]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="cmd.exe" OR OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe" OR OriginalFileName="7z.exe" OR OriginalFileName="winrar.exe" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe" OR OriginalFileName="netsh.exe") NOT ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\psexec.exe" OR New_Process_Name="*\\psexec64.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\7z.exe" OR New_Process_Name="*\\winrar.exe" OR New_Process_Name="*\\wevtutil.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe" OR New_Process_Name="*\\netsh.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Binary - sysmon]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="cmd.exe" OR OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe" OR OriginalFileName="7z.exe" OR OriginalFileName="winrar.exe" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe" OR OriginalFileName="netsh.exe") NOT ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\psexec.exe" OR Image="*\\psexec64.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\certutil.exe" OR Image="*\\rundll32.exe" OR Image="*\\cmstp.exe" OR Image="*\\msiexec.exe" OR Image="*\\7z.exe" OR Image="*\\winrar.exe" OR Image="*\\wevtutil.exe" OR Image="*\\net.exe" OR Image="*\\net1.exe" OR Image="*\\netsh.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed jusched.exe - winevent]
description = Detects renamed jusched.exe used by cobalt group
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Java Update Scheduler" OR Description="Java(TM) Update Scheduler")) NOT ((New_Process_Name="*\\jusched.exe"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed jusched.exe" | eval sigma_description="Detects renamed jusched.exe used by cobalt group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed jusched.exe - sysmon]
description = Detects renamed jusched.exe used by cobalt group
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Java Update Scheduler" OR Description="Java(TM) Update Scheduler")) NOT ((Image="*\\jusched.exe"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed jusched.exe" | eval sigma_description="Detects renamed jusched.exe used by cobalt group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Renamed PaExec - winevent]
description = Detects execution of renamed paexec via imphash and executable product string
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Product="*PAExec*") (Imphash="11D40A7B7876288F919AB819CC2D9802" OR Imphash="6444f8a34e99b8f7d9647de66aabe516" OR Imphash="dfd6aa3f7b2b1035b76b718f1ddc689f" OR Imphash="1a6cca4d5460b1710a12dea39e4a592c")) NOT (New_Process_Name="*paexec*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003 FIN7 car.2013-05-009" | eval sigma_title="Execution of Renamed PaExec" | eval sigma_description="Detects execution of renamed paexec via imphash and executable product string"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Renamed PaExec - sysmon]
description = Detects execution of renamed paexec via imphash and executable product string
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Product="*PAExec*") (Imphash="11D40A7B7876288F919AB819CC2D9802" OR Imphash="6444f8a34e99b8f7d9647de66aabe516" OR Imphash="dfd6aa3f7b2b1035b76b718f1ddc689f" OR Imphash="1a6cca4d5460b1710a12dea39e4a592c")) NOT (Image="*paexec*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003 FIN7 car.2013-05-009" | eval sigma_title="Execution of Renamed PaExec" | eval sigma_description="Detects execution of renamed paexec via imphash and executable product string"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PowerShell - winevent]
description = Detects the execution of a renamed PowerShell often used by attackers or malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Windows PowerShell" Company="Microsoft Corporation") NOT ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed PowerShell" | eval sigma_description="Detects the execution of a renamed PowerShell often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PowerShell - sysmon]
description = Detects the execution of a renamed PowerShell often used by attackers or malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Windows PowerShell" Company="Microsoft Corporation") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed PowerShell" | eval sigma_description="Detects the execution of a renamed PowerShell often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ProcDump - winevent]
description = Detects the execution of a renamed ProcDump executable often used by attackers or malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="procdump" NOT ((New_Process_Name="*\\procdump.exe" OR New_Process_Name="*\\procdump64.exe"))) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="* -ma *" Process_Command_Line="* -accepteula *") NOT ((Process_Command_Line="*\\procdump.exe*" OR Process_Command_Line="*\\procdump64.exe*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed ProcDump" | eval sigma_description="Detects the execution of a renamed ProcDump executable often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ProcDump - sysmon]
description = Detects the execution of a renamed ProcDump executable often used by attackers or malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="procdump" NOT ((Image="*\\procdump.exe" OR Image="*\\procdump64.exe"))) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="* -ma *" CommandLine="* -accepteula *") NOT ((CommandLine="*\\procdump.exe*" OR CommandLine="*\\procdump64.exe*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed ProcDump" | eval sigma_description="Detects the execution of a renamed ProcDump executable often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PsExec - winevent]
description = Detects the execution of a renamed PsExec often used by attackers or malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Execute processes remotely" Product="Sysinternals PsExec") NOT ((New_Process_Name="*\\PsExec.exe" OR New_Process_Name="*\\PsExec64.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed PsExec" | eval sigma_description="Detects the execution of a renamed PsExec often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PsExec - sysmon]
description = Detects the execution of a renamed PsExec often used by attackers or malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Execute processes remotely" Product="Sysinternals PsExec") NOT ((Image="*\\PsExec.exe" OR Image="*\\PsExec64.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036 attack.t1036.003" | eval sigma_title="Renamed PsExec" | eval sigma_description="Detects the execution of a renamed PsExec often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run PowerShell Script from ADS - winevent]
description = Detects PowerShell script execution from Alternate Data Stream (ADS)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\powershell.exe" Process_Command_Line="*Get-Content*" Process_Command_Line="*-Stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1096 attack.t1564.004" | eval sigma_title="Run PowerShell Script from ADS" | eval sigma_description="Detects PowerShell script execution from Alternate Data Stream (ADS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run PowerShell Script from ADS - sysmon]
description = Detects PowerShell script execution from Alternate Data Stream (ADS)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\powershell.exe" CommandLine="*Get-Content*" CommandLine="*-Stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1096 attack.t1564.004" | eval sigma_title="Run PowerShell Script from ADS" | eval sigma_description="Detects PowerShell script execution from Alternate Data Stream (ADS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Without Parameters - winevent]
description = Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="rundll32.exe") | table ComputerName,SubjectUserName,Process_Command_Line,New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1570 attack.execution attack.t1569.002" | eval sigma_title="Rundll32 Without Parameters" | eval sigma_description="Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Without Parameters - sysmon]
description = Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="rundll32.exe") | table ComputerName,SubjectUserName,CommandLine,Image,ParentImage | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1570 attack.execution attack.t1569.002" | eval sigma_title="Rundll32 Without Parameters" | eval sigma_description="Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Shim Database Persistence via sdbinst.exe - winevent]
description = Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\sdbinst.exe") (Process_Command_Line="*.sdb*")) NOT ((Process_Command_Line="*iisexpressshim.sdb*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.011 attack.t1138" | eval sigma_title="Possible Shim Database Persistence via sdbinst.exe" | eval sigma_description="Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Shim Database Persistence via sdbinst.exe - sysmon]
description = Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\sdbinst.exe") (CommandLine="*.sdb*")) NOT ((CommandLine="*iisexpressshim.sdb*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.011 attack.t1138" | eval sigma_title="Possible Shim Database Persistence via sdbinst.exe" | eval sigma_description="Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Execution - winevent]
description = Detects manual service execution (start) via system utilities
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="* start *") | eval sigma_attack_tags="attack.execution attack.t1035 attack.t1569.002" | eval sigma_title="Service Execution" | eval sigma_description="Detects manual service execution (start) via system utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Execution - sysmon]
description = Detects manual service execution (start) via system utilities
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="* start *") | eval sigma_attack_tags="attack.execution attack.t1035 attack.t1569.002" | eval sigma_title="Service Execution" | eval sigma_description="Detects manual service execution (start) via system utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Windows Service - winevent]
description = Detects a windows service to be stopped
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\sc.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*stop*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="Stop Windows Service" | eval sigma_description="Detects a windows service to be stopped"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Windows Service - sysmon]
description = Detects a windows service to be stopped
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\sc.exe" OR Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*stop*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="Stop Windows Service" | eval sigma_description="Detects a windows service to be stopped"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Access via Symlink - winevent]
description = Shadow Copies storage symbolic link creation using operating systems utilities
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*mklink*" Process_Command_Line="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Access via Symlink" | eval sigma_description="Shadow Copies storage symbolic link creation using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Access via Symlink - sysmon]
description = Shadow Copies storage symbolic link creation using operating systems utilities
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*mklink*" CommandLine="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Access via Symlink" | eval sigma_description="Shadow Copies storage symbolic link creation using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Creation Using Operating Systems Utilities - winevent]
description = Shadow Copies creation using operating systems utilities, possible credential access
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\vssadmin.exe") Process_Command_Line="*shadow*" Process_Command_Line="*create*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Creation Using Operating Systems Utilities" | eval sigma_description="Shadow Copies creation using operating systems utilities, possible credential access"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Creation Using Operating Systems Utilities - sysmon]
description = Shadow Copies creation using operating systems utilities, possible credential access
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe" OR Image="*\\wmic.exe" OR Image="*\\vssadmin.exe") CommandLine="*shadow*" CommandLine="*create*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Creation Using Operating Systems Utilities" | eval sigma_description="Shadow Copies creation using operating systems utilities, possible credential access"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Deletion Using Operating Systems Utilities - winevent]
description = Shadow Copies deletion using operating systems utilities
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\vssadmin.exe") Process_Command_Line="*shadow*" Process_Command_Line="*delete*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1070 attack.t1490" | eval sigma_title="Shadow Copies Deletion Using Operating Systems Utilities" | eval sigma_description="Shadow Copies deletion using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Deletion Using Operating Systems Utilities - sysmon]
description = Shadow Copies deletion using operating systems utilities
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe" OR Image="*\\wmic.exe" OR Image="*\\vssadmin.exe") CommandLine="*shadow*" CommandLine="*delete*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1070 attack.t1490" | eval sigma_title="Shadow Copies Deletion Using Operating Systems Utilities" | eval sigma_description="Shadow Copies deletion using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell Spawning Suspicious Program - winevent]
description = Detects a suspicious child process of a Windows shell
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\mshta.exe" OR Creator_Process_Name="*\\powershell.exe" OR Creator_Process_Name="*\\rundll32.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\wmiprvse.exe") (New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\nslookup.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\mshta.exe")) NOT (CurrentDirectory="*\\ccmcache\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1064 attack.t1059.005 attack.t1059.001 attack.t1218" | eval sigma_title="Windows Shell Spawning Suspicious Program" | eval sigma_description="Detects a suspicious child process of a Windows shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell Spawning Suspicious Program - sysmon]
description = Detects a suspicious child process of a Windows shell
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\mshta.exe" OR ParentImage="*\\powershell.exe" OR ParentImage="*\\rundll32.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\wscript.exe" OR ParentImage="*\\wmiprvse.exe") (Image="*\\schtasks.exe" OR Image="*\\nslookup.exe" OR Image="*\\certutil.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\mshta.exe")) NOT (CurrentDirectory="*\\ccmcache\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1064 attack.t1059.005 attack.t1059.001 attack.t1218" | eval sigma_title="Windows Shell Spawning Suspicious Program" | eval sigma_description="Detects a suspicious child process of a Windows shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via SoundRecorder - winevent]
description = Detect attacker collecting audio via SoundRecorder application
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\SoundRecorder.exe" Process_Command_Line="*/FILE*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via SoundRecorder" | eval sigma_description="Detect attacker collecting audio via SoundRecorder application"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via SoundRecorder - sysmon]
description = Detect attacker collecting audio via SoundRecorder application
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\SoundRecorder.exe" CommandLine="*/FILE*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via SoundRecorder" | eval sigma_description="Detect attacker collecting audio via SoundRecorder application"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible SPN Enumeration - winevent]
description = Detects Service Principal Name Enumeration used for Kerberoasting
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\setspn.exe" OR (Description="*Query or reset the computer*" Description="*SPN attribute*")) Process_Command_Line="*-q*") | eval sigma_attack_tags="attack.credential_access attack.t1558.003 attack.t1208" | eval sigma_title="Possible SPN Enumeration" | eval sigma_description="Detects Service Principal Name Enumeration used for Kerberoasting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible SPN Enumeration - sysmon]
description = Detects Service Principal Name Enumeration used for Kerberoasting
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\setspn.exe" OR (Description="*Query or reset the computer*" Description="*SPN attribute*")) CommandLine="*-q*") | eval sigma_attack_tags="attack.credential_access attack.t1558.003 attack.t1208" | eval sigma_title="Possible SPN Enumeration" | eval sigma_description="Detects Service Principal Name Enumeration used for Kerberoasting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Auditpol Usage - winevent]
description = Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\auditpol.exe" (Process_Command_Line="*disable*" OR Process_Command_Line="*clear*" OR Process_Command_Line="*remove*" OR Process_Command_Line="*restore*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspicious Auditpol Usage" | eval sigma_description="Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Auditpol Usage - sysmon]
description = Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\auditpol.exe" (CommandLine="*disable*" OR CommandLine="*clear*" OR CommandLine="*remove*" OR CommandLine="*restore*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspicious Auditpol Usage" | eval sigma_description="Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdFind Execution - winevent]
description = Detects the execution of a AdFind for Active Directory enumeration
search = index=wineventlog* ((Process_Command_Line="*objectcategory*" OR Process_Command_Line="*trustdmp*" OR Process_Command_Line="*dcmodes*" OR Process_Command_Line="*dclist*" OR Process_Command_Line="*computers_pwdnotreqd*") New_Process_Name="*\\adfind.exe") | eval sigma_attack_tags="attack.discovery attack.t1018 attack.t1087.002 attack.t1482 attack.t1069.002" | eval sigma_title="Suspicious AdFind Execution" | eval sigma_description="Detects the execution of a AdFind for Active Directory enumeration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdFind Execution - sysmon]
description = Detects the execution of a AdFind for Active Directory enumeration
search = index=sysmon* ((CommandLine="*objectcategory*" OR CommandLine="*trustdmp*" OR CommandLine="*dcmodes*" OR CommandLine="*dclist*" OR CommandLine="*computers_pwdnotreqd*") Image="*\\adfind.exe") | eval sigma_attack_tags="attack.discovery attack.t1018 attack.t1087.002 attack.t1482 attack.t1069.002" | eval sigma_title="Suspicious AdFind Execution" | eval sigma_description="Detects the execution of a AdFind for Active Directory enumeration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Atbroker Execution - winevent]
description = Atbroker executing non-deafualt Assistive Technology applications
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*AtBroker.exe" Process_Command_Line="*start*") NOT ((Process_Command_Line="*animations*" OR Process_Command_Line="*audiodescription*" OR Process_Command_Line="*caretbrowsing*" OR Process_Command_Line="*caretwidth*" OR Process_Command_Line="*colorfiltering*" OR Process_Command_Line="*cursorscheme*" OR Process_Command_Line="*filterkeys*" OR Process_Command_Line="*focusborderheight*" OR Process_Command_Line="*focusborderwidth*" OR Process_Command_Line="*highcontrast*" OR Process_Command_Line="*keyboardcues*" OR Process_Command_Line="*keyboardpref*" OR Process_Command_Line="*magnifierpane*" OR Process_Command_Line="*messageduration*" OR Process_Command_Line="*minimumhitradius*" OR Process_Command_Line="*mousekeys*" OR Process_Command_Line="*Narrator*" OR Process_Command_Line="*osk*" OR Process_Command_Line="*overlappedcontent*" OR Process_Command_Line="*showsounds*" OR Process_Command_Line="*soundsentry*" OR Process_Command_Line="*stickykeys*" OR Process_Command_Line="*togglekeys*" OR Process_Command_Line="*windowarranging*" OR Process_Command_Line="*windowtracking*" OR Process_Command_Line="*windowtrackingtimeout*" OR Process_Command_Line="*windowtrackingzorder*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Atbroker Execution" | eval sigma_description="Atbroker executing non-deafualt Assistive Technology applications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Atbroker Execution - sysmon]
description = Atbroker executing non-deafualt Assistive Technology applications
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*AtBroker.exe" CommandLine="*start*") NOT ((CommandLine="*animations*" OR CommandLine="*audiodescription*" OR CommandLine="*caretbrowsing*" OR CommandLine="*caretwidth*" OR CommandLine="*colorfiltering*" OR CommandLine="*cursorscheme*" OR CommandLine="*filterkeys*" OR CommandLine="*focusborderheight*" OR CommandLine="*focusborderwidth*" OR CommandLine="*highcontrast*" OR CommandLine="*keyboardcues*" OR CommandLine="*keyboardpref*" OR CommandLine="*magnifierpane*" OR CommandLine="*messageduration*" OR CommandLine="*minimumhitradius*" OR CommandLine="*mousekeys*" OR CommandLine="*Narrator*" OR CommandLine="*osk*" OR CommandLine="*overlappedcontent*" OR CommandLine="*showsounds*" OR CommandLine="*soundsentry*" OR CommandLine="*stickykeys*" OR CommandLine="*togglekeys*" OR CommandLine="*windowarranging*" OR CommandLine="*windowtracking*" OR CommandLine="*windowtrackingtimeout*" OR CommandLine="*windowtrackingzorder*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Atbroker Execution" | eval sigma_description="Atbroker executing non-deafualt Assistive Technology applications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Ransomware or Unauthorized MBR Modifications - winevent]
description = Detects, possibly, malicious unauthorized usage of bcdedit.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bcdedit.exe" (Process_Command_Line="*delete*" OR Process_Command_Line="*deletevalue*" OR Process_Command_Line="*import*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.persistence attack.t1542.003 attack.t1067" | eval sigma_title="Possible Ransomware or Unauthorized MBR Modifications" | eval sigma_description="Detects, possibly, malicious unauthorized usage of bcdedit.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Ransomware or Unauthorized MBR Modifications - sysmon]
description = Detects, possibly, malicious unauthorized usage of bcdedit.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bcdedit.exe" (CommandLine="*delete*" OR CommandLine="*deletevalue*" OR CommandLine="*import*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.persistence attack.t1542.003 attack.t1067" | eval sigma_title="Possible Ransomware or Unauthorized MBR Modifications" | eval sigma_description="Detects, possibly, malicious unauthorized usage of bcdedit.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Bginfo - winevent]
description = Execute VBscript code that is referenced within the *.bgi file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bginfo.exe" Process_Command_Line="*/popup*" Process_Command_Line="*/nolicprompt*") | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Application Whitelisting Bypass via Bginfo" | eval sigma_description="Execute VBscript code that is referenced within the *.bgi file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Bginfo - sysmon]
description = Execute VBscript code that is referenced within the *.bgi file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bginfo.exe" CommandLine="*/popup*" CommandLine="*/nolicprompt*") | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Application Whitelisting Bypass via Bginfo" | eval sigma_description="Execute VBscript code that is referenced within the *.bgi file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Calculator Usage - winevent]
description = Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\calc.exe *" OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\calc.exe" NOT (New_Process_Name="*\\Windows\\Sys*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Calculator Usage" | eval sigma_description="Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Calculator Usage - sysmon]
description = Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\calc.exe *" OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\calc.exe" NOT (Image="*\\Windows\\Sys*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Calculator Usage" | eval sigma_description="Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner - winevent]
description = Launch 64-bit shellcode from a debugger script file using cdb.exe.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cdb.exe" Process_Command_Line="*-cf*") | eval sigma_attack_tags="attack.execution attack.t1106 attack.defense_evasion attack.t1218 attack.t1127" | eval sigma_title="Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner" | eval sigma_description="Launch 64-bit shellcode from a debugger script file using cdb.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner - sysmon]
description = Launch 64-bit shellcode from a debugger script file using cdb.exe.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cdb.exe" CommandLine="*-cf*") | eval sigma_attack_tags="attack.execution attack.t1106 attack.defense_evasion attack.t1218 attack.t1127" | eval sigma_title="Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner" | eval sigma_description="Launch 64-bit shellcode from a debugger script file using cdb.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certutil Command - winevent]
description = Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -decode *" OR Process_Command_Line="* -decodehex *" OR Process_Command_Line="* -urlcache *" OR Process_Command_Line="* -verifyctl *" OR Process_Command_Line="* -encode *" OR Process_Command_Line="* /decode *" OR Process_Command_Line="* /decodehex *" OR Process_Command_Line="* /urlcache *" OR Process_Command_Line="* /verifyctl *" OR Process_Command_Line="* /encode *") OR (New_Process_Name="*\\certutil.exe" (Process_Command_Line="*URL*" OR Process_Command_Line="*ping*")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.command_and_control attack.t1105 attack.s0160 attack.g0007 attack.g0010 attack.g0045 attack.g0049 attack.g0075 attack.g0096" | eval sigma_title="Suspicious Certutil Command" | eval sigma_description="Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certutil Command - sysmon]
description = Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -decode *" OR CommandLine="* -decodehex *" OR CommandLine="* -urlcache *" OR CommandLine="* -verifyctl *" OR CommandLine="* -encode *" OR CommandLine="* /decode *" OR CommandLine="* /decodehex *" OR CommandLine="* /urlcache *" OR CommandLine="* /verifyctl *" OR CommandLine="* /encode *") OR (Image="*\\certutil.exe" (CommandLine="*URL*" OR CommandLine="*ping*")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.command_and_control attack.t1105 attack.s0160 attack.g0007 attack.g0010 attack.g0045 attack.g0049 attack.g0075 attack.g0096" | eval sigma_title="Suspicious Certutil Command" | eval sigma_description="Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certutil Encode - winevent]
description = Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\certutil.exe" Process_Command_Line="*-f*" Process_Command_Line="*-encode*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="Certutil Encode" | eval sigma_description="Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certutil Encode - sysmon]
description = Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\certutil.exe" CommandLine="*-f*" CommandLine="*-encode*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="Certutil Encode" | eval sigma_description="Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Commandline Escape - winevent]
description = Detects suspicious process that use escape characters
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*h^t^t^p*" OR Process_Command_Line="*h\"t\"t\"p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="Suspicious Commandline Escape" | eval sigma_description="Detects suspicious process that use escape characters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Commandline Escape - sysmon]
description = Detects suspicious process that use escape characters
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*h^t^t^p*" OR CommandLine="*h\"t\"t\"p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="Suspicious Commandline Escape" | eval sigma_description="Detects suspicious process that use escape characters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Execution with Suspicious URL and AppData Strings - winevent]
description = Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Process_Command_Line="*http*" Process_Command_Line="*://*" Process_Command_Line="*%AppData%*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.001 attack.command_and_control attack.t1105" | eval sigma_title="Command Line Execution with Suspicious URL and AppData Strings" | eval sigma_description="Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Execution with Suspicious URL and AppData Strings - sysmon]
description = Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" CommandLine="*http*" CommandLine="*://*" CommandLine="*%AppData%*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.001 attack.command_and_control attack.t1105" | eval sigma_title="Command Line Execution with Suspicious URL and AppData Strings" | eval sigma_description="Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Code Page Switch - winevent]
description = Detects a code page switch in command line or batch scripts to a rare language
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\chcp.com" (Process_Command_Line="* 936" OR Process_Command_Line="* 1258")) | table ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Code Page Switch" | eval sigma_description="Detects a code page switch in command line or batch scripts to a rare language"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Code Page Switch - sysmon]
description = Detects a code page switch in command line or batch scripts to a rare language
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\chcp.com" (CommandLine="* 936" OR CommandLine="* 1258")) | table ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Code Page Switch" | eval sigma_description="Detects a code page switch in command line or batch scripts to a rare language"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity with Net Command - winevent]
description = Detects a set of commands often used in recon stages by different attack groups
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="tasklist" OR Process_Command_Line="net time" OR Process_Command_Line="systeminfo" OR Process_Command_Line="whoami" OR Process_Command_Line="nbtstat" OR Process_Command_Line="net start" OR Process_Command_Line="qprocess" OR Process_Command_Line="nslookup" OR Process_Command_Line="hostname.exe" OR Process_Command_Line="netstat -an") OR (Process_Command_Line="*\\net1 start" OR Process_Command_Line="*\\net1 user /domain" OR Process_Command_Line="*\\net1 group /domain" OR Process_Command_Line="*\\net1 group \"domain admins\" /domain" OR Process_Command_Line="*\\net1 group \"Exchange Trusted Subsystem\" /domain" OR Process_Command_Line="*\\net1 accounts /domain" OR Process_Command_Line="*\\net1 user net localgroup administrators"))) | eventstats count as val by Process_Command_Line| search val > 4 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Reconnaissance Activity with Net Command" | eval sigma_description="Detects a set of commands often used in recon stages by different attack groups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity with Net Command - sysmon]
description = Detects a set of commands often used in recon stages by different attack groups
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="tasklist" OR CommandLine="net time" OR CommandLine="systeminfo" OR CommandLine="whoami" OR CommandLine="nbtstat" OR CommandLine="net start" OR CommandLine="qprocess" OR CommandLine="nslookup" OR CommandLine="hostname.exe" OR CommandLine="netstat -an") OR (CommandLine="*\\net1 start" OR CommandLine="*\\net1 user /domain" OR CommandLine="*\\net1 group /domain" OR CommandLine="*\\net1 group \"domain admins\" /domain" OR CommandLine="*\\net1 group \"Exchange Trusted Subsystem\" /domain" OR CommandLine="*\\net1 accounts /domain" OR CommandLine="*\\net1 user net localgroup administrators"))) | eventstats count as val by CommandLine| search val > 4 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Reconnaissance Activity with Net Command" | eval sigma_description="Detects a set of commands often used in recon stages by different attack groups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Compression Tool Parameters - winevent]
description = Detects suspicious command line arguments of common data compression tools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((OriginalFileName="7z*.exe" OR OriginalFileName="*rar.exe" OR OriginalFileName="*Command*Line*RAR*") (Process_Command_Line="* -p*" OR Process_Command_Line="* -ta*" OR Process_Command_Line="* -tb*" OR Process_Command_Line="* -sdel*" OR Process_Command_Line="* -dw*" OR Process_Command_Line="* -hp*")) NOT (Creator_Process_Name="C:\\Program*")) | eval sigma_attack_tags="attack.collection attack.t1560.001 attack.exfiltration attack.t1020 attack.t1002" | eval sigma_title="Suspicious Compression Tool Parameters" | eval sigma_description="Detects suspicious command line arguments of common data compression tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Compression Tool Parameters - sysmon]
description = Detects suspicious command line arguments of common data compression tools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((OriginalFileName="7z*.exe" OR OriginalFileName="*rar.exe" OR OriginalFileName="*Command*Line*RAR*") (CommandLine="* -p*" OR CommandLine="* -ta*" OR CommandLine="* -tb*" OR CommandLine="* -sdel*" OR CommandLine="* -dw*" OR CommandLine="* -hp*")) NOT (ParentImage="C:\\Program*")) | eval sigma_attack_tags="attack.collection attack.t1560.001 attack.exfiltration attack.t1020 attack.t1002" | eval sigma_title="Suspicious Compression Tool Parameters" | eval sigma_description="Detects suspicious command line arguments of common data compression tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Comsvcs DLL - winevent]
description = Detects process memory dump via comsvcs.dll and rundll32
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") (Process_Command_Line="*comsvcs*" Process_Command_Line="*MiniDump*" Process_Command_Line="*full*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.credential_access attack.t1003.001 attack.t1003" | eval sigma_title="Process Dump via Comsvcs DLL" | eval sigma_description="Detects process memory dump via comsvcs.dll and rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Comsvcs DLL - sysmon]
description = Detects process memory dump via comsvcs.dll and rundll32
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") (CommandLine="*comsvcs*" CommandLine="*MiniDump*" CommandLine="*full*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.credential_access attack.t1003.001 attack.t1003" | eval sigma_title="Process Dump via Comsvcs DLL" | eval sigma_description="Detects process memory dump via comsvcs.dll and rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conhost Parent Process Executions - winevent]
description = Detects the conhost execution as parent process. Can be used to evaded defense mechanism.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\conhost.exe") | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Conhost Parent Process Executions" | eval sigma_description="Detects the conhost execution as parent process. Can be used to evaded defense mechanism."
dispatch.earliest_time = -24h@h
alert.track = 0

[Conhost Parent Process Executions - sysmon]
description = Detects the conhost execution as parent process. Can be used to evaded defense mechanism.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\conhost.exe") | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Conhost Parent Process Executions" | eval sigma_description="Detects the conhost execution as parent process. Can be used to evaded defense mechanism."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Control Panel DLL Load - winevent]
description = Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\System32\\control.exe" New_Process_Name="*\\rundll32.exe ") NOT (Process_Command_Line="*Shell32.dll*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Suspicious Control Panel DLL Load" | eval sigma_description="Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Control Panel DLL Load - sysmon]
description = Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\System32\\control.exe" Image="*\\rundll32.exe ") NOT (CommandLine="*Shell32.dll*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1085 attack.t1218.011" | eval sigma_title="Suspicious Control Panel DLL Load" | eval sigma_description="Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Admin Share - winevent]
description = Detects a suspicious copy command to or from an Admin share
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\robocopy.exe" OR New_Process_Name="*\\xcopy.exe") OR (New_Process_Name="*\\cmd.exe" Process_Command_Line="*copy*")) OR (New_Process_Name="*\\powershell*" (Process_Command_Line="*copy-item*" OR Process_Command_Line="*copy*" OR Process_Command_Line="*cpi *" OR Process_Command_Line="* cp *"))) (Process_Command_Line="*\\\\\*" Process_Command_Line="*$*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.collection attack.exfiltration attack.t1039 attack.t1105 attack.t1048 attack.t1021.002" | eval sigma_title="Copy from Admin Share" | eval sigma_description="Detects a suspicious copy command to or from an Admin share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Admin Share - sysmon]
description = Detects a suspicious copy command to or from an Admin share
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\robocopy.exe" OR Image="*\\xcopy.exe") OR (Image="*\\cmd.exe" CommandLine="*copy*")) OR (Image="*\\powershell*" (CommandLine="*copy-item*" OR CommandLine="*copy*" OR CommandLine="*cpi *" OR CommandLine="* cp *"))) (CommandLine="*\\\\\*" CommandLine="*$*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.collection attack.exfiltration attack.t1039 attack.t1105 attack.t1048 attack.t1021.002" | eval sigma_title="Copy from Admin Share" | eval sigma_description="Detects a suspicious copy command to or from an Admin share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Copy From or To System32 - winevent]
description = Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* /c copy*" OR Process_Command_Line="*xcopy*") Process_Command_Line="*\\System32\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Suspicious Copy From or To System32" | eval sigma_description="Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Copy From or To System32 - sysmon]
description = Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* /c copy*" OR CommandLine="*xcopy*") CommandLine="*\\System32\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Suspicious Copy From or To System32" | eval sigma_description="Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Covenant Launcher Indicators - winevent]
description = Detects suspicious command lines used in Covenant luanchers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*-Sta*" Process_Command_Line="*-Nop*" Process_Command_Line="*-Window*" Process_Command_Line="*Hidden*" (Process_Command_Line="*-Command*" OR Process_Command_Line="*-EncodedCommand*")) OR (Process_Command_Line="*sv o (New-Object IO.MemorySteam);sv d *" OR Process_Command_Line="*mshta file.hta*" OR Process_Command_Line="*GruntHTTP*" OR Process_Command_Line="*-EncodedCommand cwB2ACAAbwAgA*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.001 attack.t1564.003 attack.t1086" | eval sigma_title="Covenant Launcher Indicators" | eval sigma_description="Detects suspicious command lines used in Covenant luanchers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Covenant Launcher Indicators - sysmon]
description = Detects suspicious command lines used in Covenant luanchers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*-Sta*" CommandLine="*-Nop*" CommandLine="*-Window*" CommandLine="*Hidden*" (CommandLine="*-Command*" OR CommandLine="*-EncodedCommand*")) OR (CommandLine="*sv o (New-Object IO.MemorySteam);sv d *" OR CommandLine="*mshta file.hta*" OR CommandLine="*GruntHTTP*" OR CommandLine="*-EncodedCommand cwB2ACAAbwAgA*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.001 attack.t1564.003 attack.t1086" | eval sigma_title="Covenant Launcher Indicators" | eval sigma_description="Detects suspicious command lines used in Covenant luanchers"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Execution - winevent]
description = Detect various execution methods of the CrackMapExec pentesting framework
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1" OR Process_Command_Line="*cmd.exe /C * > \\\\*\\*\\* 2>&1" OR Process_Command_Line="*cmd.exe /C * > *\\Temp\\* 2>&1") (Process_Command_Line="*powershell.exe -exec bypass -noni -nop -w 1 -C \"*" OR Process_Command_Line="*powershell.exe -noni -nop -w 1 -enc *")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1053 attack.t1059.003 attack.t1059.001 attack.s0106 attack.t1086" | eval sigma_title="CrackMapExec Command Execution" | eval sigma_description="Detect various execution methods of the CrackMapExec pentesting framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Execution - sysmon]
description = Detect various execution methods of the CrackMapExec pentesting framework
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1" OR CommandLine="*cmd.exe /C * > \\\\*\\*\\* 2>&1" OR CommandLine="*cmd.exe /C * > *\\Temp\\* 2>&1") (CommandLine="*powershell.exe -exec bypass -noni -nop -w 1 -C \"*" OR CommandLine="*powershell.exe -noni -nop -w 1 -enc *")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1053 attack.t1059.003 attack.t1059.001 attack.s0106 attack.t1086" | eval sigma_title="CrackMapExec Command Execution" | eval sigma_description="Detect various execution methods of the CrackMapExec pentesting framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec PowerShell Obfuscation - winevent]
description = The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*powershell.exe*" (Process_Command_Line="*join*split*" OR Process_Command_Line="*( $ShellId[1]+$ShellId[13]+'x')*" OR Process_Command_Line="*( $PSHome[*]+$PSHOME[*]+*" OR Process_Command_Line="*( $env:Public[13]+$env:Public[5]+'x')*" OR Process_Command_Line="*( $env:ComSpec[4,*,25]-Join'')*" OR Process_Command_Line="*[1,3]+'x'-Join'')*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027.005 attack.t1027 attack.t1086" | eval sigma_title="CrackMapExec PowerShell Obfuscation" | eval sigma_description="The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec PowerShell Obfuscation - sysmon]
description = The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*powershell.exe*" (CommandLine="*join*split*" OR CommandLine="*( $ShellId[1]+$ShellId[13]+'x')*" OR CommandLine="*( $PSHome[*]+$PSHOME[*]+*" OR CommandLine="*( $env:Public[13]+$env:Public[5]+'x')*" OR CommandLine="*( $env:ComSpec[4,*,25]-Join'')*" OR CommandLine="*[1,3]+'x'-Join'')*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027.005 attack.t1027 attack.t1086" | eval sigma_title="CrackMapExec PowerShell Obfuscation" | eval sigma_description="The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csc.exe Source File Folder - winevent]
description = Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\csc.exe" (Process_Command_Line="*\\AppData\\*" OR Process_Command_Line="*\\Windows\\Temp\\*")) NOT (Creator_Process_Name="C:\\Program Files*" OR (Creator_Process_Name="*\\sdiagnhost.exe" OR Creator_Process_Name="*\\w3wp.exe") OR (ParentCommandLine="*\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1500 attack.t1027.004" | eval sigma_title="Suspicious Csc.exe Source File Folder" | eval sigma_description="Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csc.exe Source File Folder - sysmon]
description = Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\csc.exe" (CommandLine="*\\AppData\\*" OR CommandLine="*\\Windows\\Temp\\*")) NOT (ParentImage="C:\\Program Files*" OR (ParentImage="*\\sdiagnhost.exe" OR ParentImage="*\\w3wp.exe") OR (ParentCommandLine="*\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1500 attack.t1027.004" | eval sigma_title="Suspicious Csc.exe Source File Folder" | eval sigma_description="Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Parent of Csc.exe - winevent]
description = Detects a suspicious parent of csc.exe, which could by a sign of payload delivery
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\csc.exe" (Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\mshta.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.defense_evasion attack.t1500 attack.t1218.005 attack.t1027.004" | eval sigma_title="Suspicious Parent of Csc.exe" | eval sigma_description="Detects a suspicious parent of csc.exe, which could by a sign of payload delivery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Parent of Csc.exe - sysmon]
description = Detects a suspicious parent of csc.exe, which could by a sign of payload delivery
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\csc.exe" (ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\mshta.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.defense_evasion attack.t1500 attack.t1218.005 attack.t1027.004" | eval sigma_title="Suspicious Parent of Csc.exe" | eval sigma_description="Detects a suspicious parent of csc.exe, which could by a sign of payload delivery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csi.exe Usage - winevent]
description = Csi.exe is a signed binary from Micosoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\csi.exe" OR New_Process_Name="*\\rcsi.exe" OR OriginalFilename="csi.exe" OR OriginalFilename="rcsi.exe") Company="Microsoft Corporation") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1072 attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Csi.exe Usage" | eval sigma_description="Csi.exe is a signed binary from Micosoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csi.exe Usage - sysmon]
description = Csi.exe is a signed binary from Micosoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\csi.exe" OR Image="*\\rcsi.exe" OR OriginalFilename="csi.exe" OR OriginalFilename="rcsi.exe") Company="Microsoft Corporation") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1072 attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Csi.exe Usage" | eval sigma_description="Csi.exe is a signed binary from Micosoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Curl Usage on Windows - winevent]
description = Detects a suspicious curl process start on Windows and outputs the requested document to a local file
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\curl.exe" OR Product="The curl executable") Process_Command_Line="* -O *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Curl Usage on Windows" | eval sigma_description="Detects a suspicious curl process start on Windows and outputs the requested document to a local file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Curl Usage on Windows - sysmon]
description = Detects a suspicious curl process start on Windows and outputs the requested document to a local file
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\curl.exe" OR Product="The curl executable") CommandLine="* -O *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Curl Usage on Windows" | eval sigma_description="Detects a suspicious curl process start on Windows and outputs the requested document to a local file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Curl File Upload - winevent]
description = Detects a suspicious curl process start the adds a file to a web request
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\curl.exe" Process_Command_Line="* -F *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1567" | eval sigma_title="Suspicious Curl File Upload" | eval sigma_description="Detects a suspicious curl process start the adds a file to a web request"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Curl File Upload - sysmon]
description = Detects a suspicious curl process start the adds a file to a web request
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\curl.exe" CommandLine="* -F *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1567" | eval sigma_title="Suspicious Curl File Upload" | eval sigma_description="Detects a suspicious curl process start the adds a file to a web request"
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Start Combination - winevent]
description = Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*curl*" Process_Command_Line="* start *") | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1218 attack.command_and_control attack.t1105" | eval sigma_title="Curl Start Combination" | eval sigma_description="Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Start Combination - sysmon]
description = Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*curl*" CommandLine="* start *") | table ParentImage,CommandLine | eval sigma_attack_tags="attack.execution attack.t1218 attack.command_and_control attack.t1105" | eval sigma_title="Curl Start Combination" | eval sigma_description="Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later."
dispatch.earliest_time = -24h@h
alert.track = 0

[ZOHO Dctask64 Process Injection - winevent]
description = Detects suspicious process injection using ZOHO's dctask64.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\dctask64.exe") NOT ((Process_Command_Line="*DesktopCentral_Agent\\agent*"))) | table Process_Command_Line,ParentCommandLine,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001 attack.t1055" | eval sigma_title="ZOHO Dctask64 Process Injection" | eval sigma_description="Detects suspicious process injection using ZOHO's dctask64.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZOHO Dctask64 Process Injection - sysmon]
description = Detects suspicious process injection using ZOHO's dctask64.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\dctask64.exe") NOT ((CommandLine="*DesktopCentral_Agent\\agent*"))) | table CommandLine,ParentCommandLine,ParentImage | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001 attack.t1055" | eval sigma_title="ZOHO Dctask64 Process Injection" | eval sigma_description="Detects suspicious process injection using ZOHO's dctask64.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Desktopimgdownldr Command - winevent]
description = Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Process_Command_Line="* /lockscreenurl:*" NOT ((Process_Command_Line="*.jpg*" OR Process_Command_Line="*.jpeg*" OR Process_Command_Line="*.png*"))) OR (Process_Command_Line="*reg delete*" Process_Command_Line="*\\PersonalizationCSP*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Desktopimgdownldr Command" | eval sigma_description="Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Desktopimgdownldr Command - sysmon]
description = Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CommandLine="* /lockscreenurl:*" NOT ((CommandLine="*.jpg*" OR CommandLine="*.jpeg*" OR CommandLine="*.png*"))) OR (CommandLine="*reg delete*" CommandLine="*\\PersonalizationCSP*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Desktopimgdownldr Command" | eval sigma_description="Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Devtoolslauncher.exe Executes Specified Binary - winevent]
description = The Devtoolslauncher.exe executes other binary
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\devtoolslauncher.exe" Process_Command_Line="*LaunchForDeploy*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Devtoolslauncher.exe Executes Specified Binary" | eval sigma_description="The Devtoolslauncher.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Devtoolslauncher.exe Executes Specified Binary - sysmon]
description = The Devtoolslauncher.exe executes other binary
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\devtoolslauncher.exe" CommandLine="*LaunchForDeploy*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Devtoolslauncher.exe Executes Specified Binary" | eval sigma_description="The Devtoolslauncher.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Autorun Keys Modification - winevent]
description = Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*add*" (Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*" OR Process_Command_Line="*\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001 attack.t1060" | eval sigma_title="Direct Autorun Keys Modification" | eval sigma_description="Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Autorun Keys Modification - sysmon]
description = Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" CommandLine="*add*" (CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*" OR CommandLine="*\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001 attack.t1060" | eval sigma_title="Direct Autorun Keys Modification" | eval sigma_description="Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable Windows Eventlog - winevent]
description = Detects command that is used to disable Windows eventlog
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*logman stop EventLog-System*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disable Windows Eventlog" | eval sigma_description="Detects command that is used to disable Windows eventlog"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable Windows Eventlog - sysmon]
description = Detects command that is used to disable Windows eventlog
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*logman stop EventLog-System*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disable Windows Eventlog" | eval sigma_description="Detects command that is used to disable Windows eventlog"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled IE Security Features - winevent]
description = Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -name IEHarden *" Process_Command_Line="* -value 0 *") OR (Process_Command_Line="* -name DEPOff *" Process_Command_Line="* -value 1 *") OR (Process_Command_Line="* -name DisableFirstRunCustomize *" Process_Command_Line="* -value 2 *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001 attack.t1089" | eval sigma_title="Disabled IE Security Features" | eval sigma_description="Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled IE Security Features - sysmon]
description = Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -name IEHarden *" CommandLine="* -value 0 *") OR (CommandLine="* -name DEPOff *" CommandLine="* -value 1 *") OR (CommandLine="* -name DisableFirstRunCustomize *" CommandLine="* -value 2 *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001 attack.t1089" | eval sigma_title="Disabled IE Security Features" | eval sigma_description="Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features"
dispatch.earliest_time = -24h@h
alert.track = 0

[Raccine Uninstall - winevent]
description = Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*taskkill *" Process_Command_Line="*/IM RaccineSettings.exe*") OR (Process_Command_Line="*reg.exe*" Process_Command_Line="*delete*" Process_Command_Line="*Raccine Tray*") OR (Process_Command_Line="*schtasks*" Process_Command_Line="*/DELETE*" Process_Command_Line="*Raccine Rules Updater*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Raccine Uninstall" | eval sigma_description="Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Raccine Uninstall - sysmon]
description = Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*taskkill *" CommandLine="*/IM RaccineSettings.exe*") OR (CommandLine="*reg.exe*" CommandLine="*delete*" CommandLine="*Raccine Tray*") OR (CommandLine="*schtasks*" CommandLine="*/DELETE*" CommandLine="*Raccine Rules Updater*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Raccine Uninstall" | eval sigma_description="Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via Diskshadow.exe - winevent]
description = Detects using Diskshadow.exe to execute arbitrary code in text file
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\diskshadow.exe" (Process_Command_Line="*/s*" OR Process_Command_Line="*-s*")) | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execution via Diskshadow.exe" | eval sigma_description="Detects using Diskshadow.exe to execute arbitrary code in text file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via Diskshadow.exe - sysmon]
description = Detects using Diskshadow.exe to execute arbitrary code in text file
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\diskshadow.exe" (CommandLine="*/s*" OR CommandLine="*-s*")) | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execution via Diskshadow.exe" | eval sigma_description="Detects using Diskshadow.exe to execute arbitrary code in text file"
dispatch.earliest_time = -24h@h
alert.track = 0

[DIT Snapshot Viewer Use - winevent]
description = Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\ditsnap.exe") OR (Process_Command_Line="*ditsnap.exe*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.003 attack.t1003" | eval sigma_title="DIT Snapshot Viewer Use" | eval sigma_description="Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[DIT Snapshot Viewer Use - sysmon]
description = Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\ditsnap.exe") OR (CommandLine="*ditsnap.exe*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.003 attack.t1003" | eval sigma_title="DIT Snapshot Viewer Use" | eval sigma_description="Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dnx.exe - winevent]
description = Execute C# code located in the consoleapp folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\dnx.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1027.004 attack.execution" | eval sigma_title="Application Whitelisting Bypass via Dnx.exe" | eval sigma_description="Execute C# code located in the consoleapp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dnx.exe - sysmon]
description = Execute C# code located in the consoleapp folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\dnx.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1027.004 attack.execution" | eval sigma_title="Application Whitelisting Bypass via Dnx.exe" | eval sigma_description="Execute C# code located in the consoleapp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Double Extension - winevent]
description = Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*.doc.exe" OR New_Process_Name="*.docx.exe" OR New_Process_Name="*.xls.exe" OR New_Process_Name="*.xlsx.exe" OR New_Process_Name="*.ppt.exe" OR New_Process_Name="*.pptx.exe" OR New_Process_Name="*.rtf.exe" OR New_Process_Name="*.pdf.exe" OR New_Process_Name="*.txt.exe" OR New_Process_Name="*      .exe" OR New_Process_Name="*______.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Suspicious Double Extension" | eval sigma_description="Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Double Extension - sysmon]
description = Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*.doc.exe" OR Image="*.docx.exe" OR Image="*.xls.exe" OR Image="*.xlsx.exe" OR Image="*.ppt.exe" OR Image="*.pptx.exe" OR Image="*.rtf.exe" OR Image="*.pdf.exe" OR Image="*.txt.exe" OR Image="*      .exe" OR Image="*______.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Suspicious Double Extension" | eval sigma_description="Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dxcap.exe - winevent]
description = Detects execution of of Dxcap.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\dxcap.exe" Process_Command_Line="*-c*" Process_Command_Line="*.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Application Whitelisting Bypass via Dxcap.exe" | eval sigma_description="Detects execution of of Dxcap.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dxcap.exe - sysmon]
description = Detects execution of of Dxcap.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\dxcap.exe" CommandLine="*-c*" CommandLine="*.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Application Whitelisting Bypass via Dxcap.exe" | eval sigma_description="Detects execution of of Dxcap.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet RunDLL32 Process Creation - winevent]
description = Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,#1
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe") (Process_Command_Line="*,RunDLL")) NOT ((Creator_Process_Name="*\\tracker.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Emotet RunDLL32 Process Creation" | eval sigma_description="Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,#1"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet RunDLL32 Process Creation - sysmon]
description = Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,#1
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe") (CommandLine="*,RunDLL")) NOT ((ParentImage="*\\tracker.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Emotet RunDLL32 Process Creation" | eval sigma_description="Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,#1"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Eventlog Clear or Configuration Using Wevtutil - winevent]
description = Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\powershell.exe" (Process_Command_Line="*Clear-EventLog*" OR Process_Command_Line="*Remove-EventLog*" OR Process_Command_Line="*Limit-EventLog*")) OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="* ClearEventLog *")) OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\wevtutil.exe" (Process_Command_Line="*clear-log*" OR Process_Command_Line="* cl *" OR Process_Command_Line="*set-log*" OR Process_Command_Line="* sl *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 attack.t1070 car.2016-04-002" | eval sigma_title="Suspicious Eventlog Clear or Configuration Using Wevtutil" | eval sigma_description="Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Eventlog Clear or Configuration Using Wevtutil - sysmon]
description = Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\powershell.exe" (CommandLine="*Clear-EventLog*" OR CommandLine="*Remove-EventLog*" OR CommandLine="*Limit-EventLog*")) OR (Image="*\\wmic.exe" CommandLine="* ClearEventLog *")) OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wevtutil.exe" (CommandLine="*clear-log*" OR CommandLine="* cl *" OR CommandLine="*set-log*" OR CommandLine="* sl *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 attack.t1070 car.2016-04-002" | eval sigma_title="Suspicious Eventlog Clear or Configuration Using Wevtutil" | eval sigma_description="Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Webserver Root Folder - winevent]
description = Detects a suspicious program execution in a web service root folder (filter out false positives)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wwwroot\\*" OR New_Process_Name="*\\wmpub\\*" OR New_Process_Name="*\\htdocs\\*") NOT ((New_Process_Name="*bin\\*" OR New_Process_Name="*\\Tools\\*" OR New_Process_Name="*\\SMSComponent\\*") (Creator_Process_Name="*\\services.exe"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1100" | eval sigma_title="Execution in Webserver Root Folder" | eval sigma_description="Detects a suspicious program execution in a web service root folder (filter out false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Webserver Root Folder - sysmon]
description = Detects a suspicious program execution in a web service root folder (filter out false positives)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wwwroot\\*" OR Image="*\\wmpub\\*" OR Image="*\\htdocs\\*") NOT ((Image="*bin\\*" OR Image="*\\Tools\\*" OR Image="*\\SMSComponent\\*") (ParentImage="*\\services.exe"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1100" | eval sigma_title="Execution in Webserver Root Folder" | eval sigma_description="Detects a suspicious program execution in a web service root folder (filter out false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution from Suspicious Folder - winevent]
description = Detects a suspicious execution from an uncommon folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\$Recycle.bin\\*" OR New_Process_Name="*\\config\\systemprofile\\*" OR New_Process_Name="*\\Intel\\Logs\\*" OR New_Process_Name="*\\RSA\\MachineKeys\\*" OR New_Process_Name="*\\Users\\All Users\\*" OR New_Process_Name="*\\Users\\Default\\*" OR New_Process_Name="*\\Users\\NetworkService\\*" OR New_Process_Name="*\\Users\\Public\\*" OR New_Process_Name="*\\Windows\\addins\\*" OR New_Process_Name="*\\Windows\\debug\\*" OR New_Process_Name="*\\Windows\\Fonts\\*" OR New_Process_Name="*\\Windows\\Help\\*" OR New_Process_Name="*\\Windows\\IME\\*" OR New_Process_Name="*\\Windows\\Media\\*" OR New_Process_Name="*\\Windows\\repair\\*" OR New_Process_Name="*\\Windows\\security\\*" OR New_Process_Name="*\\Windows\\system32\\config\\systemprofile\\*" OR New_Process_Name="*\\Windows\\System32\\Tasks\\*" OR New_Process_Name="*\\Windows\\Tasks\\*") OR New_Process_Name="C:\\Perflogs\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution from Suspicious Folder" | eval sigma_description="Detects a suspicious execution from an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution from Suspicious Folder - sysmon]
description = Detects a suspicious execution from an uncommon folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\$Recycle.bin\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Intel\\Logs\\*" OR Image="*\\RSA\\MachineKeys\\*" OR Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\NetworkService\\*" OR Image="*\\Users\\Public\\*" OR Image="*\\Windows\\addins\\*" OR Image="*\\Windows\\debug\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\Help\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\Media\\*" OR Image="*\\Windows\\repair\\*" OR Image="*\\Windows\\security\\*" OR Image="*\\Windows\\system32\\config\\systemprofile\\*" OR Image="*\\Windows\\System32\\Tasks\\*" OR Image="*\\Windows\\Tasks\\*") OR Image="C:\\Perflogs\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution from Suspicious Folder" | eval sigma_description="Detects a suspicious execution from an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Explorer Root Flag Process Tree Break - winevent]
description = Detects a command line process that uses explorer.exe /root, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*explorer.exe*" Process_Command_Line="* /root,*") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Explorer Root Flag Process Tree Break" | eval sigma_description="Detects a command line process that uses explorer.exe /root, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer"
dispatch.earliest_time = -24h@h
alert.track = 0

[Explorer Root Flag Process Tree Break - sysmon]
description = Detects a command line process that uses explorer.exe /root, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*explorer.exe*" CommandLine="* /root,*") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Explorer Root Flag Process Tree Break" | eval sigma_description="Detects a command line process that uses explorer.exe /root, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer"
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution Via Explorer.exe - winevent]
description = Attackers can use explorer.exe for evading defense mechanisms
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\explorer.exe") (Creator_Process_Name="*\\cmd.exe") (Process_Command_Line="*explorer.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Proxy Execution Via Explorer.exe" | eval sigma_description="Attackers can use explorer.exe for evading defense mechanisms"
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution Via Explorer.exe - sysmon]
description = Attackers can use explorer.exe for evading defense mechanisms
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\explorer.exe") (ParentImage="*\\cmd.exe") (CommandLine="*explorer.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Proxy Execution Via Explorer.exe" | eval sigma_description="Attackers can use explorer.exe for evading defense mechanisms"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Characteristics Due to Missing Fields - winevent]
description = Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Description="\?" (FileVersion="\?" OR Product="\?" OR Company="\?") New_Process_Name="*\\Downloads\\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.006 attack.defense_evasion attack.t1064" | eval sigma_title="Suspicious File Characteristics Due to Missing Fields" | eval sigma_description="Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Characteristics Due to Missing Fields - sysmon]
description = Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="\?" (FileVersion="\?" OR Product="\?" OR Company="\?") Image="*\\Downloads\\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.006 attack.defense_evasion attack.t1064" | eval sigma_title="Suspicious File Characteristics Due to Missing Fields" | eval sigma_description="Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[GfxDownloadWrapper.exe Downloads File from Suspicious URL - winevent]
description = Detects when GfxDownloadWrapper.exe downloads file from non standard URL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\GfxDownloadWrapper.exe" NOT (Process_Command_Line="*gameplayapi.intel.com*")) NOT (Creator_Process_Name="*\\GfxDownloadWrapper.exe")) | table Process_Command_Line | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="GfxDownloadWrapper.exe Downloads File from Suspicious URL" | eval sigma_description="Detects when GfxDownloadWrapper.exe downloads file from non standard URL"
dispatch.earliest_time = -24h@h
alert.track = 0

[GfxDownloadWrapper.exe Downloads File from Suspicious URL - sysmon]
description = Detects when GfxDownloadWrapper.exe downloads file from non standard URL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\GfxDownloadWrapper.exe" NOT (CommandLine="*gameplayapi.intel.com*")) NOT (ParentImage="*\\GfxDownloadWrapper.exe")) | table CommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="GfxDownloadWrapper.exe Downloads File from Suspicious URL" | eval sigma_description="Detects when GfxDownloadWrapper.exe downloads file from non standard URL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Findstr Launching .lnk File - winevent]
description = Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\findstr.exe" Process_Command_Line="*.lnk") | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1202 attack.t1027.003" | eval sigma_title="Findstr Launching .lnk File" | eval sigma_description="Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Findstr Launching .lnk File - sysmon]
description = Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\findstr.exe" CommandLine="*.lnk") | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1202 attack.t1027.003" | eval sigma_title="Findstr Launching .lnk File" | eval sigma_description="Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Findstr for Defense Evasion - winevent]
description = Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*findstr*") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*/V*" Process_Command_Line="*/L*") OR (Process_Command_Line="*/S*" Process_Command_Line="*/I*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusing Findstr for Defense Evasion" | eval sigma_description="Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Findstr for Defense Evasion - sysmon]
description = Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*findstr*") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*/V*" CommandLine="*/L*") OR (CommandLine="*/S*" CommandLine="*/I*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusing Findstr for Defense Evasion" | eval sigma_description="Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Finger.exe Suspicious Invocation - winevent]
description = Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\finger.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Finger.exe Suspicious Invocation" | eval sigma_description="Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays"
dispatch.earliest_time = -24h@h
alert.track = 0

[Finger.exe Suspicious Invocation - sysmon]
description = Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\finger.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Finger.exe Suspicious Invocation" | eval sigma_description="Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays"
dispatch.earliest_time = -24h@h
alert.track = 0

[Firewall Disabled via Netsh - winevent]
description = Detects netsh commands that turns off the Windows firewall
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="netsh firewall set opmode mode=disable" OR Process_Command_Line="netsh advfirewall set * state off")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004 attack.s0108" | eval sigma_title="Firewall Disabled via Netsh" | eval sigma_description="Detects netsh commands that turns off the Windows firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Firewall Disabled via Netsh - sysmon]
description = Detects netsh commands that turns off the Windows firewall
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="netsh firewall set opmode mode=disable" OR CommandLine="netsh advfirewall set * state off")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004 attack.s0108" | eval sigma_title="Firewall Disabled via Netsh" | eval sigma_description="Detects netsh commands that turns off the Windows firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Suspicious Invocation - winevent]
description = Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") (Process_Command_Line="*deletejournal*" OR Process_Command_Line="*createjournal*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Fsutil Suspicious Invocation" | eval sigma_description="Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Suspicious Invocation - sysmon]
description = Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") (CommandLine="*deletejournal*" OR CommandLine="*createjournal*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Fsutil Suspicious Invocation" | eval sigma_description="Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ftp.exe - winevent]
description = Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-s:*" (New_Process_Name="*ftp.exe" OR OriginalFileName="*ftp.exe*")) OR ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="*ftp.exe*" NOT (New_Process_Name="*ftp.exe")) OR Creator_Process_Name="*ftp.exe")) | table Process_Command_Line,Creator_Process_Name | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious ftp.exe" | eval sigma_description="Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ftp.exe - sysmon]
description = Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-s:*" (Image="*ftp.exe" OR OriginalFileName="*ftp.exe*")) OR ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="*ftp.exe*" NOT (Image="*ftp.exe")) OR ParentImage="*ftp.exe")) | table CommandLine,ParentImage | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious ftp.exe" | eval sigma_description="Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GUP Usage - winevent]
description = Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\GUP.exe" NOT ((New_Process_Name="*\\Users\\*\\AppData\\Local\\Notepad++\\updater\\GUP.exe" OR New_Process_Name="*\\Users\\*\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe" OR New_Process_Name="*\\Program Files\\Notepad++\\updater\\GUP.exe" OR New_Process_Name="*\\Program Files (x86)\\Notepad++\\updater\\GUP.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1073" | eval sigma_title="Suspicious GUP Usage" | eval sigma_description="Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GUP Usage - sysmon]
description = Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\GUP.exe" NOT ((Image="*\\Users\\*\\AppData\\Local\\Notepad++\\updater\\GUP.exe" OR Image="*\\Users\\*\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe" OR Image="*\\Program Files\\Notepad++\\updater\\GUP.exe" OR Image="*\\Program Files (x86)\\Notepad++\\updater\\GUP.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1073" | eval sigma_title="Suspicious GUP Usage" | eval sigma_description="Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[IIS Native-Code Module Command Line Installation - winevent]
description = Detects suspicious IIS native-code module installations via command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\appcmd.exe" Process_Command_Line="*install*" Process_Command_Line="*module*" Process_Command_Line="*/name:*") | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1100" | eval sigma_title="IIS Native-Code Module Command Line Installation" | eval sigma_description="Detects suspicious IIS native-code module installations via command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[IIS Native-Code Module Command Line Installation - sysmon]
description = Detects suspicious IIS native-code module installations via command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\appcmd.exe" CommandLine="*install*" CommandLine="*module*" CommandLine="*/name:*") | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1100" | eval sigma_title="IIS Native-Code Module Command Line Installation" | eval sigma_description="Detects suspicious IIS native-code module installations via command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Share Deleted - winevent]
description = Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\net.exe" New_Process_Name="*\\net1.exe" Process_Command_Line="*share*" Process_Command_Line="*/delete*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.005" | eval sigma_title="Mounted Share Deleted" | eval sigma_description="Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Share Deleted - sysmon]
description = Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\net.exe" Image="*\\net1.exe" CommandLine="*share*" CommandLine="*/delete*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.005" | eval sigma_title="Mounted Share Deleted" | eval sigma_description="Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Download Activity - winevent]
description = Detect the use of Windows Defender to download payloads
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*MpCmdRun.exe*" OR Description="Microsoft Malware Protection Command Line Utility") (Process_Command_Line="*DownloadFile*" Process_Command_Line="*url*")) | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.command_and_control attack.t1105" | eval sigma_title="Windows Defender Download Activity" | eval sigma_description="Detect the use of Windows Defender to download payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Download Activity - sysmon]
description = Detect the use of Windows Defender to download payloads
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*MpCmdRun.exe*" OR Description="Microsoft Malware Protection Command Line Utility") (CommandLine="*DownloadFile*" CommandLine="*url*")) | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.command_and_control attack.t1105" | eval sigma_title="Windows Defender Download Activity" | eval sigma_description="Detect the use of Windows Defender to download payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Directory - winevent]
description = Detects suspicious msiexec process starts in an uncommon directory
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\msiexec.exe" NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005 attack.t1036" | eval sigma_title="Suspicious MsiExec Directory" | eval sigma_description="Detects suspicious msiexec process starts in an uncommon directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Directory - sysmon]
description = Detects suspicious msiexec process starts in an uncommon directory
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\msiexec.exe" NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005 attack.t1036" | eval sigma_title="Suspicious MsiExec Directory" | eval sigma_description="Detects suspicious msiexec process starts in an uncommon directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[MsiExec Web Install - winevent]
description = Detects suspicious msiexec process starts with web addresses as parameter
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* msiexec*" Process_Command_Line="*://*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007 attack.command_and_control attack.t1105" | eval sigma_title="MsiExec Web Install" | eval sigma_description="Detects suspicious msiexec process starts with web addresses as parameter"
dispatch.earliest_time = -24h@h
alert.track = 0

[MsiExec Web Install - sysmon]
description = Detects suspicious msiexec process starts with web addresses as parameter
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* msiexec*" CommandLine="*://*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007 attack.command_and_control attack.t1105" | eval sigma_title="MsiExec Web Install" | eval sigma_description="Detects suspicious msiexec process starts with web addresses as parameter"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Payload Download via Office Binaries - winevent]
description = Downloads payload from remote server
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powerpnt.exe" OR New_Process_Name="*\\winword.exe" OR New_Process_Name="*\\excel.exe") Process_Command_Line="*http*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Malicious Payload Download via Office Binaries" | eval sigma_description="Downloads payload from remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Payload Download via Office Binaries - sysmon]
description = Downloads payload from remote server
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powerpnt.exe" OR Image="*\\winword.exe" OR Image="*\\excel.exe") CommandLine="*http*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Malicious Payload Download via Office Binaries" | eval sigma_description="Downloads payload from remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe Execution - winevent]
description = Detects execution of Net.exe, whether suspicious or benign.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") (Process_Command_Line="* group*" OR Process_Command_Line="* localgroup*" OR Process_Command_Line="* user*" OR Process_Command_Line="* view*" OR Process_Command_Line="* share*" OR Process_Command_Line="* accounts*" OR Process_Command_Line="* stop *")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1049 attack.t1018 attack.t1135 attack.t1201 attack.t1069.001 attack.t1069.002 attack.t1087.001 attack.t1087.002 attack.lateral_movement attack.t1021.002 attack.t1077 attack.s0039" | eval sigma_title="Net.exe Execution" | eval sigma_description="Detects execution of Net.exe, whether suspicious or benign."
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe Execution - sysmon]
description = Detects execution of Net.exe, whether suspicious or benign.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") (CommandLine="* group*" OR CommandLine="* localgroup*" OR CommandLine="* user*" OR CommandLine="* view*" OR CommandLine="* share*" OR CommandLine="* accounts*" OR CommandLine="* stop *")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1049 attack.t1018 attack.t1135 attack.t1201 attack.t1069.001 attack.t1069.002 attack.t1087.001 attack.t1087.002 attack.lateral_movement attack.t1021.002 attack.t1077 attack.s0039" | eval sigma_title="Net.exe Execution" | eval sigma_description="Detects execution of Net.exe, whether suspicious or benign."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Netsh DLL Persistence - winevent]
description = Detects persitence via netsh helper
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*add*" Process_Command_Line="*helper*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.007 attack.s0108 attack.t1128" | eval sigma_title="Suspicious Netsh DLL Persistence" | eval sigma_description="Detects persitence via netsh helper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Netsh DLL Persistence - sysmon]
description = Detects persitence via netsh helper
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*add*" CommandLine="*helper*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.007 attack.s0108 attack.t1128" | eval sigma_title="Suspicious Netsh DLL Persistence" | eval sigma_description="Detects persitence via netsh helper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invocation of Active Directory Diagnostic Tool (ntdsutil.exe) - winevent]
description = Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\ntdsutil.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003.003 attack.t1003" | eval sigma_title="Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)" | eval sigma_description="Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invocation of Active Directory Diagnostic Tool (ntdsutil.exe) - sysmon]
description = Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\ntdsutil.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003.003 attack.t1003" | eval sigma_title="Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)" | eval sigma_description="Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via DLL Loaded by odbcconf.exe - winevent]
description = Detects defence evasion attempt via odbcconf.exe execution to load DLL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\odbcconf.exe" (Process_Command_Line="*-f*" OR Process_Command_Line="*regsvr*")) OR (Creator_Process_Name="*\\odbcconf.exe" New_Process_Name="*\\rundll32.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.008 attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via DLL Loaded by odbcconf.exe" | eval sigma_description="Detects defence evasion attempt via odbcconf.exe execution to load DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via DLL Loaded by odbcconf.exe - sysmon]
description = Detects defence evasion attempt via odbcconf.exe execution to load DLL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\odbcconf.exe" (CommandLine="*-f*" OR CommandLine="*regsvr*")) OR (ParentImage="*\\odbcconf.exe" Image="*\\rundll32.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.008 attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via DLL Loaded by odbcconf.exe" | eval sigma_description="Detects defence evasion attempt via odbcconf.exe execution to load DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[OpenWith.exe Executes Specified Binary - winevent]
description = The OpenWith.exe executes other binary
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\OpenWith.exe" Process_Command_Line="*/c*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="OpenWith.exe Executes Specified Binary" | eval sigma_description="The OpenWith.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[OpenWith.exe Executes Specified Binary - sysmon]
description = The OpenWith.exe executes other binary
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\OpenWith.exe" CommandLine="*/c*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="OpenWith.exe Executes Specified Binary" | eval sigma_description="The OpenWith.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Outlook Temp Folder - winevent]
description = Detects a suspicious program execution in Outlook temp folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Temporary Internet Files\\Content.Outlook\\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Execution in Outlook Temp Folder" | eval sigma_description="Detects a suspicious program execution in Outlook temp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Outlook Temp Folder - sysmon]
description = Detects a suspicious program execution in Outlook temp folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Temporary Internet Files\\Content.Outlook\\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.t1193" | eval sigma_title="Execution in Outlook Temp Folder" | eval sigma_description="Detects a suspicious program execution in Outlook temp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution from Outlook - winevent]
description = Detects EnableUnsafeClientMailRules used for Script Execution from Outlook
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*EnableUnsafeClientMailRules*" OR (Creator_Process_Name="*\\outlook.exe" Process_Command_Line="*\\\\\*" Process_Command_Line="*\\\*" Process_Command_Line="*.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1202" | eval sigma_title="Suspicious Execution from Outlook" | eval sigma_description="Detects EnableUnsafeClientMailRules used for Script Execution from Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution from Outlook - sysmon]
description = Detects EnableUnsafeClientMailRules used for Script Execution from Outlook
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*EnableUnsafeClientMailRules*" OR (ParentImage="*\\outlook.exe" CommandLine="*\\\\\*" CommandLine="*\\\*" CommandLine="*.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1202" | eval sigma_title="Suspicious Execution from Outlook" | eval sigma_description="Detects EnableUnsafeClientMailRules used for Script Execution from Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Code Execution via Pcwutl.dll - winevent]
description = Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*pcwutl*" Process_Command_Line="*LaunchApplication*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.execution attack.t1218" | eval sigma_title="Code Execution via Pcwutl.dll" | eval sigma_description="Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library."
dispatch.earliest_time = -24h@h
alert.track = 0

[Code Execution via Pcwutl.dll - sysmon]
description = Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*pcwutl*" CommandLine="*LaunchApplication*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.execution attack.t1218" | eval sigma_title="Code Execution via Pcwutl.dll" | eval sigma_description="Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Code with Pester.bat - winevent]
description = Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" Process_Command_Line="*Pester*" Process_Command_Line="*Get-Help*") OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Process_Command_Line="*pester*" Process_Command_Line="*;*" (Process_Command_Line="*help*" OR Process_Command_Line="*?*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1216" | eval sigma_title="Execute Code with Pester.bat" | eval sigma_description="Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Code with Pester.bat - sysmon]
description = Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" CommandLine="*Pester*" CommandLine="*Get-Help*") OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" CommandLine="*pester*" CommandLine="*;*" (CommandLine="*help*" OR CommandLine="*?*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1216" | eval sigma_title="Execute Code with Pester.bat" | eval sigma_description="Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ping Hex IP - winevent]
description = Detects a ping command that uses a hex encoded IP address
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\ping.exe" Process_Command_Line="*0x*") | table ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1027" | eval sigma_title="Ping Hex IP" | eval sigma_description="Detects a ping command that uses a hex encoded IP address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ping Hex IP - sysmon]
description = Detects a ping command that uses a hex encoded IP address
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\ping.exe" CommandLine="*0x*") | table ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1027" | eval sigma_title="Ping Hex IP" | eval sigma_description="Detects a ping command that uses a hex encoded IP address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell Launch Parameters - winevent]
description = Detects suspicious powershell command line parameters used in Empire
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -NoP -sta -NonI -W Hidden -Enc *" OR Process_Command_Line="* -noP -sta -w 1 -enc *" OR Process_Command_Line="* -NoP -NonI -W Hidden -enc *" OR Process_Command_Line="* -noP -sta -w 1 -enc*" OR Process_Command_Line="* -enc  SQB*" OR Process_Command_Line="* -nop -exec bypass -EncodedCommand SQB*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Empire PowerShell Launch Parameters" | eval sigma_description="Detects suspicious powershell command line parameters used in Empire"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell Launch Parameters - sysmon]
description = Detects suspicious powershell command line parameters used in Empire
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -NoP -sta -NonI -W Hidden -Enc *" OR CommandLine="* -noP -sta -w 1 -enc *" OR CommandLine="* -NoP -NonI -W Hidden -enc *" OR CommandLine="* -noP -sta -w 1 -enc*" OR CommandLine="* -enc  SQB*" OR CommandLine="* -nop -exec bypass -EncodedCommand SQB*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Empire PowerShell Launch Parameters" | eval sigma_description="Detects suspicious powershell command line parameters used in Empire"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell UAC Bypass - winevent]
description = Detects some Empire PowerShell UAC bypass methods
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)*" OR Process_Command_Line="* -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1088 car.2019-04-001" | eval sigma_title="Empire PowerShell UAC Bypass" | eval sigma_description="Detects some Empire PowerShell UAC bypass methods"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell UAC Bypass - sysmon]
description = Detects some Empire PowerShell UAC bypass methods
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)*" OR CommandLine="* -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1088 car.2019-04-001" | eval sigma_title="Empire PowerShell UAC Bypass" | eval sigma_description="Detects some Empire PowerShell UAC bypass methods"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - winevent]
description = Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -e*" Process_Command_Line="* JAB*" Process_Command_Line="* -w*" Process_Command_Line="* hidden *") OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -e*" (Process_Command_Line="* BA^J*" OR Process_Command_Line="* SUVYI*" OR Process_Command_Line="* SQBFAFgA*" OR Process_Command_Line="* aQBlAHgA*" OR Process_Command_Line="* aWV4I*" OR Process_Command_Line="* IAA*" OR Process_Command_Line="* IAB*" OR Process_Command_Line="* UwB*" OR Process_Command_Line="* cwB*")) OR (Process_Command_Line="*.exe -ENCOD *"))) NOT (Process_Command_Line="* -ExecutionPolicy*" Process_Command_Line="*remotesigned *")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - sysmon]
description = Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -e*" CommandLine="* JAB*" CommandLine="* -w*" CommandLine="* hidden *") OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -e*" (CommandLine="* BA^J*" OR CommandLine="* SUVYI*" OR CommandLine="* SQBFAFgA*" OR CommandLine="* aQBlAHgA*" OR CommandLine="* aWV4I*" OR CommandLine="* IAA*" OR CommandLine="* IAB*" OR CommandLine="* UwB*" OR CommandLine="* cwB*")) OR (CommandLine="*.exe -ENCOD *"))) NOT (CommandLine="* -ExecutionPolicy*" CommandLine="*remotesigned *")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Encoded Character Syntax - winevent]
description = Detects suspicious encoded character syntax often used for defense evasion
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*(WCHAR)0x*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Encoded Character Syntax" | eval sigma_description="Detects suspicious encoded character syntax often used for defense evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Encoded Character Syntax - sysmon]
description = Detects suspicious encoded character syntax often used for defense evasion
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*(WCHAR)0x*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Encoded Character Syntax" | eval sigma_description="Detects suspicious encoded character syntax often used for defense evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Process LSASS - winevent]
description = Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*Get-Process lsass*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="PowerShell Get-Process LSASS" | eval sigma_description="Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Process LSASS - sysmon]
description = Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*Get-Process lsass*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="PowerShell Get-Process LSASS" | eval sigma_description="Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded PowerShell Keywords in Command Lines - winevent]
description = Detects base64 encoded strings used in hidden malicious PowerShell command lines
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="* hidden *" (Process_Command_Line="*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*" OR Process_Command_Line="*aXRzYWRtaW4gL3RyYW5zZmVy*" OR Process_Command_Line="*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*" OR Process_Command_Line="*JpdHNhZG1pbiAvdHJhbnNmZX*" OR Process_Command_Line="*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*" OR Process_Command_Line="*Yml0c2FkbWluIC90cmFuc2Zlc*" OR Process_Command_Line="*AGMAaAB1AG4AawBfAHMAaQB6AGUA*" OR Process_Command_Line="*JABjAGgAdQBuAGsAXwBzAGkAegBlA*" OR Process_Command_Line="*JGNodW5rX3Npem*" OR Process_Command_Line="*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*" OR Process_Command_Line="*RjaHVua19zaXpl*" OR Process_Command_Line="*Y2h1bmtfc2l6Z*" OR Process_Command_Line="*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*" OR Process_Command_Line="*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*" OR Process_Command_Line="*lPLkNvbXByZXNzaW9u*" OR Process_Command_Line="*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*" OR Process_Command_Line="*SU8uQ29tcHJlc3Npb2*" OR Process_Command_Line="*Ty5Db21wcmVzc2lvb*" OR Process_Command_Line="*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*" OR Process_Command_Line="*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*" OR Process_Command_Line="*lPLk1lbW9yeVN0cmVhb*" OR Process_Command_Line="*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*" OR Process_Command_Line="*SU8uTWVtb3J5U3RyZWFt*" OR Process_Command_Line="*Ty5NZW1vcnlTdHJlYW*" OR Process_Command_Line="*4ARwBlAHQAQwBoAHUAbgBrA*" OR Process_Command_Line="*5HZXRDaHVua*" OR Process_Command_Line="*AEcAZQB0AEMAaAB1AG4Aaw*" OR Process_Command_Line="*LgBHAGUAdABDAGgAdQBuAGsA*" OR Process_Command_Line="*LkdldENodW5r*" OR Process_Command_Line="*R2V0Q2h1bm*" OR Process_Command_Line="*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*" OR Process_Command_Line="*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*" OR Process_Command_Line="*RIUkVBRF9JTkZPNj*" OR Process_Command_Line="*SFJFQURfSU5GTzY0*" OR Process_Command_Line="*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*" OR Process_Command_Line="*VEhSRUFEX0lORk82N*" OR Process_Command_Line="*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*" OR Process_Command_Line="*cmVhdGVSZW1vdGVUaHJlYW*" OR Process_Command_Line="*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*" OR Process_Command_Line="*NyZWF0ZVJlbW90ZVRocmVhZ*" OR Process_Command_Line="*Q3JlYXRlUmVtb3RlVGhyZWFk*" OR Process_Command_Line="*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*" OR Process_Command_Line="*0AZQBtAG0AbwB2AGUA*" OR Process_Command_Line="*1lbW1vdm*" OR Process_Command_Line="*AGUAbQBtAG8AdgBlA*" OR Process_Command_Line="*bQBlAG0AbQBvAHYAZQ*" OR Process_Command_Line="*bWVtbW92Z*" OR Process_Command_Line="*ZW1tb3Zl*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Malicious Base64 Encoded PowerShell Keywords in Command Lines" | eval sigma_description="Detects base64 encoded strings used in hidden malicious PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded PowerShell Keywords in Command Lines - sysmon]
description = Detects base64 encoded strings used in hidden malicious PowerShell command lines
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="* hidden *" (CommandLine="*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*" OR CommandLine="*aXRzYWRtaW4gL3RyYW5zZmVy*" OR CommandLine="*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*" OR CommandLine="*JpdHNhZG1pbiAvdHJhbnNmZX*" OR CommandLine="*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*" OR CommandLine="*Yml0c2FkbWluIC90cmFuc2Zlc*" OR CommandLine="*AGMAaAB1AG4AawBfAHMAaQB6AGUA*" OR CommandLine="*JABjAGgAdQBuAGsAXwBzAGkAegBlA*" OR CommandLine="*JGNodW5rX3Npem*" OR CommandLine="*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*" OR CommandLine="*RjaHVua19zaXpl*" OR CommandLine="*Y2h1bmtfc2l6Z*" OR CommandLine="*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*" OR CommandLine="*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*" OR CommandLine="*lPLkNvbXByZXNzaW9u*" OR CommandLine="*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*" OR CommandLine="*SU8uQ29tcHJlc3Npb2*" OR CommandLine="*Ty5Db21wcmVzc2lvb*" OR CommandLine="*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*" OR CommandLine="*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*" OR CommandLine="*lPLk1lbW9yeVN0cmVhb*" OR CommandLine="*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*" OR CommandLine="*SU8uTWVtb3J5U3RyZWFt*" OR CommandLine="*Ty5NZW1vcnlTdHJlYW*" OR CommandLine="*4ARwBlAHQAQwBoAHUAbgBrA*" OR CommandLine="*5HZXRDaHVua*" OR CommandLine="*AEcAZQB0AEMAaAB1AG4Aaw*" OR CommandLine="*LgBHAGUAdABDAGgAdQBuAGsA*" OR CommandLine="*LkdldENodW5r*" OR CommandLine="*R2V0Q2h1bm*" OR CommandLine="*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*" OR CommandLine="*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*" OR CommandLine="*RIUkVBRF9JTkZPNj*" OR CommandLine="*SFJFQURfSU5GTzY0*" OR CommandLine="*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*" OR CommandLine="*VEhSRUFEX0lORk82N*" OR CommandLine="*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*" OR CommandLine="*cmVhdGVSZW1vdGVUaHJlYW*" OR CommandLine="*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*" OR CommandLine="*NyZWF0ZVJlbW90ZVRocmVhZ*" OR CommandLine="*Q3JlYXRlUmVtb3RlVGhyZWFk*" OR CommandLine="*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*" OR CommandLine="*0AZQBtAG0AbwB2AGUA*" OR CommandLine="*1lbW1vdm*" OR CommandLine="*AGUAbQBtAG8AdgBlA*" OR CommandLine="*bQBlAG0AbQBvAHYAZQ*" OR CommandLine="*bWVtbW92Z*" OR CommandLine="*ZW1tb3Zl*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Malicious Base64 Encoded PowerShell Keywords in Command Lines" | eval sigma_description="Detects base64 encoded strings used in hidden malicious PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocation Based on Parent Process - winevent]
description = Detects suspicious powershell invocations from interpreters or unusual programs
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\cscript.exe") New_Process_Name="*\\powershell.exe") NOT (CurrentDirectory="*\\Health Service State\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Invocation Based on Parent Process" | eval sigma_description="Detects suspicious powershell invocations from interpreters or unusual programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocation Based on Parent Process - sysmon]
description = Detects suspicious powershell invocations from interpreters or unusual programs
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe") Image="*\\powershell.exe") NOT (CurrentDirectory="*\\Health Service State\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Invocation Based on Parent Process" | eval sigma_description="Detects suspicious powershell invocations from interpreters or unusual programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parent Process - winevent]
description = Detects a suspicious parents of powershell.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\mshta.exe" OR Creator_Process_Name="*\\rundll32.exe" OR Creator_Process_Name="*\\regsvr32.exe" OR Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\wmiprvse.exe" OR Creator_Process_Name="*\\powerpnt.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\msaccess.exe" OR Creator_Process_Name="*\\mspub.exe" OR Creator_Process_Name="*\\visio.exe" OR Creator_Process_Name="*\\outlook.exe" OR Creator_Process_Name="*\\amigo.exe" OR Creator_Process_Name="*\\chrome.exe" OR Creator_Process_Name="*\\firefox.exe" OR Creator_Process_Name="*\\iexplore.exe" OR Creator_Process_Name="*\\microsoftedgecp.exe" OR Creator_Process_Name="*\\microsoftedge.exe" OR Creator_Process_Name="*\\browser.exe" OR Creator_Process_Name="*\\vivaldi.exe" OR Creator_Process_Name="*\\safari.exe" OR Creator_Process_Name="*\\sqlagent.exe" OR Creator_Process_Name="*\\sqlserver.exe" OR Creator_Process_Name="*\\sqlservr.exe" OR Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\jbosssvc.exe" OR Creator_Process_Name="*MicrosoftEdgeSH.exe") OR Creator_Process_Name="*tomcat*") ((Process_Command_Line="*powershell*" OR Process_Command_Line="*pwsh*") OR Description="Windows PowerShell" OR Product="PowerShell Core 6")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Parent Process" | eval sigma_description="Detects a suspicious parents of powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parent Process - sysmon]
description = Detects a suspicious parents of powershell.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\mshta.exe" OR ParentImage="*\\rundll32.exe" OR ParentImage="*\\regsvr32.exe" OR ParentImage="*\\services.exe" OR ParentImage="*\\winword.exe" OR ParentImage="*\\wmiprvse.exe" OR ParentImage="*\\powerpnt.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\msaccess.exe" OR ParentImage="*\\mspub.exe" OR ParentImage="*\\visio.exe" OR ParentImage="*\\outlook.exe" OR ParentImage="*\\amigo.exe" OR ParentImage="*\\chrome.exe" OR ParentImage="*\\firefox.exe" OR ParentImage="*\\iexplore.exe" OR ParentImage="*\\microsoftedgecp.exe" OR ParentImage="*\\microsoftedge.exe" OR ParentImage="*\\browser.exe" OR ParentImage="*\\vivaldi.exe" OR ParentImage="*\\safari.exe" OR ParentImage="*\\sqlagent.exe" OR ParentImage="*\\sqlserver.exe" OR ParentImage="*\\sqlservr.exe" OR ParentImage="*\\w3wp.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\jbosssvc.exe" OR ParentImage="*MicrosoftEdgeSH.exe") OR ParentImage="*tomcat*") ((CommandLine="*powershell*" OR CommandLine="*pwsh*") OR Description="Windows PowerShell" OR Product="PowerShell Core 6")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="Suspicious PowerShell Parent Process" | eval sigma_description="Detects a suspicious parents of powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Print Executable - winevent]
description = Attackers can use print.exe for remote file copy
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\print.exe") (Process_Command_Line="print*") (Process_Command_Line="*/D*") (Process_Command_Line="*.exe*")) NOT ((Process_Command_Line="*print.exe*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusing Print Executable" | eval sigma_description="Attackers can use print.exe for remote file copy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Print Executable - sysmon]
description = Attackers can use print.exe for remote file copy
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\print.exe") (CommandLine="print*") (CommandLine="*/D*") (CommandLine="*.exe*")) NOT ((CommandLine="*print.exe*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusing Print Executable" | eval sigma_description="Attackers can use print.exe for remote file copy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump on LSASS - winevent]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -ma *" ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* lsass*") OR Process_Command_Line="* ls*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003.001 attack.t1003 car.2013-05-009" | eval sigma_title="Suspicious Use of Procdump on LSASS" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump on LSASS - sysmon]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -ma *" ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* lsass*") OR CommandLine="* ls*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003.001 attack.t1003 car.2013-05-009" | eval sigma_title="Suspicious Use of Procdump on LSASS" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump - winevent]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma '. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -ma *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Suspicious Use of Procdump" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma '. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump - sysmon]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma '. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -ma *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Suspicious Use of Procdump" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma '. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Script Run in AppData - winevent]
description = Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*/c*" Process_Command_Line="*powershell*" Process_Command_Line="*\\AppData\\*" (Process_Command_Line="*Local\\*" OR Process_Command_Line="*Roaming\\*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell Script Run in AppData" | eval sigma_description="Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Script Run in AppData - sysmon]
description = Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*/c*" CommandLine="*powershell*" CommandLine="*\\AppData\\*" (CommandLine="*Local\\*" OR CommandLine="*Roaming\\*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086" | eval sigma_title="PowerShell Script Run in AppData" | eval sigma_description="Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell DownloadFile - winevent]
description = Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*powershell*" Process_Command_Line="*.DownloadFile*" Process_Command_Line="*System.Net.WebClient*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.command_and_control attack.t1104 attack.t1105" | eval sigma_title="PowerShell DownloadFile" | eval sigma_description="Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell DownloadFile - sysmon]
description = Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*powershell*" CommandLine="*.DownloadFile*" CommandLine="*System.Net.WebClient*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1086 attack.command_and_control attack.t1104 attack.t1105" | eval sigma_title="PowerShell DownloadFile" | eval sigma_description="Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psexec Accepteula Condition - winevent]
description = Detect ed user accept agreement execution in psexec commandline
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\psexec.exe" Process_Command_Line="*accepteula*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1569 attack.t1021" | eval sigma_title="Psexec Accepteula Condition" | eval sigma_description="Detect ed user accept agreement execution in psexec commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psexec Accepteula Condition - sysmon]
description = Detect ed user accept agreement execution in psexec commandline
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\psexec.exe" CommandLine="*accepteula*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1569 attack.t1021" | eval sigma_title="Psexec Accepteula Condition" | eval sigma_description="Detect ed user accept agreement execution in psexec commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psr.exe Capture Screenshots - winevent]
description = The psr.exe captures desktop screenshots and saves them on the local machine
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Psr.exe" Process_Command_Line="*/start*") | eval sigma_attack_tags="attack.collection attack.t1113" | eval sigma_title="Psr.exe Capture Screenshots" | eval sigma_description="The psr.exe captures desktop screenshots and saves them on the local machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psr.exe Capture Screenshots - sysmon]
description = The psr.exe captures desktop screenshots and saves them on the local machine
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Psr.exe" CommandLine="*/start*") | eval sigma_attack_tags="attack.collection attack.t1113" | eval sigma_title="Psr.exe Capture Screenshots" | eval sigma_description="The psr.exe captures desktop screenshots and saves them on the local machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rar with Password or Compression Level - winevent]
description = Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -hp*" Process_Command_Line="* -m*") | eval sigma_attack_tags="attack.collection attack.t1560.001 attack.exfiltration attack.t1002" | eval sigma_title="Rar with Password or Compression Level" | eval sigma_description="Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rar with Password or Compression Level - sysmon]
description = Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -hp*" CommandLine="* -m*") | eval sigma_attack_tags="attack.collection attack.t1560.001 attack.exfiltration attack.t1002" | eval sigma_title="Rar with Password or Compression Level" | eval sigma_description="Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RASdial Activity - winevent]
description = Detects suspicious process related to rasdial.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*rasdial.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059 attack.t1064" | eval sigma_title="Suspicious RASdial Activity" | eval sigma_description="Detects suspicious process related to rasdial.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RASdial Activity - sysmon]
description = Detects suspicious process related to rasdial.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*rasdial.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059 attack.t1064" | eval sigma_title="Suspicious RASdial Activity" | eval sigma_description="Detects suspicious process related to rasdial.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reconnaissance Activity - winevent]
description = Detects suspicious command line activity on Windows systems
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="net group \"domain admins\" /domain" OR Process_Command_Line="net localgroup administrators" OR Process_Command_Line="net group \"enterprise admins\" /domain")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002 attack.t1087" | eval sigma_title="Suspicious Reconnaissance Activity" | eval sigma_description="Detects suspicious command line activity on Windows systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reconnaissance Activity - sysmon]
description = Detects suspicious command line activity on Windows systems
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="net group \"domain admins\" /domain" OR CommandLine="net localgroup administrators" OR CommandLine="net group \"enterprise admins\" /domain")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002 attack.t1087" | eval sigma_title="Suspicious Reconnaissance Activity" | eval sigma_description="Detects suspicious command line activity on Windows systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution Via Register-cimprovider.exe - winevent]
description = Detects using register-cimprovider.exe to execute arbitrary dll file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\register-cimprovider.exe" Process_Command_Line="*-path*" Process_Command_Line="*dll*") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1574" | eval sigma_title="DLL Execution Via Register-cimprovider.exe" | eval sigma_description="Detects using register-cimprovider.exe to execute arbitrary dll file."
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution Via Register-cimprovider.exe - sysmon]
description = Detects using register-cimprovider.exe to execute arbitrary dll file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\register-cimprovider.exe" CommandLine="*-path*" CommandLine="*dll*") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1574" | eval sigma_title="DLL Execution Via Register-cimprovider.exe" | eval sigma_description="Detects using register-cimprovider.exe to execute arbitrary dll file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Anomaly - winevent]
description = Detects various anomalies in relation to regsvr32.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*\\Temp\\*") OR (New_Process_Name="*\\regsvr32.exe" Creator_Process_Name="*\\powershell.exe") OR (New_Process_Name="*\\regsvr32.exe" Creator_Process_Name="*\\cmd.exe") OR (New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*/i:*" (Process_Command_Line="*http*" OR Process_Command_Line="*ftp*") Process_Command_Line="*scrobj.dll") OR (New_Process_Name="*\\wscript.exe" Creator_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\EXCEL.EXE" Process_Command_Line="*..\\..\\..\\Windows\\System32\\regsvr32.exe *"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.execution attack.t1117 car.2019-04-002 car.2019-04-003" | eval sigma_title="Regsvr32 Anomaly" | eval sigma_description="Detects various anomalies in relation to regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Anomaly - sysmon]
description = Detects various anomalies in relation to regsvr32.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\regsvr32.exe" CommandLine="*\\Temp\\*") OR (Image="*\\regsvr32.exe" ParentImage="*\\powershell.exe") OR (Image="*\\regsvr32.exe" ParentImage="*\\cmd.exe") OR (Image="*\\regsvr32.exe" CommandLine="*/i:*" (CommandLine="*http*" OR CommandLine="*ftp*") CommandLine="*scrobj.dll") OR (Image="*\\wscript.exe" ParentImage="*\\regsvr32.exe") OR (Image="*\\EXCEL.EXE" CommandLine="*..\\..\\..\\Windows\\System32\\regsvr32.exe *"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.execution attack.t1117 car.2019-04-002 car.2019-04-003" | eval sigma_title="Regsvr32 Anomaly" | eval sigma_description="Detects various anomalies in relation to regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Flags Anomaly - winevent]
description = Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\regsvr32.exe" Process_Command_Line="* /i:*") NOT (Process_Command_Line="* /n *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.t1117" | eval sigma_title="Regsvr32 Flags Anomaly" | eval sigma_description="Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Flags Anomaly - sysmon]
description = Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\regsvr32.exe" CommandLine="* /i:*") NOT (CommandLine="* /n *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 attack.t1117" | eval sigma_title="Regsvr32 Flags Anomaly" | eval sigma_description="Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ZOHO Dctask64 - winevent]
description = Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Imphash="6834B1B94E49701D77CCB3C0895E1AFD" NOT (New_Process_Name="*\\dctask64.exe")) | table Process_Command_Line,ParentCommandLine,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1055.001 attack.t1202 attack.t1218" | eval sigma_title="Renamed ZOHO Dctask64" | eval sigma_description="Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ZOHO Dctask64 - sysmon]
description = Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Imphash="6834B1B94E49701D77CCB3C0895E1AFD" NOT (Image="*\\dctask64.exe")) | table CommandLine,ParentCommandLine,ParentImage | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1055.001 attack.t1202 attack.t1218" | eval sigma_title="Renamed ZOHO Dctask64" | eval sigma_description="Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed SysInternals Debug View - winevent]
description = Detects suspicious renamed SysInternals DebugView execution
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="Sysinternals DebugView" OR Product="Sysinternals Debugview") NOT (OriginalFilename="Dbgview.exe" New_Process_Name="*\\Dbgview.exe")) | eval sigma_attack_tags="" | eval sigma_title="Renamed SysInternals Debug View" | eval sigma_description="Detects suspicious renamed SysInternals DebugView execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed SysInternals Debug View - sysmon]
description = Detects suspicious renamed SysInternals DebugView execution
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="Sysinternals DebugView" OR Product="Sysinternals Debugview") NOT (OriginalFilename="Dbgview.exe" Image="*\\Dbgview.exe")) | eval sigma_attack_tags="" | eval sigma_title="Renamed SysInternals Debug View" | eval sigma_description="Detects suspicious renamed SysInternals DebugView execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture Credentials with Rpcping.exe - winevent]
description = Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rpcping.exe" (Process_Command_Line="*-s*" OR Process_Command_Line="*/s*")) ((Process_Command_Line="*-u*" Process_Command_Line="*NTLM*") OR (Process_Command_Line="*/u*" Process_Command_Line="*NTLM*") OR (Process_Command_Line="*-t*" Process_Command_Line="*ncacn_np*") OR (Process_Command_Line="*/t*" Process_Command_Line="*ncacn_np*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Capture Credentials with Rpcping.exe" | eval sigma_description="Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture Credentials with Rpcping.exe - sysmon]
description = Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rpcping.exe" (CommandLine="*-s*" OR CommandLine="*/s*")) ((CommandLine="*-u*" CommandLine="*NTLM*") OR (CommandLine="*/u*" CommandLine="*NTLM*") OR (CommandLine="*-t*" CommandLine="*ncacn_np*") OR (CommandLine="*/t*" CommandLine="*ncacn_np*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Capture Credentials with Rpcping.exe" | eval sigma_description="Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Start Locations - winevent]
description = Detects suspicious process run from unusual locations
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*:\\RECYCLER\\*" OR New_Process_Name="*:\\SystemVolumeInformation\\*") OR (New_Process_Name="C:\\Windows\\Tasks\\*" OR New_Process_Name="C:\\Windows\\debug\\*" OR New_Process_Name="C:\\Windows\\fonts\\*" OR New_Process_Name="C:\\Windows\\help\\*" OR New_Process_Name="C:\\Windows\\drivers\\*" OR New_Process_Name="C:\\Windows\\addins\\*" OR New_Process_Name="C:\\Windows\\cursors\\*" OR New_Process_Name="C:\\Windows\\system32\\tasks\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 car.2013-05-002" | eval sigma_title="Suspicious Process Start Locations" | eval sigma_description="Detects suspicious process run from unusual locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Start Locations - sysmon]
description = Detects suspicious process run from unusual locations
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*:\\RECYCLER\\*" OR Image="*:\\SystemVolumeInformation\\*") OR (Image="C:\\Windows\\Tasks\\*" OR Image="C:\\Windows\\debug\\*" OR Image="C:\\Windows\\fonts\\*" OR Image="C:\\Windows\\help\\*" OR Image="C:\\Windows\\drivers\\*" OR Image="C:\\Windows\\addins\\*" OR Image="C:\\Windows\\cursors\\*" OR Image="C:\\Windows\\system32\\tasks\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 car.2013-05-002" | eval sigma_title="Suspicious Process Start Locations" | eval sigma_description="Detects suspicious process run from unusual locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity - winevent]
description = Detects suspicious process related to rundll32 based on arguments
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*javascript:*" OR Process_Command_Line="*.RegisterXLL*") OR (Process_Command_Line="*url.dll*" Process_Command_Line="*OpenURL*") OR (Process_Command_Line="*url.dll*" Process_Command_Line="*OpenURLA*") OR (Process_Command_Line="*url.dll*" Process_Command_Line="*FileProtocolHandler*") OR (Process_Command_Line="*zipfldr.dll*" Process_Command_Line="*RouteTheCall*") OR (Process_Command_Line="*shell32.dll*" Process_Command_Line="*Control_RunDLL*") OR (Process_Command_Line="*shell32.dll*" Process_Command_Line="*ShellExec_RunDLL*") OR (Process_Command_Line="*mshtml.dll*" Process_Command_Line="*PrintHTML*") OR (Process_Command_Line="*advpack.dll*" Process_Command_Line="*LaunchINFSection*") OR (Process_Command_Line="*advpack.dll*" Process_Command_Line="*RegisterOCX*") OR (Process_Command_Line="*ieadvpack.dll*" Process_Command_Line="*LaunchINFSection*") OR (Process_Command_Line="*ieadvpack.dll*" Process_Command_Line="*RegisterOCX*") OR (Process_Command_Line="*ieframe.dll*" Process_Command_Line="*OpenURL*") OR (Process_Command_Line="*shdocvw.dll*" Process_Command_Line="*OpenURL*") OR (Process_Command_Line="*syssetup.dll*" Process_Command_Line="*SetupInfObjectInstallAction'*") OR (Process_Command_Line="*setupapi.dll*" Process_Command_Line="*InstallHinfSection*") OR (Process_Command_Line="*pcwutl.dll*" Process_Command_Line="*LaunchApplication*") OR (Process_Command_Line="*dfshim.dll*" Process_Command_Line="*ShOpenVerbApplication*"))) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.011 attack.t1085" | eval sigma_title="Suspicious Rundll32 Activity" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity - sysmon]
description = Detects suspicious process related to rundll32 based on arguments
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*javascript:*" OR CommandLine="*.RegisterXLL*") OR (CommandLine="*url.dll*" CommandLine="*OpenURL*") OR (CommandLine="*url.dll*" CommandLine="*OpenURLA*") OR (CommandLine="*url.dll*" CommandLine="*FileProtocolHandler*") OR (CommandLine="*zipfldr.dll*" CommandLine="*RouteTheCall*") OR (CommandLine="*shell32.dll*" CommandLine="*Control_RunDLL*") OR (CommandLine="*shell32.dll*" CommandLine="*ShellExec_RunDLL*") OR (CommandLine="*mshtml.dll*" CommandLine="*PrintHTML*") OR (CommandLine="*advpack.dll*" CommandLine="*LaunchINFSection*") OR (CommandLine="*advpack.dll*" CommandLine="*RegisterOCX*") OR (CommandLine="*ieadvpack.dll*" CommandLine="*LaunchINFSection*") OR (CommandLine="*ieadvpack.dll*" CommandLine="*RegisterOCX*") OR (CommandLine="*ieframe.dll*" CommandLine="*OpenURL*") OR (CommandLine="*shdocvw.dll*" CommandLine="*OpenURL*") OR (CommandLine="*syssetup.dll*" CommandLine="*SetupInfObjectInstallAction'*") OR (CommandLine="*setupapi.dll*" CommandLine="*InstallHinfSection*") OR (CommandLine="*pcwutl.dll*" CommandLine="*LaunchApplication*") OR (CommandLine="*dfshim.dll*" CommandLine="*ShOpenVerbApplication*"))) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.011 attack.t1085" | eval sigma_title="Suspicious Rundll32 Activity" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Call by Ordinal - winevent]
description = Detects suspicious calls of DLLs in rundll32.dll exports by ordinal
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\rundll32.exe*" Process_Command_Line="*,#*") NOT (Process_Command_Line="*EDGEHTML.dll*" Process_Command_Line="*#141*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.011 attack.t1085" | eval sigma_title="Suspicious Call by Ordinal" | eval sigma_description="Detects suspicious calls of DLLs in rundll32.dll exports by ordinal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Call by Ordinal - sysmon]
description = Detects suspicious calls of DLLs in rundll32.dll exports by ordinal
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\rundll32.exe*" CommandLine="*,#*") NOT (CommandLine="*EDGEHTML.dll*" CommandLine="*#141*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.011 attack.t1085" | eval sigma_title="Suspicious Call by Ordinal" | eval sigma_description="Detects suspicious calls of DLLs in rundll32.dll exports by ordinal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Invoking Inline VBScript - winevent]
description = Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*Execute*" Process_Command_Line="*RegRead*" Process_Command_Line="*window.close*") | eval sigma_attack_tags="" | eval sigma_title="Suspicious Rundll32 Invoking Inline VBScript" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Invoking Inline VBScript - sysmon]
description = Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*Execute*" CommandLine="*RegRead*" CommandLine="*window.close*") | eval sigma_attack_tags="" | eval sigma_title="Suspicious Rundll32 Invoking Inline VBScript" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Setupapi.dll Activity - winevent]
description = setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\runonce.exe" Creator_Process_Name="*\\rundll32.exe" ParentCommandLine="*setupapi.dll*" ParentCommandLine="*InstallHinfSection*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Setupapi.dll Activity" | eval sigma_description="setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Setupapi.dll Activity - sysmon]
description = setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\runonce.exe" ParentImage="*\\rundll32.exe" ParentCommandLine="*setupapi.dll*" ParentCommandLine="*InstallHinfSection*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Setupapi.dll Activity" | eval sigma_description="setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity Invoking Sys File - winevent]
description = Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" (Process_Command_Line="*.sys,*" OR Process_Command_Line="*.sys *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Activity Invoking Sys File" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity Invoking Sys File - sysmon]
description = Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" (CommandLine="*.sys,*" OR CommandLine="*.sys *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Activity Invoking Sys File" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Once Task Execution as Configured in Registry - winevent]
description = This rule detects the execution of Run Once task as configured in the registry
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\runonce.exe") OR (Description="Run Once Wrapper")) (Process_Command_Line="* /AlternateShellStartup*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Run Once Task Execution as Configured in Registry" | eval sigma_description="This rule detects the execution of Run Once task as configured in the registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Once Task Execution as Configured in Registry - sysmon]
description = This rule detects the execution of Run Once task as configured in the registry
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\runonce.exe") OR (Description="Run Once Wrapper")) (CommandLine="* /AlternateShellStartup*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Run Once Task Execution as Configured in Registry" | eval sigma_description="This rule detects the execution of Run Once task as configured in the registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Runscripthelper.exe - winevent]
description = Detects execution of powershell scripts via Runscripthelper.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Runscripthelper.exe" Process_Command_Line="*surfacecheck*") | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Runscripthelper.exe" | eval sigma_description="Detects execution of powershell scripts via Runscripthelper.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Runscripthelper.exe - sysmon]
description = Detects execution of powershell scripts via Runscripthelper.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Runscripthelper.exe" CommandLine="*surfacecheck*") | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Runscripthelper.exe" | eval sigma_description="Detects execution of powershell scripts via Runscripthelper.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scheduled Task Creation Involving Temp Folder - winevent]
description = Detects the creation of scheduled tasks that involves a temporary folder and runs only once
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *" Process_Command_Line="* /sc once *" Process_Command_Line="*\\Temp\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005" | eval sigma_title="Suspicious Scheduled Task Creation Involving Temp Folder" | eval sigma_description="Detects the creation of scheduled tasks that involves a temporary folder and runs only once"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scheduled Task Creation Involving Temp Folder - sysmon]
description = Detects the creation of scheduled tasks that involves a temporary folder and runs only once
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="* /create *" CommandLine="* /sc once *" CommandLine="*\\Temp\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005" | eval sigma_title="Suspicious Scheduled Task Creation Involving Temp Folder" | eval sigma_description="Detects the creation of scheduled tasks that involves a temporary folder and runs only once"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Creation - winevent]
description = Detects the creation of scheduled tasks in user session
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *") NOT (Account_Name="NT AUTHORITY\\SYSTEM")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053.005 attack.t1053 attack.s0111 car.2013-08-001" | eval sigma_title="Scheduled Task Creation" | eval sigma_description="Detects the creation of scheduled tasks in user session"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Creation - sysmon]
description = Detects the creation of scheduled tasks in user session
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\schtasks.exe" CommandLine="* /create *") NOT (User="NT AUTHORITY\\SYSTEM")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053.005 attack.t1053 attack.s0111 car.2013-08-001" | eval sigma_title="Scheduled Task Creation" | eval sigma_description="Detects the creation of scheduled tasks in user session"
dispatch.earliest_time = -24h@h
alert.track = 0

[ScreenConnect Remote Access - winevent]
description = Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*e=Access&*" Process_Command_Line="*y=Guest&*" Process_Command_Line="*&p=*" Process_Command_Line="*&c=*" Process_Command_Line="*&k=*") | eval sigma_attack_tags="" | eval sigma_title="ScreenConnect Remote Access" | eval sigma_description="Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)"
dispatch.earliest_time = -24h@h
alert.track = 0

[ScreenConnect Remote Access - sysmon]
description = Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*e=Access&*" CommandLine="*y=Guest&*" CommandLine="*&p=*" CommandLine="*&c=*" CommandLine="*&k=*") | eval sigma_attack_tags="" | eval sigma_title="ScreenConnect Remote Access" | eval sigma_description="Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSF/JSE/JS/VBA/VBE File Execution - winevent]
description = Detects suspicious file execution by wscript and cscript
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="*.jse*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.vba*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.t1064" | eval sigma_title="WSF/JSE/JS/VBA/VBE File Execution" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSF/JSE/JS/VBA/VBE File Execution - sysmon]
description = Detects suspicious file execution by wscript and cscript
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="*.jse*" OR CommandLine="*.vbe*" OR CommandLine="*.js*" OR CommandLine="*.vba*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.t1064" | eval sigma_title="WSF/JSE/JS/VBA/VBE File Execution" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service DACL Modification - winevent]
description = Detects suspicious DACL modifications that can  be used to hide services or make them unstopable
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\sc.exe") Process_Command_Line="*sdset*" Process_Command_Line="*D;;*" (Process_Command_Line="*;;;IU*" OR Process_Command_Line="*;;;SU*" OR Process_Command_Line="*;;;BA*" OR Process_Command_Line="*;;;SY*" OR Process_Command_Line="*;;;WD*")) | eval sigma_attack_tags="attack.persistence attack.t1543.003" | eval sigma_title="Suspicious Service DACL Modification" | eval sigma_description="Detects suspicious DACL modifications that can  be used to hide services or make them unstopable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service DACL Modification - sysmon]
description = Detects suspicious DACL modifications that can  be used to hide services or make them unstopable
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\sc.exe") CommandLine="*sdset*" CommandLine="*D;;*" (CommandLine="*;;;IU*" OR CommandLine="*;;;SU*" OR CommandLine="*;;;BA*" OR CommandLine="*;;;SY*" OR CommandLine="*;;;WD*")) | eval sigma_attack_tags="attack.persistence attack.t1543.003" | eval sigma_title="Suspicious Service DACL Modification" | eval sigma_description="Detects suspicious DACL modifications that can  be used to hide services or make them unstopable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Binary Directory - winevent]
description = Detects a service binary running in a suspicious directory
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\Users\\Public\\*" OR New_Process_Name="*\\$Recycle.bin*" OR New_Process_Name="*\\Users\\All Users\\*" OR New_Process_Name="*\\Users\\Default\\*" OR New_Process_Name="*\\Users\\Contacts\\*" OR New_Process_Name="*\\Users\\Searches\\*" OR New_Process_Name="*C:\\Perflogs\\*" OR New_Process_Name="*\\config\\systemprofile\\*" OR New_Process_Name="*\\Windows\\Fonts\\*" OR New_Process_Name="*\\Windows\\IME\\*" OR New_Process_Name="*\\Windows\\addins\\*") (Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\svchost.exe")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Service Binary Directory" | eval sigma_description="Detects a service binary running in a suspicious directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Binary Directory - sysmon]
description = Detects a service binary running in a suspicious directory
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\Users\\Public\\*" OR Image="*\\$Recycle.bin*" OR Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\Contacts\\*" OR Image="*\\Users\\Searches\\*" OR Image="*C:\\Perflogs\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*") (ParentImage="*\\services.exe" OR ParentImage="*\\svchost.exe")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Service Binary Directory" | eval sigma_description="Detects a service binary running in a suspicious directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Path Modification - winevent]
description = Detects service path modification to powershell/cmd
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sc.exe" Process_Command_Line="*config*" Process_Command_Line="*binpath*" (Process_Command_Line="*powershell*" OR Process_Command_Line="*cmd*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003 attack.t1031" | eval sigma_title="Suspicious Service Path Modification" | eval sigma_description="Detects service path modification to powershell/cmd"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Path Modification - sysmon]
description = Detects service path modification to powershell/cmd
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sc.exe" CommandLine="*config*" CommandLine="*binpath*" (CommandLine="*powershell*" OR CommandLine="*cmd*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003 attack.t1031" | eval sigma_title="Suspicious Service Path Modification" | eval sigma_description="Detects service path modification to powershell/cmd"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by SQL Server - winevent]
description = Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sqlservr.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.t1100 attack.t1190 attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by SQL Server" | eval sigma_description="Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by SQL Server - sysmon]
description = Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sqlservr.exe" (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.t1100 attack.t1190 attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by SQL Server" | eval sigma_description="Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection"
dispatch.earliest_time = -24h@h
alert.track = 0

[ShimCache Flush - winevent]
description = Detects actions that clear the local ShimCache and remove forensic evidence
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32*" ((Process_Command_Line="*apphelp.dll*" (Process_Command_Line="*ShimFlushCache*" OR Process_Command_Line="*#250*")) OR (Process_Command_Line="*kernel32.dll*" (Process_Command_Line="*BaseFlushAppcompatCache*" OR Process_Command_Line="*#46*")))) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="ShimCache Flush" | eval sigma_description="Detects actions that clear the local ShimCache and remove forensic evidence"
dispatch.earliest_time = -24h@h
alert.track = 0

[ShimCache Flush - sysmon]
description = Detects actions that clear the local ShimCache and remove forensic evidence
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32*" ((CommandLine="*apphelp.dll*" (CommandLine="*ShimFlushCache*" OR CommandLine="*#250*")) OR (CommandLine="*kernel32.dll*" (CommandLine="*BaseFlushAppcompatCache*" OR CommandLine="*#46*")))) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="ShimCache Flush" | eval sigma_description="Detects actions that clear the local ShimCache and remove forensic evidence"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumping Process via Sqldumper.exe - winevent]
description = Detects process dump via legitimate sqldumper.exe binary
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sqldumper.exe" (Process_Command_Line="*0x0110*" OR Process_Command_Line="*0x01100:40*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumping Process via Sqldumper.exe" | eval sigma_description="Detects process dump via legitimate sqldumper.exe binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumping Process via Sqldumper.exe - sysmon]
description = Detects process dump via legitimate sqldumper.exe binary
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sqldumper.exe" (CommandLine="*0x0110*" OR CommandLine="*0x01100:40*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumping Process via Sqldumper.exe" | eval sigma_description="Detects process dump via legitimate sqldumper.exe binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Squirrel Lolbin - winevent]
description = Detects Possible Squirrel Packages Manager as Lolbin
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\update.exe" (Process_Command_Line="*--processStart*" OR Process_Command_Line="*--processStartAndWait*" OR Process_Command_Line="*--createShortcut*") Process_Command_Line="*.exe*") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="Squirrel Lolbin" | eval sigma_description="Detects Possible Squirrel Packages Manager as Lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Squirrel Lolbin - sysmon]
description = Detects Possible Squirrel Packages Manager as Lolbin
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\update.exe" (CommandLine="*--processStart*" OR CommandLine="*--processStartAndWait*" OR CommandLine="*--createShortcut*") CommandLine="*.exe*") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="Squirrel Lolbin" | eval sigma_description="Detects Possible Squirrel Packages Manager as Lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Activity - winevent]
description = It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*svchost.exe" New_Process_Name="*\\svchost.exe") NOT ((Creator_Process_Name="*\\rpcnet.exe" OR Creator_Process_Name="*\\rpcnetp.exe") OR NOT Process_Command_Line="*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Suspect Svchost Activity" | eval sigma_description="It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Activity - sysmon]
description = It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*svchost.exe" Image="*\\svchost.exe") NOT ((ParentImage="*\\rpcnet.exe" OR ParentImage="*\\rpcnetp.exe") OR NOT CommandLine="*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Suspect Svchost Activity" | eval sigma_description="It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Svchost Process - winevent]
description = Detects a suspicious svchost process start
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\svchost.exe" NOT ((Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\MsMpEng.exe" OR Creator_Process_Name="*\\Mrt.exe" OR Creator_Process_Name="*\\rpcnet.exe" OR Creator_Process_Name="*\\svchost.exe"))) NOT (NOT Creator_Process_Name="*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005 attack.t1036" | eval sigma_title="Suspicious Svchost Process" | eval sigma_description="Detects a suspicious svchost process start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Svchost Process - sysmon]
description = Detects a suspicious svchost process start
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" NOT ((ParentImage="*\\services.exe" OR ParentImage="*\\MsMpEng.exe" OR ParentImage="*\\Mrt.exe" OR ParentImage="*\\rpcnet.exe" OR ParentImage="*\\svchost.exe"))) NOT (NOT ParentImage="*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005 attack.t1036" | eval sigma_title="Suspicious Svchost Process" | eval sigma_description="Detects a suspicious svchost process start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysprep on AppData Folder - winevent]
description = Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\sysprep.exe") (Process_Command_Line="*\\AppData\\*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Sysprep on AppData Folder" | eval sigma_description="Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysprep on AppData Folder - sysmon]
description = Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\sysprep.exe") (CommandLine="*\\AppData\\*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Sysprep on AppData Folder" | eval sigma_description="Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSVOL Domain Group Policy Access - winevent]
description = Detects Access to Domain Group Policies stored in SYSVOL
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\SYSVOL\\*" Process_Command_Line="*\\policies\\*") | eval sigma_attack_tags="attack.credential_access attack.t1552.006 attack.t1003" | eval sigma_title="Suspicious SYSVOL Domain Group Policy Access" | eval sigma_description="Detects Access to Domain Group Policies stored in SYSVOL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSVOL Domain Group Policy Access - sysmon]
description = Detects Access to Domain Group Policies stored in SYSVOL
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\SYSVOL\\*" CommandLine="*\\policies\\*") | eval sigma_attack_tags="attack.credential_access attack.t1552.006 attack.t1003" | eval sigma_title="Suspicious SYSVOL Domain Group Policy Access" | eval sigma_description="Detects Access to Domain Group Policies stored in SYSVOL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as LOCAL_SYSTEM - winevent]
description = Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" New_Process_Name="*\\taskmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as LOCAL_SYSTEM" | eval sigma_description="Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as LOCAL_SYSTEM - sysmon]
description = Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" Image="*\\taskmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as LOCAL_SYSTEM" | eval sigma_description="Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as Parent - winevent]
description = Detects the creation of a process from Windows task manager
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\taskmgr.exe" NOT ((New_Process_Name="*\\resmon.exe" OR New_Process_Name="*\\mmc.exe" OR New_Process_Name="*\\taskmgr.exe"))) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as Parent" | eval sigma_description="Detects the creation of a process from Windows task manager"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as Parent - sysmon]
description = Detects the creation of a process from Windows task manager
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\taskmgr.exe" NOT ((Image="*\\resmon.exe" OR Image="*\\mmc.exe" OR Image="*\\taskmgr.exe"))) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as Parent" | eval sigma_description="Detects the creation of a process from Windows task manager"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Injection with Tracker.exe - winevent]
description = This rule detects DLL injection and execution via LOLBAS - Tracker.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tracker.exe") OR (Description="Tracker")) (Process_Command_Line="* /d *") (Process_Command_Line="* /c *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001" | eval sigma_title="DLL Injection with Tracker.exe" | eval sigma_description="This rule detects DLL injection and execution via LOLBAS - Tracker.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Injection with Tracker.exe - sysmon]
description = This rule detects DLL injection and execution via LOLBAS - Tracker.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tracker.exe") OR (Description="Tracker")) (CommandLine="* /d *") (CommandLine="* /c *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001" | eval sigma_title="DLL Injection with Tracker.exe" | eval sigma_description="This rule detects DLL injection and execution via LOLBAS - Tracker.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious TSCON Start - winevent]
description = Detects a tscon.exe start as LOCAL SYSTEM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" New_Process_Name="*\\tscon.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Suspicious TSCON Start" | eval sigma_description="Detects a tscon.exe start as LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious TSCON Start - sysmon]
description = Detects a tscon.exe start as LOCAL SYSTEM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" Image="*\\tscon.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Suspicious TSCON Start" | eval sigma_description="Detects a tscon.exe start as LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RDP Redirect Using TSCON - winevent]
description = Detects a suspicious RDP session redirect using tscon.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /dest:rdp-tcp:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002 attack.t1076 attack.t1021.001 car.2013-07-002" | eval sigma_title="Suspicious RDP Redirect Using TSCON" | eval sigma_description="Detects a suspicious RDP session redirect using tscon.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RDP Redirect Using TSCON - sysmon]
description = Detects a suspicious RDP session redirect using tscon.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /dest:rdp-tcp:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002 attack.t1076 attack.t1021.001 car.2013-07-002" | eval sigma_title="Suspicious RDP Redirect Using TSCON" | eval sigma_description="Detects a suspicious RDP session redirect using tscon.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of CSharp Interactive Console - winevent]
description = Detects the execution of CSharp interactive console by PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\csi.exe" Creator_Process_Name="*\\powershell.exe" OriginalFileName="csi.exe") | eval sigma_attack_tags="attack.execution attack.t1127" | eval sigma_title="Suspicious Use of CSharp Interactive Console" | eval sigma_description="Detects the execution of CSharp interactive console by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of CSharp Interactive Console - sysmon]
description = Detects the execution of CSharp interactive console by PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\csi.exe" ParentImage="*\\powershell.exe" OriginalFileName="csi.exe") | eval sigma_attack_tags="attack.execution attack.t1127" | eval sigma_title="Suspicious Use of CSharp Interactive Console" | eval sigma_description="Detects the execution of CSharp interactive console by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via Sqlps.exe - winevent]
description = This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\sqlps.exe" OR Creator_Process_Name="*\\sqlps.exe") OR (OriginalFileName="\\sqlps.exe" NOT (Creator_Process_Name="*\\sqlagent.exe")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="Detection of PowerShell Execution via Sqlps.exe" | eval sigma_description="This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via Sqlps.exe - sysmon]
description = This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\sqlps.exe" OR ParentImage="*\\sqlps.exe") OR (OriginalFileName="\\sqlps.exe" NOT (ParentImage="*\\sqlagent.exe")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="Detection of PowerShell Execution via Sqlps.exe" | eval sigma_description="This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[SQL Client Tools PowerShell Session Detection - winevent]
description = This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\sqltoolsps.exe" OR Creator_Process_Name="*\\sqltoolsps.exe") OR (OriginalFileName="\\sqltoolsps.exe" NOT (Creator_Process_Name="*\\smss.exe")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="SQL Client Tools PowerShell Session Detection" | eval sigma_description="This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[SQL Client Tools PowerShell Session Detection - sysmon]
description = This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\sqltoolsps.exe" OR ParentImage="*\\sqltoolsps.exe") OR (OriginalFileName="\\sqltoolsps.exe" NOT (ParentImage="*\\smss.exe")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="SQL Client Tools PowerShell Session Detection" | eval sigma_description="This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Windows Script Components File Execution by TAEF Detection - winevent]
description = Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\te.exe" OR Creator_Process_Name="*\\te.exe" OR OriginalFileName="\\te.exe")) | eval sigma_attack_tags="attack.t1218" | eval sigma_title="Malicious Windows Script Components File Execution by TAEF Detection" | eval sigma_description="Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Windows Script Components File Execution by TAEF Detection - sysmon]
description = Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\te.exe" OR ParentImage="*\\te.exe" OR OriginalFileName="\\te.exe")) | eval sigma_attack_tags="attack.t1218" | eval sigma_title="Malicious Windows Script Components File Execution by TAEF Detection" | eval sigma_description="Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PE Execution by Microsoft Visual Studio Debugger - winevent]
description = There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\vsjitdebugger.exe" NOT (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (ChildImage="*\\vsimmersiveactivatehelper*.exe" OR ChildImage="*\\devenv.exe")))) | eval sigma_attack_tags="attack.t1218 attack.defense_evasion" | eval sigma_title="Malicious PE Execution by Microsoft Visual Studio Debugger" | eval sigma_description="There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PE Execution by Microsoft Visual Studio Debugger - sysmon]
description = There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\vsjitdebugger.exe" NOT (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ChildImage="*\\vsimmersiveactivatehelper*.exe" OR ChildImage="*\\devenv.exe")))) | eval sigma_attack_tags="attack.t1218 attack.defense_evasion" | eval sigma_title="Malicious PE Execution by Microsoft Visual Studio Debugger" | eval sigma_description="There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Userinit Child Process - winevent]
description = Detects a suspicious child process of userinit
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\userinit.exe" NOT (Process_Command_Line="*\\netlogon\\\*")) NOT (New_Process_Name="*\\explorer.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Userinit Child Process" | eval sigma_description="Detects a suspicious child process of userinit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Userinit Child Process - sysmon]
description = Detects a suspicious child process of userinit
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\userinit.exe" NOT (CommandLine="*\\netlogon\\\*")) NOT (Image="*\\explorer.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Userinit Child Process" | eval sigma_description="Detects a suspicious child process of userinit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBoxDrvInst.exe Parameters - winevent]
description = Detect VBoxDrvInst.exe run whith parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\VBoxDrvInst.exe" Process_Command_Line="*driver*" Process_Command_Line="*executeinf*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Suspicious VBoxDrvInst.exe Parameters" | eval sigma_description="Detect VBoxDrvInst.exe run whith parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBoxDrvInst.exe Parameters - sysmon]
description = Detect VBoxDrvInst.exe run whith parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\VBoxDrvInst.exe" CommandLine="*driver*" CommandLine="*executeinf*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Suspicious VBoxDrvInst.exe Parameters" | eval sigma_description="Detect VBoxDrvInst.exe run whith parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBScript UN2452 Pattern - winevent]
description = Detects suspicious inline VBScript keywords as used by UNC2452
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*Execute*" Process_Command_Line="*CreateObject*" Process_Command_Line="*RegRead*" Process_Command_Line="*window.close*" Process_Command_Line="*\\Microsoft\\Windows\\CurrentVersion*") NOT ((Process_Command_Line="*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious VBScript UN2452 Pattern" | eval sigma_description="Detects suspicious inline VBScript keywords as used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBScript UN2452 Pattern - sysmon]
description = Detects suspicious inline VBScript keywords as used by UNC2452
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*Execute*" CommandLine="*CreateObject*" CommandLine="*RegRead*" CommandLine="*window.close*" CommandLine="*\\Microsoft\\Windows\\CurrentVersion*") NOT ((CommandLine="*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious VBScript UN2452 Pattern" | eval sigma_description="Detects suspicious inline VBScript keywords as used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled Volume Snapshots - winevent]
description = Detects commands that temporarily turn off Volume Snapshots
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*reg*" Process_Command_Line="* add *" Process_Command_Line="*\\Services\\VSS\\Diag*" Process_Command_Line="*/d Disabled*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disabled Volume Snapshots" | eval sigma_description="Detects commands that temporarily turn off Volume Snapshots"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled Volume Snapshots - sysmon]
description = Detects commands that temporarily turn off Volume Snapshots
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*reg*" CommandLine="* add *" CommandLine="*\\Services\\VSS\\Diag*" CommandLine="*/d Disabled*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disabled Volume Snapshots" | eval sigma_description="Detects commands that temporarily turn off Volume Snapshots"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution - winevent]
description = Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\whoami.exe" OR OriginalFileName="whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution" | eval sigma_description="Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution - sysmon]
description = Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\whoami.exe" OR OriginalFileName="whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution" | eval sigma_description="Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators"
dispatch.earliest_time = -24h@h
alert.track = 0

[AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - winevent]
description = Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*winrm*" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*format:pretty*" OR Process_Command_Line="*format:\"pretty\"*" OR Process_Command_Line="*format:\"text\"*" OR Process_Command_Line="*format:text*") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*"))) ((TargetFilename="*WsmPty.xsl" OR TargetFilename="*WsmTxt.xsl") NOT ((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl" | eval sigma_description="Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)"
dispatch.earliest_time = -24h@h
alert.track = 0

[AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - sysmon]
description = Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*winrm*" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*format:pretty*" OR CommandLine="*format:\"pretty\"*" OR CommandLine="*format:\"text\"*" OR CommandLine="*format:text*") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*"))) ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*WsmPty.xsl" OR TargetFilename="*WsmTxt.xsl") NOT ((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl" | eval sigma_description="Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Code Execute via Winrm.vbs - winevent]
description = Detects an attempt to execude code or create service on remote host via winrm.vbs.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cscript.exe" Process_Command_Line="*winrm*" Process_Command_Line="*invoke Create wmicimv2/Win32_*" Process_Command_Line="*-r:http*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Remote Code Execute via Winrm.vbs" | eval sigma_description="Detects an attempt to execude code or create service on remote host via winrm.vbs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Code Execute via Winrm.vbs - sysmon]
description = Detects an attempt to execude code or create service on remote host via winrm.vbs.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cscript.exe" CommandLine="*winrm*" CommandLine="*invoke Create wmicimv2/Win32_*" CommandLine="*-r:http*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Remote Code Execute via Winrm.vbs" | eval sigma_description="Detects an attempt to execude code or create service on remote host via winrm.vbs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution - winevent]
description = Detects WMI executing suspicious commands
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\wmic.exe" ((Process_Command_Line="*/NODE:*" Process_Command_Line="*process*" Process_Command_Line="*call*" Process_Command_Line="*create *") OR (Process_Command_Line="* path *" (Process_Command_Line="*AntiVirus*" OR Process_Command_Line="*Firewall*") Process_Command_Line="*Product*" Process_Command_Line="* get *"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 car.2016-03-002" | eval sigma_title="Suspicious WMI Execution" | eval sigma_description="Detects WMI executing suspicious commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution - sysmon]
description = Detects WMI executing suspicious commands
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wmic.exe" ((CommandLine="*/NODE:*" CommandLine="*process*" CommandLine="*call*" CommandLine="*create *") OR (CommandLine="* path *" (CommandLine="*AntiVirus*" OR CommandLine="*Firewall*") CommandLine="*Product*" CommandLine="* get *"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 car.2016-03-002" | eval sigma_title="Suspicious WMI Execution" | eval sigma_description="Detects WMI executing suspicious commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution Using Rundll32 - winevent]
description = Detects WMI executing rundll32
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*process call create*" Process_Command_Line="*rundll32*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Suspicious WMI Execution Using Rundll32" | eval sigma_description="Detects WMI executing rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution Using Rundll32 - sysmon]
description = Detects WMI executing rundll32
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*process call create*" CommandLine="*rundll32*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Suspicious WMI Execution Using Rundll32" | eval sigma_description="Detects WMI executing rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmic Uninstall Security Product - winevent]
description = Detects deinstallation of security products using WMIC utility
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*wmic*" Process_Command_Line="*product where name=*" Process_Command_Line="*call uninstall*" Process_Command_Line="*/nointeractive*" (Process_Command_Line="*Antivirus*" OR Process_Command_Line="*Endpoint Security*" OR Process_Command_Line="*Endpoint Detection*" OR Process_Command_Line="*Crowdstrike Sensor*" OR Process_Command_Line="*Windows Defender*" OR Process_Command_Line="*VirusScan*" OR Process_Command_Line="*Threat Protection*" OR Process_Command_Line="*Endpoint Sensor*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Wmic Uninstall Security Product" | eval sigma_description="Detects deinstallation of security products using WMIC utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmic Uninstall Security Product - sysmon]
description = Detects deinstallation of security products using WMIC utility
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*wmic*" CommandLine="*product where name=*" CommandLine="*call uninstall*" CommandLine="*/nointeractive*" (CommandLine="*Antivirus*" OR CommandLine="*Endpoint Security*" OR CommandLine="*Endpoint Detection*" OR CommandLine="*Crowdstrike Sensor*" OR CommandLine="*Windows Defender*" OR CommandLine="*VirusScan*" OR CommandLine="*Threat Protection*" OR CommandLine="*Endpoint Sensor*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Wmic Uninstall Security Product" | eval sigma_description="Detects deinstallation of security products using WMIC utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSL Execution - winevent]
description = Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wsl.exe") (Process_Command_Line="* -e *" OR Process_Command_Line="* --exec *")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="WSL Execution" | eval sigma_description="Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSL Execution - sysmon]
description = Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wsl.exe") (CommandLine="* -e *" OR CommandLine="* --exec *")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="WSL Execution" | eval sigma_description="Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Update Client LOLBIN - winevent]
description = Detects code execution via the Windows Update client (wuauclt)
search = index=wineventlog* (ProcessCommandLine="*/UpdateDeploymentProvider*" ProcessCommandLine="*/RunHandlerComServer*" (New_Process_Name="*\\wuauclt.exe")) | eval sigma_attack_tags="attack.command_and_control attack.execution attack.t1105 attack.t1218" | eval sigma_title="Windows Update Client LOLBIN" | eval sigma_description="Detects code execution via the Windows Update client (wuauclt)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Update Client LOLBIN - sysmon]
description = Detects code execution via the Windows Update client (wuauclt)
search = index=sysmon* (ProcessCommandLine="*/UpdateDeploymentProvider*" ProcessCommandLine="*/RunHandlerComServer*" (Image="*\\wuauclt.exe")) | eval sigma_attack_tags="attack.command_and_control attack.execution attack.t1105 attack.t1218" | eval sigma_title="Windows Update Client LOLBIN" | eval sigma_description="Detects code execution via the Windows Update client (wuauclt)"
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer Execution to Bypass Powershell Restriction - winevent]
description = Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\SyncAppvPublishingServer.exe") (source="WinEventLog:Microsoft-Windows-PowerShell/Operational" Message="*SyncAppvPublishingServer.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="SyncAppvPublishingServer Execution to Bypass Powershell Restriction" | eval sigma_description="Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions."
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer Execution to Bypass Powershell Restriction - sysmon]
description = Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\SyncAppvPublishingServer.exe") (source="WinEventLog:Microsoft-Windows-PowerShell/Operational" Message="*SyncAppvPublishingServer.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="SyncAppvPublishingServer Execution to Bypass Powershell Restriction" | eval sigma_description="Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Driver Unload - winevent]
description = Detect possible Sysmon driver unload
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\fltmc.exe" Process_Command_Line="*unload*" Process_Command_Line="*sys*") | table Process_Command_Line,NewValue | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Sysmon Driver Unload" | eval sigma_description="Detect possible Sysmon driver unload"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Driver Unload - sysmon]
description = Detect possible Sysmon driver unload
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\fltmc.exe" CommandLine="*unload*" CommandLine="*sys*") | table CommandLine,Details | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Sysmon Driver Unload" | eval sigma_description="Detect possible Sysmon driver unload"
dispatch.earliest_time = -24h@h
alert.track = 0

[System File Execution Location Anomaly - winevent]
description = Detects a Windows program executable started in a suspicious folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\services.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\spoolsv.exe" OR New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\smss.exe" OR New_Process_Name="*\\csrss.exe" OR New_Process_Name="*\\conhost.exe" OR New_Process_Name="*\\wininit.exe" OR New_Process_Name="*\\lsm.exe" OR New_Process_Name="*\\winlogon.exe" OR New_Process_Name="*\\explorer.exe" OR New_Process_Name="*\\taskhost.exe" OR New_Process_Name="*\\Taskmgr.exe" OR New_Process_Name="*\\sihost.exe" OR New_Process_Name="*\\RuntimeBroker.exe" OR New_Process_Name="*\\smartscreen.exe" OR New_Process_Name="*\\dllhost.exe" OR New_Process_Name="*\\audiodg.exe" OR New_Process_Name="*\\wlanext.exe") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\system32\\*" OR New_Process_Name="C:\\Windows\\SysWow64\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\winsxs\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*" OR New_Process_Name="C:\\avast! sandbox*") OR New_Process_Name="*\\SystemRoot\\System32\\*" OR New_Process_Name="C:\\Windows\\explorer.exe")) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="System File Execution Location Anomaly" | eval sigma_description="Detects a Windows program executable started in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[System File Execution Location Anomaly - sysmon]
description = Detects a Windows program executable started in a suspicious folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" OR Image="*\\rundll32.exe" OR Image="*\\services.exe" OR Image="*\\powershell.exe" OR Image="*\\regsvr32.exe" OR Image="*\\spoolsv.exe" OR Image="*\\lsass.exe" OR Image="*\\smss.exe" OR Image="*\\csrss.exe" OR Image="*\\conhost.exe" OR Image="*\\wininit.exe" OR Image="*\\lsm.exe" OR Image="*\\winlogon.exe" OR Image="*\\explorer.exe" OR Image="*\\taskhost.exe" OR Image="*\\Taskmgr.exe" OR Image="*\\sihost.exe" OR Image="*\\RuntimeBroker.exe" OR Image="*\\smartscreen.exe" OR Image="*\\dllhost.exe" OR Image="*\\audiodg.exe" OR Image="*\\wlanext.exe") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\system32\\*" OR Image="C:\\Windows\\SysWow64\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\winsxs\\*" OR Image="C:\\Windows\\WinSxS\\*" OR Image="C:\\avast! sandbox*") OR Image="*\\SystemRoot\\System32\\*" OR Image="C:\\Windows\\explorer.exe")) | table ComputerName,User,Image | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="System File Execution Location Anomaly" | eval sigma_description="Detects a Windows program executable started in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Installer Execution - winevent]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\tapinstall.exe") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Installer Execution" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Installer Execution - sysmon]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\tapinstall.exe") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Installer Execution" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tasks Folder Evasion - winevent]
description = The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr
search = index=wineventlog* ((Process_Command_Line="*echo *" OR Process_Command_Line="*copy *" OR Process_Command_Line="*type *" OR Process_Command_Line="*file createnew*") (Process_Command_Line="* C:\\Windows\\System32\\Tasks\\*" OR Process_Command_Line="* C:\\Windows\\SysWow64\\Tasks\\*")) | table Process_Command_Line,ParentProcess | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.execution attack.t1574.002 attack.t1059 attack.t1064" | eval sigma_title="Tasks Folder Evasion" | eval sigma_description="The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tasks Folder Evasion - sysmon]
description = The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr
search = index=sysmon* ((CommandLine="*echo *" OR CommandLine="*copy *" OR CommandLine="*type *" OR CommandLine="*file createnew*") (CommandLine="* C:\\Windows\\System32\\Tasks\\*" OR CommandLine="* C:\\Windows\\SysWow64\\Tasks\\*")) | table CommandLine,ParentProcess | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.execution attack.t1574.002 attack.t1059 attack.t1064" | eval sigma_title="Tasks Folder Evasion" | eval sigma_description="The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr"
dispatch.earliest_time = -24h@h
alert.track = 0

[Terminal Service Process Spawn - winevent]
description = Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (ParentCommandLine="*\\svchost.exe*" ParentCommandLine="*termsvcs*") NOT (New_Process_Name="*\\rdpclip.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Terminal Service Process Spawn" | eval sigma_description="Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Terminal Service Process Spawn - sysmon]
description = Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentCommandLine="*\\svchost.exe*" ParentCommandLine="*termsvcs*") NOT (Image="*\\rdpclip.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Terminal Service Process Spawn" | eval sigma_description="Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - winevent]
description = Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\nltest.exe" (Process_Command_Line="*domain_trusts*" OR Process_Command_Line="*all_trusts*" OR Process_Command_Line="*/dclist*")) OR (New_Process_Name="*\\dsquery.exe" Process_Command_Line="*trustedDomain*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - sysmon]
description = Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\nltest.exe" (CommandLine="*domain_trusts*" OR CommandLine="*all_trusts*" OR CommandLine="*/dclist*")) OR (Image="*\\dsquery.exe" CommandLine="*trustedDomain*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via CMSTP - winevent]
description = Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmstp.exe" (Process_Command_Line="*/s*" OR Process_Command_Line="*/au*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002 attack.t1218.003 attack.t1191 attack.t1088" | eval sigma_title="Bypass UAC via CMSTP" | eval sigma_description="Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via CMSTP - sysmon]
description = Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmstp.exe" (CommandLine="*/s*" OR CommandLine="*/au*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002 attack.t1218.003 attack.t1191 attack.t1088" | eval sigma_title="Bypass UAC via CMSTP" | eval sigma_description="Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via Fodhelper.exe - winevent]
description = Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\fodhelper.exe") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002 attack.t1088" | eval sigma_title="Bypass UAC via Fodhelper.exe" | eval sigma_description="Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via Fodhelper.exe - sysmon]
description = Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\fodhelper.exe") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002 attack.t1088" | eval sigma_title="Bypass UAC via Fodhelper.exe" | eval sigma_description="Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via WSReset.exe - winevent]
description = Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\wsreset.exe" NOT (New_Process_Name="*\\conhost.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002 attack.t1088" | eval sigma_title="Bypass UAC via WSReset.exe" | eval sigma_description="Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via WSReset.exe - sysmon]
description = Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\wsreset.exe" NOT (Image="*\\conhost.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002 attack.t1088" | eval sigma_title="Bypass UAC via WSReset.exe" | eval sigma_description="Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Weak Service Permissions - winevent]
description = Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sc.exe" IntegrityLevel="Medium" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*config*" Process_Command_Line="*binPath*") OR (Process_Command_Line="*failure*" Process_Command_Line="*command*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Weak Service Permissions" | eval sigma_description="Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Weak Service Permissions - sysmon]
description = Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sc.exe" IntegrityLevel="Medium" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*config*" CommandLine="*binPath*") OR (CommandLine="*failure*" CommandLine="*command*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Weak Service Permissions" | eval sigma_description="Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Using SettingSyncHost.exe as LOLBin - winevent]
description = Detects using SettingSyncHost.exe to run hijacked binary
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*")) (ParentCommandLine="*cmd.exe /c*" ParentCommandLine="*RoamDiag.cmd*" ParentCommandLine="*-outputpath*")) | table TargetFilename,New_Process_Name | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1574.008" | eval sigma_title="Using SettingSyncHost.exe as LOLBin" | eval sigma_description="Detects using SettingSyncHost.exe to run hijacked binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Using SettingSyncHost.exe as LOLBin - sysmon]
description = Detects using SettingSyncHost.exe to run hijacked binary
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*")) (ParentCommandLine="*cmd.exe /c*" ParentCommandLine="*RoamDiag.cmd*" ParentCommandLine="*-outputpath*")) | table TargetFilename,Image | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1574.008" | eval sigma_title="Using SettingSyncHost.exe as LOLBin" | eval sigma_description="Detects using SettingSyncHost.exe to run hijacked binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Verclsid.exe Runs COM Object - winevent]
description = Detects when verclsid.exe is used to run COM object via GUID
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\verclsid.exe" Process_Command_Line="*/C*" Process_Command_Line="*/S*") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Verclsid.exe Runs COM Object" | eval sigma_description="Detects when verclsid.exe is used to run COM object via GUID"
dispatch.earliest_time = -24h@h
alert.track = 0

[Verclsid.exe Runs COM Object - sysmon]
description = Detects when verclsid.exe is used to run COM object via GUID
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\verclsid.exe" CommandLine="*/C*" CommandLine="*/S*") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Verclsid.exe Runs COM Object" | eval sigma_description="Detects when verclsid.exe is used to run COM object via GUID"
dispatch.earliest_time = -24h@h
alert.track = 0

[Visual Basic Command Line Compiler Usage - winevent]
description = Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\vbc.exe" New_Process_Name="*\\cvtres.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1027.004" | eval sigma_title="Visual Basic Command Line Compiler Usage" | eval sigma_description="Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter."
dispatch.earliest_time = -24h@h
alert.track = 0

[Visual Basic Command Line Compiler Usage - sysmon]
description = Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\vbc.exe" Image="*\\cvtres.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1027.004" | eval sigma_title="Visual Basic Command Line Compiler Usage" | eval sigma_description="Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter."
dispatch.earliest_time = -24h@h
alert.track = 0

[Java Running with Remote Debugging - winevent]
description = Detects a JAVA process running with remote debugging allowing more than just localhost to connect
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Process_Command_Line="*transport=dt_socket,address=*" NOT (Process_Command_Line="*address=127.0.0.1*" OR Process_Command_Line="*address=localhost*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Java Running with Remote Debugging" | eval sigma_description="Detects a JAVA process running with remote debugging allowing more than just localhost to connect"
dispatch.earliest_time = -24h@h
alert.track = 0

[Java Running with Remote Debugging - sysmon]
description = Detects a JAVA process running with remote debugging allowing more than just localhost to connect
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CommandLine="*transport=dt_socket,address=*" NOT (CommandLine="*address=127.0.0.1*" OR CommandLine="*address=localhost*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Java Running with Remote Debugging" | eval sigma_description="Detects a JAVA process running with remote debugging allowing more than just localhost to connect"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Detection With Command Line Keywords - winevent]
description = Detects certain command line parameters often used during reconnaissance activity via web shells
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe") OR (Creator_Process_Name="*\\apache*" OR Creator_Process_Name="*\\tomcat*")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") (Process_Command_Line="* user *" OR Process_Command_Line="* use *" OR Process_Command_Line="* group *")) OR (New_Process_Name="*\\ping.exe" Process_Command_Line="* -n *") OR (Process_Command_Line="*&cd&echo*" OR Process_Command_Line="*cd /d *")) OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="* /node:*") OR (New_Process_Name="*\\whoami.exe" OR New_Process_Name="*\\systeminfo.exe" OR New_Process_Name="*\\quser.exe" OR New_Process_Name="*\\ipconfig.exe" OR New_Process_Name="*\\pathping.exe" OR New_Process_Name="*\\tracert.exe" OR New_Process_Name="*\\netstat.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\vssadmin.exe" OR New_Process_Name="*\\wevtutil.exe" OR New_Process_Name="*\\tasklist.exe") OR (Process_Command_Line="* Test-NetConnection *" OR Process_Command_Line="*dir \\*")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1018 attack.t1033 attack.t1087 attack.privilege_escalation attack.t1100" | eval sigma_title="Webshell Detection With Command Line Keywords" | eval sigma_description="Detects certain command line parameters often used during reconnaissance activity via web shells"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Detection With Command Line Keywords - sysmon]
description = Detects certain command line parameters often used during reconnaissance activity via web shells
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe") OR (ParentImage="*\\apache*" OR ParentImage="*\\tomcat*")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((((Image="*\\net.exe" OR Image="*\\net1.exe") (CommandLine="* user *" OR CommandLine="* use *" OR CommandLine="* group *")) OR (Image="*\\ping.exe" CommandLine="* -n *") OR (CommandLine="*&cd&echo*" OR CommandLine="*cd /d *")) OR (Image="*\\wmic.exe" CommandLine="* /node:*") OR (Image="*\\whoami.exe" OR Image="*\\systeminfo.exe" OR Image="*\\quser.exe" OR Image="*\\ipconfig.exe" OR Image="*\\pathping.exe" OR Image="*\\tracert.exe" OR Image="*\\netstat.exe" OR Image="*\\schtasks.exe" OR Image="*\\vssadmin.exe" OR Image="*\\wevtutil.exe" OR Image="*\\tasklist.exe") OR (CommandLine="* Test-NetConnection *" OR CommandLine="*dir \\*")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1018 attack.t1033 attack.t1087 attack.privilege_escalation attack.t1100" | eval sigma_title="Webshell Detection With Command Line Keywords" | eval sigma_description="Detects certain command line parameters often used during reconnaissance activity via web shells"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Recon Detection Via CommandLine & Processes - winevent]
description = Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\apache*" OR Creator_Process_Name="*\\tomcat*") OR (Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe")) ((New_Process_Name="*\\cmd.exe") (Process_Command_Line="*perl --help*" OR Process_Command_Line="*python --help*" OR Process_Command_Line="*wget --help*" OR Process_Command_Line="*perl -h*"))) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.privilege_escalation attack.t1100" | eval sigma_title="Webshell Recon Detection Via CommandLine & Processes" | eval sigma_description="Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed."
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Recon Detection Via CommandLine & Processes - sysmon]
description = Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\apache*" OR ParentImage="*\\tomcat*") OR (ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe")) ((Image="*\\cmd.exe") (CommandLine="*perl --help*" OR CommandLine="*python --help*" OR CommandLine="*wget --help*" OR CommandLine="*perl -h*"))) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.privilege_escalation attack.t1100" | eval sigma_title="Webshell Recon Detection Via CommandLine & Processes" | eval sigma_description="Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed."
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawned by Web Servers - winevent]
description = Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\tomcat.exe" OR Creator_Process_Name="*\\UMWorkerProcess.exe") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.privilege_escalation attack.t1190" | eval sigma_title="Shells Spawned by Web Servers" | eval sigma_description="Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawned by Web Servers - sysmon]
description = Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\w3wp.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\tomcat.exe" OR ParentImage="*\\UMWorkerProcess.exe") (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.privilege_escalation attack.t1190" | eval sigma_title="Shells Spawned by Web Servers" | eval sigma_description="Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as SYSTEM - winevent]
description = Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" New_Process_Name="*\\whoami.exe") | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami as SYSTEM" | eval sigma_description="Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as SYSTEM - sysmon]
description = Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" Image="*\\whoami.exe") | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami as SYSTEM" | eval sigma_description="Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows 10 Scheduled Task SandboxEscaper 0-day - winevent]
description = Detects Task Scheduler .job import arbitrary DACL write\par
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/change*" Process_Command_Line="*/TN*" Process_Command_Line="*/RU*" Process_Command_Line="*/RP*") | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.005 attack.t1053 car.2013-08-001" | eval sigma_title="Windows 10 Scheduled Task SandboxEscaper 0-day" | eval sigma_description="Detects Task Scheduler .job import arbitrary DACL write\par"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows 10 Scheduled Task SandboxEscaper 0-day - sysmon]
description = Detects Task Scheduler .job import arbitrary DACL write\par
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="*/change*" CommandLine="*/TN*" CommandLine="*/RU*" CommandLine="*/RP*") | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.005 attack.t1053 car.2013-08-001" | eval sigma_title="Windows 10 Scheduled Task SandboxEscaper 0-day" | eval sigma_description="Detects Task Scheduler .job import arbitrary DACL write\par"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winword.exe Loads Suspicious DLL - winevent]
description = Detects Winword.exe loading of custmom dll via /l cmd switch
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\winword.exe" Process_Command_Line="*/l*") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Winword.exe Loads Suspicious DLL" | eval sigma_description="Detects Winword.exe loading of custmom dll via /l cmd switch"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winword.exe Loads Suspicious DLL - sysmon]
description = Detects Winword.exe loading of custmom dll via /l cmd switch
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\winword.exe" CommandLine="*/l*") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Winword.exe Loads Suspicious DLL" | eval sigma_description="Detects Winword.exe loading of custmom dll via /l cmd switch"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Backdoor Exchange Transport Agent - winevent]
description = Detects a WMI backdoor in Exchange Transport Agents via WMI event filters
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\EdgeTransport.exe") | eval sigma_attack_tags="attack.persistence attack.t1546.003 attack.t1084" | eval sigma_title="WMI Backdoor Exchange Transport Agent" | eval sigma_description="Detects a WMI backdoor in Exchange Transport Agents via WMI event filters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Backdoor Exchange Transport Agent - sysmon]
description = Detects a WMI backdoor in Exchange Transport Agents via WMI event filters
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\EdgeTransport.exe") | eval sigma_attack_tags="attack.persistence attack.t1546.003 attack.t1084" | eval sigma_title="WMI Backdoor Exchange Transport Agent" | eval sigma_description="Detects a WMI backdoor in Exchange Transport Agents via WMI event filters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer - winevent]
description = Detects WMI script event consumers
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="C:\\WINDOWS\\system32\\wbem\\scrcons.exe" Creator_Process_Name="C:\\Windows\\System32\\svchost.exe") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.003 attack.t1047" | eval sigma_title="WMI Persistence - Script Event Consumer" | eval sigma_description="Detects WMI script event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer - sysmon]
description = Detects WMI script event consumers
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\WINDOWS\\system32\\wbem\\scrcons.exe" ParentImage="C:\\Windows\\System32\\svchost.exe") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.003 attack.t1047" | eval sigma_title="WMI Persistence - Script Event Consumer" | eval sigma_description="Detects WMI script event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Spawning Windows PowerShell - winevent]
description = Detects WMI spawning PowerShell
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\wmiprvse.exe") (New_Process_Name="*\\powershell.exe")) NOT (Process_Command_Line="null")) NOT (NOT Process_Command_Line="*")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1059.001 attack.defense_evasion attack.t1064" | eval sigma_title="WMI Spawning Windows PowerShell" | eval sigma_description="Detects WMI spawning PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Spawning Windows PowerShell - sysmon]
description = Detects WMI spawning PowerShell
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\wmiprvse.exe") (Image="*\\powershell.exe")) NOT (CommandLine="null")) NOT (NOT CommandLine="*")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1059.001 attack.defense_evasion attack.t1064" | eval sigma_title="WMI Spawning Windows PowerShell" | eval sigma_description="Detects WMI spawning PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Spawning Process - winevent]
description = Detects wmiprvse spawning processes
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\WmiPrvSe.exe" NOT ((LogonId="0x3e7" OR LogonId="null") OR (SubjectLogonId="0x3e7" OR SubjectLogonId="null") OR Account_Name="NT AUTHORITY\\SYSTEM" OR (New_Process_Name="*\\WmiPrvSE.exe" OR New_Process_Name="*\\WerFault.exe"))) NOT (NOT LogonId="*")) NOT (NOT SubjectLogonId="*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Wmiprvse Spawning Process" | eval sigma_description="Detects wmiprvse spawning processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Spawning Process - sysmon]
description = Detects wmiprvse spawning processes
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\WmiPrvSe.exe" NOT ((LogonId="0x3e7" OR LogonId="null") OR (SubjectLogonId="0x3e7" OR SubjectLogonId="null") OR User="NT AUTHORITY\\SYSTEM" OR (Image="*\\WmiPrvSE.exe" OR Image="*\\WerFault.exe"))) NOT (NOT LogonId="*")) NOT (NOT SubjectLogonId="*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Wmiprvse Spawning Process" | eval sigma_description="Detects wmiprvse spawning processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Workflow Compiler - winevent]
description = Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Microsoft.Workflow.Compiler.exe") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1127" | eval sigma_title="Microsoft Workflow Compiler" | eval sigma_description="Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Workflow Compiler - sysmon]
description = Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Microsoft.Workflow.Compiler.exe") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1127" | eval sigma_title="Microsoft Workflow Compiler" | eval sigma_description="Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Wsreset UAC Bypass - winevent]
description = Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\WSreset.exe")) | table Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002 attack.t1088" | eval sigma_title="Wsreset UAC Bypass" | eval sigma_description="Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wsreset UAC Bypass - sysmon]
description = Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\WSreset.exe")) | table CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002 attack.t1088" | eval sigma_title="Wsreset UAC Bypass" | eval sigma_description="Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC"
dispatch.earliest_time = -24h@h
alert.track = 0

[XSL Script Processing - winevent]
description = Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\wmic.exe" Process_Command_Line="*/format*") OR New_Process_Name="*\\msxsl.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1220 attack.execution" | eval sigma_title="XSL Script Processing" | eval sigma_description="Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses"
dispatch.earliest_time = -24h@h
alert.track = 0

[XSL Script Processing - sysmon]
description = Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\wmic.exe" CommandLine="*/format*") OR Image="*\\msxsl.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1220 attack.execution" | eval sigma_title="XSL Script Processing" | eval sigma_description="Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses"
dispatch.earliest_time = -24h@h
alert.track = 0
