
[Mimikatz Use - builtin]
description = This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)
search = index=wineventlog* (("dpapi::masterkey" OR "eo.oe.kiwi" OR "event::clear" OR "event::drop" OR "gentilkiwi.com" OR "kerberos::golden" OR "kerberos::ptc" OR "kerberos::ptt" OR "kerberos::tgt" OR "Kiwi Legit Printer" OR "lsadump::" OR "mimidrv.sys" OR "\\mimilib.dll" OR "misc::printnightmare" OR "misc::shadowcopies" OR "misc::skeleton" OR "privilege::backup" OR "privilege::debug" OR "privilege::driver" OR "sekurlsa::") NOT (EventCode="15")) | eval sigma_attack_tags="attack.s0002 attack.lateral_movement attack.credential_access car.2013-07-001 car.2019-04-004 attack.t1003.002 attack.t1003.004 attack.t1003.001 attack.t1003.006" | eval sigma_title="Mimikatz Use" | eval sigma_description="This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Outgoing Logon with New Credentials - builtin]
description = Detects logon events that specify new credentials
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="9") | eval sigma_attack_tags="" | eval sigma_title="Outgoing Logon with New Credentials" | eval sigma_description="Detects logon events that specify new credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Azure AD Health Monitoring Agent Registry Keys Access - builtin]
description = This detection uses Windows security events to detect suspicious access attempts to the registry key of Azure AD Health monitoring agent.
This detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object HKLM\SOFTWARE\Microsoft\Microsoft Online\Reporting\MonitoringAgent.

search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4656" OR EventCode="4663") ObjectType="Key" ObjectName="\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Microsoft Online\\Reporting\\MonitoringAgent") NOT ((ProcessName="*Microsoft.Identity.Health.Adfs.DiagnosticsAgent.exe*" OR ProcessName="*Microsoft.Identity.Health.Adfs.InsightsService.exe*" OR ProcessName="*Microsoft.Identity.Health.Adfs.MonitoringAgent.Startup.exe*" OR ProcessName="*Microsoft.Identity.Health.Adfs.PshSurrogate.exe*" OR ProcessName="*Microsoft.Identity.Health.Common.Clients.ResourceMonitor.exe*"))) | eval sigma_attack_tags="attack.discovery attack.t1012" | eval sigma_title="Azure AD Health Monitoring Agent Registry Keys Access" | eval sigma_description="This detection uses Windows security events to detect suspicious access attempts to the registry key of Azure AD Health monitoring agent.
This detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object HKLM\SOFTWARE\Microsoft\Microsoft Online\Reporting\MonitoringAgent.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Azure AD Health Service Agents Registry Keys Access - builtin]
description = This detection uses Windows security events to detect suspicious access attempts to the registry key values and sub-keys of Azure AD Health service agents (e.g AD FS).
Information from AD Health service agents can be used to potentially abuse some of the features provided by those services in the cloud (e.g. Federation).
This detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object: HKLM:\SOFTWARE\Microsoft\ADHealthAgent.
Make sure you set the SACL to propagate to its sub-keys.

search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4656" OR EventCode="4663") ObjectType="Key" ObjectName="\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\ADHealthAgent") NOT ((ProcessName="*Microsoft.Identity.Health.Adfs.DiagnosticsAgent.exe*" OR ProcessName="*Microsoft.Identity.Health.Adfs.InsightsService.exe*" OR ProcessName="*Microsoft.Identity.Health.Adfs.MonitoringAgent.Startup.exe*" OR ProcessName="*Microsoft.Identity.Health.Adfs.PshSurrogate.exe*" OR ProcessName="*Microsoft.Identity.Health.Common.Clients.ResourceMonitor.exe*"))) | eval sigma_attack_tags="attack.discovery attack.t1012" | eval sigma_title="Azure AD Health Service Agents Registry Keys Access" | eval sigma_description="This detection uses Windows security events to detect suspicious access attempts to the registry key values and sub-keys of Azure AD Health service agents (e.g AD FS).
Information from AD Health service agents can be used to potentially abuse some of the features provided by those services in the cloud (e.g. Federation).
This detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object: HKLM:\SOFTWARE\Microsoft\ADHealthAgent.
Make sure you set the SACL to propagate to its sub-keys.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powerview Add-DomainObjectAcl DCSync AD Extend Right - builtin]
description = backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5136" AttributeLDAPDisplayName="ntSecurityDescriptor" (AttributeValue="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR AttributeValue="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR AttributeValue="*89e95b76-444d-4c62-991a-0facbeda640c*")) NOT (((ObjectType="dnsNode" OR ObjectType="dnsZoneScope")))) | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Powerview Add-DomainObjectAcl DCSync AD Extend Right" | eval sigma_description="backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer"
dispatch.earliest_time = -24h@h
alert.track = 0

[AD Privileged Users or Groups Reconnaissance - builtin]
description = Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4661" (ObjectType="SAM_USER" OR ObjectType="SAM_GROUP")) ((ObjectName="*-512" OR ObjectName="*-502" OR ObjectName="*-500" OR ObjectName="*-505" OR ObjectName="*-519" OR ObjectName="*-520" OR ObjectName="*-544" OR ObjectName="*-551" OR ObjectName="*-555") OR ObjectName="*admin*")) | eval sigma_attack_tags="attack.discovery attack.t1087.002" | eval sigma_title="AD Privileged Users or Groups Reconnaissance" | eval sigma_description="Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs"
dispatch.earliest_time = -24h@h
alert.track = 0

[AD Object WriteDAC Access - builtin]
description = Detects WRITE_DAC access to a domain object
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectServer="DS" AccessMask="0x40000" (ObjectType="19195a5b-6da0-11d0-afd3-00c04fd930c9" OR ObjectType="domainDNS")) | eval sigma_attack_tags="attack.defense_evasion attack.t1222.001" | eval sigma_title="AD Object WriteDAC Access" | eval sigma_description="Detects WRITE_DAC access to a domain object"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Replication from Non Machine Account - builtin]
description = Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" AccessMask="0x100" (Properties="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*89e95b76-444d-4c62-991a-0facbeda640c*")) NOT (SubjectUserName="*$" OR SubjectUserName="MSOL_*")) | table ComputerName,SubjectDomainName,SubjectUserName | eval sigma_attack_tags="attack.credential_access attack.t1003.006" | eval sigma_title="Active Directory Replication from Non Machine Account" | eval sigma_description="Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[AD User Enumeration - builtin]
description = Detects access to a domain user from a non-machine account
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" ObjectType="*bf967aba-0de6-11d0-a285-00aa003049e2*") NOT (SubjectUserName="*$" OR SubjectUserName="MSOL_*")) | eval sigma_attack_tags="attack.discovery attack.t1087.002" | eval sigma_title="AD User Enumeration" | eval sigma_description="Detects access to a domain user from a non-machine account"
dispatch.earliest_time = -24h@h
alert.track = 0

[ADCS Certificate Template Configuration Vulnerability with Risky EKU - builtin]
description = Detects certificate creation with template allowing risk permission subject and risky EKU
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4898" (TemplateContent="*1.3.6.1.5.5.7.3.2*" OR TemplateContent="*1.3.6.1.5.2.3.4*" OR TemplateContent="*1.3.6.1.4.1.311.20.2.2*" OR TemplateContent="*2.5.29.37.0*") TemplateContent="*CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT*") OR (EventCode="4899" (NewTemplateContent="*1.3.6.1.5.5.7.3.2*" OR NewTemplateContent="*1.3.6.1.5.2.3.4*" OR NewTemplateContent="*1.3.6.1.4.1.311.20.2.2*" OR NewTemplateContent="*2.5.29.37.0*") NewTemplateContent="*CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access" | eval sigma_title="ADCS Certificate Template Configuration Vulnerability with Risky EKU" | eval sigma_description="Detects certificate creation with template allowing risk permission subject and risky EKU"
dispatch.earliest_time = -24h@h
alert.track = 0

[ADCS Certificate Template Configuration Vulnerability - builtin]
description = Detects certificate creation with template allowing risk permission subject
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4898" TemplateContent="*CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT*") OR (EventCode="4899" NewTemplateContent="*CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access" | eval sigma_title="ADCS Certificate Template Configuration Vulnerability" | eval sigma_description="Detects certificate creation with template allowing risk permission subject"
dispatch.earliest_time = -24h@h
alert.track = 0

[Admin User Remote Logon - builtin]
description = Detect remote login by Administrator user (depending on internal pattern).
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="10" AuthenticationPackageName="Negotiate" TargetUserName="Admin*") | eval sigma_attack_tags="attack.lateral_movement attack.t1078.001 attack.t1078.002 attack.t1078.003 car.2016-04-005" | eval sigma_title="Admin User Remote Logon" | eval sigma_description="Detect remote login by Administrator user (depending on internal pattern)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Access to ADMIN$ Share - builtin]
description = Detects access to $ADMIN share
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5140" ShareName="Admin$") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Access to ADMIN$ Share" | eval sigma_description="Detects access to $ADMIN share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enabled User Right in AD to Control User Objects - builtin]
description = Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4704" PrivilegeList="*SeEnableDelegationPrivilege*") | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Enabled User Right in AD to Control User Objects" | eval sigma_description="Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects."
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory User Backdoors - builtin]
description = Detects scenarios where one can control another users or computers account without having to use their credentials.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4738" NOT (AllowedToDelegateTo="-" OR NOT AllowedToDelegateTo="*")) OR ((EventCode="5136" AttributeLDAPDisplayName="msDS-AllowedToDelegateTo") OR (EventCode="5136" ObjectClass="user" AttributeLDAPDisplayName="servicePrincipalName") OR (EventCode="5136" AttributeLDAPDisplayName="msDS-AllowedToActOnBehalfOfOtherIdentity")))) | eval sigma_attack_tags="attack.t1098 attack.persistence" | eval sigma_title="Active Directory User Backdoors" | eval sigma_description="Detects scenarios where one can control another users or computers account without having to use their credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Weak Encryption Enabled and Kerberoast - builtin]
description = Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4738" ((((NewUacValue="*8???" OR NewUacValue="*9???" OR NewUacValue="*A???" OR NewUacValue="*B???" OR NewUacValue="*C???" OR NewUacValue="*D???" OR NewUacValue="*E???" OR NewUacValue="*F???") NOT ((OldUacValue="*8???" OR OldUacValue="*9???" OR OldUacValue="*A???" OR OldUacValue="*B???" OR OldUacValue="*C???" OR OldUacValue="*D???" OR OldUacValue="*E???" OR OldUacValue="*F???"))) OR ((NewUacValue="*1????" OR NewUacValue="*3????" OR NewUacValue="*5????" OR NewUacValue="*7????" OR NewUacValue="*9????" OR NewUacValue="*B????" OR NewUacValue="*D????" OR NewUacValue="*F????") NOT ((OldUacValue="*1????" OR OldUacValue="*3????" OR OldUacValue="*5????" OR OldUacValue="*7????" OR OldUacValue="*9????" OR OldUacValue="*B????" OR OldUacValue="*D????" OR OldUacValue="*F????")))) OR ((NewUacValue="*8??" OR NewUacValue="*9??" OR NewUacValue="*A??" OR NewUacValue="*B??" OR NewUacValue="*C??" OR NewUacValue="*D??" OR NewUacValue="*E??" OR NewUacValue="*F??") NOT ((OldUacValue="*8??" OR OldUacValue="*9??" OR OldUacValue="*A??" OR OldUacValue="*B??" OR OldUacValue="*C??" OR OldUacValue="*D??" OR OldUacValue="*E??" OR OldUacValue="*F??"))))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Weak Encryption Enabled and Kerberoast" | eval sigma_description="Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking."
dispatch.earliest_time = -24h@h
alert.track = 0

[Hacktool Ruler - builtin]
description = This events that are generated when using the hacktool Ruler by Sensepost
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4776" Workstation="RULER") OR ((EventCode="4624" OR EventCode="4625") WorkstationName="RULER"))) | eval sigma_attack_tags="attack.discovery attack.execution attack.t1087 attack.t1114 attack.t1059 attack.t1550.002" | eval sigma_title="Hacktool Ruler" | eval sigma_description="This events that are generated when using the hacktool Ruler by Sensepost"
dispatch.earliest_time = -24h@h
alert.track = 0

[Chafer Activity - builtin]
description = Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4698" (TaskName="SC Scheduled Scan" OR TaskName="UpdatMachine")) | eval sigma_attack_tags="attack.persistence attack.g0049 attack.t1053.005 attack.s0111 attack.t1543.003 attack.defense_evasion attack.t1112 attack.command_and_control attack.t1071.004" | eval sigma_title="Chafer Activity" | eval sigma_description="Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[Defrag Deactivation - builtin]
description = Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4701" TaskName="\\Microsoft\\Windows\\Defrag\\ScheduledDefrag") | eval sigma_attack_tags="attack.persistence attack.t1053 attack.s0111" | eval sigma_title="Defrag Deactivation" | eval sigma_description="Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operation Wocao Activity - builtin]
description = Detects activity mentioned in Operation Wocao report
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4799" TargetUserName="Administr*" CallerProcessName="*\\checkadmin.exe") | eval sigma_attack_tags="attack.discovery attack.t1012 attack.defense_evasion attack.t1036.004 attack.t1027 attack.execution attack.t1053.005 attack.t1059.001" | eval sigma_title="Operation Wocao Activity" | eval sigma_description="Detects activity mentioned in Operation Wocao report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Task Creation via ATSVC Named Pipe - builtin]
description = Detects remote task creation via at.exe or API interacting with ATSVC namedpipe
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\IPC$" RelativeTargetName="atsvc" Accesses="*WriteData*") | eval sigma_attack_tags="attack.lateral_movement attack.persistence car.2013-05-004 car.2015-04-001 attack.t1053.002" | eval sigma_title="Remote Task Creation via ATSVC Named Pipe" | eval sigma_description="Detects remote task creation via at.exe or API interacting with ATSVC namedpipe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Processes Accessing the Microphone and Webcam - builtin]
description = Potential adversaries accessing the microphone and webcam in an endpoint.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4657" OR EventCode="4656" OR EventCode="4663") (ObjectName="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\microphone\\NonPackaged*" OR ObjectName="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\webcam\\NonPackaged*")) | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Processes Accessing the Microphone and Webcam" | eval sigma_description="Potential adversaries accessing the microphone and webcam in an endpoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[DCERPC SMB Spoolss Named Pipe - builtin]
description = Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\IPC$" RelativeTargetName="spoolss") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="DCERPC SMB Spoolss Named Pipe" | eval sigma_description="Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled."
dispatch.earliest_time = -24h@h
alert.track = 0

[T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack - builtin]
description = Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network for a DCOM InternetExplorer DLL Hijack scenario.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\Internet Explorer\\iertutil.dll") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1021.003" | eval sigma_title="T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network for a DCOM InternetExplorer DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz DC Sync - builtin]
description = Detects Mimikatz DC sync security events
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" (Properties="*Replicating Directory Changes All*" OR Properties="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*9923a32a-3607-11d2-b9be-0000f87a36b2*" OR Properties="*89e95b76-444d-4c62-991a-0facbeda640c*") AccessMask="0x100") NOT ((SubjectDomainName="Window Manager") OR ((SubjectUserName="NT AUT*" OR SubjectUserName="MSOL_*")) OR (SubjectUserName="*$"))) | eval sigma_attack_tags="attack.credential_access attack.s0002 attack.t1003.006" | eval sigma_title="Mimikatz DC Sync" | eval sigma_description="Detects Mimikatz DC sync security events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Exclusion Set - builtin]
description = Detects scenarios where an windows defender exclusion was added in registry where an entity would want to bypass antivirus scanning from windows defender
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4657" OR EventCode="4656" OR EventCode="4660" OR EventCode="4663") ObjectName="*\\Microsoft\\Windows Defender\\Exclusions\\*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Windows Defender Exclusion Set" | eval sigma_description="Detects scenarios where an windows defender exclusion was added in registry where an entity would want to bypass antivirus scanning from windows defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabling Windows Event Auditing - builtin]
description = Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off 'Local Group Policy Object Processing' via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as 'gpedit.msc'. Please note, that disabling 'Local Group Policy Object Processing' may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4719" (AuditPolicyChanges="*%%8448*" OR AuditPolicyChanges="*%%8450*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Disabling Windows Event Auditing" | eval sigma_description="Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off 'Local Group Policy Object Processing' via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as 'gpedit.msc'. Please note, that disabling 'Local Group Policy Object Processing' may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways."
dispatch.earliest_time = -24h@h
alert.track = 0

[DPAPI Domain Backup Key Extraction - builtin]
description = Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectType="SecretObject" AccessMask="0x2" ObjectName="*BCKUPKEY*") | eval sigma_attack_tags="attack.credential_access attack.t1003.004" | eval sigma_title="DPAPI Domain Backup Key Extraction" | eval sigma_description="Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers"
dispatch.earliest_time = -24h@h
alert.track = 0

[DPAPI Domain Master Key Backup Attempt - builtin]
description = Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4692") | table ComputerName,SubjectDomainName,SubjectUserName | eval sigma_attack_tags="attack.credential_access attack.t1003.004" | eval sigma_title="DPAPI Domain Master Key Backup Attempt" | eval sigma_description="Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Registry Modification - builtin]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4657" ObjectName="*\\SOFTWARE\\Microsoft\\.NETFramework" ObjectValueName="ETWEnabled" NewValue="0") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="COMPlus_ETWEnabled Registry Modification" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Event Log Cleared - builtin]
description = Checks for event id 1102 which indicates the security event log was cleared.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="1102") | table SubjectLogonId,SubjectUserName,SubjectUserSid,SubjectDomainName | eval sigma_attack_tags="attack.t1070.001" | eval sigma_title="Security Event Log Cleared" | eval sigma_description="Checks for event id 1102 which indicates the security event log was cleared."
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-1675 Print Spooler Exploitation IPC Access - builtin]
description = Detects remote printer driver load from Detailed File Share in Security logs that are a sign of successful exploitation attempts against print spooler vulnerability CVE-2021-1675 and CVE-2021-34527
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\IPC$" RelativeTargetName="spoolss" AccessMask="0x3" ObjectType="File") | eval sigma_attack_tags="attack.execution attack.t1569 cve.2021.1675 cve.2021.34527" | eval sigma_title="CVE-2021-1675 Print Spooler Exploitation IPC Access" | eval sigma_description="Detects remote printer driver load from Detailed File Share in Security logs that are a sign of successful exploitation attempts against print spooler vulnerability CVE-2021-1675 and CVE-2021-34527"
dispatch.earliest_time = -24h@h
alert.track = 0

[External Disk Drive Or USB Storage Device - builtin]
description = Detects external diskdrives or plugged in USB devices , EventID 6416 on windows 10 or later
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="6416" ClassName="DiskDrive") OR DeviceDescription="USB Mass Storage Device")) | eval sigma_attack_tags="attack.t1091 attack.t1200 attack.lateral_movement attack.initial_access" | eval sigma_title="External Disk Drive Or USB Storage Device" | eval sigma_description="Detects external diskdrives or plugged in USB devices , EventID 6416 on windows 10 or later"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumeration via the Global Catalog - builtin]
description = Detects enumeration of the global catalog (that can be performed using BloodHound or others AD reconnaissance tools). Adjust Threshold according to domain width.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5156" (DestinationPort="3268" OR DestinationPort="3269")) | eventstats count as val by SourceAddress| search val > 2000 | eval sigma_attack_tags="attack.discovery attack.t1087.002" | eval sigma_title="Enumeration via the Global Catalog" | eval sigma_description="Detects enumeration of the global catalog (that can be performed using BloodHound or others AD reconnaissance tools). Adjust Threshold according to domain width."
dispatch.earliest_time = -24h@h
alert.track = 0

[Persistence and Execution at Scale via GPO Scheduled Task - builtin]
description = Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\SYSVOL" RelativeTargetName="*ScheduledTasks.xml" (Accesses="*WriteData*" OR Accesses="*%%4417*")) | eval sigma_attack_tags="attack.persistence attack.lateral_movement attack.t1053.005" | eval sigma_title="Persistence and Execution at Scale via GPO Scheduled Task" | eval sigma_description="Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hidden Local User Creation - builtin]
description = Detects the creation of a local hidden user account which should not happen for event ID 4720.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720" TargetUserName="*$") | table EventCode,AccountName | eval sigma_attack_tags="attack.persistence attack.t1136.001" | eval sigma_title="Hidden Local User Creation" | eval sigma_description="Detects the creation of a local hidden user account which should not happen for event ID 4720."
dispatch.earliest_time = -24h@h
alert.track = 0

[HybridConnectionManager Service Installation - builtin]
description = Rule to detect the Hybrid Connection Manager service installation.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceName="HybridConnectionManager" ServiceFileName="*HybridConnectionManager*") | eval sigma_attack_tags="attack.persistence attack.t1554" | eval sigma_title="HybridConnectionManager Service Installation" | eval sigma_description="Rule to detect the Hybrid Connection Manager service installation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket PsExec Execution - builtin]
description = Detects execution of Impacket's psexec.py.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\IPC$" (RelativeTargetName="*RemCom_stdint*" OR RelativeTargetName="*RemCom_stdoutt*" OR RelativeTargetName="*RemCom_stderrt*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Impacket PsExec Execution" | eval sigma_description="Detects execution of Impacket's psexec.py."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Impacket SecretDump Remote Activity - builtin]
description = Detect AD credential dumping using impacket secretdump HKTL
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\ADMIN$" RelativeTargetName="*SYSTEM32\\*" RelativeTargetName="*.tmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.004 attack.t1003.003" | eval sigma_title="Possible Impacket SecretDump Remote Activity" | eval sigma_description="Detect AD credential dumping using impacket secretdump HKTL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation CLIP+ Launcher - builtin]
description = Detects Obfuscated use of Clip.exe to execute PowerShell
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*cmd*" ServiceFileName="*&&*" ServiceFileName="*clipboard]::*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation CLIP+ Launcher" | eval sigma_description="Detects Obfuscated use of Clip.exe to execute PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation STDIN+ Launcher - builtin]
description = Detects Obfuscated use of stdin to execute PowerShell
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*cmd*" ServiceFileName="*powershell*" (ServiceFileName="*${input}*" OR ServiceFileName="*noexit*") (ServiceFileName="* /c *" OR ServiceFileName="* /r *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation STDIN+ Launcher" | eval sigma_description="Detects Obfuscated use of stdin to execute PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation COMPRESS OBFUSCATION - builtin]
description = Detects Obfuscated Powershell via COMPRESS OBFUSCATION
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*new-object*" ServiceFileName="*text.encoding]::ascii*" ServiceFileName="*readtoend*" (ServiceFileName="*system.io.compression.deflatestream*" OR ServiceFileName="*system.io.streamreader*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation COMPRESS OBFUSCATION" | eval sigma_description="Detects Obfuscated Powershell via COMPRESS OBFUSCATION"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation RUNDLL LAUNCHER - builtin]
description = Detects Obfuscated Powershell via RUNDLL LAUNCHER
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*rundll32.exe*" ServiceFileName="*shell32.dll*" ServiceFileName="*shellexec_rundll*" ServiceFileName="*powershell*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation RUNDLL LAUNCHER" | eval sigma_description="Detects Obfuscated Powershell via RUNDLL LAUNCHER"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Stdin - builtin]
description = Detects Obfuscated Powershell via Stdin in Scripts
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*set*" ServiceFileName="*&&*" (ServiceFileName="*environment*" OR ServiceFileName="*invoke*" OR ServiceFileName="*${input)*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Stdin" | eval sigma_description="Detects Obfuscated Powershell via Stdin in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Clip - builtin]
description = Detects Obfuscated Powershell via use Clip.exe in Scripts
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*(Clipboard|i*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Clip" | eval sigma_description="Detects Obfuscated Powershell via use Clip.exe in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use MSHTA - builtin]
description = Detects Obfuscated Powershell via use MSHTA in Scripts
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*mshta*" ServiceFileName="*vbscript:createobject*" ServiceFileName="*.run*" ServiceFileName="*window.close*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use MSHTA" | eval sigma_description="Detects Obfuscated Powershell via use MSHTA in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Rundll32 - builtin]
description = Detects Obfuscated Powershell via use Rundll32 in Scripts
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*&&*" ServiceFileName="*rundll32*" ServiceFileName="*shell32.dll*" ServiceFileName="*shellexec_rundll*" (ServiceFileName="*value*" OR ServiceFileName="*invoke*" OR ServiceFileName="*comspec*" OR ServiceFileName="*iex*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Rundll32" | eval sigma_description="Detects Obfuscated Powershell via use Rundll32 in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[ISO Image Mount - builtin]
description = Detects the mount of ISO images on an endpoint
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4663" ObjectServer="Security" ObjectType="File" ObjectName="\\Device\\CdRom*") NOT (ObjectName="\\Device\\CdRom0\\setup.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566.001" | eval sigma_title="ISO Image Mount" | eval sigma_description="Detects the mount of ISO images on an endpoint"
dispatch.earliest_time = -24h@h
alert.track = 0

[First Time Seen Remote Named Pipe - builtin]
description = This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="\\\*\\IPC$") NOT ((RelativeTargetName="atsvc" OR RelativeTargetName="samr" OR RelativeTargetName="lsarpc" OR RelativeTargetName="lsass" OR RelativeTargetName="winreg" OR RelativeTargetName="netlogon" OR RelativeTargetName="srvsvc" OR RelativeTargetName="protected_storage" OR RelativeTargetName="wkssvc" OR RelativeTargetName="browser" OR RelativeTargetName="netdfs" OR RelativeTargetName="svcctl" OR RelativeTargetName="spoolss" OR RelativeTargetName="ntsvcs" OR RelativeTargetName="LSM_API_service" OR RelativeTargetName="HydraLsPipe" OR RelativeTargetName="TermSrv_API_service" OR RelativeTargetName="MsFteWds" OR RelativeTargetName="sql\\query"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="First Time Seen Remote Named Pipe" | eval sigma_description="This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Correct Execution of Nltest.exe - builtin]
description = The attacker might use LOLBAS nltest.exe for discovery of domain controllers, domain trusts, parent domain and the current user permissions.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4689" ProcessName="*nltest.exe" Status="0x0") | table SubjectUserName,SubjectDomainName | eval sigma_attack_tags="attack.discovery attack.t1482 attack.t1018 attack.t1016" | eval sigma_title="Correct Execution of Nltest.exe" | eval sigma_description="The attacker might use LOLBAS nltest.exe for discovery of domain controllers, domain trusts, parent domain and the current user permissions."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access from Non System Account - builtin]
description = Detects potential mimikatz-like tools accessing LSASS from non system account
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4663" OR EventCode="4656") (AccessMask="0x40" OR AccessMask="0x1400" OR AccessMask="0x100000" OR AccessMask="0x1410" OR AccessMask="0x1010" OR AccessMask="0x1438" OR AccessMask="0x143a" OR AccessMask="0x1418" OR AccessMask="0x1f0fff" OR AccessMask="0x1f1fff" OR AccessMask="0x1f2fff" OR AccessMask="0x1f3fff" OR AccessMask="40" OR AccessMask="1400" OR AccessMask="1000" OR AccessMask="100000" OR AccessMask="1410" OR AccessMask="1010" OR AccessMask="1438" OR AccessMask="143a" OR AccessMask="1418" OR AccessMask="1f0fff" OR AccessMask="1f1fff" OR AccessMask="1f2fff" OR AccessMask="1f3fff") ObjectType="Process" ObjectName="*\\lsass.exe") NOT ((SubjectUserName="*$") OR (ProcessName="C:\\Program Files*"))) | table ComputerName,ObjectName,SubjectUserName,ProcessName | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="LSASS Access from Non System Account" | eval sigma_description="Detects potential mimikatz-like tools accessing LSASS from non system account"
dispatch.earliest_time = -24h@h
alert.track = 0

[WCE wceaux.dll Access - builtin]
description = Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4658" OR EventCode="4660" OR EventCode="4663") ObjectName="*\\wceaux.dll") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="WCE wceaux.dll Access" | eval sigma_description="Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host"
dispatch.earliest_time = -24h@h
alert.track = 0

[NetNTLM Downgrade Attack - builtin]
description = Detects NetNTLM downgrade attack
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4657" ObjectName="*\\REGISTRY\\MACHINE\\SYSTEM*" ObjectName="*ControlSet*" ObjectName="*\\Control\\Lsa*" (ObjectValueName="LmCompatibilityLevel" OR ObjectValueName="NtlmMinClientSec" OR ObjectValueName="RestrictSendingNTLMTraffic")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001 attack.t1112" | eval sigma_title="NetNTLM Downgrade Attack" | eval sigma_description="Detects NetNTLM downgrade attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Access Suspicious desktop.ini Action - builtin]
description = Detects unusual processes accessing desktop.ini remotely over network share, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ObjectType="File" RelativeTargetName="*\\desktop.ini" (AccessList="*WriteData*" OR AccessList="*DELETE*" OR AccessList="*WriteDAC*" OR AccessList="*AppendData*" OR AccessList="*AddSubdirectory*")) | eval sigma_attack_tags="attack.persistence attack.t1547.009" | eval sigma_title="Windows Network Access Suspicious desktop.ini Action" | eval sigma_description="Detects unusual processes accessing desktop.ini remotely over network share, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk."
dispatch.earliest_time = -24h@h
alert.track = 0

[New or Renamed User Account with '$' in Attribute 'SamAccountName' - builtin]
description = Detects possible bypass EDR and SIEM via abnormal user account name.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4720" OR EventCode="4781") SamAccountName="*$*") | table EventCode,SamAccountName,SubjectUserName | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="New or Renamed User Account with '$' in Attribute 'SamAccountName'" | eval sigma_description="Detects possible bypass EDR and SIEM via abnormal user account name."
dispatch.earliest_time = -24h@h
alert.track = 0

[Denied Access To Remote Desktop - builtin]
description = This event is generated when an authenticated user who is not allowed to log on remotely attempts to connect to this computer through Remote Desktop. Often, this event can be generated by attackers when searching for available windows servers in the network.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4825") | table EventCode,AccountName,ClientAddress | eval sigma_attack_tags="attack.lateral_movement attack.t1021.001" | eval sigma_title="Denied Access To Remote Desktop" | eval sigma_description="This event is generated when an authenticated user who is not allowed to log on remotely attempts to connect to this computer through Remote Desktop. Often, this event can be generated by attackers when searching for available windows servers in the network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Successful Overpass the Hash Attempt - builtin]
description = Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="9" LogonProcessName="seclogo" AuthenticationPackageName="Negotiate") | eval sigma_attack_tags="attack.lateral_movement attack.s0002 attack.t1550.002" | eval sigma_title="Successful Overpass the Hash Attempt" | eval sigma_description="Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module."
dispatch.earliest_time = -24h@h
alert.track = 0

[Pass the Hash Activity 2 - builtin]
description = Detects the attack technique pass the hash which is used to move laterally inside the network
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4624" SubjectUserSid="S-1-0-0" LogonType="3" LogonProcessName="NtLmSsp" KeyLength="0") OR (EventCode="4624" LogonType="9" LogonProcessName="seclogo")) NOT (TargetUserName="ANONYMOUS LOGON")) | eval sigma_attack_tags="attack.lateral_movement attack.t1550.002" | eval sigma_title="Pass the Hash Activity 2" | eval sigma_description="Detects the attack technique pass the hash which is used to move laterally inside the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pass the Hash Activity - builtin]
description = Detects the attack technique pass the hash which is used to move laterally inside the network
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4624" OR EventCode="4625") LogonType="3" LogonProcessName="NtLmSsp" WorkstationName="%Workstations%" ComputerName="%Workstations%") NOT (TargetUserName="ANONYMOUS LOGON")) | eval sigma_attack_tags="attack.lateral_movement car.2016-04-004 attack.t1550.002" | eval sigma_title="Pass the Hash Activity" | eval sigma_description="Detects the attack technique pass the hash which is used to move laterally inside the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible PetitPotam Coerce Authentication Attempt - builtin]
description = Detect PetitPotam coerced authentication activity.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*" ShareName="*\\IPC$" RelativeTargetName="lsarpc" SubjectUserName="ANONYMOUS LOGON") | eval sigma_attack_tags="attack.credential_access attack.t1187" | eval sigma_title="Possible PetitPotam Coerce Authentication Attempt" | eval sigma_description="Detect PetitPotam coerced authentication activity."
dispatch.earliest_time = -24h@h
alert.track = 0

[PetitPotam Suspicious Kerberos TGT Request - builtin]
description = Detect suspicious Kerberos TGT requests. Once an attacer obtains a computer certificate by abusing Active Directory Certificate Services in combination with PetitPotam, the next step would be to leverage the certificate for malicious purposes. One way of doing this is to request a Kerberos Ticket Granting Ticket using a tool like Rubeus. This request will generate a 4768 event with some unusual fields depending on the environment. This analytic will require tuning, we recommend filtering Account_Name to the Domain Controller computer accounts.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4768" TargetUserName="*$" CertThumbprint="*") NOT ((IpAddress="::1") OR (CertThumbprint=""))) | eval sigma_attack_tags="attack.credential_access attack.t1187" | eval sigma_title="PetitPotam Suspicious Kerberos TGT Request" | eval sigma_description="Detect suspicious Kerberos TGT requests. Once an attacer obtains a computer certificate by abusing Active Directory Certificate Services in combination with PetitPotam, the next step would be to leverage the certificate for malicious purposes. One way of doing this is to request a Kerberos Ticket Granting Ticket using a tool like Rubeus. This request will generate a 4768 event with some unusual fields depending on the environment. This analytic will require tuning, we recommend filtering Account_Name to the Domain Controller computer accounts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible DC Shadow - builtin]
description = Detects DCShadow via create new SPN
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4742" ServicePrincipalNames="*GC/*") OR (EventCode="5136" AttributeLDAPDisplayName="servicePrincipalName" AttributeValue="GC/*"))) | eval sigma_attack_tags="attack.credential_access attack.t1207" | eval sigma_title="Possible DC Shadow" | eval sigma_description="Detects DCShadow via create new SPN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Zerologon (CVE-2020-1472) Exploitation - builtin]
description = Detects Netlogon Elevation of Privilege Vulnerability aka Zerologon (CVE-2020-1472)
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4742" SubjectUserName="ANONYMOUS LOGON" TargetUserName="%DC-MACHINE-NAME%") NOT (PasswordLastSet="-")) | eval sigma_attack_tags="attack.t1068 attack.privilege_escalation" | eval sigma_title="Possible Zerologon (CVE-2020-1472) Exploitation" | eval sigma_description="Detects Netlogon Elevation of Privilege Vulnerability aka Zerologon (CVE-2020-1472)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Protected Storage Service Access - builtin]
description = Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="*IPC*" RelativeTargetName="protected_storage") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Protected Storage Service Access" | eval sigma_description="Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Schtasks Creations - builtin]
description = Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4698") | eventstats count as val by TaskName| search val < 5 | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.persistence car.2013-08-001 attack.t1053.005" | eval sigma_title="Rare Schtasks Creations" | eval sigma_description="Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scanner PoC for CVE-2019-0708 RDP RCE Vuln - builtin]
description = Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4625" TargetUserName="AAAAAAA") | eval sigma_attack_tags="attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Scanner PoC for CVE-2019-0708 RDP RCE Vuln" | eval sigma_description="Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Login from Localhost - builtin]
description = RDP login with localhost source address may be a tunnelled login
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="10" (IpAddress="::1" OR IpAddress="127.0.0.1")) | eval sigma_attack_tags="attack.lateral_movement car.2013-07-002 attack.t1021.001" | eval sigma_title="RDP Login from Localhost" | eval sigma_description="RDP login with localhost source address may be a tunnelled login"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP over Reverse SSH Tunnel WFP - builtin]
description = Detects svchost hosting RDP termsvcs communicating with the loopback address
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5156" ((SourcePort="3389" (DestAddress="127.*" OR DestAddress="::1")) OR (DestPort="3389" (SourceAddress="127.*" OR SourceAddress="::1")))) NOT (((Application="*\\thor.exe" OR Application="*\\thor64.exe")))) | eval sigma_attack_tags="attack.defense_evasion attack.command_and_control attack.lateral_movement attack.t1090.001 attack.t1090.002 attack.t1021.001 car.2013-07-002" | eval sigma_title="RDP over Reverse SSH Tunnel WFP" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating with the loopback address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Register new Logon Process by Rubeus - builtin]
description = Detects potential use of Rubeus via registered new trusted logon process
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4611" LogonProcessName="User32LogonProcesss") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1558.003" | eval sigma_title="Register new Logon Process by Rubeus" | eval sigma_description="Detects potential use of Rubeus via registered new trusted logon process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Sessions Network Connections (WinRM) - builtin]
description = Detects basic PowerShell Remoting (WinRM) by monitoring for network inbound connections to ports 5985 OR 5986
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5156" (DestPort="5985" OR DestPort="5986") LayerRTID="44") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Remote PowerShell Sessions Network Connections (WinRM)" | eval sigma_description="Detects basic PowerShell Remoting (WinRM) by monitoring for network inbound connections to ports 5985 OR 5986"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Registry Management Using Reg Utility - builtin]
description = Remote registry management using REG utility from non-admin workstation
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\winreg*") NOT (IpAddress="%Admins_Workstations%")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112 attack.discovery attack.t1012 attack.credential_access attack.t1552.002 attack.s0075" | eval sigma_title="Remote Registry Management Using Reg Utility" | eval sigma_description="Remote registry management using REG utility from non-admin workstation"
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Registry Hive Handle Request - builtin]
description = Detects handles requested to SAM registry hive
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ObjectType="Key" ObjectName="*\\SAM") | table ComputerName,SubjectDomainName,SubjectUserName,ProcessName,ObjectName | eval sigma_attack_tags="attack.discovery attack.t1012 attack.credential_access attack.t1552.002" | eval sigma_title="SAM Registry Hive Handle Request" | eval sigma_description="Detects handles requested to SAM registry hive"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Computer Account Name Change CVE-2021-42287 - builtin]
description = Detects the renaming of an existing computer account to a account name that doesn't contain a $ symbol as seen in attacks against CVE-2021-42287
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4781" OldTargetUserName="*$*") NOT (NewTargetUserName="*$*")) | table EventCode,SubjectUserName | eval sigma_attack_tags="" | eval sigma_title="Suspicious Computer Account Name Change CVE-2021-42287" | eval sigma_description="Detects the renaming of an existing computer account to a account name that doesn't contain a $ symbol as seen in attacks against CVE-2021-42287"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Deletion - builtin]
description = Detects scheduled task deletion events. Scheduled tasks are likely to be deleted if not used for persistence. Malicious Software often creates tasks directly under the root node e.g. \TASKNAME
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4699" NOT ((TaskName="\\Microsoft\\Windows\\RemovalTools\\MRT_ERROR_HB"))) | eval sigma_attack_tags="attack.execution attack.privilege_escalation car.2013-08-001 attack.t1053.005" | eval sigma_title="Scheduled Task Deletion" | eval sigma_description="Detects scheduled task deletion events. Scheduled tasks are likely to be deleted if not used for persistence. Malicious Software often creates tasks directly under the root node e.g. \TASKNAME"
dispatch.earliest_time = -24h@h
alert.track = 0

[SCM Database Handle Failure - builtin]
description = Detects non-system users failing to get a handle of the SCM database.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" ObjectType="SC_MANAGER OBJECT" ObjectName="ServicesActive") NOT (SubjectLogonId="0x3e4")) | eval sigma_attack_tags="attack.discovery attack.t1010" | eval sigma_title="SCM Database Handle Failure" | eval sigma_description="Detects non-system users failing to get a handle of the SCM database."
dispatch.earliest_time = -24h@h
alert.track = 0

[SCM Database Privileged Operation - builtin]
description = Detects non-system users performing privileged operation os the SCM database
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4674" ObjectType="SC_MANAGER OBJECT" ObjectName="servicesactive" PrivilegeList="SeTakeOwnershipPrivilege") NOT (SubjectLogonId="0x3e4" ProcessName="*:\\Windows\\System32\\services.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="SCM Database Privileged Operation" | eval sigma_description="Detects non-system users performing privileged operation os the SCM database"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote WMI ActiveScriptEventConsumers - builtin]
description = Detect potential adversaries leveraging WMI ActiveScriptEventConsumers remotely to move laterally in a network
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4624" LogonType="3" ProcessName="*scrcons.exe") NOT (TargetLogonId="0x3e7")) | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.persistence attack.t1546.003" | eval sigma_title="Remote WMI ActiveScriptEventConsumers" | eval sigma_description="Detect potential adversaries leveraging WMI ActiveScriptEventConsumers remotely to move laterally in a network"
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Service Installations - builtin]
description = Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ((ServiceFileName="*ADMIN$*" ServiceFileName="*.exe*") OR (ServiceFileName="*%COMSPEC%*" ServiceFileName="*start*" ServiceFileName="*powershell*") OR ServiceFileName="*powershell -nop -w hidden -encodedcommand*" OR (ServiceFileName="*SUVYIChOZXctT2JqZWN0IE5ldC5XZWJjbGllbnQpLkRvd25sb2FkU3RyaW5nKCdodHRwOi8vMTI3LjAuMC4xO*" OR ServiceFileName="*lFWCAoTmV3LU9iamVjdCBOZXQuV2ViY2xpZW50KS5Eb3dubG9hZFN0cmluZygnaHR0cDovLzEyNy4wLjAuMT*" OR ServiceFileName="*JRVggKE5ldy1PYmplY3QgTmV0LldlYmNsaWVudCkuRG93bmxvYWRTdHJpbmcoJ2h0dHA6Ly8xMjcuMC4wLjE6*"))) | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.lateral_movement attack.t1021.002 attack.t1543.003 attack.t1569.002" | eval sigma_title="CobaltStrike Service Installations" | eval sigma_description="Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement"
dispatch.earliest_time = -24h@h
alert.track = 0

[Credential Dumping Tools Service Execution - builtin]
description = Detects well-known credential dumping tools execution via service execution events
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" (ServiceFileName="*fgexec*" OR ServiceFileName="*dumpsvc*" OR ServiceFileName="*cachedump*" OR ServiceFileName="*mimidrv*" OR ServiceFileName="*gsecdump*" OR ServiceFileName="*servpw*" OR ServiceFileName="*pwdump*")) | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006 attack.t1569.002 attack.s0005" | eval sigma_title="Credential Dumping Tools Service Execution" | eval sigma_description="Detects well-known credential dumping tools execution via service execution events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Service Installations - builtin]
description = Detects known malicious service installs that only appear in cases of lateral movement, credential dumping, and other suspicious activities.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceName="javamtsup") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1003 car.2013-09-005 attack.t1543.003 attack.t1569.002" | eval sigma_title="Malicious Service Installations" | eval sigma_description="Detects known malicious service installs that only appear in cases of lateral movement, credential dumping, and other suspicious activities."
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Installation - builtin]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ((ServiceFileName="*cmd*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*%COMSPEC%*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*cmd.exe*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*rundll32*" ServiceFileName="*.dll,a*" ServiceFileName="*/p:*"))) | table ComputerName,SubjectDomainName,SubjectUserName,ServiceFileName | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Installation" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Scripts Installed as Services - builtin]
description = Detects powershell script installed as a Service
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" (ServiceFileName="*powershell*" OR ServiceFileName="*pwsh*")) | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="PowerShell Scripts Installed as Services" | eval sigma_description="Detects powershell script installed as a Service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Driver Installation - builtin]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ServiceFileName="*tap0901*") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Driver Installation" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - builtin]
description = Detects suspicious WMI event filter and command line event consumer based on WMI and Security Logs.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectType="WMI Namespace" ObjectName="*subscription*") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.003" | eval sigma_title="WMI Persistence" | eval sigma_description="Detects suspicious WMI event filter and command line event consumer based on WMI and Security Logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[SMB Create Remote File Admin Share - builtin]
description = Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$).
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="*C$" AccessMask="0x2") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="SMB Create Remote File Admin Share" | eval sigma_description="Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Addition of Domain Trusts - builtin]
description = Addition of domains is seldom and should be verified for legitimacy.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4706") | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Addition of Domain Trusts" | eval sigma_description="Addition of domains is seldom and should be verified for legitimacy."
dispatch.earliest_time = -24h@h
alert.track = 0

[Addition of SID History to Active Directory Object - builtin]
description = An attacker can use the SID history attribute to gain additional privileges.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4765" OR EventCode="4766") OR ((EventCode="4738" NOT ((SidHistory="-" OR SidHistory="%%1793"))) NOT (NOT SidHistory="*")))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1134.005" | eval sigma_title="Addition of SID History to Active Directory Object" | eval sigma_description="An attacker can use the SID history attribute to gain additional privileges."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Code Integrity Checks - builtin]
description = Code integrity failures may indicate tampered executables.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5038" OR EventCode="6281")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027.001" | eval sigma_title="Failed Code Integrity Checks" | eval sigma_description="Code integrity failures may indicate tampered executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Change on Directory Service Restore Mode (DSRM) Account - builtin]
description = The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4794") | eval sigma_attack_tags="attack.persistence attack.t1098" | eval sigma_title="Password Change on Directory Service Restore Mode (DSRM) Account" | eval sigma_description="The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Eventlog Cleared - builtin]
description = One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="517" OR EventCode="1102")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 car.2016-04-002" | eval sigma_title="Security Eventlog Cleared" | eval sigma_description="One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Account Tampering - Suspicious Failed Logon Reasons - builtin]
description = This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4625" OR EventCode="4776") (Status="0xC0000072" OR Status="0xC000006F" OR Status="0xC0000070" OR Status="0xC0000413" OR Status="0xC000018C" OR Status="0xC000015B")) NOT (SubjectUserSid="S-1-0-0")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.initial_access attack.t1078" | eval sigma_title="Account Tampering - Suspicious Failed Logon Reasons" | eval sigma_description="This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logon From Public IP - builtin]
description = A login from a public IP can indicate a misconfigured firewall or network boundary.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4625" NOT ((IpAddress="*-*") OR ((IpAddress="10.*" OR IpAddress="192.168.*" OR IpAddress="172.16.*" OR IpAddress="172.17.*" OR IpAddress="172.18.*" OR IpAddress="172.19.*" OR IpAddress="172.20.*" OR IpAddress="172.21.*" OR IpAddress="172.22.*" OR IpAddress="172.23.*" OR IpAddress="172.24.*" OR IpAddress="172.25.*" OR IpAddress="172.26.*" OR IpAddress="172.27.*" OR IpAddress="172.28.*" OR IpAddress="172.29.*" OR IpAddress="172.30.*" OR IpAddress="172.31.*" OR IpAddress="127.*" OR IpAddress="169.254.*")) OR (IpAddress="::1" OR (IpAddress="fe80::*" OR IpAddress="fc00::*")))) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.t1078 attack.t1190 attack.t1133" | eval sigma_title="Failed Logon From Public IP" | eval sigma_description="A login from a public IP can indicate a misconfigured firewall or network boundary."
dispatch.earliest_time = -24h@h
alert.track = 0

[Multiple Users Attempting To Authenticate Using Explicit Credentials - builtin]
description = Detects a source user failing to authenticate with multiple users using explicit credentials on a host.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4648") | eventstats dc(Account_Name) as val by ComputerName | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Multiple Users Attempting To Authenticate Using Explicit Credentials" | eval sigma_description="Detects a source user failing to authenticate with multiple users using explicit credentials on a host."
dispatch.earliest_time = -24h@h
alert.track = 0

[Multiple Users Failing to Authenticate from Single Process - builtin]
description = Detects failed logins with multiple accounts from a single process on the system.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4625" LogonType="2") NOT (ProcessName="-")) | eventstats dc(TargetUserName) as val by ProcessName | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Multiple Users Failing to Authenticate from Single Process" | eval sigma_description="Detects failed logins with multiple accounts from a single process on the system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Valid Users Failing to Authenticate From Single Source Using Kerberos - builtin]
description = Detects multiple failed logins with multiple valid domain accounts from a single source system using the Kerberos protocol.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4771" Status="0x18") NOT (TargetUserName="*$")) | eventstats dc(TargetUserName) as val by IpAddress | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Valid Users Failing to Authenticate From Single Source Using Kerberos" | eval sigma_description="Detects multiple failed logins with multiple valid domain accounts from a single source system using the Kerberos protocol."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled Users Failing To Authenticate From Source Using Kerberos - builtin]
description = Detects failed logins with multiple disabled domain accounts from a single source system using the Kerberos protocol.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4768" Status="0x12") NOT (TargetUserName="*$")) | eventstats dc(TargetUserName) as val by IpAddress | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Disabled Users Failing To Authenticate From Source Using Kerberos" | eval sigma_description="Detects failed logins with multiple disabled domain accounts from a single source system using the Kerberos protocol."
dispatch.earliest_time = -24h@h
alert.track = 0

[Invalid Users Failing To Authenticate From Source Using Kerberos - builtin]
description = Detects failed logins with multiple invalid domain accounts from a single source system using the Kerberos protocol.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4768" Status="0x6") NOT (TargetUserName="*$")) | eventstats dc(TargetUserName) as val by IpAddress | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Invalid Users Failing To Authenticate From Source Using Kerberos" | eval sigma_description="Detects failed logins with multiple invalid domain accounts from a single source system using the Kerberos protocol."
dispatch.earliest_time = -24h@h
alert.track = 0

[Valid Users Failing to Authenticate from Single Source Using NTLM - builtin]
description = Detects failed logins with multiple valid domain accounts from a single source system using the NTLM protocol.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4776" Status="*0xC000006A") NOT (TargetUserName="*$")) | eventstats dc(TargetUserName) as val by Workstation | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Valid Users Failing to Authenticate from Single Source Using NTLM" | eval sigma_description="Detects failed logins with multiple valid domain accounts from a single source system using the NTLM protocol."
dispatch.earliest_time = -24h@h
alert.track = 0

[Invalid Users Failing To Authenticate From Single Source Using NTLM - builtin]
description = Detects failed logins with multiple invalid domain accounts from a single source system using the NTLM protocol.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4776" Status="*0xC0000064") NOT (TargetUserName="*$")) | eventstats dc(TargetUserName) as val by Workstation | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Invalid Users Failing To Authenticate From Single Source Using NTLM" | eval sigma_description="Detects failed logins with multiple invalid domain accounts from a single source system using the NTLM protocol."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logins with Different Accounts from Single Source System - builtin]
description = Detects suspicious failed logins with different user accounts from a single source system
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="529" OR EventCode="4625") TargetUserName="*" WorkstationName="*") | eventstats dc(TargetUserName) as val by WorkstationName | search val > 3 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1078" | eval sigma_title="Failed Logins with Different Accounts from Single Source System" | eval sigma_description="Detects suspicious failed logins with different user accounts from a single source system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logins with Different Accounts from Single Source System - builtin]
description = Detects suspicious failed logins with different user accounts from a single source system
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4776" TargetUserName="*" Workstation="*") | eventstats dc(TargetUserName) as val by Workstation | search val > 3 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1078" | eval sigma_title="Failed Logins with Different Accounts from Single Source System" | eval sigma_description="Detects suspicious failed logins with different user accounts from a single source system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Multiple Users Remotely Failing To Authenticate From Single Source - builtin]
description = Detects a source system failing to authenticate against a remote host with multiple users.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4625" LogonType="3") NOT (IpAddress="-")) | eventstats dc(TargetUserName) as val by IpAddress | search val > 10 | eval sigma_attack_tags="attack.t1110.003 attack.initial_access attack.privilege_escalation" | eval sigma_title="Multiple Users Remotely Failing To Authenticate From Single Source" | eval sigma_description="Detects a source system failing to authenticate against a remote host with multiple users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive Logon to Server Systems - builtin]
description = Detects interactive console logons to Server Systems
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="528" OR EventCode="529" OR EventCode="4624" OR EventCode="4625") LogonType="2" (ComputerName="%ServerSystems%" OR ComputerName="%DomainControllers%")) NOT (LogonProcessName="Advapi" ComputerName="%Workstations%")) | eval sigma_attack_tags="attack.lateral_movement attack.t1078" | eval sigma_title="Interactive Logon to Server Systems" | eval sigma_description="Detects interactive console logons to Server Systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Kerberos Manipulation - builtin]
description = This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="675" OR EventCode="4768" OR EventCode="4769" OR EventCode="4771") (FailureCode="0x9" OR FailureCode="0xA" OR FailureCode="0xB" OR FailureCode="0xF" OR FailureCode="0x10" OR FailureCode="0x11" OR FailureCode="0x13" OR FailureCode="0x14" OR FailureCode="0x1A" OR FailureCode="0x1F" OR FailureCode="0x21" OR FailureCode="0x22" OR FailureCode="0x23" OR FailureCode="0x24" OR FailureCode="0x26" OR FailureCode="0x27" OR FailureCode="0x28" OR FailureCode="0x29" OR FailureCode="0x2C" OR FailureCode="0x2D" OR FailureCode="0x2E" OR FailureCode="0x2F" OR FailureCode="0x31" OR FailureCode="0x32" OR FailureCode="0x3E" OR FailureCode="0x3F" OR FailureCode="0x40" OR FailureCode="0x41" OR FailureCode="0x43" OR FailureCode="0x44")) | eval sigma_attack_tags="attack.credential_access attack.t1212" | eval sigma_title="Kerberos Manipulation" | eval sigma_description="This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages"
dispatch.earliest_time = -24h@h
alert.track = 0

[KrbRelayUp Attack Pattern - builtin]
description = Detects logon events that have characteristics of events generated during an attack with KrbRelayUp and the like
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="3" AuthenticationPackageName="Kerberos" IpAddress="127.0.0.1" TargetUserSid="S-1-5-21-*" TargetUserSid="*-500") | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access" | eval sigma_title="KrbRelayUp Attack Pattern" | eval sigma_description="Detects logon events that have characteristics of events generated during an attack with KrbRelayUp and the like"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LDAP-Attributes Used - builtin]
description = Detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5136" AttributeValue="*" (AttributeLDAPDisplayName="primaryInternationalISDNNumber" OR AttributeLDAPDisplayName="otherFacsimileTelephoneNumber" OR AttributeLDAPDisplayName="primaryTelexNumber")) | eval sigma_attack_tags="attack.t1001.003 attack.command_and_control" | eval sigma_title="Suspicious LDAP-Attributes Used" | eval sigma_description="Detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Windows ANONYMOUS LOGON Local Account Created - builtin]
description = Detects the creation of suspicious accounts similar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720" SamAccountName="*ANONYMOUS*" SamAccountName="*LOGON*") | eval sigma_attack_tags="attack.persistence attack.t1136.001 attack.t1136.002" | eval sigma_title="Suspicious Windows ANONYMOUS LOGON Local Account Created" | eval sigma_description="Detects the creation of suspicious accounts similar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Remote Logon with Explicit Credentials - builtin]
description = Detects suspicious processes logging on with explicit credentials
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4648" (ProcessName="*\\cmd.exe" OR ProcessName="*\\powershell.exe" OR ProcessName="*\\pwsh.exe" OR ProcessName="*\\winrs.exe" OR ProcessName="*\\wmic.exe" OR ProcessName="*\\net.exe" OR ProcessName="*\\net1.exe" OR ProcessName="*\\reg.exe")) NOT (TargetServerName="localhost")) | eval sigma_attack_tags="attack.t1078 attack.lateral_movement" | eval sigma_title="Suspicious Remote Logon with Explicit Credentials" | eval sigma_description="Detects suspicious processes logging on with explicit credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Generic Password Dumper Activity on LSASS - builtin]
description = Detects process handle on LSASS process with certain access mask
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4656" ObjectName="*\\lsass.exe" (AccessMask="*0x40*" OR AccessMask="*0x1400*" OR AccessMask="*0x100000*" OR AccessMask="*0x1410*" OR AccessMask="*0x1010*" OR AccessMask="*0x1438*" OR AccessMask="*0x143a*" OR AccessMask="*0x1418*" OR AccessMask="*0x1f0fff*" OR AccessMask="*0x1f1fff*" OR AccessMask="*0x1f2fff*" OR AccessMask="*0x1f3fff*")) OR (EventCode="4663" ObjectName="*\\lsass.exe" (AccessList="*4484*" OR AccessList="*4416*"))) NOT (((ProcessName="*\\wmiprvse.exe" OR ProcessName="*\\taskmgr.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\lsm.exe" OR ProcessName="*\\csrss.exe" OR ProcessName="*\\wininit.exe" OR ProcessName="*\\vmtoolsd.exe" OR ProcessName="*\\minionhost.exe" OR ProcessName="*\\VsTskMgr.exe" OR ProcessName="*\\thor.exe" OR ProcessName="*\\thor64.exe" OR ProcessName="*\\MicrosoftEdgeUpdate.exe" OR ProcessName="*\\GamingServices.exe" OR ProcessName="*\\svchost.exe" OR ProcessName="*\\MsMpEng.exe" OR ProcessName="*\\MRT.exe" OR ProcessName="*RtkAudUService64") (ProcessName="C:\\Windows\\System32\\*" OR ProcessName="C:\\Windows\\SysWow64\\*" OR ProcessName="C:\\Windows\\SysNative\\*" OR ProcessName="C:\\Program Files\\*" OR ProcessName="C:\\Windows\\Temp\\asgard2-agent\\*" OR ProcessName="C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*")) OR (ProcessName="C:\\Program Files*") OR (ProcessName="C:\\Windows\\CCM\\CcmExec.exe"))) | table ComputerName,SubjectDomainName,SubjectUserName,ProcessName,ProcessID | eval sigma_attack_tags="attack.credential_access car.2019-04-004 attack.t1003.001" | eval sigma_title="Generic Password Dumper Activity on LSASS" | eval sigma_description="Detects process handle on LSASS process with certain access mask"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Dumper Activity on LSASS - builtin]
description = Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ProcessName="*\\lsass.exe" AccessMask="0x705" ObjectType="SAM_DOMAIN") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Password Dumper Activity on LSASS" | eval sigma_description="Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Multiple File Rename Or Delete Occurred - builtin]
description = Detects multiple file rename or delete events occurrence within a specified period of time by a same user (these events may signalize about ransomware activity).
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4663" ObjectType="File" AccessList="%%1537" Keywords="0x8020000000000000") | eventstats count as val by SubjectLogonId| search val > 10 | eval sigma_attack_tags="attack.impact attack.t1486" | eval sigma_title="Suspicious Multiple File Rename Or Delete Occurred" | eval sigma_description="Detects multiple file rename or delete events occurrence within a specified period of time by a same user (these events may signalize about ransomware activity)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity - builtin]
description = Detects activity as 'net user administrator /domain' and 'net group domain admins /domain'
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4661" (ObjectType="SAM_USER" OR ObjectType="SAM_GROUP") ObjectName="S-1-5-21-*" AccessMask="0x2d" (ObjectName="*-500" OR ObjectName="*-512")) | eval sigma_attack_tags="attack.discovery attack.t1087.002 attack.t1069.002 attack.s0039" | eval sigma_title="Reconnaissance Activity" | eval sigma_description="Detects activity as 'net user administrator /domain' and 'net group domain admins /domain'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Protected ZIP File Opened (Suspicious Filenames) - builtin]
description = Detects the extraction of password protected ZIP archives with suspicious file names. See the filename variable for more details on which file has been opened.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5379" TargetName="*Microsoft_Windows_Shell_ZipFolder:filename*" (TargetName="*invoice*" OR TargetName="*new order*" OR TargetName="*rechnung*" OR TargetName="*factura*" OR TargetName="*delivery*" OR TargetName="*purchase*" OR TargetName="*order*" OR TargetName="*payment*")) | eval sigma_attack_tags="" | eval sigma_title="Password Protected ZIP File Opened (Suspicious Filenames)" | eval sigma_description="Detects the extraction of password protected ZIP archives with suspicious file names. See the filename variable for more details on which file has been opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Protected ZIP File Opened (Email Attachment) - builtin]
description = Detects the extraction of password protected ZIP archives. See the filename variable for more details on which file has been opened.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5379" TargetName="*Microsoft_Windows_Shell_ZipFolder:filename*" TargetName="*\\Temporary Internet Files\\Content.Outlook*") | eval sigma_attack_tags="" | eval sigma_title="Password Protected ZIP File Opened (Email Attachment)" | eval sigma_description="Detects the extraction of password protected ZIP archives. See the filename variable for more details on which file has been opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Protected ZIP File Opened - builtin]
description = Detects the extraction of password protected ZIP archives. See the filename variable for more details on which file has been opened.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5379" TargetName="*Microsoft_Windows_Shell_ZipFolder:filename*") NOT (TargetName="*\\Temporary Internet Files\\Content.Outlook*")) | eval sigma_attack_tags="" | eval sigma_title="Password Protected ZIP File Opened" | eval sigma_description="Detects the extraction of password protected ZIP archives. See the filename variable for more details on which file has been opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound Kerberos Connection - builtin]
description = Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5156" DestinationPort="88") NOT ((New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\opera.exe" OR New_Process_Name="*\\chrome.exe" OR New_Process_Name="*\\firefox.exe"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1558.003" | eval sigma_title="Suspicious Outbound Kerberos Connection" | eval sigma_description="Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PsExec Execution - builtin]
description = detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="\\\*\\IPC$" (RelativeTargetName="*-stdin" OR RelativeTargetName="*-stdout" OR RelativeTargetName="*-stderr")) NOT (RelativeTargetName="PSEXESVC*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Suspicious PsExec Execution" | eval sigma_description="detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Access to Sensitive File Extensions - builtin]
description = Detects known sensitive file extensions accessed on a network share
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" (RelativeTargetName="*.pst" OR RelativeTargetName="*.ost" OR RelativeTargetName="*.msg" OR RelativeTargetName="*.nst" OR RelativeTargetName="*.oab" OR RelativeTargetName="*.edb" OR RelativeTargetName="*.nsf" OR RelativeTargetName="*.bak" OR RelativeTargetName="*.dmp" OR RelativeTargetName="*.kirbi" OR RelativeTargetName="*\\groups.xml" OR RelativeTargetName="*.rdp")) | table ComputerName,SubjectDomainName,SubjectUserName,RelativeTargetName | eval sigma_attack_tags="attack.collection attack.t1039" | eval sigma_title="Suspicious Access to Sensitive File Extensions" | eval sigma_description="Detects known sensitive file extensions accessed on a network share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Kerberos RC4 Ticket Encryption - builtin]
description = Detects service ticket requests using RC4 encryption type
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4769" TicketOptions="0x40810000" TicketEncryptionType="0x17") NOT (ServiceName="*$")) | eval sigma_attack_tags="attack.credential_access attack.t1558.003" | eval sigma_title="Suspicious Kerberos RC4 Ticket Encryption" | eval sigma_description="Detects service ticket requests using RC4 encryption type"
dispatch.earliest_time = -24h@h
alert.track = 0

[RottenPotato Like Attack Pattern - builtin]
description = Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="3" TargetUserName="ANONYMOUS_LOGON" WorkstationName="-" IpAddress="127.0.0.1") | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access attack.t1557.001" | eval sigma_title="RottenPotato Like Attack Pattern" | eval sigma_description="Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like"
dispatch.earliest_time = -24h@h
alert.track = 0

[Secure Deletion with SDelete - builtin]
description = Detects renaming of file while deletion with SDelete tool.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4663" OR EventCode="4658") (ObjectName="*.AAA" OR ObjectName="*.ZZZ")) | eval sigma_attack_tags="attack.impact attack.defense_evasion attack.t1070.004 attack.t1027.005 attack.t1485 attack.t1553.002 attack.s0195" | eval sigma_title="Secure Deletion with SDelete" | eval sigma_description="Detects renaming of file while deletion with SDelete tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Unauthorized System Time Modification - builtin]
description = Detect scenarios where a potentially unauthorized application or user is modifying the system time.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4616" NOT (((ProcessName="C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe" OR ProcessName="C:\\Windows\\System32\\VBoxService.exe" OR ProcessName="C:\\Windows\\System32\\oobe\\msoobe.exe")) OR (ProcessName="C:\\Windows\\System32\\svchost.exe" SubjectUserSid="S-1-5-19"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.006" | eval sigma_title="Unauthorized System Time Modification" | eval sigma_description="Detect scenarios where a potentially unauthorized application or user is modifying the system time."
dispatch.earliest_time = -24h@h
alert.track = 0

[Login with WMI - builtin]
description = Detection of logins performed with WMI
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" ProcessName="*\\WmiPrvSE.exe") | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Login with WMI" | eval sigma_description="Detection of logins performed with WMI"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Service Activity via SVCCTL Named Pipe - builtin]
description = Detects remote service activity via remote access to the svcctl named pipe
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\\*\\IPC$" RelativeTargetName="svcctl" Accesses="*WriteData*") | eval sigma_attack_tags="attack.lateral_movement attack.persistence attack.t1021.002" | eval sigma_title="Remote Service Activity via SVCCTL Named Pipe" | eval sigma_description="Detects remote service activity via remote access to the svcctl named pipe"
dispatch.earliest_time = -24h@h
alert.track = 0

[SysKey Registry Keys Access - builtin]
description = Detects handle requests and access operations to specific registry keys to calculate the SysKey
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4663") ObjectType="key" (ObjectName="*lsa\\JD" OR ObjectName="*lsa\\GBG" OR ObjectName="*lsa\\Skew1" OR ObjectName="*lsa\\Data")) | eval sigma_attack_tags="attack.discovery attack.t1012" | eval sigma_title="SysKey Registry Keys Access" | eval sigma_description="Detects handle requests and access operations to specific registry keys to calculate the SysKey"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Channel Reference Deletion - builtin]
description = Potential threat actor tampering with Sysmon manifest and eventually disabling it
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4657" (ObjectName="*WINEVT\\Publishers\\{5770385f-c22a-43e0-bf4c-06f5698ffbd9}*" OR ObjectName="*WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational*") ObjectValueName="Enabled" NewValue="0") OR (EventCode="4663" (ObjectName="*WINEVT\\Publishers\\{5770385f-c22a-43e0-bf4c-06f5698ffbd9}*" OR ObjectName="*WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational*") AccessMask="65536"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Sysmon Channel Reference Deletion" | eval sigma_description="Potential threat actor tampering with Sysmon manifest and eventually disabling it"
dispatch.earliest_time = -24h@h
alert.track = 0

[Transferring Files with Credential Data via Network Shares - builtin]
description = Transferring files with well-known filenames (sensitive files with credential data) using network shares
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" (RelativeTargetName="*\\mimidrv*" OR RelativeTargetName="*\\lsass*" OR RelativeTargetName="*\\windows\\minidump\\*" OR RelativeTargetName="*\\hiberfil*" OR RelativeTargetName="*\\sqldmpr*" OR RelativeTargetName="*\\sam*" OR RelativeTargetName="*\\ntds.dit*" OR RelativeTargetName="*\\security*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.001 attack.t1003.003" | eval sigma_title="Transferring Files with Credential Data via Network Shares" | eval sigma_description="Transferring files with well-known filenames (sensitive files with credential data) using network shares"
dispatch.earliest_time = -24h@h
alert.track = 0

[User Added to Local Administrators - builtin]
description = This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4732" (TargetUserName="Administr*" OR TargetSid="S-1-5-32-544")) NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1078 attack.persistence attack.t1098" | eval sigma_title="User Added to Local Administrators" | eval sigma_description="This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess' - builtin]
description = The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4673" Service="LsaRegisterLogonProcess()" Keywords="0x8010000000000000") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1558.003" | eval sigma_title="User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess'" | eval sigma_description="The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA."
dispatch.earliest_time = -24h@h
alert.track = 0

[Local User Creation - builtin]
description = Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720") | table EventCode,AccountName,AccountDomain | eval sigma_attack_tags="attack.persistence attack.t1136.001" | eval sigma_title="Local User Creation" | eval sigma_description="Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Loaded By User - builtin]
description = Detects the loading of drivers via 'SeLoadDriverPrivilege' required to load or unload a device driver. With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers. This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4673" PrivilegeList="SeLoadDriverPrivilege" Service="-") NOT ((ProcessName="*\\Windows\\System32\\Dism.exe" OR ProcessName="*\\Windows\\System32\\rundll32.exe" OR ProcessName="*\\Windows\\System32\\fltMC.exe" OR ProcessName="*\\Windows\\HelpPane.exe" OR ProcessName="*\\Windows\\System32\\mmc.exe" OR ProcessName="*\\Windows\\System32\\svchost.exe" OR ProcessName="*\\Windows\\System32\\wimserv.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\procmon64.exe" OR ProcessName="*\\procmon.exe" OR ProcessName="*\\Google\\Chrome\\Application\\chrome.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Suspicious Driver Loaded By User" | eval sigma_description="Detects the loading of drivers via 'SeLoadDriverPrivilege' required to load or unload a device driver. With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers. This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff."
dispatch.earliest_time = -24h@h
alert.track = 0

[T1047 Wmiprvse Wbemcomn DLL Hijack - builtin]
description = Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network for a WMI DLL Hijack scenario.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\wbem\\wbemcomn.dll") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.002" | eval sigma_title="T1047 Wmiprvse Wbemcomn DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network for a WMI DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - builtin]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=wineventlog* (EventCode="257" (QNAME="asyspy256.ddns.net" OR QNAME="hotkillmail9sddcc.ddns.net" OR QNAME="rosaf112.ddns.net" OR QNAME="cvdfhjh1231.myftp.biz" OR QNAME="sz2016rose.ddns.net" OR QNAME="dffwescwer4325.myftp.biz" OR QNAME="cvdfhjh1231.ddns.net")) | eval sigma_attack_tags="attack.credential_access attack.command_and_control attack.t1071" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Server Error Failed Loading the ServerLevelPluginDLL - builtin]
description = This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded
search = index=wineventlog* (EventCode="150" OR EventCode="770") | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="DNS Server Error Failed Loading the ServerLevelPluginDLL" | eval sigma_description="This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Download with BITS from Suspicious TLD - builtin]
description = Detects a suspicious download using the BITS client from a FQDN that is unusual. Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Bits-Client/Operational" EventCode="16403" (RemoteName="*raw.githubusercontent.com*" OR RemoteName="*gist.githubusercontent.com*" OR RemoteName="*pastebin.com*" OR RemoteName="*cdn.discordapp.com/attachments/*" OR RemoteName="*mediafire.com*" OR RemoteName="*mega.nz*" OR RemoteName="*ddns.net*" OR RemoteName="*.paste.ee*" OR RemoteName="*.hastebin.com*" OR RemoteName="*.ghostbin.co/*" OR RemoteName="*ufile.io*" OR RemoteName="*storage.googleapis.com*")) | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Download with BITS from Suspicious TLD" | eval sigma_description="Detects a suspicious download using the BITS client from a FQDN that is unusual. Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Download File Extension with BITS - builtin]
description = Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)

search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Bits-Client/Operational" (EventCode="16403" (LocalName="*.ps1" OR LocalName="*.exe" OR LocalName="*.vbs" OR LocalName="*.bat")) NOT (LocalName="*\\AppData\\*" RemoteName="*.com*")) | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Download File Extension with BITS" | eval sigma_description="Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Download with BITS to Suspicious Folder - builtin]
description = Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)

search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Bits-Client/Operational" EventCode="16403" (LocalName="*C:\\Users\\Public\\*" OR LocalName="*%public%*" OR LocalName="*\\Desktop\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Download with BITS to Suspicious Folder" | eval sigma_description="Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Task Added by Powershell - builtin]
description = Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)

search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Bits-Client/Operational" EventCode="3" processPath="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Task Added by Powershell" | eval sigma_description="Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Task Added by Bitsadmin - builtin]
description = Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)

search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Bits-Client/Operational" EventCode="3" processPath="*\\bitsadmin.exe") | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Task Added by Bitsadmin" | eval sigma_description="Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Download with BITS from Suspicious TLD - builtin]
description = Detects a suspicious download using the BITS client from a FQDN that is unusual. Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Bits-Client/Operational" EventCode="16403" NOT ((RemoteName="*.com*" OR RemoteName="*.azureedge.net*" OR RemoteName="*.sfx.ms*" OR RemoteName="*download.mozilla.org*"))) | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Download with BITS from Suspicious TLD" | eval sigma_description="Detects a suspicious download using the BITS client from a FQDN that is unusual. Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads."
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Service Install - builtin]
description = This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ServiceName="srservice" OR ServiceName="ipvpn" OR ServiceName="hkmsvc")) | eval sigma_attack_tags="attack.persistence attack.g0010 attack.t1543.003" | eval sigma_title="Turla Service Install" | eval sigma_description="This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[Chafer Activity - builtin]
description = Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ServiceName="SC Scheduled Scan" OR ServiceName="UpdatMachine")) | eval sigma_attack_tags="attack.persistence attack.g0049 attack.t1053.005 attack.s0111 attack.t1543.003 attack.defense_evasion attack.t1112 attack.command_and_control attack.t1071.004" | eval sigma_title="Chafer Activity" | eval sigma_description="Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[StoneDrill Service Install - builtin]
description = This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="NtsSrv" ImagePath="* LocalService") | eval sigma_attack_tags="attack.persistence attack.g0064 attack.t1543.003" | eval sigma_title="StoneDrill Service Install" | eval sigma_description="This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla PNG Dropper Service - builtin]
description = This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="WerFaultSvc") | eval sigma_attack_tags="attack.persistence attack.g0010 attack.t1543.003" | eval sigma_title="Turla PNG Dropper Service" | eval sigma_description="This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Service Installations - builtin]
description = Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ((ImagePath="*ADMIN$*" ImagePath="*.exe*") OR (ImagePath="*%COMSPEC%*" ImagePath="*start*" ImagePath="*powershell*") OR ImagePath="*powershell -nop -w hidden -encodedcommand*" OR (ImagePath="*SUVYIChOZXctT2JqZWN0IE5ldC5XZWJjbGllbnQpLkRvd25sb2FkU3RyaW5nKCdodHRwOi8vMTI3LjAuMC4xO*" OR ImagePath="*lFWCAoTmV3LU9iamVjdCBOZXQuV2ViY2xpZW50KS5Eb3dubG9hZFN0cmluZygnaHR0cDovLzEyNy4wLjAuMT*" OR ImagePath="*JRVggKE5ldy1PYmplY3QgTmV0LldlYmNsaWVudCkuRG93bmxvYWRTdHJpbmcoJ2h0dHA6Ly8xMjcuMC4wLjE6*"))) | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.lateral_movement attack.t1021.002 attack.t1543.003 attack.t1569.002" | eval sigma_title="CobaltStrike Service Installations" | eval sigma_description="Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement"
dispatch.earliest_time = -24h@h
alert.track = 0

[Eventlog Cleared - builtin]
description = One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution
search = index=wineventlog* (source="WinEventLog:System" EventCode="104") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 car.2016-04-002" | eval sigma_title="Eventlog Cleared" | eval sigma_description="One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[smbexec.py Service Installation - builtin]
description = Detects the use of smbexec.py tool by detecting a specific service installation
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="BTOBTO" ImagePath="*\\execute.bat") | table ServiceName,ServiceFileName | eval sigma_attack_tags="attack.lateral_movement attack.execution attack.t1021.002 attack.t1569.002" | eval sigma_title="smbexec.py Service Installation" | eval sigma_description="Detects the use of smbexec.py tool by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation CLIP+ Launcher - builtin]
description = Detects Obfuscated use of Clip.exe to execute PowerShell
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*cmd*" ImagePath="*clip*" ImagePath="*clipboard]::*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation CLIP+ Launcher" | eval sigma_description="Detects Obfuscated use of Clip.exe to execute PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation COMPRESS OBFUSCATION - builtin]
description = Detects Obfuscated Powershell via COMPRESS OBFUSCATION
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*new-object*" ImagePath="*text.encoding]::ascii*" ImagePath="*readtoend*" (ImagePath="*:system.io.compression.deflatestream*" OR ImagePath="*system.io.streamreader*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation COMPRESS OBFUSCATION" | eval sigma_description="Detects Obfuscated Powershell via COMPRESS OBFUSCATION"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation RUNDLL LAUNCHER - builtin]
description = Detects Obfuscated Powershell via RUNDLL LAUNCHER
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*rundll32.exe*" ImagePath="*shell32.dll*" ImagePath="*shellexec_rundll*" ImagePath="*powershell*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation RUNDLL LAUNCHER" | eval sigma_description="Detects Obfuscated Powershell via RUNDLL LAUNCHER"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Clip - builtin]
description = Detects Obfuscated Powershell via use Clip.exe in Scripts
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*(Clipboard|i*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Clip" | eval sigma_description="Detects Obfuscated Powershell via use Clip.exe in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use MSHTA - builtin]
description = Detects Obfuscated Powershell via use MSHTA in Scripts
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*mshta*" ImagePath="*vbscript:createobject*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use MSHTA" | eval sigma_description="Detects Obfuscated Powershell via use MSHTA in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Rundll32 - builtin]
description = Detects Obfuscated Powershell via use Rundll32 in Scripts
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*&&*" ImagePath="*rundll32*" ImagePath="*shell32.dll*" ImagePath="*shellexec_rundll*" (ImagePath="*value*" OR ImagePath="*invoke*" OR ImagePath="*comspec*" OR ImagePath="*iex*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Rundll32" | eval sigma_description="Detects Obfuscated Powershell via use Rundll32 in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTLMv1 Logon Between Client and Server - builtin]
description = Detects the reporting of NTLMv1 being used between a client and server
search = index=wineventlog* (source="WinEventLog:System" EventCode="6038") | table EventCode,Provider_Name | eval sigma_attack_tags="attack.execution attack.t1550.002 attack.s0363" | eval sigma_title="NTLMv1 Logon Between Client and Server" | eval sigma_description="Detects the reporting of NTLMv1 being used between a client and server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Credential Dumping Tools Service Execution - builtin]
description = Detects well-known credential dumping tools execution via service execution events
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ImagePath="*fgexec*" OR ImagePath="*dumpsvc*" OR ImagePath="*cachedump*" OR ImagePath="*mimidrv*" OR ImagePath="*gsecdump*" OR ImagePath="*servpw*" OR ImagePath="*pwdump*")) | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006 attack.t1569.002 attack.s0005" | eval sigma_title="Credential Dumping Tools Service Execution" | eval sigma_description="Detects well-known credential dumping tools execution via service execution events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Installation - builtin]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ((ImagePath="*cmd*" ImagePath="*/c*" ImagePath="*echo*" ImagePath="*\\pipe\\*") OR (ImagePath="*%COMSPEC%*" ImagePath="*/c*" ImagePath="*echo*" ImagePath="*\\pipe\\*") OR (ImagePath="*cmd.exe*" ImagePath="*/c*" ImagePath="*echo*" ImagePath="*\\pipe\\*") OR (ImagePath="*rundll32*" ImagePath="*.dll,a*" ImagePath="*/p:*") OR ImagePath="\\\\127.0.0.1\\ADMIN$\\*")) | table ComputerName,SubjectDomainName,SubjectUserName,ImagePath | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Installation" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Moriya Rootkit - builtin]
description = Detects the use of Moriya rootkit as described in the securelist's Operation TunnelSnake report
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="ZzNetSvc") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="Moriya Rootkit" | eval sigma_description="Detects the use of Moriya rootkit as described in the securelist's Operation TunnelSnake report"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTFS Vulnerability Exploitation - builtin]
description = This the exploitation of a NTFS vulnerability as reported without many details via Twitter
search = index=wineventlog* (source="WinEventLog:System" EventCode="55" Origin="File System Driver" Description="*contains a corrupted file record*" Description="*The name of the file is \"\\\"*") | eval sigma_attack_tags="attack.impact attack.t1499.001" | eval sigma_title="NTFS Vulnerability Exploitation" | eval sigma_description="This the exploitation of a NTFS vulnerability as reported without many details via Twitter"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Pcap Drivers - builtin]
description = Detects Windows Pcap driver installation based on a list of associated .sys files.
search = index=wineventlog* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" (ServiceFileName="*pcap*" OR ServiceFileName="*npcap*" OR ServiceFileName="*npf*" OR ServiceFileName="*nm3*" OR ServiceFileName="*ndiscap*" OR ServiceFileName="*nmnt*" OR ServiceFileName="*windivert*" OR ServiceFileName="*USBPcap*" OR ServiceFileName="*pktmon*")) | table EventCode,ServiceFileName,Account_Name,Computer_Name,Originating_Computer,ServiceName | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Windows Pcap Drivers" | eval sigma_description="Detects Windows Pcap driver installation based on a list of associated .sys files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Zerologon Exploitation Using Well-known Tools - builtin]
description = This rule is designed to detect attempts to exploit Zerologon (CVE-2020-1472) vulnerability using mimikatz zerologon module or other exploits from machine with 'kali' hostname.
search = index=wineventlog* (source="WinEventLog:System" (EventCode="5805" OR EventCode="5723") ("kali" OR "mimikatz")) | eval sigma_attack_tags="attack.t1210 attack.lateral_movement" | eval sigma_title="Zerologon Exploitation Using Well-known Tools" | eval sigma_description="This rule is designed to detect attempts to exploit Zerologon (CVE-2020-1472) vulnerability using mimikatz zerologon module or other exploits from machine with 'kali' hostname."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Scripts Installed as Services - builtin]
description = Detects powershell script installed as a Service
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ImagePath="*powershell*" OR ImagePath="*pwsh*")) | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="PowerShell Scripts Installed as Services" | eval sigma_description="Detects powershell script installed as a Service"
dispatch.earliest_time = -24h@h
alert.track = 0

[QuarksPwDump Clearing Access History - builtin]
description = Detects QuarksPwDump clearing access history in hive
search = index=wineventlog* (source="WinEventLog:System" EventCode="16" HiveName="*\\AppData\\Local\\Temp\\SAM*" HiveName="*.dmp") | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="QuarksPwDump Clearing Access History" | eval sigma_description="Detects QuarksPwDump clearing access history in hive"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Service Installations - builtin]
description = Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045") | eventstats count as val by ServiceName| search val < 5 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation car.2013-09-005 attack.t1543.003" | eval sigma_title="Rare Service Installations" | eval sigma_description="Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services"
dispatch.earliest_time = -24h@h
alert.track = 0

[Potential RDP Exploit CVE-2019-0708 - builtin]
description = Detect suspicious error on protocol RDP, potential CVE-2019-0708
search = index=wineventlog* (source="WinEventLog:System" (EventCode="56" OR EventCode="50")) | eval sigma_attack_tags="attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Potential RDP Exploit CVE-2019-0708" | eval sigma_description="Detect suspicious error on protocol RDP, potential CVE-2019-0708"
dispatch.earliest_time = -24h@h
alert.track = 0

[KrbRelayUp Service Installation - builtin]
description = Detects service creation from KrbRelayUp tool used for privilege escalation in windows domain environments where LDAP signing is not enforced (the default settings)
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="KrbSCM") | eval sigma_attack_tags="attack.privilege_escalation attack.t1543" | eval sigma_title="KrbRelayUp Service Installation" | eval sigma_description="Detects service creation from KrbRelayUp tool used for privilege escalation in windows domain environments where LDAP signing is not enforced (the default settings)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hacktool Service Registration or Execution - builtin]
description = Detects PsExec service installation and execution events (service and Sysmon)
search = index=wineventlog* (source="WinEventLog:System" (EventCode="7045" OR EventCode="7036") ((ServiceName="*WCESERVICE*" OR ServiceName="*WCE SERVICE*" OR ServiceName="*winexesvc*" OR ServiceName="*DumpSvc*" OR ServiceName="*pwdump*" OR ServiceName="*gsecdump*" OR ServiceName="*cachedump*") OR (ImagePath="*bypass*"))) | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="Hacktool Service Registration or Execution" | eval sigma_description="Detects PsExec service installation and execution events (service and Sysmon)"
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Uses Double Ampersand in Path - builtin]
description = Detects a service installation that uses a suspicious double ampersand used in the image path value
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*&&*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="New Service Uses Double Ampersand in Path" | eval sigma_description="Detects a service installation that uses a suspicious double ampersand used in the image path value"
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Server Error Failed Loading the CallOut DLL - builtin]
description = This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded
search = index=wineventlog* (source="WinEventLog:System" (EventCode="1031" OR EventCode="1032" OR EventCode="1034")) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="DHCP Server Error Failed Loading the CallOut DLL" | eval sigma_description="This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Server Loaded the CallOut DLL - builtin]
description = This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded
search = index=wineventlog* (source="WinEventLog:System" EventCode="1033") | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="DHCP Server Loaded the CallOut DLL" | eval sigma_description="This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[ProcessHacker Privilege Elevation - builtin]
description = Detects a ProcessHacker tool that elevated privileges to a very high level
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ServiceName="ProcessHacker*" AccountName="LocalSystem") | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.t1543.003 attack.t1569.002" | eval sigma_title="ProcessHacker Privilege Elevation" | eval sigma_description="Detects a ProcessHacker tool that elevated privileges to a very high level"
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Dump to AppData - builtin]
description = Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers
search = index=wineventlog* (source="WinEventLog:System" EventCode="16" "\\AppData\\Local\\Temp\\SAM-" ".dmp") | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="SAM Dump to AppData" | eval sigma_description="Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Installation in Suspicious Folder - builtin]
description = Detects service installation in suspicious folder appdata
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" (ImagePath="*\\AppData\\*" OR ImagePath="*\\\\127.0.0.1*" OR ImagePath="*\\\\localhost*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation car.2013-09-005 attack.t1543.003" | eval sigma_title="Service Installation in Suspicious Folder" | eval sigma_description="Detects service installation in suspicious folder appdata"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Installation Script - builtin]
description = Detects suspicious service installation scripts
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="* /C *" (ImagePath="*powershell*" OR ImagePath="*wscript*" OR ImagePath="*cscript*" OR ImagePath="*mshta*" OR ImagePath="*rundll32*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation car.2013-09-005 attack.t1543.003" | eval sigma_title="Suspicious Service Installation Script" | eval sigma_description="Detects suspicious service installation scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Installation - builtin]
description = Detects suspicious service installation commands
search = index=wineventlog* (source="WinEventLog:System" (EventCode="7045" ((ImagePath="* -w hidden *" OR ImagePath="* -nop *" OR ImagePath="* -sta *" OR ImagePath="*\\Users\\Public\\*" OR ImagePath="*\\Windows\\Temp\\*" OR ImagePath="*\\Perflogs\\*" OR ImagePath="*\\\\.\\pipe*" OR ImagePath="*\\ADMIN$\\*" OR ImagePath="*.downloadstring(*" OR ImagePath="*.downloadfile(*") OR (ImagePath="* -e*" (ImagePath="* JAB*" OR ImagePath="* SUVYI*" OR ImagePath="* SQBFAFgA*" OR ImagePath="* aWV4I*" OR ImagePath="* IAB*" OR ImagePath="* PAA*" OR ImagePath="* aQBlAHgA*")))) NOT ((ImagePath="C:\\WINDOWS\\TEMP\\thor10-remote\\thor64.exe*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation car.2013-09-005 attack.t1543.003" | eval sigma_title="Suspicious Service Installation" | eval sigma_description="Detects suspicious service installation commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Update Error - builtin]
description = Windows Update get some error Check if need a 0-days KB
search = index=wineventlog* (source="WinEventLog:System" (EventCode="16" OR EventCode="20" OR EventCode="24" OR EventCode="213" OR EventCode="217")) | eval sigma_attack_tags="attack.impact attack.resource_development attack.t1584" | eval sigma_title="Windows Update Error" | eval sigma_description="Windows Update get some error Check if need a 0-days KB"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Crash - builtin]
description = Detectes application popup reporting a failure of the Sysmon service
search = index=wineventlog* (source="WinEventLog:System" EventCode="26" Caption="sysmon64.exe - Application Error") | eval sigma_attack_tags="attack.t1562 attack.impair_defenses" | eval sigma_title="Sysmon Crash" | eval sigma_description="Detectes application popup reporting a failure of the Sysmon service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Threat Detection Disabled - Service - builtin]
description = Detects disabling Windows Defender threat protection
search = index=wineventlog* (source="WinEventLog:System" EventCode="7036" (param1="Windows Defender Antivirus Service" OR param1="Service antivirus Microsoft Defender") param2="stopped") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Windows Defender Threat Detection Disabled - Service" | eval sigma_description="Detects disabling Windows Defender threat protection"
dispatch.earliest_time = -24h@h
alert.track = 0

[System Eventlog Cleared - builtin]
description = One of the Windows Core Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution
search = index=wineventlog* (source="WinEventLog:System" EventCode="104" (Channel="System" OR Channel="Security" OR Channel="Application")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 car.2016-04-002" | eval sigma_title="System Eventlog Cleared" | eval sigma_description="One of the Windows Core Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Driver Installation - builtin]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques
search = index=wineventlog* (source="WinEventLog:System" EventCode="7045" ImagePath="*tap0901*") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Driver Installation" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Tool Execution - builtin]
description = Detects PsExec service installation and execution events (service and Sysmon)
search = index=wineventlog* (source="WinEventLog:System" ((EventCode="7045" ServiceName="PSEXESVC" ImagePath="*\\PSEXESVC.exe") OR (EventCode="7036" ServiceName="PSEXESVC"))) | table EventCode,Process_Command_Line,ParentCommandLine,ServiceName,ServiceFileName,TargetFilename,PipeName | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="PsExec Tool Execution" | eval sigma_description="Detects PsExec service installation and execution events (service and Sysmon)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Vulnerable Netlogon Secure Channel Connection Allowed - builtin]
description = Detects that a vulnerable Netlogon secure channel connection was allowed, which could be an indicator of CVE-2020-1472.
search = index=wineventlog* (source="WinEventLog:System" EventCode="5829") | table SAMAccountName | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Vulnerable Netlogon Secure Channel Connection Allowed" | eval sigma_description="Detects that a vulnerable Netlogon secure channel connection was allowed, which could be an indicator of CVE-2020-1472."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit SamAccountName Spoofing with Kerberos - builtin]
description = The attacker creates a computer object using those permissions with a password known to her.
After that she clears the attribute ServicePrincipalName on the computer object.
Because she created the object (CREATOR OWNER), she gets granted additional permissions and can do many changes to the object.

search = index=wineventlog* (source="WinEventLog:System" ((EventCode="35" OR EventCode="36" OR EventCode="37" OR EventCode="38") OR (EventCode="16990" OR EventCode="16991"))) | table samAccountName | eval sigma_attack_tags="attack.credential_access attack.t1558.003" | eval sigma_title="Exploit SamAccountName Spoofing with Kerberos" | eval sigma_description="The attacker creates a computer object using those permissions with a password known to her.
After that she clears the attribute ServicePrincipalName on the computer object.
Because she created the object (CREATOR OWNER), she gets granted additional permissions and can do many changes to the object.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access Detected via Attack Surface Reduction - builtin]
description = Detects Access to LSASS Process
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" (EventCode="1121" Path="*\\lsass.exe") NOT ((ProcessName="C:\\Windows\\Temp\\asgard2-agent\\*" (ProcessName="*\\thor64.exe" OR ProcessName="*\\thor.exe")) OR ((ProcessName="C:\\Windows\\System32\\atiesrxx.exe" OR ProcessName="C:\\Windows\\System32\\CompatTelRunner.exe" OR ProcessName="C:\\Windows\\System32\\msiexec.exe" OR ProcessName="C:\\Windows\\System32\\nvwmi64.exe" OR ProcessName="C:\\Windows\\System32\\svchost.exe" OR ProcessName="C:\\Windows\\System32\\Taskmgr.exe" OR ProcessName="C:\\Windows\\System32\\wbem\\WmiPrvSE.exe" OR ProcessName="C:\\Windows\\SysWOW64\\msiexec.exe")) OR ((ProcessName="C:\\Windows\\System32\\DriverStore\\*" OR ProcessName="C:\\WINDOWS\\Installer\\*" OR ProcessName="C:\\Program Files\\*" OR ProcessName="C:\\Program Files (x86)\\*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="LSASS Access Detected via Attack Surface Reduction" | eval sigma_description="Detects Access to LSASS Process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender AMSI Trigger Detected - builtin]
description = Detects triggering of AMSI by Windows Defender.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" EventCode="1116" Source_Name="AMSI") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Windows Defender AMSI Trigger Detected" | eval sigma_description="Detects triggering of AMSI by Windows Defender."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Threat Detection Disabled - builtin]
description = Detects disabling Windows Defender threat protection
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" (EventCode="5001" OR EventCode="5010" OR EventCode="5012" OR EventCode="5101")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Windows Defender Threat Detection Disabled" | eval sigma_description="Detects disabling Windows Defender threat protection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Exclusions Added - builtin]
description = Detects the Setting of Windows Defender Exclusions
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" EventCode="5007" NewValue="*\\Microsoft\\Windows Defender\\Exclusions*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Windows Defender Exclusions Added" | eval sigma_description="Detects the Setting of Windows Defender Exclusions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Malware Detection History Deletion - builtin]
description = Windows Defender logs when the history of detected infections is deleted. Log file will contain the message 'Windows Defender Antivirus has removed history of malware and other potentially unwanted software'.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" EventCode="1013" EventType="4") | table EventCode,EventType | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001" | eval sigma_title="Windows Defender Malware Detection History Deletion" | eval sigma_description="Windows Defender logs when the history of detected infections is deleted. Log file will contain the message 'Windows Defender Antivirus has removed history of malware and other potentially unwanted software'."
dispatch.earliest_time = -24h@h
alert.track = 0

[PSExec and WMI Process Creations Block - builtin]
description = Detects blocking of process creations originating from PSExec and WMI commands
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" EventCode="1121" (ProcessName="*\\wmiprvse.exe" OR ProcessName="*\\psexesvc.exe")) | eval sigma_attack_tags="attack.execution attack.lateral_movement attack.t1047 attack.t1569.002" | eval sigma_title="PSExec and WMI Process Creations Block" | eval sigma_description="Detects blocking of process creations originating from PSExec and WMI commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Defender Tamper Protection Trigger - builtin]
description = Detects block of attempt to disable real time protection of Microsoft Defender by tamper protection
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" EventCode="5013" (Value="*\\Windows Defender\\DisableAntiSpyware = 0x1()" OR Value="*\\Real-Time Protection\\DisableRealtimeMonitoring = (Current)")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Microsoft Defender Tamper Protection Trigger" | eval sigma_description="Detects block of attempt to disable real time protection of Microsoft Defender by tamper protection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Threat Detected - builtin]
description = Detects all actions taken by Windows Defender malware detection engines
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Defender/Operational" (EventCode="1006" OR EventCode="1116" OR EventCode="1015" OR EventCode="1117")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Windows Defender Threat Detected" | eval sigma_description="Detects all actions taken by Windows Defender malware detection engines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Relevant Anti-Virus Event - builtin]
description = This detection method points out highly relevant Antivirus events
search = index=wineventlog* (source="WinEventLog:Application" ("HTool-" OR "Hacktool" OR "ASP/Backdoor" OR "JSP/Backdoor" OR "PHP/Backdoor" OR "Backdoor.ASP" OR "Backdoor.JSP" OR "Backdoor.PHP" OR "Webshell" OR "Portscan" OR "Mimikatz" OR ".WinCred." OR "PlugX" OR "Korplug" OR "Pwdump" OR "Chopper" OR "WmiExec" OR "Xscan" OR "Clearlog" OR "ASPXSpy" OR "Ransom" OR "Filecoder" OR "CobaltStr" OR "PWCrack" OR "DumpCreds" OR "MPreter" OR "Koadic" OR "Packed.Generic.347" OR "COBEACON" OR "Cometer" OR "Keylogger" OR "MeteTool") NOT (("Keygen" OR "Crack" OR "anti_ransomware_service.exe" OR "cyber-protect-service.exe") OR (Level="4"))) | eval sigma_attack_tags="attack.resource_development attack.t1588" | eval sigma_title="Relevant Anti-Virus Event" | eval sigma_description="This detection method points out highly relevant Antivirus events"
dispatch.earliest_time = -24h@h
alert.track = 0

[An Application Is Uninstall - builtin]
description = An application have been remove check if it is a critical
search = index=wineventlog* (source="WinEventLog:Application" (EventCode="11724" OR EventCode="1034")) | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="An Application Is Uninstall" | eval sigma_description="An application have been remove check if it is a critical"
dispatch.earliest_time = -24h@h
alert.track = 0

[Atera Agent Installation - builtin]
description = Detects successful installation of Atera Remote Monitoring & Management (RMM) agent as recently found to be used by Conti operators
search = index=wineventlog* (source="WinEventLog:Application" EventCode="1033" Message="*AteraAgent*") | eval sigma_attack_tags="attack.t1219" | eval sigma_title="Atera Agent Installation" | eval sigma_description="Detects successful installation of Atera Remote Monitoring & Management (RMM) agent as recently found to be used by Conti operators"
dispatch.earliest_time = -24h@h
alert.track = 0

[Backup Catalog Deleted - builtin]
description = Detects backup catalog deletions
search = index=wineventlog* (source="WinEventLog:Application" EventCode="524") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Backup Catalog Deleted" | eval sigma_description="Detects backup catalog deletions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Malware Protection Engine Crash - builtin]
description = This rule detects a suspicious crash of the Microsoft Malware Protection Engine
search = index=wineventlog* (source="WinEventLog:Application" (EventCode="1000" OR EventCode="1001") ("MsMpEng.exe" "mpengine.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1211 attack.t1562.001" | eval sigma_title="Microsoft Malware Protection Engine Crash" | eval sigma_description="This rule detects a suspicious crash of the Microsoft Malware Protection Engine"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2020-0688 Exploitation via Eventlog - builtin]
description = Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688
search = index=wineventlog* (source="WinEventLog:Application" (EventCode="4" Level="Error") "&__VIEWSTATE=") | eval sigma_attack_tags="attack.initial_access attack.t1190" | eval sigma_title="CVE-2020-0688 Exploitation via Eventlog" | eval sigma_description="Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688"
dispatch.earliest_time = -24h@h
alert.track = 0

[LPE InstallerFileTakeOver PoC CVE-2021-41379 - builtin]
description = Detects PoC tool used to exploit LPE vulnerability CVE-2021-41379
search = index=wineventlog* (source="WinEventLog:Application" EventCode="1033" "test pkg") | eval sigma_attack_tags="attack.initial_access attack.t1190" | eval sigma_title="LPE InstallerFileTakeOver PoC CVE-2021-41379" | eval sigma_description="Detects PoC tool used to exploit LPE vulnerability CVE-2021-41379"
dispatch.earliest_time = -24h@h
alert.track = 0

[Code Integrity Blocked Driver Load - builtin]
description = Detects driver load events that got blocked by Windows code integrity checks
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-CodeIntegrity/Operational" "that did not meet the Microsoft signing level requirements") | eval sigma_attack_tags="attack.execution" | eval sigma_title="Code Integrity Blocked Driver Load" | eval sigma_description="Detects driver load events that got blocked by Windows code integrity checks"
dispatch.earliest_time = -24h@h
alert.track = 0

[USB Device Plugged - builtin]
description = Detects plugged USB devices
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-DriverFrameworks-UserMode/Operational" (EventCode="2003" OR EventCode="2100" OR EventCode="2102")) | eval sigma_attack_tags="attack.initial_access attack.t1200" | eval sigma_title="USB Device Plugged" | eval sigma_description="Detects plugged USB devices"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTLM Brute Force - builtin]
description = Detects common NTLM brute force device names
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-NTLM/Operational" EventCode="8004" (WorkstationName="Rdesktop" OR WorkstationName="Remmina" OR WorkstationName="Freerdp" OR WorkstationName="Windows7" OR WorkstationName="Windows8" OR WorkstationName="Windows2012" OR WorkstationName="Windows2016" OR WorkstationName="Windows2019")) | eval sigma_attack_tags="attack.credential_access attack.t1110" | eval sigma_title="NTLM Brute Force" | eval sigma_description="Detects common NTLM brute force device names"
dispatch.earliest_time = -24h@h
alert.track = 0

[Potential Remote Desktop Connection to Non-Domain Host - builtin]
description = Detects logons using NTLM to hosts that are potentially not part of the domain.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-NTLM/Operational" EventCode="8001" TargetName="TERMSRV*") | table Computer,UserName,DomainName,TargetName | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Potential Remote Desktop Connection to Non-Domain Host" | eval sigma_description="Detects logons using NTLM to hosts that are potentially not part of the domain."
dispatch.earliest_time = -24h@h
alert.track = 0

[File Was Not Allowed To Run - builtin]
description = Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events.
search = index=wineventlog* ((source="WinEventLog:Microsoft-Windows-AppLocker/MSI and Script" OR source="WinEventLog:Microsoft-Windows-AppLocker/EXE and DLL" OR source="WinEventLog:Microsoft-Windows-AppLocker/Packaged app-Deployment" OR source="WinEventLog:Microsoft-Windows-AppLocker/Packaged app-Execution") (EventCode="8004" OR EventCode="8007")) | table PolicyName,RuleId,RuleName,TargetUser,TargetProcessId,FilePath,FileHash,Fqbn | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.t1059.001 attack.t1059.003 attack.t1059.005 attack.t1059.006 attack.t1059.007" | eval sigma_title="File Was Not Allowed To Run" | eval sigma_description="Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events."
dispatch.earliest_time = -24h@h
alert.track = 0

[HybridConnectionManager Service Running - builtin]
description = Rule to detect the Hybrid Connection Manager service running on an endpoint.
search = index=wineventlog* ((EventCode="40300" OR EventCode="40301" OR EventCode="40302") ("HybridConnection" OR "sb://" OR "servicebus.windows.net" OR "HybridConnectionManage")) | eval sigma_attack_tags="attack.persistence attack.t1554" | eval sigma_title="HybridConnectionManager Service Running" | eval sigma_description="Rule to detect the Hybrid Connection Manager service running on an endpoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Added Rule in Windows Firewall with Advanced Security - builtin]
description = A rule has been modified in the Windows Firewall exception list
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall" EventCode="2004" NOT ((Action="2") OR ((ApplicationPath="C:\\Program Files\\*" OR ApplicationPath="C:\\Program Files (x86)\\*") OR ModifyingApplication="C:\\Windows\\System32\\oobe\\Setup.exe" OR ModifyingApplication="C:\\Windows\\WinSxS\\*" OR (ModifyingApplication="C:\\Windows\\SysWOW64\\msiexec.exe" OR ModifyingApplication="C:\\Windows\\System32\\svchost.exe" OR ModifyingApplication="C:\\Windows\\System32\\dllhost.exe" OR ModifyingApplication="C:\\Program Files\\Windows Defender\\MsMpEng.exe")))) | eval sigma_attack_tags="" | eval sigma_title="Added Rule in Windows Firewall with Advanced Security" | eval sigma_description="A rule has been modified in the Windows Firewall exception list"
dispatch.earliest_time = -24h@h
alert.track = 0

[Modified Rule in Windows Firewall with Advanced Security - builtin]
description = A rule has been modified in the Windows Firewall exception list
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall" EventCode="2005" NOT (((ModifyingApplication="C:\\Program Files (x86)\\*" OR ModifyingApplication="C:\\Program Files\\*")))) | eval sigma_attack_tags="" | eval sigma_title="Modified Rule in Windows Firewall with Advanced Security" | eval sigma_description="A rule has been modified in the Windows Firewall exception list"
dispatch.earliest_time = -24h@h
alert.track = 0

[Delete Rule in Windows Firewall with Advanced Security - builtin]
description = A rule has been deleted in the Windows Firewall exception list.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall" (EventCode="2006" OR EventCode="2033") NOT (ModifyingApplication="C:\\Windows\\System32\\svchost.exe" OR (ModifyingApplication="C:\\Program Files\\*" OR ModifyingApplication="C:\\Program Files (x86)\\*"))) | eval sigma_attack_tags="" | eval sigma_title="Delete Rule in Windows Firewall with Advanced Security" | eval sigma_description="A rule has been deleted in the Windows Firewall exception list."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed to Load Policy in Windows Firewall with Advanced Security - builtin]
description = The Windows Firewall service failed to load Group Policy.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall" EventCode="2009") | eval sigma_attack_tags="" | eval sigma_title="Failed to Load Policy in Windows Firewall with Advanced Security" | eval sigma_description="The Windows Firewall service failed to load Group Policy."
dispatch.earliest_time = -24h@h
alert.track = 0

[Reset to Default Configuration Windows Firewall with Advanced Security - builtin]
description = Windows Firewall has been reset to its default configuration.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall" EventCode="2032") | eval sigma_attack_tags="" | eval sigma_title="Reset to Default Configuration Windows Firewall with Advanced Security" | eval sigma_description="Windows Firewall has been reset to its default configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[Setting Change in Windows Firewall with Advanced Security - builtin]
description = Setting have been change in Windows Firewall
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall" (EventCode="2002" OR EventCode="2003" OR EventCode="2008")) | eval sigma_attack_tags="" | eval sigma_title="Setting Change in Windows Firewall with Advanced Security" | eval sigma_description="Setting have been change in Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rejected SMB Guest Logon From IP - builtin]
description = Detect Attempt PrintNightmare (CVE-2021-1675) Remote code execution in Windows Spooler Service
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-SmbClient/Security" EventCode="31017" Description="*Rejected an insecure guest logon*" UserName="" ServerName="\\1*") | table Computer,Account_Name | eval sigma_attack_tags="attack.credential_access attack.t1110.001" | eval sigma_title="Suspicious Rejected SMB Guest Logon From IP" | eval sigma_description="Detect Attempt PrintNightmare (CVE-2021-1675) Remote code execution in Windows Spooler Service"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-1675 Print Spooler Exploitation - builtin]
description = Detects driver load events print service operational log that are a sign of successful exploitation attempts against print spooler vulnerability CVE-2021-1675
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-PrintService/Operational" EventCode="316" ("UNIDRV.DLL, kernelbase.dll, " OR " 123 " OR " 1234 " OR "mimispool")) | table DriverAdded | eval sigma_attack_tags="attack.execution attack.t1569 cve.2021.1675" | eval sigma_title="CVE-2021-1675 Print Spooler Exploitation" | eval sigma_description="Detects driver load events print service operational log that are a sign of successful exploitation attempts against print spooler vulnerability CVE-2021-1675"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible CVE-2021-1675 Print Spooler Exploitation - builtin]
description = Detects events of driver load errors in print service logs that could be a sign of successful exploitation attempts of print spooler vulnerability CVE-2021-1675
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-PrintService/Admin" (((EventCode="808" OR EventCode="4909") (ErrorCode="0x45A" OR ErrorCode="0x7e")) OR ("The print spooler failed to load a plug-in module" OR "MyExploit.dll" OR "evil.dll" OR "\\addCube.dll" OR "\\rev.dll" OR "\\rev2.dll" OR "\\main64.dll" OR "\\mimilib.dll" OR "\\mimispool.dll")) NOT (" registration timed out")) | table PluginDllName | eval sigma_attack_tags="attack.execution attack.t1569 cve.2021.1675" | eval sigma_title="Possible CVE-2021-1675 Print Spooler Exploitation" | eval sigma_description="Detects events of driver load errors in print service logs that could be a sign of successful exploitation attempts of print spooler vulnerability CVE-2021-1675"
dispatch.earliest_time = -24h@h
alert.track = 0

[LDAP Reconnaissance / Active Directory Enumeration - builtin]
description = Detects possible Active Directory enumeration via LDAP
search = index=wineventlog* (((EventCode="30" (SearchFilter="*(groupType:1.2.840.113556.1.4.803:=2147483648)*" OR SearchFilter="*(groupType:1.2.840.113556.1.4.803:=2147483656)*" OR SearchFilter="*(groupType:1.2.840.113556.1.4.803:=2147483652)*" OR SearchFilter="*(groupType:1.2.840.113556.1.4.803:=2147483650)*" OR SearchFilter="*(sAMAccountType=805306369)*" OR SearchFilter="*(sAMAccountType=805306368)*" OR SearchFilter="*(sAMAccountType=536870913)*" OR SearchFilter="*(sAMAccountType=536870912)*" OR SearchFilter="*(sAMAccountType=268435457)*" OR SearchFilter="*(sAMAccountType=268435456)*" OR SearchFilter="*(objectCategory=groupPolicyContainer)*" OR SearchFilter="*(objectCategory=organizationalUnit)*" OR SearchFilter="*(objectCategory=Computer)*" OR SearchFilter="*(objectCategory=nTDSDSA)*" OR SearchFilter="*(objectCategory=server)*" OR SearchFilter="*(objectCategory=domain)*" OR SearchFilter="*(objectCategory=person)*" OR SearchFilter="*(objectCategory=group)*" OR SearchFilter="*(objectCategory=user)*" OR SearchFilter="*(objectClass=trustedDomain)*" OR SearchFilter="*(objectClass=computer)*" OR SearchFilter="*(objectClass=server)*" OR SearchFilter="*(objectClass=group)*" OR SearchFilter="*(objectClass=user)*" OR SearchFilter="*(primaryGroupID=521)*" OR SearchFilter="*(primaryGroupID=516)*" OR SearchFilter="*(primaryGroupID=515)*" OR SearchFilter="*(primaryGroupID=512)*" OR SearchFilter="*Domain Admins*")) NOT (EventCode="30" (SearchFilter="*(domainSid=*)*" OR SearchFilter="*(objectSid=*)*"))) OR (EventCode="30" (SearchFilter="*(userAccountControl:1.2.840.113556.1.4.803:=4194304)*" OR SearchFilter="*(userAccountControl:1.2.840.113556.1.4.803:=2097152)*" OR SearchFilter="*!(userAccountControl:1.2.840.113556.1.4.803:=1048574)*" OR SearchFilter="*(userAccountControl:1.2.840.113556.1.4.803:=524288)*" OR SearchFilter="*(userAccountControl:1.2.840.113556.1.4.803:=65536)*" OR SearchFilter="*(userAccountControl:1.2.840.113556.1.4.803:=8192)*" OR SearchFilter="*(userAccountControl:1.2.840.113556.1.4.803:=544)*" OR SearchFilter="*!(UserAccountControl:1.2.840.113556.1.4.803:=2)*" OR SearchFilter="*msDS-AllowedToActOnBehalfOfOtherIdentity*" OR SearchFilter="*msDS-AllowedToDelegateTo*" OR SearchFilter="*(accountExpires=9223372036854775807)*" OR SearchFilter="*(accountExpires=0)*" OR SearchFilter="*(adminCount=1)*" OR SearchFilter="*ms-MCS-AdmPwd*"))) | eval sigma_attack_tags="attack.discovery attack.t1069.002 attack.t1087.002 attack.t1482" | eval sigma_title="LDAP Reconnaissance / Active Directory Enumeration" | eval sigma_description="Detects possible Active Directory enumeration via LDAP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Exploitation of Exchange RCE CVE-2021-42321 - builtin]
description = Detects log entries that appear in exploitation attempts against MS Exchange RCE CVE-2021-42321
search = index=wineventlog* (source="WinEventLog:MSExchange Management" (EventCode="6" OR EventCode="8") ("Cmdlet failed. Cmdlet Get-App, " OR "Task Get-App throwing unhandled exception: System.InvalidCastException:")) | eval sigma_attack_tags="attack.lateral_movement attack.t1210" | eval sigma_title="Possible Exploitation of Exchange RCE CVE-2021-42321" | eval sigma_description="Detects log entries that appear in exploitation attempts against MS Exchange RCE CVE-2021-42321"
dispatch.earliest_time = -24h@h
alert.track = 0

[ProxyLogon MSExchange OabVirtualDirectory - builtin]
description = Detects specific patterns found after a successful ProxyLogon exploitation in relation to a Commandlet invocation of Set-OabVirtualDirectory
search = index=wineventlog* (source="WinEventLog:MSExchange Management" ("OabVirtualDirectory" " -ExternalUrl ") ("eval(request" OR "http://f/<script" OR "\"unsafe\"};" OR "function Page_Load()")) | eval sigma_attack_tags="attack.t1587.001 attack.resource_development" | eval sigma_title="ProxyLogon MSExchange OabVirtualDirectory" | eval sigma_description="Detects specific patterns found after a successful ProxyLogon exploitation in relation to a Commandlet invocation of Set-OabVirtualDirectory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certificate Request Export to Exchange Webserver - builtin]
description = Detects a write of an Exchange CSR to an untypical directory or with aspx name suffix which can be used to place a webshell
search = index=wineventlog* (source="WinEventLog:MSExchange Management" ("New-ExchangeCertificate" " -GenerateRequest" " -BinaryEncoded" " -RequestFile") ("\\\\localhost\\C$" OR "\\\\127.0.0.1\\C$" OR "C:\\inetpub" OR ".aspx")) | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Certificate Request Export to Exchange Webserver" | eval sigma_description="Detects a write of an Exchange CSR to an untypical directory or with aspx name suffix which can be used to place a webshell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mailbox Export to Exchange Webserver - builtin]
description = Detects a successful export of an Exchange mailbox to untypical directory or with aspx name suffix which can be used to place a webshell or the needed role assignment for it
search = index=wineventlog* (source="WinEventLog:MSExchange Management" ((("New-MailboxExportRequest" " -Mailbox ") ("-FilePath \"\\\\localhost\\C$" OR "-FilePath \"\\\\127.0.0.1\\C$" OR ".aspx")) OR ("New-ManagementRoleAssignment" " -Role \"Mailbox Import Export\"" " -User "))) | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Mailbox Export to Exchange Webserver" | eval sigma_description="Detects a successful export of an Exchange mailbox to untypical directory or with aspx name suffix which can be used to place a webshell or the needed role assignment for it"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remove Exported Mailbox from Exchange Webserver - builtin]
description = Detects removal of an exported Exchange mailbox which could be to cover tracks from ProxyShell exploit
search = index=wineventlog* (source="WinEventLog:MSExchange Management" "Remove-MailboxExportRequest" " -Identity " " -Confirm \"False\"") | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Remove Exported Mailbox from Exchange Webserver" | eval sigma_description="Detects removal of an exported Exchange mailbox which could be to cover tracks from ProxyShell exploit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed MSExchange Transport Agent Installation - builtin]
description = Detects a failed installation of a Exchange Transport Agent
search = index=wineventlog* (source="WinEventLog:MSExchange Management" EventCode="6" "Install-TransportAgent") | table AssemblyPath | eval sigma_attack_tags="attack.persistence attack.t1505.002" | eval sigma_title="Failed MSExchange Transport Agent Installation" | eval sigma_description="Detects a failed installation of a Exchange Transport Agent"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSExchange Transport Agent Installation - builtin]
description = Detects the Installation of a Exchange Transport Agent
search = index=wineventlog* (source="WinEventLog:MSExchange Management" "Install-TransportAgent") | table AssemblyPath | eval sigma_attack_tags="attack.persistence attack.t1505.002" | eval sigma_title="MSExchange Transport Agent Installation" | eval sigma_description="Detects the Installation of a Exchange Transport Agent"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange Set OabVirtualDirectory ExternalUrl Property - builtin]
description = Rule to detect an adversary setting OabVirtualDirectory External URL property to a script in Exchange Management log
search = index=wineventlog* (source="WinEventLog:MSExchange Management" "Set-OabVirtualDirectory" "ExternalUrl" "Page_Load" "script") | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Exchange Set OabVirtualDirectory ExternalUrl Property" | eval sigma_description="Rule to detect an adversary setting OabVirtualDirectory External URL property to a script in Exchange Management log"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Scheduled Task Creations - builtin]
description = This rule detects rare scheduled task creations. Typically software gets installed on multiple systems and not only on a few. The aggregation and count function selects tasks with rare names.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-TaskScheduler/Operational" EventCode="106" NOT ((TaskName="\\Microsoft\\Windows\\Windows Defender\\Windows Defender Scheduled Scan"))) | eventstats count as val by TaskName| search val < 5 | eval sigma_attack_tags="attack.persistence attack.s0111 attack.t1053.005" | eval sigma_title="Rare Scheduled Task Creations" | eval sigma_description="This rule detects rare scheduled task creations. Typically software gets installed on multiple systems and not only on a few. The aggregation and count function selects tasks with rare names."
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - builtin]
description = Detects suspicious WMI event filter and command line event consumer based on WMI and Security Logs.
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-WMI-Activity/Operational" ((EventCode="5861" ("ActiveScriptEventConsumer" OR "CommandLineEventConsumer" OR "CommandLineTemplate")) OR EventCode="5859") NOT (Provider="SCM Event Provider" Query="select * from MSFT_SCMEventLogEvent" Account_Name="S-1-5-32-544" PossibleCause="Permanent")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.003" | eval sigma_title="WMI Persistence" | eval sigma_description="Detects suspicious WMI event filter and command line event consumer based on WMI and Security Logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Ngrok Usage with Remote Desktop Service - builtin]
description = Detects cases in which ngrok, a reverse proxy tool, forwards events to the local RDP port, which could be a sign of malicious behaviour
search = index=wineventlog* (source="WinEventLog:Microsoft-Windows-TerminalServices-LocalSessionManager/Operational" EventCode="21" Address="*16777216*") | eval sigma_attack_tags="attack.command_and_control attack.t1090" | eval sigma_title="Ngrok Usage with Remote Desktop Service" | eval sigma_description="Detects cases in which ngrok, a reverse proxy tool, forwards events to the local RDP port, which could be a sign of malicious behaviour"
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts - powershell]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=wineventlog* (HostApplication="*" NOT (HostApplication="C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe*" OR ContextInfo="*Citrix\\ConfigSync\\ConfigSync.ps1*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Alternate PowerShell Hosts" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Delete Volume Shadow Copies Via WMI With PowerShell - powershell]
description = Shadow Copies deletion using operating systems utilities via PowerShell
search = index=wineventlog* (HostApplication="*Get-WmiObject*" HostApplication="* Win32_Shadowcopy*" (HostApplication="*Delete()*" OR HostApplication="*Remove-WmiObject*")) | table HostApplication | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Delete Volume Shadow Copies Via WMI With PowerShell" | eval sigma_description="Shadow Copies deletion using operating systems utilities via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - powershell]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=wineventlog* (EngineVersion="2.*" NOT (HostVersion="2.*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059.001" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Called from an Executable Version Mismatch - powershell]
description = Detects PowerShell called from an executable by the version mismatch method
search = index=wineventlog* ((EngineVersion="2.*" OR EngineVersion="4.*" OR EngineVersion="5.*") HostVersion="3.*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059.001" | eval sigma_title="PowerShell Called from an Executable Version Mismatch" | eval sigma_description="Detects PowerShell called from an executable by the version mismatch method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netcat The Powershell Version - powershell]
description = Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network
search = index=wineventlog* (HostApplication="*powercat *" OR HostApplication="*powercat.ps1*") | eval sigma_attack_tags="attack.command_and_control attack.t1095" | eval sigma_title="Netcat The Powershell Version" | eval sigma_description="Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session (PS Classic) - powershell]
description = Detects remote PowerShell sessions
search = index=wineventlog* (HostName="ServerRemoteHost" HostApplication="*wsmprovhost.exe*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.006" | eval sigma_title="Remote PowerShell Session (PS Classic)" | eval sigma_description="Detects remote PowerShell sessions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Powershell Under Powershell Channel - powershell]
description = Detects renamed powershell
search = index=wineventlog* (HostName="ConsoleHost" NOT ((HostApplication="powershell.exe*" OR HostApplication="C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Renamed Powershell Under Powershell Channel" | eval sigma_description="Detects renamed powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusable Invoke-ATHRemoteFXvGPUDisablementCommand - powershell]
description = RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).
search = index=wineventlog* (source="WinEventLog:Windows PowerShell" HostApplication="*Invoke-ATHRemoteFXvGPUDisablementCommand *" (HostApplication="*-ModuleName *" OR HostApplication="*-ModulePath *" OR HostApplication="*-ScriptBlock *" OR HostApplication="*-RemoteFXvGPUDisablementFilePath*")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusable Invoke-ATHRemoteFXvGPUDisablementCommand" | eval sigma_description="RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download - powershell]
description = Detects suspicious PowerShell download command
search = index=wineventlog* ((HostApplication="*System.Net.WebClient*" HostApplication="*.DownloadFile(*") OR (HostApplication="*System.Net.WebClient*" HostApplication="*.DownloadString(*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Download" | eval sigma_description="Detects suspicious PowerShell download command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Zip A Folder With PowerShell For Staging In Temp - powershell]
description = Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration
search = index=wineventlog* (source="WinEventLog:Windows PowerShell" HostApplication="*Compress-Archive *" HostApplication="* -Path *" HostApplication="* -DestinationPath *" HostApplication="*$env:TEMP\\*") | eval sigma_attack_tags="attack.collection attack.t1074.001" | eval sigma_title="Zip A Folder With PowerShell For Staging In Temp" | eval sigma_description="Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tamper Windows Defender - powershell]
description = Attempting to disable scheduled scanning and other parts of windows defender atp.
search = index=wineventlog* (HostApplication="*Set-MpPreference*" (HostApplication="*-DisableRealtimeMonitoring 1*" OR HostApplication="*-DisableBehaviorMonitoring 1*" OR HostApplication="*-DisableScriptScanning 1*" OR HostApplication="*-DisableBlockAtFirstSeen 1*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Tamper Windows Defender" | eval sigma_description="Attempting to disable scheduled scanning and other parts of windows defender atp."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Non PowerShell WSMAN COM Provider - powershell]
description = Detects suspicious use of the WSMAN provider without PowerShell.exe as the host application.
search = index=wineventlog* (source="WinEventLog:Windows PowerShell" ProviderName="WSMan" NOT (HostApplication="*powershell*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.003" | eval sigma_title="Suspicious Non PowerShell WSMAN COM Provider" | eval sigma_description="Detects suspicious use of the WSMAN provider without PowerShell.exe as the host application."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - powershell]
description = Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.
search = index=wineventlog* (HostName="ConsoleHost" (HostApplication="*bxor*" OR HostApplication="*join*" OR HostApplication="*char*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts - powershell]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=wineventlog* (ContextInfo="*" NOT ((ContextInfo="*powershell.exe*") OR (ContextInfo="*ConfigSyncRun.exe*") OR (ContextInfo="*C:\\Windows\\system32\\dsac.exe*") OR (ContextInfo="*C:\\Windows\\system32\\wsmprovhost.exe -Embedding*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Alternate PowerShell Hosts" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bad Opsec Powershell Code Artifacts - powershell]
description = Focuses on trivial artifacts observed in variants of prevalent offensive ps1 payloads, including Cobalt Strike Beacon, PoshC2, Powerview, Letmein, Empire, Powersploit, and other attack payloads that often undergo minimal changes by attackers due to bad opsec.
search = index=wineventlog* (Payload="*$DoIt*" OR Payload="*harmj0y*" OR Payload="*mattifestation*" OR Payload="*_RastaMouse*" OR Payload="*tifkin_*" OR Payload="*0xdeadbeef*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Bad Opsec Powershell Code Artifacts" | eval sigma_description="Focuses on trivial artifacts observed in variants of prevalent offensive ps1 payloads, including Cobalt Strike Beacon, PoshC2, Powerview, Letmein, Empire, Powersploit, and other attack payloads that often undergo minimal changes by attackers due to bad opsec."
dispatch.earliest_time = -24h@h
alert.track = 0

[Clear PowerShell History - powershell]
description = Detects keywords that could indicate clearing PowerShell history
search = index=wineventlog* (((Payload="*Set-PSReadlineOption*" Payload="*–HistorySaveStyle*" Payload="*SaveNothing*") OR (Payload="*Set-PSReadlineOption*" Payload="*-HistorySaveStyle*" Payload="*SaveNothing*")) OR ((Payload="*del*" OR Payload="*Remove-Item*" OR Payload="*rm*") Payload="*(Get-PSReadlineOption).HistorySavePath*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.003" | eval sigma_title="Clear PowerShell History" | eval sigma_description="Detects keywords that could indicate clearing PowerShell history"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Decompress Commands - powershell]
description = A General detection for specific decompress commands in PowerShell logs. This could be an adversary decompressing files.
search = index=wineventlog* Payload="*Expand-Archive*" | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="PowerShell Decompress Commands" | eval sigma_description="A General detection for specific decompress commands in PowerShell logs. This could be an adversary decompressing files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get-ADDBAccount Usage - powershell]
description = Detects suspicious invocation of the Get-ADDBAccount script that reads from a ntds.dit file and may be used to get access to credentials without using any credential dumpers
search = index=wineventlog* (Payload="*Get-ADDBAccount*" Payload="*BootKey *" Payload="*DatabasePath *") | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Suspicious Get-ADDBAccount Usage" | eval sigma_description="Detects suspicious invocation of the Get-ADDBAccount script that reads from a ntds.dit file and may be used to get access to credentials without using any credential dumpers"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get Clipboard - powershell]
description = A General detection for the Get-Clipboard commands in PowerShell logs. This could be an adversary capturing clipboard contents.
search = index=wineventlog* Payload="*Get-Clipboard*" | eval sigma_attack_tags="attack.collection attack.t1115" | eval sigma_title="PowerShell Get Clipboard" | eval sigma_description="A General detection for the Get-Clipboard commands in PowerShell logs. This could be an adversary capturing clipboard contents."
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation COMPRESS OBFUSCATION - powershell]
description = Detects Obfuscated Powershell via COMPRESS OBFUSCATION
search = index=wineventlog* (Payload="*new-object*" Payload="*text.encoding]::ascii*" (Payload="*system.io.compression.deflatestream*" OR Payload="*system.io.streamreader*") Payload="*readtoend") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation COMPRESS OBFUSCATION" | eval sigma_description="Detects Obfuscated Powershell via COMPRESS OBFUSCATION"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation RUNDLL LAUNCHER - powershell]
description = Detects Obfuscated Powershell via RUNDLL LAUNCHER
search = index=wineventlog* (Payload="*rundll32.exe*" Payload="*shell32.dll*" Payload="*shellexec_rundll*" Payload="*powershell*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation RUNDLL LAUNCHER" | eval sigma_description="Detects Obfuscated Powershell via RUNDLL LAUNCHER"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use MSHTA - powershell]
description = Detects Obfuscated Powershell via use MSHTA in Scripts
search = index=wineventlog* (Payload="*set*" Payload="*&&*" Payload="*mshta*" Payload="*vbscript:createobject*" Payload="*.run*" Payload="*(window.close)*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use MSHTA" | eval sigma_description="Detects Obfuscated Powershell via use MSHTA in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Rundll32 - powershell]
description = Detects Obfuscated Powershell via use Rundll32 in Scripts
search = index=wineventlog* (Payload="*&&*" Payload="*rundll32*" Payload="*shell32.dll*" Payload="*shellexec_rundll*" (Payload="*value*" OR Payload="*invoke*" OR Payload="*comspec*" OR Payload="*iex*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Rundll32" | eval sigma_description="Detects Obfuscated Powershell via use Rundll32 in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netcat The Powershell Version - powershell]
description = Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network
search = index=wineventlog* (ContextInfo="*powercat *" OR ContextInfo="*powercat.ps1*") | eval sigma_attack_tags="attack.command_and_control attack.t1095" | eval sigma_title="Netcat The Powershell Version" | eval sigma_description="Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session (PS Module) - powershell]
description = Detects remote PowerShell sessions
search = index=wineventlog* ((ContextInfo="* = ServerRemoteHost *" ContextInfo="*wsmprovhost.exe*") NOT ((ContextInfo="*\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Microsoft.PowerShell.Archive\\Microsoft.PowerShell.Archive.psm1*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.006" | eval sigma_title="Remote PowerShell Session (PS Module)" | eval sigma_description="Detects remote PowerShell sessions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Information for AD Groups or DoesNotRequirePreAuth User - powershell]
description = Adversaries may attempt to find domain-level groups and permission settings.
The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as domain administrators. 

search = index=wineventlog* (Payload="*get-ADPrincipalGroupMembership*" OR ContextInfo="*get-ADPrincipalGroupMembership*" OR (Payload="*get-aduser*" Payload="*-f *" Payload="*-pr *" Payload="*DoesNotRequirePreAuth*") OR (ContextInfo="*get-aduser*" ContextInfo="*-f *" ContextInfo="*-pr *" ContextInfo="*DoesNotRequirePreAuth*")) | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Information for AD Groups or DoesNotRequirePreAuth User" | eval sigma_description="Adversaries may attempt to find domain-level groups and permission settings.
The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as domain administrators. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusable Invoke-ATHRemoteFXvGPUDisablementCommand - powershell]
description = RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).
search = index=wineventlog* (ContextInfo="*Invoke-ATHRemoteFXvGPUDisablementCommand *" (ContextInfo="*-ModuleName *" OR ContextInfo="*-ModulePath *" OR ContextInfo="*-ScriptBlock *" OR ContextInfo="*-RemoteFXvGPUDisablementFilePath*")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusable Invoke-ATHRemoteFXvGPUDisablementCommand" | eval sigma_description="RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download - powershell]
description = Detects suspicious PowerShell download command
search = index=wineventlog* (ContextInfo="*System.Net.WebClient*" (ContextInfo="*.DownloadFile(*" OR ContextInfo="*.DownloadString(*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Download" | eval sigma_description="Detects suspicious PowerShell download command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Generic - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=wineventlog* ((ContextInfo="* -enc *" OR ContextInfo="* -EncodedCommand *") (ContextInfo="* -w hidden *" OR ContextInfo="* -window hidden *" OR ContextInfo="* -windowstyle hidden *") (ContextInfo="* -noni *" OR ContextInfo="* -noninteractive *")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Invocations - Generic" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Specific - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=wineventlog* (((ContextInfo="*-nop*" ContextInfo="* -w *" ContextInfo="*hidden*" ContextInfo="* -c *" ContextInfo="*[Convert]::FromBase64String*") OR (ContextInfo="* -w *" ContextInfo="*hidden*" ContextInfo="*-noni*" ContextInfo="*-nop*" ContextInfo="* -c *" ContextInfo="*iex*" ContextInfo="*New-Object*") OR (ContextInfo="* -w *" ContextInfo="*hidden*" ContextInfo="*-ep*" ContextInfo="*bypass*" ContextInfo="*-Enc*") OR (ContextInfo="*powershell*" ContextInfo="*reg*" ContextInfo="*add*" ContextInfo="*HKCU\\software\\microsoft\\windows\\currentversion\\run*") OR (ContextInfo="*bypass*" ContextInfo="*-noprofile*" ContextInfo="*-windowstyle*" ContextInfo="*hidden*" ContextInfo="*new-object*" ContextInfo="*system.net.webclient*" ContextInfo="*.download*") OR (ContextInfo="*iex*" ContextInfo="*New-Object*" ContextInfo="*Net.WebClient*" ContextInfo="*.Download*")) NOT (((ContextInfo="*(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1*" OR ContextInfo="*Write-ChocolateyWarning*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Invocations - Specific" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Local Groups Information - powershell]
description = Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.

search = index=wineventlog* ((Payload="*get-localgroup*" OR Payload="*Get-LocalGroupMember*") OR (ContextInfo="*get-localgroup*" OR ContextInfo="*Get-LocalGroupMember*") OR (Payload="*Get-WMIObject*" Payload="*Win32_Group*") OR (ContextInfo="*Get-WMIObject*" ContextInfo="*Win32_Group*")) | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Local Groups Information" | eval sigma_description="Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Computer Machine Password by PowerShell - powershell]
description = The Reset-ComputerMachinePassword cmdlet changes the computer account password that the computers use to authenticate to the domain controllers in the domain. You can use it to reset the password of the local computer.
search = index=wineventlog* ContextInfo="*Reset-ComputerMachinePassword*" | eval sigma_attack_tags="attack.initial_access attack.t1078" | eval sigma_title="Suspicious Computer Machine Password by PowerShell" | eval sigma_description="The Reset-ComputerMachinePassword cmdlet changes the computer account password that the computers use to authenticate to the domain controllers in the domain. You can use it to reset the password of the local computer."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Information for SMB Share - powershell]
description = Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and
to identify potential systems of interest for Lateral Movement.
Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. 

search = index=wineventlog* (Payload="*get-smbshare*" OR ContextInfo="*get-smbshare*") | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Information for SMB Share" | eval sigma_description="Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and
to identify potential systems of interest for Lateral Movement.
Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Zip A Folder With PowerShell For Staging In Temp - powershell]
description = Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration
search = index=wineventlog* (ContextInfo="*Compress-Archive *" ContextInfo="* -Path *" ContextInfo="* -DestinationPath *" ContextInfo="*$env:TEMP\\*") | eval sigma_attack_tags="attack.collection attack.t1074.001" | eval sigma_title="Zip A Folder With PowerShell For Staging In Temp" | eval sigma_description="Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer Execution to Bypass Powershell Restriction - powershell]
description = Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions.
search = index=wineventlog* ContextInfo="*SyncAppvPublishingServer.exe*" | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="SyncAppvPublishingServer Execution to Bypass Powershell Restriction" | eval sigma_description="Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Access to Browser Login Data - powershell]
description = Adversaries may acquire credentials from web browsers by reading files specific to the target browser.
Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.
Web browsers typically store the credentials in an encrypted format within a credential store.

search = index=wineventlog* (ScriptBlockText="*Copy-Item*" ScriptBlockText="*-Destination*" (ScriptBlockText="*\\Opera Software\\Opera Stable\\Login Data*" OR ScriptBlockText="*\\Mozilla\\Firefox\\Profiles*" OR ScriptBlockText="*\\Microsoft\\Edge\\User Data\\Default*" OR ScriptBlockText="*\\Google\\Chrome\\User Data\\Default\\Login Data*" OR ScriptBlockText="*\\Google\\Chrome\\User Data\\Default\\Login Data For Account*")) | eval sigma_attack_tags="attack.credential_access attack.t1555.003" | eval sigma_title="Access to Browser Login Data" | eval sigma_description="Adversaries may acquire credentials from web browsers by reading files specific to the target browser.
Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.
Web browsers typically store the credentials in an encrypted format within a credential store.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Accessing WinAPI in PowerShell - powershell]
description = Detecting use WinAPI Functions in PowerShell
search = index=wineventlog* ((ScriptBlockText="*WaitForSingleObject*" OR ScriptBlockText="*QueueUserApc*" OR ScriptBlockText="*RtlCreateUserThread*" OR ScriptBlockText="*OpenProcess*" OR ScriptBlockText="*VirtualAlloc*" OR ScriptBlockText="*VirtualFree*" OR ScriptBlockText="*WriteProcessMemory*" OR ScriptBlockText="*CreateUserThread*" OR ScriptBlockText="*CloseHandle*" OR ScriptBlockText="*GetDelegateForFunctionPointer*" OR ScriptBlockText="*CreateThread*" OR ScriptBlockText="*memcpy*" OR ScriptBlockText="*LoadLibrary*" OR ScriptBlockText="*GetModuleHandle*" OR ScriptBlockText="*GetProcAddress*" OR ScriptBlockText="*VirtualProtect*" OR ScriptBlockText="*FreeLibrary*" OR ScriptBlockText="*ReadProcessMemory*" OR ScriptBlockText="*CreateRemoteThread*" OR ScriptBlockText="*AdjustTokenPrivileges*" OR ScriptBlockText="*WriteInt32*" OR ScriptBlockText="*OpenThreadToken*" OR ScriptBlockText="*PtrToString*" OR ScriptBlockText="*FreeHGlobal*" OR ScriptBlockText="*ZeroFreeGlobalAllocUnicode*" OR ScriptBlockText="*OpenProcessToken*" OR ScriptBlockText="*GetTokenInformation*" OR ScriptBlockText="*SetThreadToken*" OR ScriptBlockText="*ImpersonateLoggedOnUser*" OR ScriptBlockText="*RevertToSelf*" OR ScriptBlockText="*GetLogonSessionData*" OR ScriptBlockText="*CreateProcessWithToken*" OR ScriptBlockText="*DuplicateTokenEx*" OR ScriptBlockText="*OpenWindowStation*" OR ScriptBlockText="*OpenDesktop*" OR ScriptBlockText="*MiniDumpWriteDump*" OR ScriptBlockText="*AddSecurityPackage*" OR ScriptBlockText="*EnumerateSecurityPackages*" OR ScriptBlockText="*GetProcessHandle*" OR ScriptBlockText="*DangerousGetHandle*" OR ScriptBlockText="*kernel32*" OR ScriptBlockText="*Advapi32*" OR ScriptBlockText="*msvcrt*" OR ScriptBlockText="*ntdll*" OR ScriptBlockText="*secur32*") NOT ((ScriptBlockText="# Copyright 2016 Amazon.com, Inc. or its affiliates.*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1106" | eval sigma_title="Accessing WinAPI in PowerShell" | eval sigma_description="Detecting use WinAPI Functions in PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell ADRecon Execution - powershell]
description = Detects execution of ADRecon.ps1 for AD reconnaissance which has been reported to be actively used by FIN7
search = index=wineventlog* (ScriptBlockText="*Function Get-ADRExcelComOb*" OR ScriptBlockText="*ADRecon-Report.xlsx*") | eval sigma_attack_tags="attack.discovery attack.execution attack.t1059.001" | eval sigma_title="PowerShell ADRecon Execution" | eval sigma_description="Detects execution of ADRecon.ps1 for AD reconnaissance which has been reported to be actively used by FIN7"
dispatch.earliest_time = -24h@h
alert.track = 0

[Automated Collection Command PowerShell - powershell]
description = Once established within a system or network, an adversary may use automated techniques for collecting internal data.
search = index=wineventlog* ((ScriptBlockText="*.doc*" OR ScriptBlockText="*.docx*" OR ScriptBlockText="*.xls*" OR ScriptBlockText="*.xlsx*" OR ScriptBlockText="*.ppt*" OR ScriptBlockText="*.pptx*" OR ScriptBlockText="*.rtf*" OR ScriptBlockText="*.pdf*" OR ScriptBlockText="*.txt*") ScriptBlockText="*Get-ChildItem*" ScriptBlockText="* -Recurse *" ScriptBlockText="* -Include *") | eval sigma_attack_tags="attack.collection attack.t1119" | eval sigma_title="Automated Collection Command PowerShell" | eval sigma_description="Once established within a system or network, an adversary may use automated techniques for collecting internal data."
dispatch.earliest_time = -24h@h
alert.track = 0

[AzureHound PowerShell Commands - powershell]
description = Detects the execution of AzureHound in PowerShell, a tool to gather data from Azure for BloodHound
search = index=wineventlog* ScriptBlockText="*Invoke-AzureHound*" | eval sigma_attack_tags="attack.discovery attack.t1482 attack.t1087 attack.t1087.001 attack.t1087.002 attack.t1069.001 attack.t1069.002 attack.t1069" | eval sigma_title="AzureHound PowerShell Commands" | eval sigma_description="Detects the execution of AzureHound in PowerShell, a tool to gather data from Azure for BloodHound"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 (2 Lines) - powershell]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=wineventlog* (ScriptBlockText="*CL_Invocation.ps1*" OR ScriptBlockText="*SyncInvoke*") | eventstats dc(ScriptBlockText) as val by Computer | search val > 2 | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1 (2 Lines)" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 - powershell]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=wineventlog* (ScriptBlockText="*CL_Invocation.ps1*" ScriptBlockText="*SyncInvoke*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Mutexverifiers.ps1 (2 Lines) - powershell]
description = Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module
search = index=wineventlog* (ScriptBlockText="*CL_Mutexverifiers.ps1*" OR ScriptBlockText="*runAfterCancelProcess*") | eventstats dc(ScriptBlockText) as val by Computer | search val > 2 | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Mutexverifiers.ps1 (2 Lines)" | eval sigma_description="Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Mutexverifiers.ps1 - powershell]
description = Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module
search = index=wineventlog* (ScriptBlockText="*CL_Mutexverifiers.ps1*" ScriptBlockText="*runAfterCancelProcess*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Mutexverifiers.ps1" | eval sigma_description="Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Clear PowerShell History - powershell]
description = Detects keywords that could indicate clearing PowerShell history
search = index=wineventlog* (((ScriptBlockText="*Set-PSReadlineOption*" ScriptBlockText="*–HistorySaveStyle*" ScriptBlockText="*SaveNothing*") OR (ScriptBlockText="*Set-PSReadlineOption*" ScriptBlockText="*-HistorySaveStyle*" ScriptBlockText="*SaveNothing*")) OR ((ScriptBlockText="*del*" OR ScriptBlockText="*Remove-Item*" OR ScriptBlockText="*rm*") ScriptBlockText="*(Get-PSReadlineOption).HistorySavePath*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.003" | eval sigma_title="Clear PowerShell History" | eval sigma_description="Detects keywords that could indicate clearing PowerShell history"
dispatch.earliest_time = -24h@h
alert.track = 0

[Clearing Windows Console History - powershell]
description = Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion.
search = index=wineventlog* (ScriptBlockText="*Clear-History*" OR ((ScriptBlockText="*Remove-Item*" OR ScriptBlockText="*rm*") (ScriptBlockText="*ConsoleHost_history.txt*" OR ScriptBlockText="*(Get-PSReadlineOption).HistorySavePath*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1070.003" | eval sigma_title="Clearing Windows Console History" | eval sigma_description="Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Create Local User - powershell]
description = Detects creation of a local user via PowerShell
search = index=wineventlog* ScriptBlockText="*New-LocalUser*" | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.persistence attack.t1136.001" | eval sigma_title="PowerShell Create Local User" | eval sigma_description="Detects creation of a local user via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Create Volume Shadow Copy with Powershell - powershell]
description = Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information
search = index=wineventlog* (ScriptBlockText="*win32_shadowcopy*" ScriptBlockText="*).Create(*" ScriptBlockText="*ClientAccessible*") | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Create Volume Shadow Copy with Powershell" | eval sigma_description="Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - PowerShell - powershell]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.
search = index=wineventlog* (ScriptBlockText="*-Recurse*" ScriptBlockText="*|*" ScriptBlockText="*Compress-Archive*") | eval sigma_attack_tags="attack.exfiltration attack.t1560" | eval sigma_title="Data Compressed - PowerShell" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Detect Virtualization Environment - powershell]
description = Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox
search = index=wineventlog* ((ScriptBlockText="*Get-WmiObject*" OR ScriptBlockText="*gwmi*") (ScriptBlockText="*MSAcpi_ThermalZoneTemperature*" OR ScriptBlockText="*Win32_ComputerSystem*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1497.001" | eval sigma_title="Powershell Detect Virtualization Environment" | eval sigma_description="Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dnscat Execution - powershell]
description = Dnscat exfiltration tool execution
search = index=wineventlog* ScriptBlockText="*Start-Dnscat2*" | eval sigma_attack_tags="attack.exfiltration attack.t1048 attack.execution attack.t1059.001" | eval sigma_title="Dnscat Execution" | eval sigma_description="Dnscat exfiltration tool execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dump Credentials from Windows Credential Manager With PowerShell - powershell]
description = Adversaries may search for common password storage locations to obtain user credentials.
Passwords are stored in several places on a system, depending on the operating system or application holding the credentials.

search = index=wineventlog* ((ScriptBlockText="*Get-PasswordVaultCredentials*" OR ScriptBlockText="*Get-CredManCreds*") OR (ScriptBlockText="*New-Object*" ScriptBlockText="*Windows.Security.Credentials.PasswordVault*") OR (ScriptBlockText="*New-Object*" ScriptBlockText="*Microsoft.CSharp.CSharpCodeProvider*" ScriptBlockText="*[System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())*" ScriptBlockText="*Collections.ArrayList*" ScriptBlockText="*System.CodeDom.Compiler.CompilerParameters*")) | eval sigma_attack_tags="attack.credential_access attack.t1555" | eval sigma_title="Dump Credentials from Windows Credential Manager With PowerShell" | eval sigma_description="Adversaries may search for common password storage locations to obtain user credentials.
Passwords are stored in several places on a system, depending on the operating system or application holding the credentials.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumerate Credentials from Windows Credential Manager With PowerShell - powershell]
description = Adversaries may search for common password storage locations to obtain user credentials.
Passwords are stored in several places on a system, depending on the operating system or application holding the credentials.

search = index=wineventlog* (ScriptBlockText="*vaultcmd*" ScriptBlockText="*/listcreds:*" (ScriptBlockText="*Windows Credentials*" OR ScriptBlockText="*Web Credentials*")) | eval sigma_attack_tags="attack.credential_access attack.t1555" | eval sigma_title="Enumerate Credentials from Windows Credential Manager With PowerShell" | eval sigma_description="Adversaries may search for common password storage locations to obtain user credentials.
Passwords are stored in several places on a system, depending on the operating system or application holding the credentials.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - powershell]
description = Detects usage of powershell cmdlets to disable or remove ETW trace sessions
search = index=wineventlog* (ScriptBlockText="*Remove-EtwTraceProvider *" OR (ScriptBlockText="*Set-EtwTraceProvider *" ScriptBlockText="*0x11*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562.006 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects usage of powershell cmdlets to disable or remove ETW trace sessions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell File and Directory Discovery - powershell]
description = Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.
Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors,
including whether or not the adversary fully infects the target and/or attempts specific actions.

search = index=wineventlog* ((ScriptBlockText="*ls*" OR ScriptBlockText="*get-childitem*" OR ScriptBlockText="*gci*") ScriptBlockText="*-recurse*") | eval sigma_attack_tags="attack.discovery attack.t1083" | eval sigma_title="Powershell File and Directory Discovery" | eval sigma_description="Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.
Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors,
including whether or not the adversary fully infects the target and/or attempts specific actions.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Automated Collection Bookmarks Using Get-ChildItem PowerShell - powershell]
description = Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.

search = index=wineventlog* (ScriptBlockText="*Get-ChildItem*" ScriptBlockText="* -Recurse *" ScriptBlockText="* -Path *" ScriptBlockText="* -Filter Bookmarks*" ScriptBlockText="* -ErrorAction SilentlyContinue*" ScriptBlockText="* -Force*") | eval sigma_attack_tags="attack.discovery attack.t1217" | eval sigma_title="Automated Collection Bookmarks Using Get-ChildItem PowerShell" | eval sigma_description="Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Hotfix Enumeration - powershell]
description = Detects call to 'Win32_QuickFixEngineering' in order to enumerate installed hotfixes often used in 'enum' scripts by attackers
search = index=wineventlog* (ScriptBlockText="*Win32_QuickFixEngineering*" ScriptBlockText="*HotFixID*") | eval sigma_attack_tags="attack.discovery" | eval sigma_title="PowerShell Hotfix Enumeration" | eval sigma_description="Detects call to 'Win32_QuickFixEngineering' in order to enumerate installed hotfixes often used in 'enum' scripts by attackers"
dispatch.earliest_time = -24h@h
alert.track = 0

[PrintNightmare Powershell Exploitation - powershell]
description = Detects Commandlet name for PrintNightmare exploitation.
search = index=wineventlog* ScriptBlockText="*Invoke-Nightmare*" | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="PrintNightmare Powershell Exploitation" | eval sigma_description="Detects Commandlet name for PrintNightmare exploitation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation COMPRESS OBFUSCATION - powershell]
description = Detects Obfuscated Powershell via COMPRESS OBFUSCATION
search = index=wineventlog* (ScriptBlockText="*new-object*" ScriptBlockText="*text.encoding]::ascii*" (ScriptBlockText="*system.io.compression.deflatestream*" OR ScriptBlockText="*system.io.streamreader*") ScriptBlockText="*readtoend") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation COMPRESS OBFUSCATION" | eval sigma_description="Detects Obfuscated Powershell via COMPRESS OBFUSCATION"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation RUNDLL LAUNCHER - powershell]
description = Detects Obfuscated Powershell via RUNDLL LAUNCHER
search = index=wineventlog* (ScriptBlockText="*rundll32.exe*" ScriptBlockText="*shell32.dll*" ScriptBlockText="*shellexec_rundll*" ScriptBlockText="*powershell*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation RUNDLL LAUNCHER" | eval sigma_description="Detects Obfuscated Powershell via RUNDLL LAUNCHER"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use MSHTA - powershell]
description = Detects Obfuscated Powershell via use MSHTA in Scripts
search = index=wineventlog* (ScriptBlockText="*set*" ScriptBlockText="*&&*" ScriptBlockText="*mshta*" ScriptBlockText="*vbscript:createobject*" ScriptBlockText="*.run*" ScriptBlockText="*(window.close)*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use MSHTA" | eval sigma_description="Detects Obfuscated Powershell via use MSHTA in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Rundll32 - powershell]
description = Detects Obfuscated Powershell via use Rundll32 in Scripts
search = index=wineventlog* (ScriptBlockText="*&&*" ScriptBlockText="*rundll32*" ScriptBlockText="*shell32.dll*" ScriptBlockText="*shellexec_rundll*" (ScriptBlockText="*value*" OR ScriptBlockText="*invoke*" OR ScriptBlockText="*comspec*" OR ScriptBlockText="*iex*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Rundll32" | eval sigma_description="Detects Obfuscated Powershell via use Rundll32 in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Keylogging - powershell]
description = Adversaries may log user keystrokes to intercept credentials as the user types them.
search = index=wineventlog* (ScriptBlockText="*Get-Keystrokes*" OR (ScriptBlockText="*Get-ProcAddress user32.dll GetAsyncKeyState*" ScriptBlockText="*Get-ProcAddress user32.dll GetForegroundWindow*")) | eval sigma_attack_tags="attack.collection attack.t1056.001" | eval sigma_title="Powershell Keylogging" | eval sigma_description="Adversaries may log user keystrokes to intercept credentials as the user types them."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Commandlets - powershell]
description = Detects Commandlet names from well-known PowerShell exploitation frameworks
search = index=wineventlog* ((ScriptBlockText="*Invoke-DllInjection*" OR ScriptBlockText="*Invoke-Shellcode*" OR ScriptBlockText="*Invoke-WmiCommand*" OR ScriptBlockText="*Get-GPPPassword*" OR ScriptBlockText="*Get-Keystrokes*" OR ScriptBlockText="*Get-TimedScreenshot*" OR ScriptBlockText="*Get-VaultCredential*" OR ScriptBlockText="*Invoke-CredentialInjection*" OR ScriptBlockText="*Invoke-Mimikatz*" OR ScriptBlockText="*Invoke-NinjaCopy*" OR ScriptBlockText="*Invoke-TokenManipulation*" OR ScriptBlockText="*Out-Minidump*" OR ScriptBlockText="*VolumeShadowCopyTools*" OR ScriptBlockText="*Invoke-ReflectivePEInjection*" OR ScriptBlockText="*Invoke-UserHunter*" OR ScriptBlockText="*Find-GPOLocation*" OR ScriptBlockText="*Invoke-ACLScanner*" OR ScriptBlockText="*Invoke-DowngradeAccount*" OR ScriptBlockText="*Get-ServiceUnquoted*" OR ScriptBlockText="*Get-ServiceFilePermission*" OR ScriptBlockText="*Get-ServicePermission*" OR ScriptBlockText="*Invoke-ServiceAbuse*" OR ScriptBlockText="*Install-ServiceBinary*" OR ScriptBlockText="*Get-RegAutoLogon*" OR ScriptBlockText="*Get-VulnAutoRun*" OR ScriptBlockText="*Get-VulnSchTask*" OR ScriptBlockText="*Get-UnattendedInstallFile*" OR ScriptBlockText="*Get-ApplicationHost*" OR ScriptBlockText="*Get-RegAlwaysInstallElevated*" OR ScriptBlockText="*Get-Unconstrained*" OR ScriptBlockText="*Add-RegBackdoor*" OR ScriptBlockText="*Add-ScrnSaveBackdoor*" OR ScriptBlockText="*Gupt-Backdoor*" OR ScriptBlockText="*Invoke-ADSBackdoor*" OR ScriptBlockText="*Enabled-DuplicateToken*" OR ScriptBlockText="*Invoke-PsUaCme*" OR ScriptBlockText="*Remove-Update*" OR ScriptBlockText="*Check-VM*" OR ScriptBlockText="*Get-LSASecret*" OR ScriptBlockText="*Get-PassHashes*" OR ScriptBlockText="*Show-TargetScreen*" OR ScriptBlockText="*Port-Scan*" OR ScriptBlockText="*Invoke-PoshRatHttp*" OR ScriptBlockText="*Invoke-PowerShellTCP*" OR ScriptBlockText="*Invoke-PowerShellWMI*" OR ScriptBlockText="*Add-Exfiltration*" OR ScriptBlockText="*Add-Persistence*" OR ScriptBlockText="*Do-Exfiltration*" OR ScriptBlockText="*Start-CaptureServer*" OR ScriptBlockText="*Get-ChromeDump*" OR ScriptBlockText="*Get-ClipboardContents*" OR ScriptBlockText="*Get-FoxDump*" OR ScriptBlockText="*Get-IndexedItem*" OR ScriptBlockText="*Get-Screenshot*" OR ScriptBlockText="*Invoke-Inveigh*" OR ScriptBlockText="*Invoke-NetRipper*" OR ScriptBlockText="*Invoke-EgressCheck*" OR ScriptBlockText="*Invoke-PostExfil*" OR ScriptBlockText="*Invoke-PSInject*" OR ScriptBlockText="*Invoke-RunAs*" OR ScriptBlockText="*MailRaider*" OR ScriptBlockText="*New-HoneyHash*" OR ScriptBlockText="*Set-MacAttribute*" OR ScriptBlockText="*Invoke-DCSync*" OR ScriptBlockText="*Invoke-PowerDump*" OR ScriptBlockText="*Exploit-Jboss*" OR ScriptBlockText="*Invoke-ThunderStruck*" OR ScriptBlockText="*Invoke-VoiceTroll*" OR ScriptBlockText="*Set-Wallpaper*" OR ScriptBlockText="*Invoke-InveighRelay*" OR ScriptBlockText="*Invoke-PsExec*" OR ScriptBlockText="*Invoke-SSHCommand*" OR ScriptBlockText="*Get-SecurityPackages*" OR ScriptBlockText="*Install-SSP*" OR ScriptBlockText="*Invoke-BackdoorLNK*" OR ScriptBlockText="*PowerBreach*" OR ScriptBlockText="*Get-SiteListPassword*" OR ScriptBlockText="*Get-System*" OR ScriptBlockText="*Invoke-BypassUAC*" OR ScriptBlockText="*Invoke-Tater*" OR ScriptBlockText="*Invoke-WScriptBypassUAC*" OR ScriptBlockText="*PowerUp*" OR ScriptBlockText="*PowerView*" OR ScriptBlockText="*Get-RickAstley*" OR ScriptBlockText="*Find-Fruit*" OR ScriptBlockText="*HTTP-Login*" OR ScriptBlockText="*Find-TrustedDocuments*" OR ScriptBlockText="*Invoke-Paranoia*" OR ScriptBlockText="*Invoke-WinEnum*" OR ScriptBlockText="*Invoke-ARPScan*" OR ScriptBlockText="*Invoke-PortScan*" OR ScriptBlockText="*Invoke-ReverseDNSLookup*" OR ScriptBlockText="*Invoke-SMBScanner*" OR ScriptBlockText="*Invoke-Mimikittenz*" OR ScriptBlockText="*Invoke-AllChecks*" OR ScriptBlockText="*Invoke-BadPotato*" OR ScriptBlockText="*Invoke-BetterSafetyKatz*" OR ScriptBlockText="*Invoke-Carbuncle*" OR ScriptBlockText="*Invoke-Certify*" OR ScriptBlockText="*Invoke-DAFT*" OR ScriptBlockText="*Invoke-DinvokeKatz*" OR ScriptBlockText="*Invoke-Eyewitness*" OR ScriptBlockText="*Invoke-FakeLogonScreen*" OR ScriptBlockText="*Invoke-Farmer*" OR ScriptBlockText="*Invoke-Get-RBCD-Threaded*" OR ScriptBlockText="*Invoke-Gopher*" OR ScriptBlockText="*Invoke-Grouper2*" OR ScriptBlockText="*Invoke-HandleKatz*" OR ScriptBlockText="*Invoke-Internalmonologue*" OR ScriptBlockText="*Invoke-KrbRelayUp*" OR ScriptBlockText="*Invoke-LdapSignCheck*" OR ScriptBlockText="*Invoke-Lockless*" OR ScriptBlockText="*Invoke-MITM6*" OR ScriptBlockText="*Invoke-NanoDump*" OR ScriptBlockText="*Invoke-OxidResolver*" OR ScriptBlockText="*Invoke-P0wnedshell*" OR ScriptBlockText="*Invoke-PPLDump*" OR ScriptBlockText="*Invoke-Rubeus*" OR ScriptBlockText="*Invoke-SCShell*" OR ScriptBlockText="*Invoke-SafetyKatz*" OR ScriptBlockText="*Invoke-SauronEye*" OR ScriptBlockText="*Invoke-Seatbelt*" OR ScriptBlockText="*Invoke-SharPersist*" OR ScriptBlockText="*Invoke-SharpAllowedToAct*" OR ScriptBlockText="*Invoke-SharpBlock*" OR ScriptBlockText="*Invoke-SharpBypassUAC*" OR ScriptBlockText="*Invoke-SharpChromium*" OR ScriptBlockText="*Invoke-SharpClipboard*" OR ScriptBlockText="*Invoke-SharpCloud*" OR ScriptBlockText="*Invoke-SharpDPAPI*" OR ScriptBlockText="*Invoke-SharpDump*" OR ScriptBlockText="*Invoke-SharpGPO-RemoteAccessPolicies*" OR ScriptBlockText="*Invoke-SharpGPOAbuse*" OR ScriptBlockText="*Invoke-SharpHandler*" OR ScriptBlockText="*Invoke-SharpHide*" OR ScriptBlockText="*Invoke-SharpHound4*" OR ScriptBlockText="*Invoke-SharpImpersonation*" OR ScriptBlockText="*Invoke-SharpImpersonationNoSpace*" OR ScriptBlockText="*Invoke-SharpKatz*" OR ScriptBlockText="*Invoke-SharpLdapRelayScan*" OR ScriptBlockText="*Invoke-SharpLoginPrompt*" OR ScriptBlockText="*Invoke-SharpMove*" OR ScriptBlockText="*Invoke-SharpPrintNightmare*" OR ScriptBlockText="*Invoke-SharpPrinter*" OR ScriptBlockText="*Invoke-SharpRDP*" OR ScriptBlockText="*Invoke-SharpSSDP*" OR ScriptBlockText="*Invoke-SharpSecDump*" OR ScriptBlockText="*Invoke-SharpSniper*" OR ScriptBlockText="*Invoke-SharpSploit*" OR ScriptBlockText="*Invoke-SharpSpray*" OR ScriptBlockText="*Invoke-SharpStay*" OR ScriptBlockText="*Invoke-SharpUp*" OR ScriptBlockText="*Invoke-SharpWatson*" OR ScriptBlockText="*Invoke-Sharphound2*" OR ScriptBlockText="*Invoke-Sharphound3*" OR ScriptBlockText="*Invoke-Sharplocker*" OR ScriptBlockText="*Invoke-Sharpshares*" OR ScriptBlockText="*Invoke-Sharpview*" OR ScriptBlockText="*Invoke-Sharpweb*" OR ScriptBlockText="*Invoke-Snaffler*" OR ScriptBlockText="*Invoke-Spoolsample*" OR ScriptBlockText="*Invoke-StandIn*" OR ScriptBlockText="*Invoke-StickyNotesExtract*" OR ScriptBlockText="*Invoke-Thunderfox*" OR ScriptBlockText="*Invoke-Tokenvator*" OR ScriptBlockText="*Invoke-UrbanBishop*" OR ScriptBlockText="*Invoke-Whisker*" OR ScriptBlockText="*Invoke-WireTap*" OR ScriptBlockText="*Invoke-winPEAS*" OR ScriptBlockText="*Invoke-Zerologon*" OR ScriptBlockText="*Get-USBKeystrokes*" OR ScriptBlockText="*Start-WebcamRecorder*") NOT (((ScriptBlockText="*Get-SystemDriveInfo*" OR ScriptBlockText="*C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\*")) OR (ScriptBlockText="# Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious PowerShell Commandlets" | eval sigma_description="Detects Commandlet names from well-known PowerShell exploitation frameworks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Keywords - powershell]
description = Detects keywords from well-known PowerShell exploitation frameworks
search = index=wineventlog* (ScriptBlockText="*AdjustTokenPrivileges*" OR ScriptBlockText="*IMAGE_NT_OPTIONAL_HDR64_MAGIC*" OR ScriptBlockText="*Microsoft.Win32.UnsafeNativeMethods*" OR ScriptBlockText="*ReadProcessMemory.Invoke*" OR ScriptBlockText="*SE_PRIVILEGE_ENABLED*" OR ScriptBlockText="*LSA_UNICODE_STRING*" OR ScriptBlockText="*MiniDumpWriteDump*" OR ScriptBlockText="*PAGE_EXECUTE_READ*" OR ScriptBlockText="*SECURITY_DELEGATION*" OR ScriptBlockText="*TOKEN_ADJUST_PRIVILEGES*" OR ScriptBlockText="*TOKEN_ALL_ACCESS*" OR ScriptBlockText="*TOKEN_ASSIGN_PRIMARY*" OR ScriptBlockText="*TOKEN_DUPLICATE*" OR ScriptBlockText="*TOKEN_ELEVATION*" OR ScriptBlockText="*TOKEN_IMPERSONATE*" OR ScriptBlockText="*TOKEN_INFORMATION_CLASS*" OR ScriptBlockText="*TOKEN_PRIVILEGES*" OR ScriptBlockText="*TOKEN_QUERY*" OR ScriptBlockText="*Metasploit*" OR ScriptBlockText="*Mimikatz*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious PowerShell Keywords" | eval sigma_description="Detects keywords from well-known PowerShell exploitation frameworks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Live Memory Dump Using Powershell - powershell]
description = Detects usage of a PowerShell command to dump the live memory of a Windows machine
search = index=wineventlog* (ScriptBlockText="*Get-StorageDiagnosticInfo*" ScriptBlockText="*-IncludeLiveDump*") | eval sigma_attack_tags="attack.t1003" | eval sigma_title="Live Memory Dump Using Powershell" | eval sigma_description="Detects usage of a PowerShell command to dump the live memory of a Windows machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Nishang PowerShell Commandlets - powershell]
description = Detects Commandlet names and arguments from the Nishang exploitation framework
search = index=wineventlog* (ScriptBlockText="*Add-ConstrainedDelegationBackdoor*" OR ScriptBlockText="*Set-DCShadowPermissions*" OR ScriptBlockText="*DNS_TXT_Pwnage*" OR ScriptBlockText="*Execute-OnTime*" OR ScriptBlockText="*HTTP-Backdoor*" OR ScriptBlockText="*Set-RemotePSRemoting*" OR ScriptBlockText="*Set-RemoteWMI*" OR ScriptBlockText="*Invoke-AmsiBypass*" OR ScriptBlockText="*Out-CHM*" OR ScriptBlockText="*Out-HTA*" OR ScriptBlockText="*Out-SCF*" OR ScriptBlockText="*Out-SCT*" OR ScriptBlockText="*Out-Shortcut*" OR ScriptBlockText="*Out-WebQuery*" OR ScriptBlockText="*Out-Word*" OR ScriptBlockText="*Enable-Duplication*" OR ScriptBlockText="*Remove-Update*" OR ScriptBlockText="*Download-Execute-PS*" OR ScriptBlockText="*Download_Execute*" OR ScriptBlockText="*Execute-Command-MSSQL*" OR ScriptBlockText="*Execute-DNSTXT-Code*" OR ScriptBlockText="*Out-RundllCommand*" OR ScriptBlockText="*Copy-VSS*" OR ScriptBlockText="*FireBuster*" OR ScriptBlockText="*FireListener*" OR ScriptBlockText="*Get-Information*" OR ScriptBlockText="*Get-PassHints*" OR ScriptBlockText="*Get-WLAN-Keys*" OR ScriptBlockText="*Get-Web-Credentials*" OR ScriptBlockText="*Invoke-CredentialsPhish*" OR ScriptBlockText="*Invoke-MimikatzWDigestDowngrade*" OR ScriptBlockText="*Invoke-SSIDExfil*" OR ScriptBlockText="*Invoke-SessionGopher*" OR ScriptBlockText="*Keylogger*" OR ScriptBlockText="*Invoke-Interceptor*" OR ScriptBlockText="*Create-MultipleSessions*" OR ScriptBlockText="*Invoke-NetworkRelay*" OR ScriptBlockText="*Run-EXEonRemote*" OR ScriptBlockText="*Invoke-Prasadhak*" OR ScriptBlockText="*Invoke-BruteForce*" OR ScriptBlockText="*Password-List*" OR ScriptBlockText="*Invoke-JSRatRegsvr*" OR ScriptBlockText="*Invoke-JSRatRundll*" OR ScriptBlockText="*Invoke-PoshRatHttps*" OR ScriptBlockText="*Invoke-PowerShellIcmp*" OR ScriptBlockText="*Invoke-PowerShellUdp*" OR ScriptBlockText="*Invoke-PSGcat*" OR ScriptBlockText="*Invoke-PsGcatAgent*" OR ScriptBlockText="*Remove-PoshRat*" OR ScriptBlockText="*Add-Persistance*" OR ScriptBlockText="*ExetoText*" OR ScriptBlockText="*Invoke-Decode*" OR ScriptBlockText="*Invoke-Encode*" OR ScriptBlockText="*Parse_Keys*" OR ScriptBlockText="*Remove-Persistence*" OR ScriptBlockText="*StringtoBase64*" OR ScriptBlockText="*TexttoExe*" OR ScriptBlockText="*Powerpreter*" OR ScriptBlockText="*Nishang*" OR ScriptBlockText="*DataToEncode*" OR ScriptBlockText="*LoggedKeys*" OR ScriptBlockText="*OUT-DNSTXT*" OR ScriptBlockText="*ExfilOption*" OR ScriptBlockText="*DumpCerts*" OR ScriptBlockText="*DumpCreds*" OR ScriptBlockText="*Shellcode32*" OR ScriptBlockText="*Shellcode64*" OR ScriptBlockText="*NotAllNameSpaces*" OR ScriptBlockText="*exfill*" OR ScriptBlockText="*FakeDC*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious Nishang PowerShell Commandlets" | eval sigma_description="Detects Commandlet names and arguments from the Nishang exploitation framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTFS Alternate Data Stream - powershell]
description = Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.
search = index=wineventlog* ((ScriptBlockText="*set-content*" OR ScriptBlockText="*add-content*") ScriptBlockText="*-stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004 attack.execution attack.t1059.001" | eval sigma_title="NTFS Alternate Data Stream" | eval sigma_description="Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging."
dispatch.earliest_time = -24h@h
alert.track = 0

[Code Executed Via Office Add-in XLL File - powershell]
description = Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.
Office add-ins can be used to add functionality to Office programs

search = index=wineventlog* (ScriptBlockText="*new-object *" ScriptBlockText="*-ComObject *" ScriptBlockText="*.application*" ScriptBlockText="*.RegisterXLL*") | eval sigma_attack_tags="attack.persistence attack.t1137.006" | eval sigma_title="Code Executed Via Office Add-in XLL File" | eval sigma_description="Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.
Office add-ins can be used to add functionality to Office programs
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerView PowerShell Commandlets - powershell]
description = Detects Commandlet names from PowerView of PowerSploit exploitation framework.
search = index=wineventlog* (ScriptBlockText="*Export-PowerViewCSV*" OR ScriptBlockText="*Get-IPAddress*" OR ScriptBlockText="*Resolve-IPAddress*" OR ScriptBlockText="*Convert-NameToSid*" OR ScriptBlockText="*ConvertTo-SID*" OR ScriptBlockText="*Convert-ADName*" OR ScriptBlockText="*ConvertFrom-UACValue*" OR ScriptBlockText="*Add-RemoteConnection*" OR ScriptBlockText="*Remove-RemoteConnection*" OR ScriptBlockText="*Invoke-UserImpersonation*" OR ScriptBlockText="*Invoke-RevertToSelf*" OR ScriptBlockText="*Request-SPNTicket*" OR ScriptBlockText="*Get-DomainSPNTicket*" OR ScriptBlockText="*Invoke-Kerberoast*" OR ScriptBlockText="*Get-PathAcl*" OR ScriptBlockText="*Get-DNSZone*" OR ScriptBlockText="*Get-DomainDNSZone*" OR ScriptBlockText="*Get-DNSRecord*" OR ScriptBlockText="*Get-DomainDNSRecord*" OR ScriptBlockText="*Get-NetDomain*" OR ScriptBlockText="*Get-Domain*" OR ScriptBlockText="*Get-NetDomainController*" OR ScriptBlockText="*Get-DomainController*" OR ScriptBlockText="*Get-NetForest*" OR ScriptBlockText="*Get-Forest*" OR ScriptBlockText="*Get-NetForestDomain*" OR ScriptBlockText="*Get-ForestDomain*" OR ScriptBlockText="*Get-NetForestCatalog*" OR ScriptBlockText="*Get-ForestGlobalCatalog*" OR ScriptBlockText="*Find-DomainObjectPropertyOutlier*" OR ScriptBlockText="*Get-NetUser*" OR ScriptBlockText="*Get-DomainUser*" OR ScriptBlockText="*New-DomainUser*" OR ScriptBlockText="*Set-DomainUserPassword*" OR ScriptBlockText="*Get-UserEvent*" OR ScriptBlockText="*Get-DomainUserEvent*" OR ScriptBlockText="*Get-NetComputer*" OR ScriptBlockText="*Get-DomainComputer*" OR ScriptBlockText="*Get-ADObject*" OR ScriptBlockText="*Get-DomainObject*" OR ScriptBlockText="*Set-ADObject*" OR ScriptBlockText="*Set-DomainObject*" OR ScriptBlockText="*Get-ObjectAcl*" OR ScriptBlockText="*Get-DomainObjectAcl*" OR ScriptBlockText="*Add-ObjectAcl*" OR ScriptBlockText="*Add-DomainObjectAcl*" OR ScriptBlockText="*Invoke-ACLScanner*" OR ScriptBlockText="*Find-InterestingDomainAcl*" OR ScriptBlockText="*Get-NetOU*" OR ScriptBlockText="*Get-DomainOU*" OR ScriptBlockText="*Get-NetSite*" OR ScriptBlockText="*Get-DomainSite*" OR ScriptBlockText="*Get-NetSubnet*" OR ScriptBlockText="*Get-DomainSubnet*" OR ScriptBlockText="*Get-DomainSID*" OR ScriptBlockText="*Get-NetGroup*" OR ScriptBlockText="*Get-DomainGroup*" OR ScriptBlockText="*New-DomainGroup*" OR ScriptBlockText="*Find-ManagedSecurityGroups*" OR ScriptBlockText="*Get-DomainManagedSecurityGroup*" OR ScriptBlockText="*Get-NetGroupMember*" OR ScriptBlockText="*Get-DomainGroupMember*" OR ScriptBlockText="*Add-DomainGroupMember*" OR ScriptBlockText="*Get-NetFileServer*" OR ScriptBlockText="*Get-DomainFileServer*" OR ScriptBlockText="*Get-DFSshare*" OR ScriptBlockText="*Get-DomainDFSShare*" OR ScriptBlockText="*Get-NetGPO*" OR ScriptBlockText="*Get-DomainGPO*" OR ScriptBlockText="*Get-NetGPOGroup*" OR ScriptBlockText="*Get-DomainGPOLocalGroup*" OR ScriptBlockText="*Find-GPOLocation*" OR ScriptBlockText="*Get-DomainGPOUserLocalGroupMapping*" OR ScriptBlockText="*Find-GPOComputerAdmin*" OR ScriptBlockText="*Get-DomainGPOComputerLocalGroupMapping*" OR ScriptBlockText="*Get-DomainPolicy*" OR ScriptBlockText="*Get-NetLocalGroup*" OR ScriptBlockText="*Get-NetLocalGroupMember*" OR ScriptBlockText="*Get-NetShare*" OR ScriptBlockText="*Get-NetLoggedon*" OR ScriptBlockText="*Get-NetSession*" OR ScriptBlockText="*Get-LoggedOnLocal*" OR ScriptBlockText="*Get-RegLoggedOn*" OR ScriptBlockText="*Get-NetRDPSession*" OR ScriptBlockText="*Invoke-CheckLocalAdminAccess*" OR ScriptBlockText="*Test-AdminAccess*" OR ScriptBlockText="*Get-SiteName*" OR ScriptBlockText="*Get-NetComputerSiteName*" OR ScriptBlockText="*Get-Proxy*" OR ScriptBlockText="*Get-WMIRegProxy*" OR ScriptBlockText="*Get-LastLoggedOn*" OR ScriptBlockText="*Get-WMIRegLastLoggedOn*" OR ScriptBlockText="*Get-CachedRDPConnection*" OR ScriptBlockText="*Get-WMIRegCachedRDPConnection*" OR ScriptBlockText="*Get-RegistryMountedDrive*" OR ScriptBlockText="*Get-WMIRegMountedDrive*" OR ScriptBlockText="*Get-NetProcess*" OR ScriptBlockText="*Get-WMIProcess*" OR ScriptBlockText="*Find-InterestingFile*" OR ScriptBlockText="*Invoke-UserHunter*" OR ScriptBlockText="*Find-DomainUserLocation*" OR ScriptBlockText="*Invoke-ProcessHunter*" OR ScriptBlockText="*Find-DomainProcess*" OR ScriptBlockText="*Invoke-EventHunter*" OR ScriptBlockText="*Find-DomainUserEvent*" OR ScriptBlockText="*Invoke-ShareFinder*" OR ScriptBlockText="*Find-DomainShare*" OR ScriptBlockText="*Invoke-FileFinder*" OR ScriptBlockText="*Find-InterestingDomainShareFile*" OR ScriptBlockText="*Find-LocalAdminAccess*" OR ScriptBlockText="*Invoke-EnumerateLocalAdmin*" OR ScriptBlockText="*Find-DomainLocalGroupMember*" OR ScriptBlockText="*Get-NetDomainTrust*" OR ScriptBlockText="*Get-DomainTrust*" OR ScriptBlockText="*Get-NetForestTrust*" OR ScriptBlockText="*Get-ForestTrust*" OR ScriptBlockText="*Find-ForeignUser*" OR ScriptBlockText="*Get-DomainForeignUser*" OR ScriptBlockText="*Find-ForeignGroup*" OR ScriptBlockText="*Get-DomainForeignGroupMember*" OR ScriptBlockText="*Invoke-MapDomainTrust*" OR ScriptBlockText="*Get-DomainTrustMapping*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious PowerView PowerShell Commandlets" | eval sigma_description="Detects Commandlet names from PowerView of PowerSploit exploitation framework."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Credential Prompt - powershell]
description = Detects PowerShell calling a credential prompt
search = index=wineventlog* ScriptBlockText="*PromptForCredential*" | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1059.001" | eval sigma_title="PowerShell Credential Prompt" | eval sigma_description="Detects PowerShell calling a credential prompt"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell PSAttack - powershell]
description = Detects the use of PSAttack PowerShell hack tool
search = index=wineventlog* ScriptBlockText="*PS ATTACK!!!*" | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="PowerShell PSAttack" | eval sigma_description="Detects the use of PSAttack PowerShell hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use Remove-Item to Delete File - powershell]
description = Powershell Remove-Item  with -Path to delete a file or a folder with '-Recurse'
search = index=wineventlog* ((ScriptBlockText="*Remove-Item*" ScriptBlockText="*-Path *") NOT ((ScriptBlockText="*HKCU:\\*" OR ScriptBlockText="*HKLM:\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Use Remove-Item to Delete File" | eval sigma_description="Powershell Remove-Item  with -Path to delete a file or a folder with '-Recurse'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Root Certificate Installed - powershell]
description = Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
search = index=wineventlog* ((ScriptBlockText="*Move-Item*" ScriptBlockText="*Cert:\\LocalMachine\\Root*") OR (ScriptBlockText="*Import-Certificate*" ScriptBlockText="*Cert:\\LocalMachine\\Root*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1553.004" | eval sigma_title="Root Certificate Installed" | eval sigma_description="Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers."
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Software Discovery by Powershell - powershell]
description = Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.
This may include things such as firewall rules and anti-viru

search = index=wineventlog* (ScriptBlockText="*get-process*" ScriptBlockText="*.Description*" ScriptBlockText="*-like*" (ScriptBlockText="*\"*virus*\"*" OR ScriptBlockText="*\"*carbonblack*\"*" OR ScriptBlockText="*\"*defender*\"*" OR ScriptBlockText="*\"*cylance*\"*")) | eval sigma_attack_tags="attack.discovery attack.t1518.001" | eval sigma_title="Security Software Discovery by Powershell" | eval sigma_description="Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.
This may include things such as firewall rules and anti-viru
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change PowerShell Policies to an Unsecure Level - powershell]
description = Detects use of Set-ExecutionPolicy to set a unsecure policies
search = index=wineventlog* ((ScriptBlockText="*Set-ExecutionPolicy*" (ScriptBlockText="*Unrestricted*" OR ScriptBlockText="*bypass*" OR ScriptBlockText="*RemoteSigned*")) NOT ((ParentImage="C:\\ProgramData\\chocolatey\\choco.exe") OR (ScriptBlockText="*(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')*" OR ScriptBlockText="*(New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Change PowerShell Policies to an Unsecure Level" | eval sigma_description="Detects use of Set-ExecutionPolicy to set a unsecure policies"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell ShellCode - powershell]
description = Detects Base64 encoded Shellcode
search = index=wineventlog* (ScriptBlockText="*AAAAYInlM*" (ScriptBlockText="*OiCAAAAYInlM*" OR ScriptBlockText="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055 attack.execution attack.t1059.001" | eval sigma_title="PowerShell ShellCode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious ShellIntel PowerShell Commandlets - powershell]
description = Detects Commandlet names from ShellIntel exploitation scripts.
search = index=wineventlog* (ScriptBlockText="*Invoke-SMBAutoBrute*" OR ScriptBlockText="*Invoke-GPOLinks*" OR ScriptBlockText="*Out-Minidump*" OR ScriptBlockText="*Invoke-Potato*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious ShellIntel PowerShell Commandlets" | eval sigma_description="Detects Commandlet names from ShellIntel exploitation scripts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detected Windows Software Discovery - powershell]
description = Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.
search = index=wineventlog* (ScriptBlockText="*get-itemProperty*" ScriptBlockText="*\\software\\*" ScriptBlockText="*select-object*" ScriptBlockText="*format-table*") | eval sigma_attack_tags="attack.discovery attack.t1518" | eval sigma_title="Detected Windows Software Discovery" | eval sigma_description="Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Store File In Alternate Data Stream - powershell]
description = Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.
search = index=wineventlog* (ScriptBlockText="*Start-Process*" ScriptBlockText="*-FilePath \"$env:comspec\" *" ScriptBlockText="*-ArgumentList *" ScriptBlockText="*>*") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004" | eval sigma_title="Powershell Store File In Alternate Data Stream" | eval sigma_description="Storing files in Alternate Data Stream (ADS) similar to Astaroth malware."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Information for AD Groups or DoesNotRequirePreAuth User - powershell]
description = Adversaries may attempt to find domain-level groups and permission settings.
The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as domain administrators. 

search = index=wineventlog* (ScriptBlockText="*get-ADPrincipalGroupMembership*" OR (ScriptBlockText="*get-aduser*" ScriptBlockText="*-f *" ScriptBlockText="*-pr *" ScriptBlockText="*DoesNotRequirePreAuth*")) | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Information for AD Groups or DoesNotRequirePreAuth User" | eval sigma_description="Adversaries may attempt to find domain-level groups and permission settings.
The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as domain administrators. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Directory Enumeration - powershell]
description = Detects technique used by MAZE ransomware to enumerate directories using Powershell
search = index=wineventlog* (ScriptBlockText="*foreach*" ScriptBlockText="*Get-ChildItem*" ScriptBlockText="*-Path *" ScriptBlockText="*-ErrorAction *" ScriptBlockText="*SilentlyContinue*" ScriptBlockText="*Out-File *" ScriptBlockText="*-append*") | eval sigma_attack_tags="attack.discovery attack.t1083" | eval sigma_title="Powershell Directory Enumeration" | eval sigma_description="Detects technique used by MAZE ransomware to enumerate directories using Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download - powershell]
description = Detects suspicious PowerShell download command
search = index=wineventlog* (ScriptBlockText="*System.Net.WebClient*" (ScriptBlockText="*.DownloadFile(*" OR ScriptBlockText="*.DownloadString(*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Download" | eval sigma_description="Detects suspicious PowerShell download command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Execute Batch Script - powershell]
description = Adversaries may abuse the Windows command shell for execution.
The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems.
The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.
Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops.
Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple system

search = index=wineventlog* (ScriptBlockText="*Start-Process*" (ScriptBlockText="*.cmd*" OR ScriptBlockText="*.bat*")) | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Powershell Execute Batch Script" | eval sigma_description="Adversaries may abuse the Windows command shell for execution.
The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems.
The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.
Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops.
Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple system
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Export-PfxCertificate - powershell]
description = Detects Commandlet that is used to export certificates from the local certificate store and sometimes used by threat actors to steal private keys from compromised machines
search = index=wineventlog* ScriptBlockText="*Export-PfxCertificate*" | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="Suspicious Export-PfxCertificate" | eval sigma_description="Detects Commandlet that is used to export certificates from the local certificate store and sometimes used by threat actors to steal private keys from compromised machines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Extracting Information with PowerShell - powershell]
description = Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials.
These can be files created by users to store their own credentials, shared credential stores for a group of individuals,
configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.

search = index=wineventlog* (ScriptBlockText="*ls*" ScriptBlockText="* -R*" ScriptBlockText="*select-string *" ScriptBlockText="*-Pattern *") | eval sigma_attack_tags="attack.credential_access attack.t1552.001" | eval sigma_title="Extracting Information with PowerShell" | eval sigma_description="Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials.
These can be files created by users to store their own credentials, shared credential stores for a group of individuals,
configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Troubleshooting Pack Cmdlet Execution - powershell]
description = Detects execution of 'TroubleshootingPack' cmdlets to leverage CVE-2022-30190 or action similar to 'msdt' lolbin (as described in LOLBAS)
search = index=wineventlog* (ScriptBlockText="*Invoke-TroubleshootingPack*" ScriptBlockText="*C:\\Windows\\Diagnostics\\System\\PCW*" ScriptBlockText="*-AnswerFile*" ScriptBlockText="*-Unattended*") | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Troubleshooting Pack Cmdlet Execution" | eval sigma_description="Detects execution of 'TroubleshootingPack' cmdlets to leverage CVE-2022-30190 or action similar to 'msdt' lolbin (as described in LOLBAS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Enumerate Active Directory Computers with Get-AdComputer - powershell]
description = utilize Get-AdComputer to enumerate Computers within Active Directory.
search = index=wineventlog* (ScriptBlockText="*Get-AdComputer *" ScriptBlockText="*-Filter*") | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Suspicious Enumerate Active Directory Computers with Get-AdComputer" | eval sigma_description="utilize Get-AdComputer to enumerate Computers within Active Directory."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Enumerate Active Directory Groups with Get-AdComputer - powershell]
description = Detects the use of Get-AdGroup to enumerate Groups within Active Directory
search = index=wineventlog* (ScriptBlockText="*Get-AdGroup *" ScriptBlockText="*-Filter*") | eval sigma_attack_tags="attack.discovery attack.t1069.002" | eval sigma_title="Suspicious Enumerate Active Directory Groups with Get-AdComputer" | eval sigma_description="Detects the use of Get-AdGroup to enumerate Groups within Active Directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Get Current User - powershell]
description = Detects the use of PowerShell to identify the current logged user.
search = index=wineventlog* (ScriptBlockText="*[System.Environment]::UserName*" OR ScriptBlockText="*$env:UserName*" OR ScriptBlockText="*[System.Security.Principal.WindowsIdentity]::GetCurrent()*") | eval sigma_attack_tags="attack.discovery attack.t1033" | eval sigma_title="Suspicious PowerShell Get Current User" | eval sigma_description="Detects the use of PowerShell to identify the current logged user."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GPO Discovery With Get-GPO - powershell]
description = Detect use of Get-GPO to get one GPO or all the GPOs in a domain.
search = index=wineventlog* ScriptBlockText="*Get-GPO*" | eval sigma_attack_tags="attack.discovery attack.t1615" | eval sigma_title="Suspicious GPO Discovery With Get-GPO" | eval sigma_description="Detect use of Get-GPO to get one GPO or all the GPOs in a domain."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Process LSASS in ScriptBlock - powershell]
description = Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity
search = index=wineventlog* ScriptBlockText="*Get-Process lsass*" | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="PowerShell Get-Process LSASS in ScriptBlock" | eval sigma_description="Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GetTypeFromCLSID ShellExecute - powershell]
description = Detects suspicious Powershell code that execute COM Objects
search = index=wineventlog* (ScriptBlockText="*::GetTypeFromCLSID(*" ScriptBlockText="*.ShellExecute(*") | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1546.015" | eval sigma_title="Suspicious GetTypeFromCLSID ShellExecute" | eval sigma_description="Detects suspicious Powershell code that execute COM Objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get-WmiObject - powershell]
description = The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers
search = index=wineventlog* (ScriptBlockText="*Get-WmiObject*" OR ScriptBlockText="*gwmi*") | eval sigma_attack_tags="attack.persistence attack.t1546" | eval sigma_title="Suspicious Get-WmiObject" | eval sigma_description="The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Hyper-V Cmdlets - powershell]
description = Adversaries may carry out malicious operations using a virtual instance to avoid detection
search = index=wineventlog* (ScriptBlockText="*New-VM*" OR ScriptBlockText="*Set-VMFirmware*" OR ScriptBlockText="*Start-VM*") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.006" | eval sigma_title="Suspicious Hyper-V Cmdlets" | eval sigma_description="Adversaries may carry out malicious operations using a virtual instance to avoid detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Generic - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=wineventlog* ((ScriptBlockText="* -enc *" OR ScriptBlockText="* -EncodedCommand *") (ScriptBlockText="* -w hidden *" OR ScriptBlockText="* -window hidden *" OR ScriptBlockText="* -windowstyle hidden *") (ScriptBlockText="* -noni *" OR ScriptBlockText="* -noninteractive *")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Invocations - Generic" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Specific - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=wineventlog* (((ScriptBlockText="*-nop*" ScriptBlockText="* -w *" ScriptBlockText="*hidden*" ScriptBlockText="* -c *" ScriptBlockText="*[Convert]::FromBase64String*") OR (ScriptBlockText="* -w *" ScriptBlockText="*hidden*" ScriptBlockText="*-noni*" ScriptBlockText="*-nop*" ScriptBlockText="* -c *" ScriptBlockText="*iex*" ScriptBlockText="*New-Object*") OR (ScriptBlockText="* -w *" ScriptBlockText="*hidden*" ScriptBlockText="*-ep*" ScriptBlockText="*bypass*" ScriptBlockText="*-Enc*") OR (ScriptBlockText="*powershell*" ScriptBlockText="*reg*" ScriptBlockText="*add*" ScriptBlockText="*HKCU\\software\\microsoft\\windows\\currentversion\\run*") OR (ScriptBlockText="*bypass*" ScriptBlockText="*-noprofile*" ScriptBlockText="*-windowstyle*" ScriptBlockText="*hidden*" ScriptBlockText="*new-object*" ScriptBlockText="*system.net.webclient*" ScriptBlockText="*.download*") OR (ScriptBlockText="*iex*" ScriptBlockText="*New-Object*" ScriptBlockText="*Net.WebClient*" ScriptBlockText="*.Download*")) NOT (((ScriptBlockText="*(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1*" OR ScriptBlockText="*(New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')*" OR ScriptBlockText="*Write-ChocolateyWarning*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Invocations - Specific" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious IO.FileStream - powershell]
description = Open a handle on the drive volume via the \\.\ DOS device path specifier and perform direct access read of the first few bytes of the volume.
search = index=wineventlog* (ScriptBlockText="*New-Object*" ScriptBlockText="*IO.FileStream*" ScriptBlockText="*\\\\.\\\*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.003" | eval sigma_title="Suspicious IO.FileStream" | eval sigma_description="Open a handle on the drive volume via the \\.\ DOS device path specifier and perform direct access read of the first few bytes of the volume."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Keywords - powershell]
description = Detects keywords that could indicate the use of some PowerShell exploitation framework
search = index=wineventlog* (ScriptBlockText="*System.Reflection.Assembly.Load($*" OR ScriptBlockText="*[System.Reflection.Assembly]::Load($*" OR ScriptBlockText="*[Reflection.Assembly]::Load($*" OR ScriptBlockText="*System.Reflection.AssemblyName*" OR ScriptBlockText="*Reflection.Emit.AssemblyBuilderAccess*" OR ScriptBlockText="*Runtime.InteropServices.DllImportAttribute*" OR ScriptBlockText="*SuspendThread*" OR ScriptBlockText="*rundll32*" OR ScriptBlockText="*Invoke-WMIMethod*" OR ScriptBlockText="*http://127.0.0.1*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Keywords" | eval sigma_description="Detects keywords that could indicate the use of some PowerShell exploitation framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Local Groups Information - powershell]
description = Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.

search = index=wineventlog* ((ScriptBlockText="*get-localgroup*" OR ScriptBlockText="*Get-LocalGroupMember*") OR (ScriptBlockText="*Get-WMIObject*" ScriptBlockText="*Win32_Group*")) | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Local Groups Information" | eval sigma_description="Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Local Email Collection - powershell]
description = Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.
search = index=wineventlog* (ScriptBlockText="*Get-Inbox.ps1*" OR ScriptBlockText="*Microsoft.Office.Interop.Outlook*" OR ScriptBlockText="*Microsoft.Office.Interop.Outlook.olDefaultFolders*" OR ScriptBlockText="*-comobject outlook.application*") | eval sigma_attack_tags="attack.collection attack.t1114.001" | eval sigma_title="Powershell Local Email Collection" | eval sigma_description="Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Mount-DiskImage - powershell]
description = Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.
search = index=wineventlog* (ScriptBlockText="*Mount-DiskImage *" ScriptBlockText="*-ImagePath *") | eval sigma_attack_tags="attack.defense_evasion attack.t1553.005" | eval sigma_title="Suspicious Mount-DiskImage" | eval sigma_description="Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Deleted Mounted Share - powershell]
description = Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
search = index=wineventlog* (ScriptBlockText="*Remove-SmbShare*" OR ScriptBlockText="*Remove-FileShare*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.005" | eval sigma_title="PowerShell Deleted Mounted Share" | eval sigma_description="Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Connection to Remote Account - powershell]
description = Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.
Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism

search = index=wineventlog* (ScriptBlockText="*System.DirectoryServices.Protocols.LdapDirectoryIdentifier*" OR ScriptBlockText="*System.Net.NetworkCredential*" OR ScriptBlockText="*System.DirectoryServices.Protocols.LdapConnection*") | eval sigma_attack_tags="attack.credential_access attack.t1110.001" | eval sigma_title="Suspicious Connection to Remote Account" | eval sigma_description="Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.
Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious New-PSDrive to Admin Share - powershell]
description = Adversaries may use to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.
search = index=wineventlog* (ScriptBlockText="*New-PSDrive*" ScriptBlockText="*-psprovider *" ScriptBlockText="*filesystem*" ScriptBlockText="*-root *" ScriptBlockText="*\\\*" ScriptBlockText="*$*") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Suspicious New-PSDrive to Admin Share" | eval sigma_description="Adversaries may use to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user."
dispatch.earliest_time = -24h@h
alert.track = 0

[Recon Information for Export with PowerShell - powershell]
description = Once established within a system or network, an adversary may use automated techniques for collecting internal data
search = index=wineventlog* ((ScriptBlockText="*Get-Service *" OR ScriptBlockText="*Get-ChildItem *" OR ScriptBlockText="*Get-Process *") ScriptBlockText="*> $env:TEMP\\*") | eval sigma_attack_tags="attack.collection attack.t1119" | eval sigma_title="Recon Information for Export with PowerShell" | eval sigma_description="Once established within a system or network, an adversary may use automated techniques for collecting internal data"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Information for SMB Share - powershell]
description = Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and
to identify potential systems of interest for Lateral Movement.
Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. 

search = index=wineventlog* ScriptBlockText="*get-smbshare*" | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Information for SMB Share" | eval sigma_description="Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and
to identify potential systems of interest for Lateral Movement.
Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Start-Process PassThru - powershell]
description = Powershell use PassThru option to start in background
search = index=wineventlog* (ScriptBlockText="*Start-Process*" ScriptBlockText="*-PassThru *" ScriptBlockText="*-FilePath *") | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Suspicious Start-Process PassThru" | eval sigma_description="Powershell use PassThru option to start in background"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Unblock-File - powershell]
description = Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.
search = index=wineventlog* (ScriptBlockText="*Unblock-File *" ScriptBlockText="*-Path *") | eval sigma_attack_tags="attack.defense_evasion attack.t1553.005" | eval sigma_title="Suspicious Unblock-File" | eval sigma_description="Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet."
dispatch.earliest_time = -24h@h
alert.track = 0

[Replace Desktop Wallpaper by Powershell - powershell]
description = An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users.
This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper

search = index=wineventlog* ((ScriptBlockText="*Get-ItemProperty*" ScriptBlockText="*Registry::*" ScriptBlockText="*HKEY_CURRENT_USER\\Control Panel\\Desktop\\*" ScriptBlockText="*WallPaper*") OR ScriptBlockText="*SystemParametersInfo(20,0,*,3)*") | eval sigma_attack_tags="attack.impact attack.t1491.001" | eval sigma_title="Replace Desktop Wallpaper by Powershell" | eval sigma_description="An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users.
This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Suspicious Win32_PnPEntity - powershell]
description = Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.
search = index=wineventlog* ScriptBlockText="*Win32_PnPEntity*" | eval sigma_attack_tags="attack.discovery attack.t1120" | eval sigma_title="Powershell Suspicious Win32_PnPEntity" | eval sigma_description="Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell WindowStyle Option - powershell]
description = Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden
search = index=wineventlog* (ScriptBlockText="*powershell*" ScriptBlockText="*WindowStyle*" ScriptBlockText="*Hidden*") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.003" | eval sigma_title="Suspicious PowerShell WindowStyle Option" | eval sigma_description="Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden"
dispatch.earliest_time = -24h@h
alert.track = 0

[Zip A Folder With PowerShell For Staging In Temp - powershell]
description = Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration
search = index=wineventlog* (ScriptBlockText="*Compress-Archive *" ScriptBlockText="* -Path *" ScriptBlockText="* -DestinationPath *" ScriptBlockText="*$env:TEMP\\*") | eval sigma_attack_tags="attack.collection attack.t1074.001" | eval sigma_title="Zip A Folder With PowerShell For Staging In Temp" | eval sigma_description="Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer Execution to Bypass Powershell Restriction - powershell]
description = Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions.
search = index=wineventlog* ScriptBlockText="*SyncAppvPublishingServer.exe*" | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="SyncAppvPublishingServer Execution to Bypass Powershell Restriction" | eval sigma_description="Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Start-Process PassThru - powershell]
description = Attempting to disable scheduled scanning and other parts of windows defender atp. Or set default actions to allow.
search = index=wineventlog* ((ScriptBlockText="*Set-MpPreference*" (ScriptBlockText="*DisableRealtimeMonitoring 1*" OR ScriptBlockText="*DisableBehaviorMonitoring 1*" OR ScriptBlockText="*DisableScriptScanning 1*" OR ScriptBlockText="*DisableArchiveScanning 1*" OR ScriptBlockText="*DisableBlockAtFirstSeen 1*" OR ScriptBlockText="*DisableIOAVProtection 1*" OR ScriptBlockText="*DisableIntrusionPreventionSystem 1*" OR ScriptBlockText="*DisableRemovableDriveScanning 1*" OR ScriptBlockText="*DisableScanningMappedNetworkDrivesForFullScan 1*" OR ScriptBlockText="*DisableScanningNetworkFiles 1*" OR ScriptBlockText="*DisableRealtimeMonitoring $true*" OR ScriptBlockText="*DisableBehaviorMonitoring $true*" OR ScriptBlockText="*DisableScriptScanning $true*" OR ScriptBlockText="*DisableArchiveScanning $true*" OR ScriptBlockText="*DisableBlockAtFirstSeen $true*" OR ScriptBlockText="*DisableIOAVProtection $true*" OR ScriptBlockText="*DisableIntrusionPreventionSystem $true*" OR ScriptBlockText="*DisableRemovableDriveScanning $true*" OR ScriptBlockText="*DisableScanningMappedNetworkDrivesForFullScan $true*" OR ScriptBlockText="*DisableScanningNetworkFiles $true*")) OR (ScriptBlockText="*Set-MpPreference*" ScriptBlockText="*Allow*" (ScriptBlockText="*LowThreatDefaultAction*" OR ScriptBlockText="*ModerateThreatDefaultAction*" OR ScriptBlockText="*HighThreatDefaultAction*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Suspicious Start-Process PassThru" | eval sigma_description="Attempting to disable scheduled scanning and other parts of windows defender atp. Or set default actions to allow."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Timestomp - powershell]
description = Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder.
search = index=wineventlog* (ScriptBlockText="*.CreationTime =*" OR ScriptBlockText="*.LastWriteTime =*" OR ScriptBlockText="*.LastAccessTime =*" OR ScriptBlockText="*[IO.File]::SetCreationTime*" OR ScriptBlockText="*[IO.File]::SetLastAccessTime*" OR ScriptBlockText="*[IO.File]::SetLastWriteTime*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.006" | eval sigma_title="Powershell Timestomp" | eval sigma_description="Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Trigger Profiles by Add_Content - powershell]
description = Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.
search = index=wineventlog* (ScriptBlockText="*Add-Content*" ScriptBlockText="*$profile*" ScriptBlockText="*-Value*" (ScriptBlockText="*Start-Process*" OR ScriptBlockText="*\"\"*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1546.013" | eval sigma_title="Powershell Trigger Profiles by Add_Content" | eval sigma_description="Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows PowerShell Upload Web Request - powershell]
description = Detects the use of various web request POST or PUT methods (including aliases) via Windows PowerShell command
search = index=wineventlog* ((ScriptBlockText="*Invoke-WebRequest*" OR ScriptBlockText="*iwr *") ScriptBlockText="*-Method *" (" Put " OR " Post ")) | eval sigma_attack_tags="attack.exfiltration attack.t1020" | eval sigma_title="Windows PowerShell Upload Web Request" | eval sigma_description="Detects the use of various web request POST or PUT methods (including aliases) via Windows PowerShell command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows PowerShell Web Request - powershell]
description = Detects the use of various web request methods (including aliases) via Windows PowerShell command
search = index=wineventlog* (ScriptBlockText="*Invoke-WebRequest*" OR ScriptBlockText="*iwr *" OR ScriptBlockText="*wget *" OR ScriptBlockText="*curl *" OR ScriptBlockText="*Net.WebClient*" OR ScriptBlockText="*Start-BitsTransfer*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Windows PowerShell Web Request" | eval sigma_description="Detects the use of various web request methods (including aliases) via Windows PowerShell command"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell WMI Win32_Product Install MSI - powershell]
description = Detects the execution of an MSI file using PowerShell and the WMI Win32_Product class
search = index=wineventlog* (ScriptBlockText="*Invoke-CimMethod *" ScriptBlockText="*-ClassName *" ScriptBlockText="*Win32_Product *" ScriptBlockText="*-MethodName *" ScriptBlockText="*.msi*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="PowerShell WMI Win32_Product Install MSI" | eval sigma_description="Detects the execution of an MSI file using PowerShell and the WMI Win32_Product class"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Firewall Profile Disabled - powershell]
description = Detects when a user disables the Windows Firewall via a Profile to help evade defense.
search = index=wineventlog* (ScriptBlockText="*Set-NetFirewallProfile*" ScriptBlockText="*-Profile*" ScriptBlockText="*-Enabled*" ScriptBlockText="*False*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Windows Firewall Profile Disabled" | eval sigma_description="Detects when a user disables the Windows Firewall via a Profile to help evade defense."
dispatch.earliest_time = -24h@h
alert.track = 0

[Winlogon Helper DLL - powershell]
description = Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables.
search = index=wineventlog* (ScriptBlockText="*CurrentVersion\\Winlogon*" (ScriptBlockText="*Set-ItemProperty*" OR ScriptBlockText="*New-Item*")) | eval sigma_attack_tags="attack.persistence attack.t1547.004" | eval sigma_title="Winlogon Helper DLL" | eval sigma_description="Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell WMI Persistence - powershell]
description = Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription.
search = index=wineventlog* ((ScriptBlockText="*New-CimInstance *" ScriptBlockText="*-Namespace root/subscription *" ScriptBlockText="*-ClassName __EventFilter *" ScriptBlockText="*-Property *") OR (ScriptBlockText="*New-CimInstance *" ScriptBlockText="*-Namespace root/subscription *" ScriptBlockText="*-ClassName CommandLineEventConsumer *" ScriptBlockText="*-Property *")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1546.003" | eval sigma_title="Powershell WMI Persistence" | eval sigma_description="Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription."
dispatch.earliest_time = -24h@h
alert.track = 0

[WMImplant Hack Tool - powershell]
description = Detects parameters used by WMImplant
search = index=wineventlog* (ScriptBlockText="*WMImplant*" OR ScriptBlockText="* change_user *" OR ScriptBlockText="* gen_cli *" OR ScriptBlockText="* command_exec *" OR ScriptBlockText="* disable_wdigest *" OR ScriptBlockText="* disable_winrm *" OR ScriptBlockText="* enable_wdigest *" OR ScriptBlockText="* enable_winrm *" OR ScriptBlockText="* registry_mod *" OR ScriptBlockText="* remote_posh *" OR ScriptBlockText="* sched_job *" OR ScriptBlockText="* service_mod *" OR ScriptBlockText="* process_kill *" OR ScriptBlockText="* active_users *" OR ScriptBlockText="* basic_info *" OR ScriptBlockText="* power_off *" OR ScriptBlockText="* vacant_system *" OR ScriptBlockText="* logon_events *") | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1059.001" | eval sigma_title="WMImplant Hack Tool" | eval sigma_description="Detects parameters used by WMImplant"
dispatch.earliest_time = -24h@h
alert.track = 0

[Accessing WinAPI in PowerShell for Credentials Dumping - sysmon]
description = Detects Accessing to lsass.exe by Powershell
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="8" OR EventCode="10") SourceImage="*\\powershell.exe" TargetImage="*\\lsass.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Accessing WinAPI in PowerShell for Credentials Dumping" | eval sigma_description="Detects Accessing to lsass.exe by Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Configuration Error - sysmon]
description = Detects when an adversary is trying to hide it's action from Sysmon logging based on error messages
search = index=sysmon* ((EventCode="255" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="*Failed to open service configuration with error*" OR Description="*Failed to connect to the driver to update configuration*") NOT ((Description="*Failed to open service configuration with error*" Description="*Last error: The media is write protected.*") OR ((Description="*Failed to open service configuration with error 19*" OR Description="*Failed to open service configuration with error 93*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1564" | eval sigma_title="Sysmon Configuration Error" | eval sigma_description="Detects when an adversary is trying to hide it's action from Sysmon logging based on error messages"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Configuration Modification - sysmon]
description = Someone try to hide from Sysmon
search = index=sysmon* (((EventCode="4" OR EventCode="16") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (State="Stopped" OR "Sysmon config state changed")) | eval sigma_attack_tags="attack.defense_evasion attack.t1564" | eval sigma_title="Sysmon Configuration Modification" | eval sigma_description="Someone try to hide from Sysmon"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Configuration Change - sysmon]
description = Detects a Sysmon configuration change, which could be the result of a legitimate reconfiguration or someone trying manipulate the configuration
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="16") | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Sysmon Configuration Change" | eval sigma_description="Detects a Sysmon configuration change, which could be the result of a legitimate reconfiguration or someone trying manipulate the configuration"
dispatch.earliest_time = -24h@h
alert.track = 0

[T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack - sysmon]
description = Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network and loading it for a DCOM InternetExplorer DLL Hijack scenario.
search = index=sysmon* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="11" Image="System" TargetFilename="*\\Internet Explorer\\iertutil.dll") OR (EventCode="7" Image="*\\Internet Explorer\\iexplore.exe" ImageLoaded="*\\Internet Explorer\\iertutil.dll"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1021.003" | eval sigma_title="T1021 DCOM InternetExplorer.Application Iertutil DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `iertutil.dll` in the `C:\Program Files\Internet Explorer\` directory over the network and loading it for a DCOM InternetExplorer DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Process Hollowing Detection - sysmon]
description = Detects when a memory process image does not match the disk image, indicative of process hollowing.
search = index=sysmon* ((EventCode="25" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Type="Image is replaced" NOT ((Image="*:\\Program Files\\*" OR Image="*:\\Program Files (x86)*") (Image="*\\chrome.exe" OR Image="*\\opera.exe" OR Image="*\\firefox.exe" OR Image="*\\MicrosoftEdge.exe"))) | eval sigma_attack_tags="attack.process_injection attack.t1055.012" | eval sigma_title="Sysmon Process Hollowing Detection" | eval sigma_description="Detects when a memory process image does not match the disk image, indicative of process hollowing."
dispatch.earliest_time = -24h@h
alert.track = 0

[Credential Dumping Tools Service Execution - sysmon]
description = Detects well-known credential dumping tools execution via service execution events
search = index=sysmon* (EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ImageLoaded="*fgexec*" OR ImageLoaded="*dumpsvc*" OR ImageLoaded="*cachedump*" OR ImageLoaded="*mimidrv*" OR ImageLoaded="*gsecdump*" OR ImageLoaded="*servpw*" OR ImageLoaded="*pwdump*")) | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006 attack.t1569.002 attack.s0005" | eval sigma_title="Credential Dumping Tools Service Execution" | eval sigma_description="Detects well-known credential dumping tools execution via service execution events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Installation - sysmon]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation
search = index=sysmon* ((EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ImagePath="*cmd*" ImagePath="*/c*" ImagePath="*echo*" ImagePath="*\\pipe\\*") OR (ImagePath="*%COMSPEC%*" ImagePath="*/c*" ImagePath="*echo*" ImagePath="*\\pipe\\*") OR (ImagePath="*cmd.exe*" ImagePath="*/c*" ImagePath="*echo*" ImagePath="*\\pipe\\*") OR (ImagePath="*rundll32*" ImagePath="*.dll,a*" ImagePath="*/p:*"))) | table ComputerName,SubjectDomainName,SubjectUserName,ImagePath | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Installation" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Scripts Run by a Services - sysmon]
description = Detects powershell script installed as a Service
search = index=sysmon* (EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ImageLoaded="*powershell*" OR ImageLoaded="*pwsh*")) | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="PowerShell Scripts Run by a Services" | eval sigma_description="Detects powershell script installed as a Service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Load from Temp - sysmon]
description = Detects a driver load from a temporary directory
search = index=sysmon* (EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ImageLoaded="*\\Temp\\*") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="Suspicious Driver Load from Temp" | eval sigma_description="Detects a driver load from a temporary directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Vulnerable Dell BIOS Update Driver Load - sysmon]
description = Detects the load of the vulnerable Dell BIOS update driver as reported in CVE-2021-21551
search = index=sysmon* ((EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ImageLoaded="*\\DBUtil_2_3.Sys*" OR (Hashes="*0296e2ce999e67c76352613a718e11516fe1b0efc3ffdb8918fc999dd76a73a5*" OR Hashes="*c948ae14761095e4d76b55d9de86412258be7afd*" OR Hashes="*c996d7971c49252c582171d9380360f2*" OR Hashes="*ddbf5ecca5c8086afde1fb4f551e9e6400e94f4428fe7fb5559da5cffa654cc1*" OR Hashes="*10b30bdee43b3a2ec4aa63375577ade650269d25*" OR Hashes="*d2fd132ab7bbc6bbb87a84f026fa0244*"))) | eval sigma_attack_tags="attack.privilege_escalation cve.2021.21551 attack.t1543" | eval sigma_title="Vulnerable Dell BIOS Update Driver Load" | eval sigma_description="Detects the load of the vulnerable Dell BIOS update driver as reported in CVE-2021-21551"
dispatch.earliest_time = -24h@h
alert.track = 0

[WinDivert Driver Load - sysmon]
description = Detects the load of the Windiver driver, a powerful user-mode capture/sniffing/modification/blocking/re-injection package for Windows
search = index=sysmon* (EventCode="6" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ImageLoaded="*\\WinDivert.sys*" OR ImageLoaded="*\\WinDivert64.sys*")) | eval sigma_attack_tags="attack.collection attack.defense_evasion attack.t1599.001 attack.t1557.001" | eval sigma_title="WinDivert Driver Load" | eval sigma_description="Detects the load of the Windiver driver, a powerful user-mode capture/sniffing/modification/blocking/re-injection package for Windows"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Unattend.xml File Access - sysmon]
description = Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.
If these files exist, their contents will be displayed. They are used to store credentials/answers during the unattended windows install process

search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\unattend.xml") | eval sigma_attack_tags="attack.credential_access attack.t1552.001" | eval sigma_title="Suspicious Unattend.xml File Access" | eval sigma_description="Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.
If these files exist, their contents will be displayed. They are used to store credentials/answers during the unattended windows install process
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - sysmon]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Temp\\Advanced IP Scanner 2*") | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Unidentified Attacker November 2018 - sysmon]
description = A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*ds7002.lnk*") | eval sigma_attack_tags="attack.execution attack.t1218.011" | eval sigma_title="Unidentified Attacker November 2018" | eval sigma_description="A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016."
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec File Creation Patterns - sysmon]
description = Detects suspicious file creation patterns found in logs when CrackMapExec is used
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="C:\\Windows\\Temp\\*" Image="C:\\WINDOWS\\system32\\rundll32.exe" (User="*AUTHORI*" OR User="*AUTORI*") (TargetFilename="*.rtf" OR TargetFilename="*.otf" OR TargetFilename="*.odt" OR TargetFilename="*.txt" OR TargetFilename="*.doc" OR TargetFilename="*.pdf" OR TargetFilename="*.dll" OR TargetFilename="*.docx" OR TargetFilename="*.wpd" OR TargetFilename="*.icns" OR TargetFilename="*.db" OR TargetFilename="*.ini" OR TargetFilename="*.tex" OR TargetFilename="*.sys" OR TargetFilename="*.csv" OR TargetFilename="*.fon" OR TargetFilename="*.tar" OR TargetFilename="*.ttf" OR TargetFilename="*.xml" OR TargetFilename="*.cfg" OR TargetFilename="*.cpl" OR TargetFilename="*.jpg" OR TargetFilename="*.drv" OR TargetFilename="*.cur" OR TargetFilename="*.tmp")) OR (TargetFilename="C:\\Windows\\Temp\\procdump.exe" (User="*AUTHORI*" OR User="*AUTORI*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="CrackMapExec File Creation Patterns" | eval sigma_description="Detects suspicious file creation patterns found in logs when CrackMapExec is used"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Screensaver Binary File Creation - sysmon]
description = Adversaries may establish persistence by executing malicious content triggered by user inactivity.
Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension

search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*.scr" NOT (((Image="*\\Kindle.exe" OR Image="*\\Bin\\ccSvcHst.exe")))) | eval sigma_attack_tags="attack.persistence attack.t1546.002" | eval sigma_title="Suspicious Screensaver Binary File Creation" | eval sigma_description="Adversaries may establish persistence by executing malicious content triggered by user inactivity.
Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension
"
dispatch.earliest_time = -24h@h
alert.track = 0

[File Created with System Process Name - sysmon]
description = Detects the creation of an executable with a system process name in a suspicious folder
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\svchost.exe" OR TargetFilename="*\\rundll32.exe" OR TargetFilename="*\\services.exe" OR TargetFilename="*\\powershell.exe" OR TargetFilename="*\\regsvr32.exe" OR TargetFilename="*\\spoolsv.exe" OR TargetFilename="*\\lsass.exe" OR TargetFilename="*\\smss.exe" OR TargetFilename="*\\csrss.exe" OR TargetFilename="*\\conhost.exe" OR TargetFilename="*\\wininit.exe" OR TargetFilename="*\\lsm.exe" OR TargetFilename="*\\winlogon.exe" OR TargetFilename="*\\explorer.exe" OR TargetFilename="*\\taskhost.exe" OR TargetFilename="*\\Taskmgr.exe" OR TargetFilename="*\\taskmgr.exe" OR TargetFilename="*\\sihost.exe" OR TargetFilename="*\\RuntimeBroker.exe" OR TargetFilename="*\\runtimebroker.exe" OR TargetFilename="*\\smartscreen.exe" OR TargetFilename="*\\dllhost.exe" OR TargetFilename="*\\audiodg.exe" OR TargetFilename="*\\wlanext.exe") NOT (((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\system32\\*" OR TargetFilename="C:\\Windows\\SysWow64\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*" OR TargetFilename="C:\\Windows\\winsxs\\*" OR TargetFilename="C:\\Windows\\WinSxS\\*" OR TargetFilename="\\SystemRoot\\System32\\*") (Image="*\\Windows\\System32\\dism.exe" OR Image="*\\TiWorker.exe")) OR (TargetFilename="C:\\$WINDOWS.~BT\\*" Image="C:\\$WINDOWS.~BT\\Sources\\SetupHost.exe") OR (TargetFilename="*\\RuntimeBroker.exe" Image="C:\\Windows\\system32\\wbengine.exe") OR (TargetFilename="*\\spoolsv.exe" TargetFilename="C:\\Windows\\SoftwareDistribution\\Download\\*" Image="*:\\Windows\\system32\\svchost.exe"))) | table Image | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="File Created with System Process Name" | eval sigma_description="Detects the creation of an executable with a system process name in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Creation Exe for Service with Unquoted Path - sysmon]
description = Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.
Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch. 

search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\program.exe") | eval sigma_attack_tags="attack.persistence attack.t1547.009" | eval sigma_title="Creation Exe for Service with Unquoted Path" | eval sigma_description="Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.
Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cred Dump Tools Dropped Files - sysmon]
description = Files with well-known filenames (parts of credential dump software or files produced by them) creation
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\pwdump*" OR TargetFilename="*\\kirbi*" OR TargetFilename="*\\pwhashes*" OR TargetFilename="*\\wce_ccache*" OR TargetFilename="*\\wce_krbtkts*" OR TargetFilename="*\\fgdump-log*") OR (TargetFilename="*\\test.pwd" OR TargetFilename="*\\lsremora64.dll" OR TargetFilename="*\\lsremora.dll" OR TargetFilename="*\\fgexec.exe" OR TargetFilename="*\\wceaux.dll" OR TargetFilename="*\\SAM.out" OR TargetFilename="*\\SECURITY.out" OR TargetFilename="*\\SYSTEM.out" OR TargetFilename="*\\NTDS.out" OR TargetFilename="*\\DumpExt.dll" OR TargetFilename="*\\DumpSvc.exe" OR TargetFilename="*\\cachedump64.exe" OR TargetFilename="*\\cachedump.exe" OR TargetFilename="*\\pstgdump.exe" OR TargetFilename="*\\servpw.exe" OR TargetFilename="*\\servpw64.exe" OR TargetFilename="*\\pwdump.exe" OR TargetFilename="*\\procdump64.exe"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003.002 attack.t1003.003 attack.t1003.004 attack.t1003.005" | eval sigma_title="Cred Dump Tools Dropped Files" | eval sigma_description="Files with well-known filenames (parts of credential dump software or files produced by them) creation"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-1675 Print Spooler Exploitation Filename Pattern - sysmon]
description = Detects the default filename used in PoC code against print spooler vulnerability CVE-2021-1675
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*C:\\Windows\\System32\\spool\\drivers\\x64\\3\\old\\1\\123*") | table ComputerName,TargetFilename | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.resource_development attack.t1587 cve.2021.1675" | eval sigma_title="CVE-2021-1675 Print Spooler Exploitation Filename Pattern" | eval sigma_description="Detects the default filename used in PoC code against print spooler vulnerability CVE-2021-1675"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-26858 Exchange Exploitation - sysmon]
description = Detects possible successful exploitation for vulnerability described in CVE-2021-26858 by looking for | creation of non-standard files on disk by Exchange Server’s Unified Messaging service | which could indicate dropping web shells or other malicious content
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*UMWorkerProcess.exe" NOT ((TargetFilename="*CacheCleanup.bin" OR TargetFilename="*.txt" OR TargetFilename="*.LOG" OR TargetFilename="*.cfg" OR TargetFilename="*cleanup.bin"))) | table ComputerName,TargetFilename | eval sigma_attack_tags="attack.t1203 attack.execution cve.2021.26858" | eval sigma_title="CVE-2021-26858 Exchange Exploitation" | eval sigma_description="Detects possible successful exploitation for vulnerability described in CVE-2021-26858 by looking for | creation of non-standard files on disk by Exchange Server’s Unified Messaging service | which could indicate dropping web shells or other malicious content"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-31979 CVE-2021-33771 Exploits by Sourgum - sysmon]
description = Detects patterns as noticed in exploitation of Windows CVE-2021-31979 CVE-2021-33771 vulnerability and DevilsTongue malware by threat group Sourgum
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*C:\\Windows\\system32\\physmem.sys*" OR TargetFilename="*C:\\Windows\\System32\\IME\\IMEJP\\imjpueact.dll*" OR TargetFilename="*C:\\Windows\\system32\\ime\\IMETC\\IMTCPROT.DLL*" OR TargetFilename="*C:\\Windows\\system32\\ime\\SHARED\\imecpmeid.dll*" OR TargetFilename="*C:\\Windows\\system32\\config\\spp\\ServiceState\\Recovery\\pac.dat*" OR TargetFilename="*C:\\Windows\\system32\\config\\cy-GB\\Setup\\SKB\\InputMethod\\TupTask.dat*" OR TargetFilename="*C:\\Windows\\system32\\config\\config\\startwus.dat*" OR TargetFilename="*C:\\Windows\\system32\\ime\\SHARED\\WimBootConfigurations.ini*" OR TargetFilename="*C:\\Windows\\system32\\ime\\IMEJP\\WimBootConfigurations.ini*" OR TargetFilename="*C:\\Windows\\system32\\ime\\IMETC\\WimBootConfigurations.ini*")) | eval sigma_attack_tags="attack.credential_access attack.t1566 attack.t1203 cve.2021.33771 cve.2021.31979" | eval sigma_title="CVE-2021-31979 CVE-2021-33771 Exploits by Sourgum" | eval sigma_description="Detects patterns as noticed in exploitation of Windows CVE-2021-31979 CVE-2021-33771 vulnerability and DevilsTongue malware by threat group Sourgum"
dispatch.earliest_time = -24h@h
alert.track = 0

[InstallerFileTakeOver LPE CVE-2021-41379 File Create Event - sysmon]
description = Detects signs of the exploitation of LPE CVE-2021-41379 that include an msiexec process that creates an elevation_service.exe file
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\msiexec.exe" TargetFilename="C:\\Program Files (x86)\\Microsoft\\Edge\\Application*" TargetFilename="*\\elevation_service.exe") | table ComputerName,TargetFilename | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="InstallerFileTakeOver LPE CVE-2021-41379 File Create Event" | eval sigma_description="Detects signs of the exploitation of LPE CVE-2021-41379 that include an msiexec process that creates an elevation_service.exe file"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-44077 POC Default Dropped File - sysmon]
description = Detects the creation of 'msiexec.exe' in the 'bin' directory of the ManageEngine SupportCenter Plus (Related to CVE-2021-44077) and public POC available (See references section)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\ManageEngine\\SupportCenterPlus\\bin\\msiexec.exe") | eval sigma_attack_tags="attack.execution cve.2021.44077" | eval sigma_title="CVE-2021-44077 POC Default Dropped File" | eval sigma_description="Detects the creation of 'msiexec.exe' in the 'bin' directory of the ManageEngine SupportCenter Plus (Related to CVE-2021-44077) and public POC available (See references section)"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2022-24527 Microsoft Connected Cache LPE - sysmon]
description = Detects files created during the local privilege exploitation of CVE-2022-24527 Microsoft Connected Cache
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*WindowsPowerShell\\Modules\\webAdministration\\webAdministration.psm1" NOT ((User="*AUTHORI*" OR User="*AUTORI*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1059.001 cve.2022.24527" | eval sigma_title="CVE-2022-24527 Microsoft Connected Cache LPE" | eval sigma_description="Detects files created during the local privilege exploitation of CVE-2022-24527 Microsoft Connected Cache"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powerup Write Hijack DLL - sysmon]
description = Powerup tool's Write Hijack DLL exploits DLL hijacking for privilege escalation. In it's default mode, it builds a self deleting .bat file which executes malicious command. The detection rule relies on creation of the malicious bat file (debug.bat by default).
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" TargetFilename="*.bat") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.defense_evasion attack.t1574.001" | eval sigma_title="Powerup Write Hijack DLL" | eval sigma_description="Powerup tool's Write Hijack DLL exploits DLL hijacking for privilege escalation. In it's default mode, it builds a self deleting .bat file which executes malicious command. The detection rule relies on creation of the malicious bat file (debug.bat by default)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of SafetyKatz - sysmon]
description = Detects possible SafetyKatz Behaviour
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\Temp\\debug.bin") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Detection of SafetyKatz" | eval sigma_description="Detects possible SafetyKatz Behaviour"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumpert Process Dumper - sysmon]
description = Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Windows\\Temp\\dumpert.dmp") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumpert Process Dumper" | eval sigma_description="Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Typical HiveNightmare SAM File Export - sysmon]
description = Detects files written by the different tools that exploit HiveNightmare
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\hive_sam_*" OR TargetFilename="*\\SAM-2021-*" OR TargetFilename="*\\SAM-2022-*" OR TargetFilename="*\\SAM-2023-*" OR TargetFilename="*\\SAM-haxx*" OR TargetFilename="*\\Sam.save*") OR (TargetFilename="C:\\windows\\temp\\sam"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.t1552.001 cve.2021.36934" | eval sigma_title="Typical HiveNightmare SAM File Export" | eval sigma_description="Detects files written by the different tools that exploit HiveNightmare"
dispatch.earliest_time = -24h@h
alert.track = 0

[ISO or Image Mount Indicator in Recent Files - sysmon]
description = Detects the creation of recent element file that points to an .ISO, .IMG, .VHD or .VHDX file as often used in phishing attacks. This can be a false positive on server systems but on workstations users should rarely mount .iso or .img files.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*.iso.lnk" OR TargetFilename="*.img.lnk" OR TargetFilename="*.vhd.lnk" OR TargetFilename="*.vhdx.lnk") TargetFilename="*\\Microsoft\\Windows\\Recent\\*") | eval sigma_attack_tags="" | eval sigma_title="ISO or Image Mount Indicator in Recent Files" | eval sigma_description="Detects the creation of recent element file that points to an .ISO, .IMG, .VHD or .VHDX file as often used in phishing attacks. This can be a false positive on server systems but on workstations users should rarely mount .iso or .img files."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Process Memory Dump Files - sysmon]
description = Detects file names used by different memory dumping tools to create a memory dump of the LSASS process memory, which contains user credentials
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\lsass.dmp" OR TargetFilename="*\\lsass.zip" OR TargetFilename="*\\lsass.rar" OR TargetFilename="*\\Temp\\dumpert.dmp" OR TargetFilename="*\\Andrew.dmp" OR TargetFilename="*\\Coredump.dmp") OR (TargetFilename="*\\lsass_2*" OR TargetFilename="*\\lsassdump*" OR TargetFilename="*\\lsassdmp*") OR (TargetFilename="*\\lsass*" TargetFilename="*.dmp*") OR (TargetFilename="*SQLDmpr*" TargetFilename="*.mdmp") OR (TargetFilename="nanodump*" TargetFilename="*.dmp"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="LSASS Process Memory Dump Files" | eval sigma_description="Detects file names used by different memory dumping tools to create a memory dump of the LSASS process memory, which contains user credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dump File Creation - sysmon]
description = LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*lsass*" TargetFilename="*dmp") | table ComputerName,TargetFilename | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="LSASS Memory Dump File Creation" | eval sigma_description="LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified"
dispatch.earliest_time = -24h@h
alert.track = 0

[WerFault LSASS Process Memory Dump - sysmon]
description = Detects WerFault creating a dump file with a name that indicates that the dump file could be an LSASS process memory, which contains user credentials
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\WINDOWS\\system32\\WerFault.exe" (TargetFilename="*\\lsass*" OR TargetFilename="*lsass.exe*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="WerFault LSASS Process Memory Dump" | eval sigma_description="Detects WerFault creating a dump file with a name that indicates that the dump file could be an LSASS process memory, which contains user credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dump Office Macro Files from Commandline - sysmon]
description = A office file with macro is created from a commandline or a script
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*.docm" OR TargetFilename="*.dotm" OR TargetFilename="*.xlsm" OR TargetFilename="*.xltm" OR TargetFilename="*.potm" OR TargetFilename="*.pptm" OR TargetFilename="*.pptx") ((Image="*\\cmd.exe" OR Image="*\\powershell.exe") OR (ParentImage="*\\cmd.exe" OR ParentImage="*\\powershell.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1566.001" | eval sigma_title="Dump Office Macro Files from Commandline" | eval sigma_description="A office file with macro is created from a commandline or a script"
dispatch.earliest_time = -24h@h
alert.track = 0

[Adwind RAT / JRAT - sysmon]
description = Detects javaw.exe in AppData folder as used by Adwind / JRAT
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\AppData\\Roaming\\Oracle\\bin\\java*" TargetFilename="*.exe*") OR (TargetFilename="*\\Retrive*" TargetFilename="*.vbs*"))) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="Adwind RAT / JRAT" | eval sigma_description="Detects javaw.exe in AppData folder as used by Adwind / JRAT"
dispatch.earliest_time = -24h@h
alert.track = 0

[Octopus Scanner Malware - sysmon]
description = Detects Octopus Scanner Malware.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*\\AppData\\Local\\Microsoft\\Cache134.dat" OR TargetFilename="*\\AppData\\Local\\Microsoft\\ExplorerSync.db")) | eval sigma_attack_tags="attack.t1195 attack.t1195.001" | eval sigma_title="Octopus Scanner Malware" | eval sigma_description="Detects Octopus Scanner Malware."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VHD Image Download From Browser - sysmon]
description = Malware can use mountable Virtual Hard Disk .vhd file to encapsulate payloads and evade security controls
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\chrome.exe" OR Image="*\\firefox.exe" OR Image="*\\microsoftedge.exe" OR Image="*\\microsoftedgecp.exe" OR Image="*\\msedge.exe" OR Image="*\\iexplorer.exe" OR Image="*\\brave.exe" OR Image="*\\opera.exe") TargetFilename="*.vhd*") | eval sigma_attack_tags="attack.resource_development attack.t1587.001" | eval sigma_title="Suspicious VHD Image Download From Browser" | eval sigma_description="Malware can use mountable Virtual Hard Disk .vhd file to encapsulate payloads and evade security controls"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Kirbi File Creation - sysmon]
description = Detects the creation of files that contain Kerberos tickets based on an extension used by the popular tool Mimikatz
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*.kirbi") | eval sigma_attack_tags="attack.credential_access attack.t1558" | eval sigma_title="Mimikatz Kirbi File Creation" | eval sigma_description="Detects the creation of files that contain Kerberos tickets based on an extension used by the popular tool Mimikatz"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz MemSSP Default Log File Creation - sysmon]
description = Detects Mimikatz MemSSP default log file creation
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*mimilsa.log") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Mimikatz MemSSP Default Log File Creation" | eval sigma_description="Detects Mimikatz MemSSP default log file creation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Moriya Rootkit - sysmon]
description = Detects the use of Moriya rootkit as described in the securelist's Operation TunnelSnake report
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Windows\\System32\\drivers\\MoriyaStreamWatchmen.sys") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="Moriya Rootkit" | eval sigma_description="Detects the use of Moriya rootkit as described in the securelist's Operation TunnelSnake report"
dispatch.earliest_time = -24h@h
alert.track = 0

[SCR File Write Event - sysmon]
description = An attacker may execute an application as a .SCR File (Screensaver) using rundll32.exe desk.cpl,InstallScreenSaver
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*.scr" NOT ((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\system32\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*" OR TargetFilename="C:\\Windows\\SysWow64\\*" OR TargetFilename="C:\\Windows\\winsxs\\*" OR TargetFilename="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.t1218.011 attack.defense_evasion" | eval sigma_title="SCR File Write Event" | eval sigma_description="An attacker may execute an application as a .SCR File (Screensaver) using rundll32.exe desk.cpl,InstallScreenSaver"
dispatch.earliest_time = -24h@h
alert.track = 0

[Persistence Via Notepad++ Plugins - sysmon]
description = Detects creation of new '.dll' files inside the plugins directory of a notepad++ installation by a process other than 'gup.exe'. Which could indicates possible persistence
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\Notepad++\\plugins\\*" TargetFilename="*.dll") NOT ((Image="*\\Notepad++\\updater\\gup.exe") OR (Image="C:\\Users\\*" Image="*\\AppData\\Local\\Temp\\*" Image="*\\target.exe"))) | eval sigma_attack_tags="attack.persistence" | eval sigma_title="Persistence Via Notepad++ Plugins" | eval sigma_description="Detects creation of new '.dll' files inside the plugins directory of a notepad++ installation by a process other than 'gup.exe'. Which could indicates possible persistence"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious NTDS.DIT Creation - sysmon]
description = Detects suspicious creations of a file named ntds.dit, e.g. by a PowerShell parent or in a suspicious directory or a suspicious one liner
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*\\ntds.dit" ((ParentImage="*\\powershell.exe" OR ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe") OR (ParentImage="*\\apache*" OR ParentImage="*\\tomcat*" OR ParentImage="*\\AppData\\*" OR ParentImage="*\\Temp\\*" OR ParentImage="*\\Public\\*" OR ParentImage="*\\PerfLogs\\*") OR (Image="*\\AppData\\*" OR Image="*\\Temp\\*" OR Image="*\\Public\\*" OR Image="*\\PerfLogs\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Suspicious NTDS.DIT Creation" | eval sigma_description="Detects suspicious creations of a file named ntds.dit, e.g. by a PowerShell parent or in a suspicious directory or a suspicious one liner"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious NTDS Exfil Filename Patterns - sysmon]
description = Detects suspicious creations of files with names used in various tools that export the NTDS.DIT for exfiltration
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*\\All.cab" OR TargetFilename="*.ntds.cleartext")) | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Suspicious NTDS Exfil Filename Patterns" | eval sigma_description="Detects suspicious creations of files with names used in various tools that export the NTDS.DIT for exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Add-In Loading - sysmon]
description = Detects add-ins that load when Microsoft Word or Excel starts (.wll/.xll are simply .dll fit for Word or Excel).
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\Microsoft\\Word\\Startup\\*" TargetFilename="*.wll") OR (TargetFilename="*\\Microsoft\\Excel\\Startup\\*" TargetFilename="*.xll") OR (TargetFilename="*\\Microsoft\\Addins\\*" (TargetFilename="*.xlam" OR TargetFilename="*.xla")))) | eval sigma_attack_tags="attack.persistence attack.t1137.006" | eval sigma_title="Microsoft Office Add-In Loading" | eval sigma_description="Detects add-ins that load when Microsoft Word or Excel starts (.wll/.xll are simply .dll fit for Word or Excel)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Outlook C2 Macro Creation - sysmon]
description = Detects the creation of a macro file for Outlook. Goes with win_outlook_c2_registry_key. VbaProject.OTM is explicitly mentioned in T1137. Particularly interesting if both events Registry & File Creation happens at the same time.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\Microsoft\\Outlook\\VbaProject.OTM") | eval sigma_attack_tags="attack.persistence attack.command_and_control attack.t1137 attack.t1008 attack.t1546" | eval sigma_title="Outlook C2 Macro Creation" | eval sigma_description="Detects the creation of a macro file for Outlook. Goes with win_outlook_c2_registry_key. VbaProject.OTM is explicitly mentioned in T1137. Particularly interesting if both events Registry & File Creation happens at the same time."
dispatch.earliest_time = -24h@h
alert.track = 0

[Outlook Form Installation - sysmon]
description = Detects the creation of new Outlook form which can contain malicious code
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\outlook.exe" TargetFilename="*\\appdata\\local\\microsoft\\FORMS\\*") | table TargetFilename | eval sigma_attack_tags="attack.persistence attack.t1137.003" | eval sigma_title="Outlook Form Installation" | eval sigma_description="Detects the creation of new Outlook form which can contain malicious code"
dispatch.earliest_time = -24h@h
alert.track = 0

[PCRE.NET Package Temp Files - sysmon]
description = Detects processes creating temp files related to PCRE.NET package
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="PCRE.NET Package Temp Files" | eval sigma_description="Detects processes creating temp files related to PCRE.NET package"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pingback Backdoor - sysmon]
description = Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*updata.exe" TargetFilename="C:\\Windows\\oci.dll") | eval sigma_attack_tags="attack.persistence attack.t1574.001" | eval sigma_title="Pingback Backdoor" | eval sigma_description="Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Commandlet Names - sysmon]
description = Detects the creation of known powershell scripts for exploitation
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*\\Invoke-DllInjection.ps1" OR TargetFilename="*\\Invoke-WmiCommand.ps1" OR TargetFilename="*\\Get-GPPPassword.ps1" OR TargetFilename="*\\Get-Keystrokes.ps1" OR TargetFilename="*\\Get-VaultCredential.ps1" OR TargetFilename="*\\Invoke-CredentialInjection.ps1" OR TargetFilename="*\\Invoke-Mimikatz.ps1" OR TargetFilename="*\\Invoke-NinjaCopy.ps1" OR TargetFilename="*\\Invoke-TokenManipulation.ps1" OR TargetFilename="*\\Out-Minidump.ps1" OR TargetFilename="*\\VolumeShadowCopyTools.ps1" OR TargetFilename="*\\Invoke-ReflectivePEInjection.ps1" OR TargetFilename="*\\Get-TimedScreenshot.ps1" OR TargetFilename="*\\Invoke-UserHunter.ps1" OR TargetFilename="*\\Find-GPOLocation.ps1" OR TargetFilename="*\\Invoke-ACLScanner.ps1" OR TargetFilename="*\\Invoke-DowngradeAccount.ps1" OR TargetFilename="*\\Get-ServiceUnquoted.ps1" OR TargetFilename="*\\Get-ServiceFilePermission.ps1" OR TargetFilename="*\\Get-ServicePermission.ps1" OR TargetFilename="*\\Invoke-ServiceAbuse.ps1" OR TargetFilename="*\\Install-ServiceBinary.ps1" OR TargetFilename="*\\Get-RegAutoLogon.ps1" OR TargetFilename="*\\Get-VulnAutoRun.ps1" OR TargetFilename="*\\Get-VulnSchTask.ps1" OR TargetFilename="*\\Get-UnattendedInstallFile.ps1" OR TargetFilename="*\\Get-WebConfig.ps1" OR TargetFilename="*\\Get-ApplicationHost.ps1" OR TargetFilename="*\\Get-RegAlwaysInstallElevated.ps1" OR TargetFilename="*\\Get-Unconstrained.ps1" OR TargetFilename="*\\Add-RegBackdoor.ps1" OR TargetFilename="*\\Add-ScrnSaveBackdoor.ps1" OR TargetFilename="*\\Gupt-Backdoor.ps1" OR TargetFilename="*\\Invoke-ADSBackdoor.ps1" OR TargetFilename="*\\Enabled-DuplicateToken.ps1" OR TargetFilename="*\\Invoke-PsUaCme.ps1" OR TargetFilename="*\\Remove-Update.ps1" OR TargetFilename="*\\Check-VM.ps1" OR TargetFilename="*\\Get-LSASecret.ps1" OR TargetFilename="*\\Get-PassHashes.ps1" OR TargetFilename="*\\Show-TargetScreen.ps1" OR TargetFilename="*\\Port-Scan.ps1" OR TargetFilename="*\\Invoke-PoshRatHttp.ps1" OR TargetFilename="*\\Invoke-PowerShellTCP.ps1" OR TargetFilename="*\\Invoke-PowerShellWMI.ps1" OR TargetFilename="*\\Add-Exfiltration.ps1" OR TargetFilename="*\\Add-Persistence.ps1" OR TargetFilename="*\\Do-Exfiltration.ps1" OR TargetFilename="*\\Start-CaptureServer.ps1" OR TargetFilename="*\\Invoke-ShellCode.ps1" OR TargetFilename="*\\Get-ChromeDump.ps1" OR TargetFilename="*\\Get-ClipboardContents.ps1" OR TargetFilename="*\\Get-FoxDump.ps1" OR TargetFilename="*\\Get-IndexedItem.ps1" OR TargetFilename="*\\Get-Screenshot.ps1" OR TargetFilename="*\\Invoke-Inveigh.ps1" OR TargetFilename="*\\Invoke-NetRipper.ps1" OR TargetFilename="*\\Invoke-EgressCheck.ps1" OR TargetFilename="*\\Invoke-PostExfil.ps1" OR TargetFilename="*\\Invoke-PSInject.ps1" OR TargetFilename="*\\Invoke-RunAs.ps1" OR TargetFilename="*\\MailRaider.ps1" OR TargetFilename="*\\New-HoneyHash.ps1" OR TargetFilename="*\\Set-MacAttribute.ps1" OR TargetFilename="*\\Invoke-DCSync.ps1" OR TargetFilename="*\\Invoke-PowerDump.ps1" OR TargetFilename="*\\Exploit-Jboss.ps1" OR TargetFilename="*\\Invoke-ThunderStruck.ps1" OR TargetFilename="*\\Invoke-VoiceTroll.ps1" OR TargetFilename="*\\Set-Wallpaper.ps1" OR TargetFilename="*\\Invoke-InveighRelay.ps1" OR TargetFilename="*\\Invoke-PsExec.ps1" OR TargetFilename="*\\Invoke-SSHCommand.ps1" OR TargetFilename="*\\Get-SecurityPackages.ps1" OR TargetFilename="*\\Install-SSP.ps1" OR TargetFilename="*\\Invoke-BackdoorLNK.ps1" OR TargetFilename="*\\PowerBreach.ps1" OR TargetFilename="*\\Get-SiteListPassword.ps1" OR TargetFilename="*\\Get-System.ps1" OR TargetFilename="*\\Invoke-BypassUAC.ps1" OR TargetFilename="*\\Invoke-Tater.ps1" OR TargetFilename="*\\Invoke-WScriptBypassUAC.ps1" OR TargetFilename="*\\PowerUp.ps1" OR TargetFilename="*\\PowerView.ps1" OR TargetFilename="*\\Get-RickAstley.ps1" OR TargetFilename="*\\Find-Fruit.ps1" OR TargetFilename="*\\HTTP-Login.ps1" OR TargetFilename="*\\Find-TrustedDocuments.ps1" OR TargetFilename="*\\Invoke-Paranoia.ps1" OR TargetFilename="*\\Invoke-WinEnum.ps1" OR TargetFilename="*\\Invoke-ARPScan.ps1" OR TargetFilename="*\\Invoke-PortScan.ps1" OR TargetFilename="*\\Invoke-ReverseDNSLookup.ps1" OR TargetFilename="*\\Invoke-SMBScanner.ps1" OR TargetFilename="*\\Invoke-Mimikittenz.ps1" OR TargetFilename="*\\PowerUpSQL.ps1" OR TargetFilename="*\\Get-ComputerDetail.ps1" OR TargetFilename="*\\Find-AVSignature.ps1" OR TargetFilename="*\\Get-GPPAutologon.ps1" OR TargetFilename="*\\Get-MicrophoneAudio.ps1" OR TargetFilename="*\\Invoke-EventViewer.ps1" OR TargetFilename="*\\WSUSpendu.ps1" OR TargetFilename="*\\Invoke-PowerThIEf.ps1" OR TargetFilename="*\\WinPwn.ps1" OR TargetFilename="*\\Offline_Winpwn.ps1" OR TargetFilename="*\\PowerSharpPack.ps1" OR TargetFilename="*\\Invoke-BadPotato.ps1" OR TargetFilename="*\\Invoke-BetterSafetyKatz.ps1" OR TargetFilename="*\\Invoke-Carbuncle.ps1" OR TargetFilename="*\\Invoke-Certify.ps1" OR TargetFilename="*\\Invoke-DAFT.ps1" OR TargetFilename="*\\Invoke-DinvokeKatz.ps1" OR TargetFilename="*\\Invoke-Eyewitness.ps1" OR TargetFilename="*\\Invoke-FakeLogonScreen.ps1" OR TargetFilename="*\\Invoke-Farmer.ps1" OR TargetFilename="*\\Invoke-Get-RBCD-Threaded.ps1" OR TargetFilename="*\\Invoke-Gopher.ps1" OR TargetFilename="*\\Invoke-Grouper2.ps1" OR TargetFilename="*\\Invoke-HandleKatz.ps1" OR TargetFilename="*\\Invoke-Internalmonologue.ps1" OR TargetFilename="*\\Invoke-KrbRelayUp.ps1" OR TargetFilename="*\\Invoke-LdapSignCheck.ps1" OR TargetFilename="*\\Invoke-Lockless.ps1" OR TargetFilename="*\\Invoke-MITM6.ps1" OR TargetFilename="*\\Invoke-NanoDump.ps1" OR TargetFilename="*\\Invoke-OxidResolver.ps1" OR TargetFilename="*\\Invoke-P0wnedshell.ps1" OR TargetFilename="*\\Invoke-P0wnedshellx86.ps1" OR TargetFilename="*\\Invoke-PPLDump.ps1" OR TargetFilename="*\\Invoke-Rubeus.ps1" OR TargetFilename="*\\Invoke-SCShell.ps1" OR TargetFilename="*\\Invoke-SafetyKatz.ps1" OR TargetFilename="*\\Invoke-SauronEye.ps1" OR TargetFilename="*\\Invoke-Seatbelt.ps1" OR TargetFilename="*\\Invoke-SharPersist.ps1" OR TargetFilename="*\\Invoke-SharpAllowedToAct.ps1" OR TargetFilename="*\\Invoke-SharpBlock.ps1" OR TargetFilename="*\\Invoke-SharpBypassUAC.ps1" OR TargetFilename="*\\Invoke-SharpChromium.ps1" OR TargetFilename="*\\Invoke-SharpClipboard.ps1" OR TargetFilename="*\\Invoke-SharpCloud.ps1" OR TargetFilename="*\\Invoke-SharpDPAPI.ps1" OR TargetFilename="*\\Invoke-SharpDump.ps1" OR TargetFilename="*\\Invoke-SharpGPO-RemoteAccessPolicies.ps1" OR TargetFilename="*\\Invoke-SharpGPOAbuse.ps1" OR TargetFilename="*\\Invoke-SharpHandler.ps1" OR TargetFilename="*\\Invoke-SharpHide.ps1" OR TargetFilename="*\\Invoke-SharpHound4.ps1" OR TargetFilename="*\\Invoke-SharpImpersonation.ps1" OR TargetFilename="*\\Invoke-SharpImpersonationNoSpace.ps1" OR TargetFilename="*\\Invoke-SharpKatz.ps1" OR TargetFilename="*\\Invoke-SharpLdapRelayScan.ps1" OR TargetFilename="*\\Invoke-SharpLoginPrompt.ps1" OR TargetFilename="*\\Invoke-SharpMove.ps1" OR TargetFilename="*\\Invoke-SharpPrintNightmare.ps1" OR TargetFilename="*\\Invoke-SharpPrinter.ps1" OR TargetFilename="*\\Invoke-SharpRDP.ps1" OR TargetFilename="*\\Invoke-SharpSSDP.ps1" OR TargetFilename="*\\Invoke-SharpSecDump.ps1" OR TargetFilename="*\\Invoke-SharpSniper.ps1" OR TargetFilename="*\\Invoke-SharpSploit.ps1" OR TargetFilename="*\\Invoke-SharpSpray.ps1" OR TargetFilename="*\\Invoke-SharpStay.ps1" OR TargetFilename="*\\Invoke-SharpUp.ps1" OR TargetFilename="*\\Invoke-SharpWatson.ps1" OR TargetFilename="*\\Invoke-Sharphound2.ps1" OR TargetFilename="*\\Invoke-Sharphound3.ps1" OR TargetFilename="*\\Invoke-Sharplocker.ps1" OR TargetFilename="*\\Invoke-Sharpshares.ps1" OR TargetFilename="*\\Invoke-Sharpsploit_nomimi.ps1" OR TargetFilename="*\\Invoke-Sharpview.ps1" OR TargetFilename="*\\Invoke-Sharpweb.ps1" OR TargetFilename="*\\Invoke-Snaffler.ps1" OR TargetFilename="*\\Invoke-Spoolsample.ps1" OR TargetFilename="*\\Invoke-StandIn.ps1" OR TargetFilename="*\\Invoke-StickyNotesExtract.ps1" OR TargetFilename="*\\Invoke-Thunderfox.ps1" OR TargetFilename="*\\Invoke-Tokenvator.ps1" OR TargetFilename="*\\Invoke-UrbanBishop.ps1" OR TargetFilename="*\\Invoke-Whisker.ps1" OR TargetFilename="*\\Invoke-WireTap.ps1" OR TargetFilename="*\\Invoke-winPEAS.ps1" OR TargetFilename="*\\Invoke-Zerologon.ps1" OR TargetFilename="*\\Get-USBKeystrokes.ps1" OR TargetFilename="*\\Start-WebcamRecorder.ps1")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious PowerShell Commandlet Names" | eval sigma_description="Detects the creation of known powershell scripts for exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[QuarksPwDump Dump File - sysmon]
description = Detects a dump file written by QuarksPwDump password dumper
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Temp\\SAM-*" TargetFilename="*.dmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="QuarksPwDump Dump File" | eval sigma_description="Detects a dump file written by QuarksPwDump password dumper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rclone Config File Creation - sysmon]
description = Detects Rclone config file being created
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*:\\Users\\*" TargetFilename="*\\.config\\rclone\\*") | eval sigma_attack_tags="attack.exfiltration attack.t1567.002" | eval sigma_title="Rclone Config File Creation" | eval sigma_description="Detects Rclone config file being created"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Dropped File - sysmon]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="*gthread-3.6.dll*" OR TargetFilename="*sigcmm-2.4.dll*" OR TargetFilename="*\\Windows\\Temp\\tmp.bat*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="RedMimicry Winnti Playbook Dropped File" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Dump File Creation - sysmon]
description = Detects the creation of files that look like exports of the local SAM (Security Account Manager)
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\Temp\\sam" OR TargetFilename="*\\sam.sav" OR TargetFilename="*\\Intel\\sam" OR TargetFilename="*\\sam.hive" OR TargetFilename="*\\Perflogs\\sam" OR TargetFilename="*\\ProgramData\\sam" OR TargetFilename="*\\Users\\Public\\sam" OR TargetFilename="*\\AppData\\Local\\sam" OR TargetFilename="*\\AppData\\Roaming\\sam" OR TargetFilename="*_ShadowSteal.zip" OR TargetFilename="*\\Documents\\SAM.export") OR TargetFilename="c:\\sam" OR (TargetFilename="*\\hive_sam_*" OR TargetFilename="*\\sam.save*" OR TargetFilename="*\\sam.export*" OR TargetFilename="*\\~reg_sam.save*" OR TargetFilename="*\\sam_backup*" OR TargetFilename="*\\sam.bck*" OR TargetFilename="*\\sam.backup*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="SAM Dump File Creation" | eval sigma_description="Detects the creation of files that look like exports of the local SAM (Security Account Manager)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Created Files by Office Applications - sysmon]
description = This rule will monitor executable and script file creation by office applications. Please add more file extensions or magic bytes to the logic of your choice.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\winword.exe" OR Image="*\\excel.exe" OR Image="*\\powerpnt.exe") (TargetFilename="*.exe" OR TargetFilename="*.dll" OR TargetFilename="*.ocx" OR TargetFilename="*.com" OR TargetFilename="*.ps1" OR TargetFilename="*.vbs" OR TargetFilename="*.sys" OR TargetFilename="*.bat" OR TargetFilename="*.scr" OR TargetFilename="*.proj")) NOT ((TargetFilename="*C:\\Users\\*" TargetFilename="*\\AppData\\Local\\Microsoft\\Office\\*" TargetFilename="*\\WebServiceCache\\AllUsers*" TargetFilename="*.com") OR (Image="*\\winword.exe" TargetFilename="*\\AppData\\Local\\Temp\\webexdelta\\*" (TargetFilename="*.dll" OR TargetFilename="*.exe")) OR (TargetFilename="*\\AppData\\Local\\assembly\\tmp\\*" TargetFilename="*.dll"))) | eval sigma_attack_tags="attack.t1204.002 attack.execution" | eval sigma_title="Created Files by Office Applications" | eval sigma_description="This rule will monitor executable and script file creation by office applications. Please add more file extensions or magic bytes to the logic of your choice."
dispatch.earliest_time = -24h@h
alert.track = 0

[Startup Folder File Write - sysmon]
description = A General detection for files being created in the Windows startup directory. This could be an indicator of persistence.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp*") | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Startup Folder File Write" | eval sigma_description="A General detection for files being created in the Windows startup directory. This could be an indicator of persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ADSI-Cache Usage By Unknown Tool - sysmon]
description = Detects the usage of ADSI (LDAP) operations by tools. This may also detect tools like LDAPFragger.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\Local\\Microsoft\\Windows\\SchCache\\*" TargetFilename="*.sch") NOT (((Image="C:\\windows\\system32\\svchost.exe" OR Image="C:\\windows\\system32\\dllhost.exe" OR Image="C:\\windows\\system32\\mmc.exe" OR Image="C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe" OR Image="C:\\Windows\\CCM\\CcmExec.exe" OR Image="C:\\Program Files\\Cylance\\Desktop\\CylanceSvc.exe" OR Image="C:\\Windows\\System32\\wbem\\WmiPrvSE.exe")) OR (Image="C:\\Windows\\ccmsetup\\autoupgrade\\ccmsetup*") OR ((Image="C:\\Windows\\system32\\efsui.exe" OR Image="C:\\Windows\\system32\\dsac.exe")))) | eval sigma_attack_tags="attack.t1001.003 attack.command_and_control" | eval sigma_title="Suspicious ADSI-Cache Usage By Unknown Tool" | eval sigma_description="Detects the usage of ADSI (LDAP) operations by tools. This may also detect tools like LDAPFragger."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious CLR Logs Creation - sysmon]
description = Detects suspicious .NET assembly executions. Could detect using Cobalt Strike's command execute-assembly.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\AppData\\Local\\Microsoft\\CLR*" TargetFilename="*\\UsageLogs\\*" (TargetFilename="*mshta*" OR TargetFilename="*cscript*" OR TargetFilename="*wscript*" OR TargetFilename="*regsvr32*" OR TargetFilename="*wmic*" OR TargetFilename="*rundll32*" OR TargetFilename="*svchost*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.001 attack.t1218" | eval sigma_title="Suspicious CLR Logs Creation" | eval sigma_description="Detects suspicious .NET assembly executions. Could detect using Cobalt Strike's command execute-assembly."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Creation with Colorcpl - sysmon]
description = Once executed, colorcpl.exe will copy the arbitrary file to c:\windows\system32\spool\drivers\color\
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\colorcpl.exe" NOT ((TargetFilename="*.icm" OR TargetFilename="*.gmmp" OR TargetFilename="*.cdmp" OR TargetFilename="*.camp"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1564" | eval sigma_title="Suspicious Creation with Colorcpl" | eval sigma_description="Once executed, colorcpl.exe will copy the arbitrary file to c:\windows\system32\spool\drivers\color\"
dispatch.earliest_time = -24h@h
alert.track = 0

[Created Files by Microsoft Sync Center - sysmon]
description = This rule detects suspicious files created by Microsoft Sync Center (mobsync)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mobsync.exe" (TargetFilename="*.dll" OR TargetFilename="*.exe")) | eval sigma_attack_tags="attack.t1055 attack.t1218 attack.execution attack.defense_evasion" | eval sigma_title="Created Files by Microsoft Sync Center" | eval sigma_description="This rule detects suspicious files created by Microsoft Sync Center (mobsync)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Files in Default GPO Folder - sysmon]
description = Detects the creation of copy of suspicious files (EXE/DLL) to the default GPO storage folder
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\*" (TargetFilename="*.dll" OR TargetFilename="*.exe")) | eval sigma_attack_tags="attack.t1036.005 attack.defense_evasion" | eval sigma_title="Suspicious Files in Default GPO Folder" | eval sigma_description="Detects the creation of copy of suspicious files (EXE/DLL) to the default GPO storage folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious desktop.ini Action - sysmon]
description = Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*\\desktop.ini" NOT ((Image="C:\\Windows\\*" OR Image="C:\\Program Files\\*" OR Image="C:\\Program Files (x86)\\*"))) | eval sigma_attack_tags="attack.persistence attack.t1547.009" | eval sigma_title="Suspicious desktop.ini Action" | eval sigma_description="Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Desktopimgdownldr Target File - sysmon]
description = Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\svchost.exe" TargetFilename="*\\Personalization\\LockScreenImage\\*") NOT (TargetFilename="*C:\\Windows\\*")) NOT ((TargetFilename="*.jpg*" OR TargetFilename="*.jpeg*" OR TargetFilename="*.png*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1105" | eval sigma_title="Suspicious Desktopimgdownldr Target File" | eval sigma_description="Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension"
dispatch.earliest_time = -24h@h
alert.track = 0

[Creation of a Diagcab - sysmon]
description = Detects the creation of diagcab file, which could be caused by some legitimate installer or is a sign of exploitation (review the filename and its location)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*.diagcab") | eval sigma_attack_tags="attack.resource_development" | eval sigma_title="Creation of a Diagcab" | eval sigma_description="Detects the creation of diagcab file, which could be caused by some legitimate installer or is a sign of exploitation (review the filename and its location)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Creation of an Executable by an Executable - sysmon]
description = Detects the creation of an executable by another executable
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*.exe" TargetFilename="*.exe") NOT (((Image="C:\\Windows\\System32\\msiexec.exe" OR Image="C:\\Windows\\system32\\cleanmgr.exe" OR Image="C:\\Windows\\explorer.exe" OR Image="C:\\WINDOWS\\system32\\dxgiadaptercache.exe" OR Image="C:\\WINDOWS\\system32\\Dism.exe")) OR (Image="C:\\WINDOWS\\system32\\svchost.exe" TargetFilename="C:\\Windows\\SoftwareDistribution\\Download\\Install\\*") OR (Image="C:\\Windows\\WinSxS\\*" Image="*\\TiWorker.exe") OR ((Image="C:\\Program Files\\*" OR Image="C:\\Program Files (x86)\\*") OR (TargetFilename="C:\\Program Files\\*" OR TargetFilename="C:\\Program Files (x86)\\*")) OR (Image="C:\\ProgramData\\Microsoft\\Windows Defender\\*") OR (TargetFilename="*\\Microsoft\\WindowsApps\\*"))) | eval sigma_attack_tags="attack.resource_development attack.t1587.001" | eval sigma_title="Creation of an Executable by an Executable" | eval sigma_description="Detects the creation of an executable by another executable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MSExchangeMailboxReplication ASPX Write - sysmon]
description = Detects suspicious activity in which the MSExchangeMailboxReplication process writes .asp and .apsx files to disk, which could be a sign of ProxyShell exploitation
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\MSExchangeMailboxReplication.exe" (TargetFilename="*.aspx" OR TargetFilename="*.asp")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.persistence attack.t1505.003" | eval sigma_title="Suspicious MSExchangeMailboxReplication ASPX Write" | eval sigma_description="Detects suspicious activity in which the MSExchangeMailboxReplication process writes .asp and .apsx files to disk, which could be a sign of ProxyShell exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get-Variable.exe Creation - sysmon]
description = Get-Variable is a valid PowerShell cmdlet
WindowsApps is by default in the path where PowerShell is executed.
So when the Get-Variable command is issued on PowerShell execution, the system first looks for the Get-Variable executable in the path and executes the malicious binary instead of looking for the PowerShell cmdlet.

search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*Local\\Microsoft\\WindowsApps\\Get-Variable.exe") | eval sigma_attack_tags="attack.persistence attack.t1546 attack.defense_evasion attack.t1027" | eval sigma_title="Suspicious Get-Variable.exe Creation" | eval sigma_description="Get-Variable is a valid PowerShell cmdlet
WindowsApps is by default in the path where PowerShell is executed.
So when the Get-Variable command is issued on PowerShell execution, the system first looks for the Get-Variable executable in the path and executes the malicious binary instead of looking for the PowerShell cmdlet.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Writes Ntds.dit - sysmon]
description = Detects suspicious processes that write (copy) a Active Directory database (ntds.dit) file
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\ntds.dit" (Image="*\\powershell.exe" OR Image="*\\cmd.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003" | eval sigma_title="Suspicious Process Writes Ntds.dit" | eval sigma_description="Detects suspicious processes that write (copy) a Active Directory database (ntds.dit) file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PFX File Creation - sysmon]
description = A general detection for processes creating PFX files. This could be an indicator of an adversary exporting a local certificate to a PFX file.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*.pfx" NOT ((TargetFilename="*\\Templates\\Windows\\Windows_TemporaryKey.pfx*" TargetFilename="*\\CMake\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="Suspicious PFX File Creation" | eval sigma_description="A general detection for processes creating PFX files. This could be an indicator of an adversary exporting a local certificate to a PFX file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Profile.ps1 Modification - sysmon]
description = Detects a change in profile.ps1 of the Powershell profile
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\My Documents\\PowerShell\\*" TargetFilename="*\\profile.ps1*") OR (TargetFilename="*C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\*" TargetFilename="*\\profile.ps1*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.013" | eval sigma_title="Powershell Profile.ps1 Modification" | eval sigma_description="Detects a change in profile.ps1 of the Powershell profile"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PROCEXP152.sys File Created In TMP - sysmon]
description = Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder. This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\AppData\\Local\\Temp\\*" TargetFilename="*PROCEXP152.sys") NOT ((Image="*\\procexp64.exe*" OR Image="*\\procexp.exe*" OR Image="*\\procmon64.exe*" OR Image="*\\procmon.exe*"))) | eval sigma_attack_tags="attack.t1562.001 attack.defense_evasion" | eval sigma_title="Suspicious PROCEXP152.sys File Created In TMP" | eval sigma_description="Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder. This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Interactive PowerShell as SYSTEM - sysmon]
description = Detects the creation of files that indicator an interactive use of PowerShell in the SYSTEM user context
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (TargetFilename="C:\\Windows\\System32\\config\\systemprofile\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt" OR TargetFilename="C:\\Windows\\System32\\config\\systemprofile\\AppData\\Local\\Microsoft\\Windows\\PowerShell\\StartupProfileData-Interactive")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Interactive PowerShell as SYSTEM" | eval sigma_description="Detects the creation of files that indicator an interactive use of PowerShell in the SYSTEM user context"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scheduled Task Write to System32 Tasks - sysmon]
description = Detects the creation of tasks from processes executed from suspicious locations
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\Windows\\System32\\Tasks*" (Image="*\\AppData\\*" OR Image="*C:\\PerfLogs*" OR Image="*\\Windows\\System32\\config\\systemprofile*")) | eval sigma_attack_tags="attack.persistence attack.execution attack.t1053" | eval sigma_title="Suspicious Scheduled Task Write to System32 Tasks" | eval sigma_description="Detects the creation of tasks from processes executed from suspicious locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[TeamViewer Remote Session - sysmon]
description = Detects the creation of log files during a TeamViewer remote session
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="*\\TeamViewer\\RemotePrinting\\tvprint.db" OR TargetFilename="*\\TeamViewer\\TVNetwork.log") OR (TargetFilename="*\\TeamViewer*" TargetFilename="*_Logfile.log*"))) | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="TeamViewer Remote Session" | eval sigma_description="Detects the creation of log files during a TeamViewer remote session"
dispatch.earliest_time = -24h@h
alert.track = 0

[Creation In User Word Statup Folder - sysmon]
description = Detects the creation of an file in user Word Startup
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*\\AppData\\Roaming\\Microsoft\\Word\\STARTUP\\*" NOT ((TargetFilename="*.docx" OR TargetFilename="*.docm" OR TargetFilename="*.dotx" OR TargetFilename="*.dotm" OR TargetFilename="*.docb" OR TargetFilename="*.pdf" OR TargetFilename="*.wll" OR TargetFilename="*.wwl"))) | eval sigma_attack_tags="attack.resource_development attack.t1587.001" | eval sigma_title="Creation In User Word Statup Folder" | eval sigma_description="Detects the creation of an file in user Word Startup"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Tool Execution - sysmon]
description = Detects PsExec service installation and execution events (service and Sysmon)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="*\\PSEXESVC.exe") | table EventCode,CommandLine,ParentCommandLine,ServiceName,ServiceFileName,TargetFilename,PipeName | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="PsExec Tool Execution" | eval sigma_description="Detects PsExec service installation and execution events (service and Sysmon)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hijack Legit RDP Session to Move Laterally - sysmon]
description = Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mstsc.exe" TargetFilename="*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Hijack Legit RDP Session to Move Laterally" | eval sigma_description="Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Consent and Comctl32 - File - sysmon]
description = Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Windows\\System32\\consent.exe.@*" TargetFilename="*\\comctl32.dll") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Consent and Comctl32 - File" | eval sigma_description="Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using .NET Code Profiler on MMC - sysmon]
description = Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe DLL hijacking (UACMe 39)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Users\\*" TargetFilename="*\\AppData\\Local\\Temp\\pe386.dll") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using .NET Code Profiler on MMC" | eval sigma_description="Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe DLL hijacking (UACMe 39)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using EventVwr - sysmon]
description = Detects the pattern of a UAC bypass using Windows Event Viewer
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) TargetFilename="*\\AppData\\Local\\Microsoft\\Event Viewer\\RecentViews*" NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation" | eval sigma_title="UAC Bypass Using EventVwr" | eval sigma_description="Detects the pattern of a UAC bypass using Windows Event Viewer"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using IDiagnostic Profile - File - sysmon]
description = Detects the creation of a file by 'dllhost.exe' in System32 directory part of 'IDiagnosticProfileUAC' UAC bypass technique
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\DllHost.exe" TargetFilename="C:\\Windows\\System32\\*" TargetFilename="*.dll") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using IDiagnostic Profile - File" | eval sigma_description="Detects the creation of a file by 'dllhost.exe' in System32 directory part of 'IDiagnosticProfileUAC' UAC bypass technique"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using IEInstal - File - sysmon]
description = Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\Program Files\\Internet Explorer\\IEInstal.exe" TargetFilename="C:\\Users\\*" TargetFilename="*\\AppData\\Local\\Temp\\*" TargetFilename="*consent.exe") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using IEInstal - File" | eval sigma_description="Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using MSConfig Token Modification - File - sysmon]
description = Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Users\\*" TargetFilename="*\\AppData\\Local\\Temp\\pkgmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using MSConfig Token Modification - File" | eval sigma_description="Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using NTFS Reparse Point - File - sysmon]
description = Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Users\\*" TargetFilename="*\\AppData\\Local\\Temp\\api-ms-win-core-kernel32-legacy-l1.DLL") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using NTFS Reparse Point - File" | eval sigma_description="Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Abusing Winsat Path Parsing - File - sysmon]
description = Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetFilename="C:\\Users\\*" (TargetFilename="*\\AppData\\Local\\Temp\\system32\\winsat.exe" OR TargetFilename="*\\AppData\\Local\\Temp\\system32\\winmm.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Abusing Winsat Path Parsing - File" | eval sigma_description="Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Windows Media Player - File - sysmon]
description = Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((TargetFilename="C:\\Users\\*" TargetFilename="*\\AppData\\Local\\Temp\\OskSupport.dll") OR (Image="C:\\Windows\\system32\\DllHost.exe" TargetFilename="C:\\Program Files\\Windows Media Player\\osk.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Windows Media Player - File" | eval sigma_description="Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Webshell Creation - sysmon]
description = Possible webshell file creation on a static web site
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) NOT (Image="System") ((((TargetFilename="*\\inetpub\\wwwroot\\*" (TargetFilename="*.asp*" OR TargetFilename="*.ashx*" OR TargetFilename="*.ph*")) NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*"))) OR (((TargetFilename="*\\www\\*" OR TargetFilename="*\\htdocs\\*" OR TargetFilename="*\\html\\*") TargetFilename="*.ph*") NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*")))) OR ((TargetFilename="*.jsp" OR (TargetFilename="*\\cgi-bin\\*" TargetFilename="*.pl*")) NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*"))))) | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Windows Webshell Creation" | eval sigma_description="Possible webshell file creation on a static web site"
dispatch.earliest_time = -24h@h
alert.track = 0

[Creation of an WerFault.exe in Unusual Folder - sysmon]
description = Detects WerFault copoed to a suspicious folder, which could be a sign of WerFault DLL hijacking
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*\\WerFault.exe" OR TargetFilename="*\\wer.dll") NOT ((TargetFilename="*\\System32\\*" OR TargetFilename="*\\SysWOW64\\*" OR TargetFilename="*\\WinSxS\\*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1574.001" | eval sigma_title="Creation of an WerFault.exe in Unusual Folder" | eval sigma_description="Detects WerFault copoed to a suspicious folder, which could be a sign of WerFault DLL hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - sysmon]
description = Detects a file ending in jse, vbe, js, vba, vbs written by cscript.exe or wscript.exe
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wscript.exe" OR Image="*\\cscript.exe") (TargetFilename="C:\\Users\\*" OR TargetFilename="C:\\ProgramData*") (TargetFilename="*.jse" OR TargetFilename="*.vbe" OR TargetFilename="*.js" OR TargetFilename="*.vba" OR TargetFilename="*.vbs")) | table Image,TargetFilename | eval sigma_attack_tags="" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects a file ending in jse, vbe, js, vba, vbs written by cscript.exe or wscript.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell File Write to Suspicious Folder - sysmon]
description = Detects a Windows executable that writes files to suspicious folders
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\msbuild.exe" OR Image="*\\certutil.exe") (TargetFilename="*C:\\Users\\Public*" OR TargetFilename="*C:\\PerfLogs*")) OR ((Image="*\\schtasks.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\certutil.exe") (TargetFilename="*C:\\Users\\Public*" OR TargetFilename="*C:\\PerfLogs*" OR TargetFilename="*\\AppData\\*" OR TargetFilename="*C:\\Windows\\Temp*")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Windows Shell File Write to Suspicious Folder" | eval sigma_description="Detects a Windows executable that writes files to suspicious folders"
dispatch.earliest_time = -24h@h
alert.track = 0

[AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - sysmon]
description = Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetFilename="*WsmPty.xsl" OR TargetFilename="*WsmTxt.xsl") NOT ((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl" | eval sigma_description="Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Word Cab File Write CVE-2021-40444 - sysmon]
description = Detects file creation patterns noticeable during the exploitation of CVE-2021-40444
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\winword.exe" TargetFilename="*.cab" TargetFilename="*\\Windows\\INetCache*") OR (Image="*\\winword.exe" TargetFilename="*\\AppData\\Local\\Temp\\*" TargetFilename="*.inf*")) NOT (TargetFilename="C:\\Users\\*" TargetFilename="*AppData\\Local\\Temp*" TargetFilename="*\\Content.inf")) | table TargetFilename | eval sigma_attack_tags="attack.resource_development attack.t1587" | eval sigma_title="Suspicious Word Cab File Write CVE-2021-40444" | eval sigma_description="Detects file creation patterns noticeable during the exploitation of CVE-2021-40444"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer File Write - sysmon]
description = Detects file writes of WMI script event consumer
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\WINDOWS\\system32\\wbem\\scrcons.exe") | eval sigma_attack_tags="attack.t1546.003 attack.persistence" | eval sigma_title="WMI Persistence - Script Event Consumer File Write" | eval sigma_description="Detects file writes of WMI script event consumer"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Wbemcomn DLL Hijack - sysmon]
description = Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario.
search = index=sysmon* (EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="System" TargetFilename="*\\wbem\\wbemcomn.dll") | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.002" | eval sigma_title="Wmiprvse Wbemcomn DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Template Creation - sysmon]
description = Detects creation of template files for Microsoft Office from outside Office
search = index=sysmon* ((EventCode="11" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((TargetFilename="*.dot" OR TargetFilename="*.dotm" OR TargetFilename="*.doc" OR TargetFilename="*.docm" OR TargetFilename="*.docx" OR TargetFilename="*.rtf") TargetFilename="*\\Microsoft\\Word\\Startup*") OR ((TargetFilename="*.xlt" OR TargetFilename="*.xltm" OR TargetFilename="*.xls" OR TargetFilename="*.xlsm" OR TargetFilename="*.xlsx") TargetFilename="*\\Microsoft\\Excel\\Startup*")) NOT ((Image="*\\WINWORD.exe" OR Image="*\\EXCEL.exe"))) | eval sigma_attack_tags="attack.persistence attack.t1137" | eval sigma_title="Office Template Creation" | eval sigma_description="Detects creation of template files for Microsoft Office from outside Office"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Azure Browser SSO - sysmon]
description = Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser. An attacker can use this to authenticate to Azure AD in a browser as that user.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ImageLoaded="*MicrosoftAccountTokenProvider.dll" NOT ((Image="*\\BackgroundTaskHost.exe" OR Image="*\\devenv.exe" OR Image="*\\iexplore.exe" OR Image="*\\MicrosoftEdge.exe" OR Image="*\\Microsoft\\Edge\\Application\\msedge.exe" OR Image="*\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe" OR Image="*\\msedgewebview2.exe" OR Image="*\\OneDrive.exe") OR (Image="C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1574.002" | eval sigma_title="Abusing Azure Browser SSO" | eval sigma_description="Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser. An attacker can use this to authenticate to Azure AD in a browser as that user."
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts - sysmon]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="System.Management.Automation" ImageLoaded="*System.Management.Automation*") NOT ((Image="*\\powershell.exe" OR Image="*\\mscorsvw.exe") OR (Image="C:\\Program Files (x86)\\Microsoft Visual Studio\\*" OR Image="C:\\Program Files\\Microsoft Visual Studio\\*" OR Image="C:\\Windows\\System32\\*" OR Image="C:\\Program Files\\Citrix\\ConfigSync\\*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Alternate PowerShell Hosts" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[FoggyWeb Backdoor DLL Loading - sysmon]
description = Detects DLL image load activity as used by FoggyWeb backdoor loader
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\Windows\\ADFS\\version.dll") | eval sigma_attack_tags="attack.resource_development attack.t1587" | eval sigma_title="FoggyWeb Backdoor DLL Loading" | eval sigma_description="Detects DLL image load activity as used by FoggyWeb backdoor loader"
dispatch.earliest_time = -24h@h
alert.track = 0

[In-memory PowerShell - sysmon]
description = Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's 'load powershell' extension.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ImageLoaded="*\\System.Management.Automation.Dll" OR ImageLoaded="*\\System.Management.Automation.ni.Dll") NOT ((Image="C:\\Windows\\System32\\dsac.exe" OR (Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\WINDOWS\\System32\\sdiagnhost.exe" OR Image="*\\mscorsvw.exe" OR Image="*\\WINDOWS\\System32\\RemoteFXvGPUDisablement.exe" OR Image="*\\sqlps.exe" OR Image="*\\wsmprovhost.exe" OR Image="*\\winrshost.exe" OR Image="*\\syncappvpublishingserver.exe" OR Image="*\\runscripthelper.exe" OR Image="*\\ServerManager.exe" OR Image="*\\Microsoft SQL Server Management Studio *\\Common*\\IDE\\Ssms.exe" OR Image="*\\IDE\\devenv.exe" OR Image="*\\ServiceHub.VSDetouredHost.exe" OR Image="*\\ServiceHub.SettingsHost.exe" OR Image="*\\ServiceHub.Host.CLR.x86.exe" OR Image="*\\Citrix\\ConfigSync\\ConfigSyncRun.exe") OR (Image="C:\\Program Files (x86)\\Microsoft Visual Studio\\*" OR Image="C:\\Program Files\\Microsoft Visual Studio\\*")) OR (Image="C:\\Windows\\Temp\\asgard2-agent\\*" (Image="*\\thor64.exe" OR Image="*\\thor.exe")))) | eval sigma_attack_tags="attack.t1059.001 attack.execution" | eval sigma_title="In-memory PowerShell" | eval sigma_description="Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's 'load powershell' extension."
dispatch.earliest_time = -24h@h
alert.track = 0

[MSDT.exe Loading Diagnostic Library - sysmon]
description = Detects both of CVE-2022-30190 / Follina and DogWalk vulnerability exploiting msdt.exe binary to load sdiageng.dll binary
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\msdt.exe" ImageLoaded="*\\sdiageng.dll") | eval sigma_attack_tags="attack.defense_evasion attack.t1202 cve.2022.30190" | eval sigma_title="MSDT.exe Loading Diagnostic Library" | eval sigma_description="Detects both of CVE-2022-30190 / Follina and DogWalk vulnerability exploiting msdt.exe binary to load sdiageng.dll binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[PCRE.NET Package Image Load - sysmon]
description = Detects processes loading modules related to PCRE.NET package
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ImageLoaded="*\\AppData\\Local\\Temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="PCRE.NET Package Image Load" | eval sigma_description="Detects processes loading modules related to PCRE.NET package"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pingback Backdoor - sysmon]
description = Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*msdtc.exe" ImageLoaded="C:\\Windows\\oci.dll") | eval sigma_attack_tags="attack.persistence attack.t1574.001" | eval sigma_title="Pingback Backdoor" | eval sigma_description="Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Script Host Process Image Loaded - sysmon]
description = Detects signs of the WMI script host process %SystemRoot%\system32\wbem\scrcons.exe functionality being used via images being loaded by a process.
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\scrcons.exe" (ImageLoaded="*\\vbscript.dll" OR ImageLoaded="*\\wbemdisp.dll" OR ImageLoaded="*\\wshom.ocx" OR ImageLoaded="*\\scrrun.dll")) | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.persistence attack.t1546.003" | eval sigma_title="WMI Script Host Process Image Loaded" | eval sigma_description="Detects signs of the WMI script host process %SystemRoot%\system32\wbem\scrcons.exe functionality being used via images being loaded by a process."
dispatch.earliest_time = -24h@h
alert.track = 0

[SILENTTRINITY Stager Execution - sysmon]
description = Detects SILENTTRINITY stager use
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="*st2stager*") | eval sigma_attack_tags="attack.command_and_control attack.t1071" | eval sigma_title="SILENTTRINITY Stager Execution" | eval sigma_description="Detects SILENTTRINITY stager use"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Spooler Service Suspicious Binary Load - sysmon]
description = Detect DLL Load from Spooler Service backup folder
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\spoolsv.exe" (ImageLoaded="*\\Windows\\System32\\spool\\drivers\\x64\\3\\*" OR ImageLoaded="*\\Windows\\System32\\spool\\drivers\\x64\\4\\*") ImageLoaded="*.dll") | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574 cve.2021.1675 cve.2021.34527" | eval sigma_title="Windows Spooler Service Suspicious Binary Load" | eval sigma_description="Detect DLL Load from Spooler Service backup folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Load of Advapi31.dll - sysmon]
description = Detects the load of advapi31.dll by a process running in an uncommon folder
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ImageLoaded="*\\advapi32.dll" NOT (((Image="C:\\Windows\\*" OR Image="C:\\Program Files (x86)\\*" OR Image="C:\\Program Files\\*")) OR (Image="C:\\ProgramData\\Microsoft\\Windows Defender\\platform\\*" Image="*\\MpCmdRun.exe") OR (Image="C:\\Users\\*" Image="*\\AppData\\Local\\Microsoft\\OneDrive\\*" Image="*FileCoAuth.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Suspicious Load of Advapi31.dll" | eval sigma_description="Detects the load of advapi31.dll by a process running in an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Load of dbghelp/dbgcore DLL from Suspicious Process - sysmon]
description = Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes. Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((((ImageLoaded="*\\dbghelp.dll" OR ImageLoaded="*\\dbgcore.dll") (Image="*\\msbuild.exe" OR Image="*\\cmd.exe" OR Image="*\\rundll32.exe" OR Image="*\\word.exe" OR Image="*\\excel.exe" OR Image="*\\powerpnt.exe" OR Image="*\\outlook.exe" OR Image="*\\monitoringhost.exe" OR Image="*\\wmic.exe" OR Image="*\\bash.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\mshta.exe" OR Image="*\\schtasks.exe" OR Image="*\\dnx.exe" OR Image="*\\regsvcs.exe" OR Image="*\\sc.exe" OR Image="*\\scriptrunner.exe")) OR ((ImageLoaded="*\\dbghelp.dll" OR ImageLoaded="*\\dbgcore.dll") Signed="FALSE")) NOT (Image="*Visual Studio*" OR (CommandLine="*-k LocalSystemNetworkRestricted*" OR CommandLine="*-k UnistackSvcGroup -s WpnUserService*"))) NOT ((CommandLine="C:\\WINDOWS\\winsxs\*\\TiWorker.exe -Embedding" OR CommandLine="C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s wuauserv" OR CommandLine="C:\\Windows\\System32\\svchost.exe -k WerSvcGroup"))) | table ComputerName,User,Image,ImageLoaded | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Load of dbghelp/dbgcore DLL from Suspicious Process" | eval sigma_description="Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes. Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Fax Service DLL Search Order Hijack - sysmon]
description = The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\fxssvc.exe" ImageLoaded="*ualapi.dll") NOT (ImageLoaded="C:\\Windows\\WinSxS\\*")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1574.001 attack.t1574.002" | eval sigma_title="Fax Service DLL Search Order Hijack" | eval sigma_description="The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Process Hollowing Image Loading - sysmon]
description = Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\notepad.exe" (ImageLoaded="*\\samlib.dll" OR ImageLoaded="*\\WinSCard.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Possible Process Hollowing Image Loading" | eval sigma_description="Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz"
dispatch.earliest_time = -24h@h
alert.track = 0

[dotNET DLL Loaded Via Office Applications - sysmon]
description = Detects any assembly DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") ImageLoaded="C:\\Windows\\assembly\\*") | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="dotNET DLL Loaded Via Office Applications" | eval sigma_description="Detects any assembly DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[CLR DLL Loaded Via Office Applications - sysmon]
description = Detects CLR DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") ImageLoaded="*\\clr.dll*") | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="CLR DLL Loaded Via Office Applications" | eval sigma_description="Detects CLR DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[GAC DLL Loaded Via Office Applications - sysmon]
description = Detects any GAC DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") ImageLoaded="C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL*") | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="GAC DLL Loaded Via Office Applications" | eval sigma_description="Detects any GAC DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Parsing DLL Loaded Via Office Applications - sysmon]
description = Detects DSParse DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") ImageLoaded="*\\dsparse.dll*") | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="Active Directory Parsing DLL Loaded Via Office Applications" | eval sigma_description="Detects DSParse DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Kerberos DLL Loaded Via Office Applications - sysmon]
description = Detects Kerberos DLL being loaded by an Office Product
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") ImageLoaded="*\\kerberos.dll") | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="Active Directory Kerberos DLL Loaded Via Office Applications" | eval sigma_description="Detects Kerberos DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Python Py2Exe Image Load - sysmon]
description = Detects the image load of Python Core indicative of a Python script bundled with Py2Exe.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Description="Python Core" NOT ((Image="*Python*") OR (Image="C:\\Program Files\\*" OR Image="C:\\Program Files (x86)\\*"))) | table Description | eval sigma_attack_tags="attack.defense_evasion attack.t1027.002" | eval sigma_title="Python Py2Exe Image Load" | eval sigma_description="Detects the image load of Python Core indicative of a Python script bundled with Py2Exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[CLR DLL Loaded Via Scripting Applications - sysmon]
description = Detects CLR DLL being loaded by an scripting applications
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\mshta.exe") (ImageLoaded="*\\clr.dll" OR ImageLoaded="*\\mscoree.dll" OR ImageLoaded="*\\mscorlib.dll")) | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.t1055" | eval sigma_title="CLR DLL Loaded Via Scripting Applications" | eval sigma_description="Detects CLR DLL being loaded by an scripting applications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious System.Drawing Load - sysmon]
description = A General detection for processes loading System.Drawing.ni.dll. This could be an indicator of potential Screen Capture.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ImageLoaded="*\\System.Drawing.ni.dll" NOT (((Image="C:\\Program Files\\*" OR Image="C:\\Program Files (x86)\\*" OR Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\Microsoft.NET\\*" OR Image="C:\\Windows\\ImmersiveControlPanel\\*")) OR ((Image="C:\\Users\\*\\AppData\\Local\\NhNotifSys\\nahimic\\nahimicNotifSys.exe" OR Image="C:\\Users\\*\\GitHubDesktop\\Update.exe" OR Image="C:\\Windows\\System32\\NhNotifSys.exe")))) | eval sigma_attack_tags="attack.collection attack.t1113" | eval sigma_title="Suspicious System.Drawing Load" | eval sigma_description="A General detection for processes loading System.Drawing.ni.dll. This could be an indicator of potential Screen Capture."
dispatch.earliest_time = -24h@h
alert.track = 0

[Image Load of VSS_PS.dll by Uncommon Executable - sysmon]
description = Detects the image load of vss_ps.dll by uncommon executables using OriginalFileName datapoint
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ImageLoaded="*\\vss_ps.dll" NOT ((Image="*\\svchost.exe" OR Image="*\\msiexec.exe" OR Image="*\\vssvc.exe" OR Image="*\\srtasks.exe" OR Image="*\\tiworker.exe" OR Image="*\\dllhost.exe" OR Image="*\\searchindexer.exe" OR Image="*\\dismhost.exe" OR Image="*\\taskhostw.exe" OR Image="*\\clussvc.exe" OR Image="*\\thor64.exe" OR Image="*\\thor.exe" OR Image="*\\rundll32.exe" OR Image="*\\inetsrv\\iissetup.exe" OR Image="*\\inetsrv\\appcmd.exe") Image="*c:\\windows\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1490" | eval sigma_title="Image Load of VSS_PS.dll by Uncommon Executable" | eval sigma_description="Detects the image load of vss_ps.dll by uncommon executables using OriginalFileName datapoint"
dispatch.earliest_time = -24h@h
alert.track = 0

[VBA DLL Loaded Via Microsoft Word - sysmon]
description = Detects DLL's Loaded Via Word Containing VBA Macros
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\VBE7.DLL" OR ImageLoaded="*\\VBEUI.DLL" OR ImageLoaded="*\\VBE7INTL.DLL")) | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="VBA DLL Loaded Via Microsoft Word" | eval sigma_description="Detects DLL's Loaded Via Word Containing VBA Macros"
dispatch.earliest_time = -24h@h
alert.track = 0

[Svchost DLL Search Order Hijack - sysmon]
description = IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services 'svchost.exe -k netsvcs' to gain code execution on a remote machine.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" (ImageLoaded="*\\tsmsisrv.dll" OR ImageLoaded="*\\tsvipsrv.dll" OR ImageLoaded="*\\wlbsctrl.dll")) NOT (ImageLoaded="C:\\Windows\\WinSxS\\*")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1574.002 attack.t1574.001" | eval sigma_title="Svchost DLL Search Order Hijack" | eval sigma_description="IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services 'svchost.exe -k netsvcs' to gain code execution on a remote machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Time Travel Debugging Utility Usage - sysmon]
description = Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ImageLoaded="*\\ttdrecord.dll" OR ImageLoaded="*\\ttdwriter.dll" OR ImageLoaded="*\\ttdloader.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.credential_access attack.t1218 attack.t1003.001" | eval sigma_title="Time Travel Debugging Utility Usage" | eval sigma_description="Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass With Fake DLL - sysmon]
description = Attempts to load dismcore.dll after dropping it
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\dism.exe" ImageLoaded="*\\dismcore.dll") NOT (ImageLoaded="C:\\Windows\\System32\\Dism\\dismcore.dll")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1574.002" | eval sigma_title="UAC Bypass With Fake DLL" | eval sigma_description="Attempts to load dismcore.dll after dropping it"
dispatch.earliest_time = -24h@h
alert.track = 0

[Unsigned Image Loaded Into LSASS Process - sysmon]
description = Loading unsigned image (DLL, EXE) into LSASS process
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\lsass.exe" Signed="false") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Unsigned Image Loaded Into LSASS Process" | eval sigma_description="Loading unsigned image (DLL, EXE) into LSASS process"
dispatch.earliest_time = -24h@h
alert.track = 0

[APT PRIVATELOG Image Load Pattern - sysmon]
description = Detects an image load pattern as seen when a tool named PRIVATELOG is used and rarely observed under legitimate circumstances
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\svchost.exe" ImageLoaded="*\\clfsw32.dll") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="APT PRIVATELOG Image Load Pattern" | eval sigma_description="Detects an image load pattern as seen when a tool named PRIVATELOG is used and rarely observed under legitimate circumstances"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Modules Loaded - sysmon]
description = Detects non wmiprvse loading WMI modules
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ImageLoaded="*\\wmiclnt.dll" OR ImageLoaded="*\\WmiApRpl.dll" OR ImageLoaded="*\\wmiprov.dll" OR ImageLoaded="*\\wmiutils.dll" OR ImageLoaded="*\\wbemcomn.dll" OR ImageLoaded="*\\wbemprox.dll" OR ImageLoaded="*\\WMINet_Utils.dll" OR ImageLoaded="*\\wbemsvc.dll" OR ImageLoaded="*\\fastprox.dll") NOT ((Image="*\\WmiPrvSE.exe" OR Image="*\\WmiApSrv.exe" OR Image="*\\svchost.exe" OR Image="*\\DeviceCensus.exe" OR Image="*\\CompatTelRunner.exe" OR Image="*\\sdiagnhost.exe" OR Image="*\\SIHClient.exe" OR Image="*\\ngentask.exe" OR Image="*\\windows\\system32\\taskhostw.exe" OR Image="*\\windows\\system32\\MoUsoCoreWorker.exe" OR Image="*\\windows\\system32\\wbem\\WMIADAP.exe" OR Image="*C:\\Windows\\Sysmon64.exe" OR Image="*C:\\Windows\\Sysmon.exe" OR Image="*C:\\Windows\\System32\\wbem\\unsecapp.exe" OR Image="*\\logman.exe" OR Image="*\\systeminfo.exe" OR Image="*\\nvcontainer.exe" OR Image="*C:\\Windows\\System32\\wbem\\WMIC.exe" OR Image="*\\explorer.exe" OR Image="*\\opera_autoupdate.exe" OR Image="*\\MsMpEng.exe" OR Image="*\\thor64.exe" OR Image="*\\thor.exe"))) NOT ((Image="C:\\Program Files\\*" OR Image="C:\\Program Files (x86)\\*"))) | table ComputerName,User,Image,ImageLoaded | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Modules Loaded" | eval sigma_description="Detects non wmiprvse loading WMI modules"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Command Line Event Consumer - sysmon]
description = Detects WMI command line event consumers
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\Windows\\System32\\wbem\\WmiPrvSE.exe" ImageLoaded="*\\wbemcons.dll") | eval sigma_attack_tags="attack.t1546.003 attack.persistence" | eval sigma_title="WMI Persistence - Command Line Event Consumer" | eval sigma_description="Detects WMI command line event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Loading Scripting Libraries - sysmon]
description = Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc).
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wmic.exe" (ImageLoaded="*\\jscript.dll" OR ImageLoaded="*\\vbscript.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1220" | eval sigma_title="WMIC Loading Scripting Libraries" | eval sigma_description="Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Wbemcomn DLL Hijack - sysmon]
description = Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario.
search = index=sysmon* (EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wmiprvse.exe" ImageLoaded="*\\wbem\\wbemcomn.dll") | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.002" | eval sigma_title="Wmiprvse Wbemcomn DLL Hijack" | eval sigma_description="Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WSMAN Provider Image Loads - sysmon]
description = Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution.
search = index=sysmon* ((EventCode="7" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ImageLoaded="*\\WsmSvc.dll" OR ImageLoaded="*\\WsmAuto.dll" OR ImageLoaded="*\\Microsoft.WSMan.Management.ni.dll") OR (OriginalFileName="WsmSvc.dll" OR OriginalFileName="WSMANAUTOMATION.DLL" OR OriginalFileName="Microsoft.WSMan.Management.dll")) OR (Image="*\\svchost.exe" OriginalFileName="WsmWmiPl.dll")) NOT (((Image="*\\powershell.exe" OR Image="*C:\\Windows\\System32\\sdiagnhost.exe" OR Image="*C:\\Windows\\System32\\services.exe")) OR ((CommandLine="*svchost.exe -k netsvcs -p -s BITS*" OR CommandLine="*svchost.exe -k GraphicsPerfSvcGroup -s GraphicsPerfSvc*" OR CommandLine="*svchost.exe -k NetworkService -p -s Wecsvc*" OR CommandLine="*svchost.exe -k netsvcs*")) OR ((Image="C:\\Windows\\Microsoft.NET\\Framework64\\v*" OR Image="C:\\Windows\\Microsoft.NET\\Framework\\v*") Image="*\\mscorsvw.exe") OR ((Image="C:\\Windows\\System32\\Configure-SMRemoting.exe" OR Image="C:\\Windows\\System32\\ServerManager.exe")) OR (Image="C:\\Windows\\Temp\\asgard2-agent\\*") OR (Image="C:\\Program Files\\Citrix\\*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.003" | eval sigma_title="Suspicious WSMAN Provider Image Loads" | eval sigma_description="Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Network Connection Binary No CommandLine - sysmon]
description = Detects suspicious network connections made by a well-known Windows binary run with no command line parameters
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Initiated="true" (Image="*\\regsvr32.exe" OR Image="*\\rundll32.exe" OR Image="*\\dllhost.exe") (CommandLine="*\\regsvr32.exe" OR CommandLine="*\\rundll32.exe" OR CommandLine="*\\dllhost.exe")) NOT ((CommandLine="") OR (NOT CommandLine="*"))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Network Connection Binary No CommandLine" | eval sigma_description="Detects suspicious network connections made by a well-known Windows binary run with no command line parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Binary Github Communication - sysmon]
description = Detects an executable in the Windows folder accessing github.com
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Initiated="true" (DestinationHostname="*.github.com" OR DestinationHostname="*.githubusercontent.com") Image="C:\\Windows\\*") | eval sigma_attack_tags="attack.lateral_movement attack.t1105 attack.exfiltration attack.t1567.001" | eval sigma_title="Microsoft Binary Github Communication" | eval sigma_description="Detects an executable in the Windows folder accessing github.com"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Binary Suspicious Communication Endpoint - sysmon]
description = Detects an executable in the Windows folder accessing suspicious domains
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Initiated="true" (DestinationHostname="*dl.dropboxusercontent.com" OR DestinationHostname="*.pastebin.com" OR DestinationHostname="*.githubusercontent.com" OR DestinationHostname="*cdn.discordapp.com/attachments/" OR DestinationHostname="*mediafire.com" OR DestinationHostname="*mega.nz" OR DestinationHostname="*ddns.net" OR DestinationHostname="*.paste.ee" OR DestinationHostname="*.hastebin.com/raw/" OR DestinationHostname="*.ghostbin.co/" OR DestinationHostname="*ufile.io") Image="C:\\Windows\\*") | eval sigma_attack_tags="attack.lateral_movement attack.t1105" | eval sigma_title="Microsoft Binary Suspicious Communication Endpoint" | eval sigma_description="Detects an executable in the Windows folder accessing suspicious domains"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Crypto Mining Pool Connections - sysmon]
description = Detects process connections to a Monero crypto mining pool
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (DestinationHostname="pool.minexmr.com" OR DestinationHostname="fr.minexmr.com" OR DestinationHostname="de.minexmr.com" OR DestinationHostname="sg.minexmr.com" OR DestinationHostname="ca.minexmr.com" OR DestinationHostname="us-west.minexmr.com" OR DestinationHostname="pool.supportxmr.com" OR DestinationHostname="mine.c3pool.com" OR DestinationHostname="xmr-eu1.nanopool.org" OR DestinationHostname="xmr-eu2.nanopool.org" OR DestinationHostname="xmr-us-east1.nanopool.org" OR DestinationHostname="xmr-us-west1.nanopool.org" OR DestinationHostname="xmr-asia1.nanopool.org" OR DestinationHostname="xmr-jp1.nanopool.org" OR DestinationHostname="xmr-au1.nanopool.org" OR DestinationHostname="xmr.2miners.com" OR DestinationHostname="xmr.hashcity.org" OR DestinationHostname="xmr.f2pool.com" OR DestinationHostname="xmrpool.eu" OR DestinationHostname="pool.hashvault.pro" OR DestinationHostname="moneroocean.stream" OR DestinationHostname="monerocean.stream")) | eval sigma_attack_tags="attack.impact attack.t1496" | eval sigma_title="Windows Crypto Mining Pool Connections" | eval sigma_description="Detects process connections to a Monero crypto mining pool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dllhost Internet Connection - sysmon]
description = Detects Dllhost that communicates with public IP addresses
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\dllhost.exe" Initiated="true") NOT (((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="169.254.*" OR DestinationIp="127.*")) OR ((DestinationIp="::1*" OR DestinationIp="0:0:0:0:0:0:0:1*" OR DestinationIp="fe80:*" OR DestinationIp="fc*" OR DestinationIp="fd*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution attack.t1559.001" | eval sigma_title="Dllhost Internet Connection" | eval sigma_description="Detects Dllhost that communicates with public IP addresses"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Editor Network Connection - sysmon]
description = Detects network connections from Equation Editor
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\eqnedt32.exe") | eval sigma_attack_tags="attack.execution attack.t1203" | eval sigma_title="Equation Editor Network Connection" | eval sigma_description="Detects network connections from Equation Editor"
dispatch.earliest_time = -24h@h
alert.track = 0

[Excel Network Connections - sysmon]
description = Detects an Excel process that opens suspicious network connections to non-private IP addresses, and attempts to cover CVE-2021-42292. You will likely have to tune this rule for your organization, but it is certainly something you should look for and could have applications for malicious activity beyond CVE-2021-42292.
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\excel.exe" Initiated="true" DestinationIsIpv6="false") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.0.0.1*"))) | eval sigma_attack_tags="attack.execution attack.t1203" | eval sigma_title="Excel Network Connections" | eval sigma_description="Detects an Excel process that opens suspicious network connections to non-private IP addresses, and attempts to cover CVE-2021-42292. You will likely have to tune this rule for your organization, but it is certainly something you should look for and could have applications for malicious activity beyond CVE-2021-42292."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Typical Malware Back Connect Ports - sysmon]
description = Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Initiated="true" (DestinationPort="4443" OR DestinationPort="2448" OR DestinationPort="8143" OR DestinationPort="1777" OR DestinationPort="1443" OR DestinationPort="243" OR DestinationPort="65535" OR DestinationPort="13506" OR DestinationPort="3360" OR DestinationPort="200" OR DestinationPort="198" OR DestinationPort="49180" OR DestinationPort="13507" OR DestinationPort="6625" OR DestinationPort="4444" OR DestinationPort="4438" OR DestinationPort="1904" OR DestinationPort="13505" OR DestinationPort="13504" OR DestinationPort="12102" OR DestinationPort="9631" OR DestinationPort="5445" OR DestinationPort="2443" OR DestinationPort="777" OR DestinationPort="13394" OR DestinationPort="13145" OR DestinationPort="12103" OR DestinationPort="5552" OR DestinationPort="3939" OR DestinationPort="3675" OR DestinationPort="666" OR DestinationPort="473" OR DestinationPort="5649" OR DestinationPort="4455" OR DestinationPort="4433" OR DestinationPort="1817" OR DestinationPort="100" OR DestinationPort="65520" OR DestinationPort="1960" OR DestinationPort="1515" OR DestinationPort="743" OR DestinationPort="700" OR DestinationPort="14154" OR DestinationPort="14103" OR DestinationPort="14102" OR DestinationPort="12322" OR DestinationPort="10101" OR DestinationPort="7210" OR DestinationPort="4040" OR DestinationPort="9943")) NOT ((Image="*\\Program Files*") OR ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*")))) | eval sigma_attack_tags="attack.command_and_control attack.t1571" | eval sigma_title="Suspicious Typical Malware Back Connect Ports" | eval sigma_description="Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases"
dispatch.earliest_time = -24h@h
alert.track = 0

[Communication To Mega.nz - sysmon]
description = Detects an executable accessing mega.co.nz, which could be a sign of forbidden file sharing use of data exfiltration by malicious actors
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Initiated="true" DestinationHostname="*api.mega.co.nz") | eval sigma_attack_tags="attack.exfiltration attack.t1567.001" | eval sigma_title="Communication To Mega.nz" | eval sigma_description="Detects an executable accessing mega.co.nz, which could be a sign of forbidden file sharing use of data exfiltration by malicious actors"
dispatch.earliest_time = -24h@h
alert.track = 0

[Msiexec Initiated Connection - sysmon]
description = Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)

search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Initiated="true" Image="*\\msiexec.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Msiexec Initiated Connection" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Notepad Making Network Connection - sysmon]
description = Detects suspicious network connection by Notepad
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\notepad.exe" NOT (DestinationPort="9100")) | eval sigma_attack_tags="attack.command_and_control attack.execution attack.defense_evasion attack.t1055" | eval sigma_title="Notepad Making Network Connection" | eval sigma_description="Detects suspicious network connection by Notepad"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Network Connections - sysmon]
description = Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\powershell.exe" Initiated="true" DestinationIsIpv6="false") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.0.0.1*") (User="*AUTHORI*" OR User="*AUTORI*"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="PowerShell Network Connections" | eval sigma_description="Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Over Reverse SSH Tunnel - sysmon]
description = Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" Initiated="true" SourcePort="3389") ((DestinationIp="127.*") OR (DestinationIp="::1"))) | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001 car.2013-07-002" | eval sigma_title="RDP Over Reverse SSH Tunnel" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP to HTTP or HTTPS Target Ports - sysmon]
description = Detects svchost hosting RDP termsvcs communicating to target systems on TCP port 80 or 443
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\svchost.exe" Initiated="true" SourcePort="3389" (TargetPort="80" OR TargetPort="443")) | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001 car.2013-07-002" | eval sigma_title="RDP to HTTP or HTTPS Target Ports" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating to target systems on TCP port 80 or 443"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Network Activity - sysmon]
description = Detects network connections and DNS queries initiated by Regsvr32.exe
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\regsvr32.exe") | table ComputerName,User,Image,DestinationIp,DestinationPort | eval sigma_attack_tags="attack.execution attack.t1559.001 attack.defense_evasion attack.t1218.010" | eval sigma_title="Regsvr32 Network Activity" | eval sigma_description="Detects network connections and DNS queries initiated by Regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session (Network) - sysmon]
description = Detects remote PowerShell connections by monitoring network outbound connections to ports 5985 or 5986 from a non-network service account.
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (DestinationPort="5985" OR DestinationPort="5986") NOT ((User="*AUTHORI*" OR User="*AUTORI*") OR SourceIp="0:0:*")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.lateral_movement attack.t1021.006" | eval sigma_title="Remote PowerShell Session (Network)" | eval sigma_description="Detects remote PowerShell connections by monitoring network outbound connections to ports 5985 or 5986 from a non-network service account."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Internet Connection - sysmon]
description = Detects a rundll32 that communicates with public IP addresses
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" Initiated="true") NOT (((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*" OR DestinationIp="20.*") OR (CommandLine="*PcaSvc.dll,PcaPatchSdbTask*")) OR (ParentImage="C:\\Windows\\System32\\svchost.exe" RemoteAddress="*:443"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.execution" | eval sigma_title="Rundll32 Internet Connection" | eval sigma_description="Detects a rundll32 that communicates with public IP addresses"
dispatch.earliest_time = -24h@h
alert.track = 0

[Silenttrinity Stager Msbuild Activity - sysmon]
description = Detects a possible remote connections to Silenttrinity c2
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\msbuild.exe" (DestinationPort="80" OR DestinationPort="443") Initiated="true") | eval sigma_attack_tags="attack.execution attack.t1127.001" | eval sigma_title="Silenttrinity Stager Msbuild Activity" | eval sigma_description="Detects a possible remote connections to Silenttrinity c2"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Dropbox API Usage - sysmon]
description = Detects an executable that isn't dropbox but communicates with the Dropbox API
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Initiated="true" (DestinationHostname="*api.dropboxapi.com" OR DestinationHostname="*content.dropboxapi.com")) NOT (Image="*\\Dropbox*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Dropbox API Usage" | eval sigma_description="Detects an executable that isn't dropbox but communicates with the Dropbox API"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound Kerberos Connection - sysmon]
description = Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (DestinationPort="88" Initiated="true") NOT ((Image="*\\lsass.exe" OR Image="*\\opera.exe" OR Image="*\\chrome.exe" OR Image="*\\firefox.exe" OR Image="*\\tomcat\\bin\\tomcat8.exe"))) | eval sigma_attack_tags="attack.credential_access attack.t1558 attack.lateral_movement attack.t1550.003" | eval sigma_title="Suspicious Outbound Kerberos Connection" | eval sigma_description="Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Sync Center Suspicious Network Connections - sysmon]
description = Detects suspicious connections from Microsoft Sync Center to non-private IPs.
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\mobsync.exe" NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*") DestinationIsIpv6="false")) | eval sigma_attack_tags="attack.t1055 attack.t1218 attack.execution attack.defense_evasion" | eval sigma_title="Microsoft Sync Center Suspicious Network Connections" | eval sigma_description="Detects suspicious connections from Microsoft Sync Center to non-private IPs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Location with Network Connections - sysmon]
description = Detects programs with network connections running in suspicious files system locations
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\Public\\*" OR Image="*\\Users\\Contacts\\*" OR Image="*\\Users\\Searches\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*") OR (Image="*\\$Recycle.bin") OR (Image="C:\\Perflogs\\*")) NOT ((Image="C:\\Users\\Public\\IBM\\ClientSolutions\\Start_Programs\\*"))) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Program Location with Network Connections" | eval sigma_description="Detects programs with network connections running in suspicious files system locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound RDP Connections - sysmon]
description = Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement
search = index=sysmon* ((EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (DestinationPort="3389" Initiated="true") NOT ((Image="*\\mstsc.exe" OR Image="*\\RTSApp.exe" OR Image="*\\RTS2App.exe" OR Image="*\\RDCMan.exe" OR Image="*\\ws_TunnelService.exe" OR Image="*\\RSSensor.exe" OR Image="*\\RemoteDesktopManagerFree.exe" OR Image="*\\RemoteDesktopManager.exe" OR Image="*\\RemoteDesktopManager64.exe" OR Image="*\\mRemoteNG.exe" OR Image="*\\mRemote.exe" OR Image="*\\Terminals.exe" OR Image="*\\spiceworks-finder.exe" OR Image="*\\FSDiscovery.exe" OR Image="*\\FSAssessment.exe" OR Image="*\\MobaRTE.exe" OR Image="*\\chrome.exe" OR Image="*\\System32\\dns.exe" OR Image="*\\thor.exe" OR Image="*\\thor64.exe" OR Image="*\\Passwordstate.exe" OR Image="*\\Avast Software\\Avast\\AvastSvc.exe" OR Image="*\\Ranger\\SentinelRanger.exe" OR Image="*\\Avast\\AvastSvc.exe") OR Image="C:\\Program Files\\SplunkUniversalForwarder\\bin\\*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021.001 car.2013-07-002" | eval sigma_title="Suspicious Outbound RDP Connections" | eval sigma_description="Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wuauclt Network Connection - sysmon]
description = Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making a network connections. One could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule.
search = index=sysmon* (EventCode="3" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*wuauclt*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Wuauclt Network Connection" | eval sigma_description="Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making a network connections. One could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP Execution Process Access - sysmon]
description = Detects various indicators of Microsoft Connection Manager Profile Installer execution
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CallTrace="*cmlua.dll*") | table CommandLine,ParentCommandLine,Details | eval sigma_attack_tags="attack.defense_evasion attack.t1218.003 attack.execution attack.t1559.001 attack.g0069 attack.g0080 car.2019-04-001" | eval sigma_title="CMSTP Execution Process Access" | eval sigma_description="Detects various indicators of Microsoft Connection Manager Profile Installer execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Credentials Dumping Tools Accessing LSASS Memory - sysmon]
description = Detects process access LSASS memory which is typical for credentials dumping tools
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" (GrantedAccess="0x40*" OR GrantedAccess="0x100000*" OR GrantedAccess="0x1410*" OR GrantedAccess="0x1438*" OR GrantedAccess="0x143a*" OR GrantedAccess="0x1418*" OR GrantedAccess="0x1f0fff*" OR GrantedAccess="0x1f1fff*" OR GrantedAccess="0x1f2fff*" OR GrantedAccess="0x1f3fff*")) NOT (((SourceImage="C:\\WINDOWS\\system32\\taskmgr.exe" OR SourceImage="C:\\Windows\\System32\\perfmon.exe")) OR (SourceImage="C:\\ProgramData\\Microsoft\\Windows Defender\\*" SourceImage="*\\MsMpEng.exe") OR (SourceImage="C:\\Windows\\System32\\svchost.exe" CallTrace="*|C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\{*" CallTrace="*}\\mpengine.dll+*" GrantedAccess="0x1418") OR (SourceImage="C:\\Program Files\\WindowsApps\\*" SourceImage="*\\GamingServices.exe" (GrantedAccess="0x1410" OR GrantedAccess="0x410")) OR ((SourceImage="*\\PROCEXP64.EXE" OR SourceImage="*\\PROCEXP.EXE" OR SourceImage="*C:\\WINDOWS\\system32\\taskhostw.exe" OR SourceImage="*\\MBAMInstallerService.exe") (GrantedAccess="0x1410" OR GrantedAccess="0x410" OR GrantedAccess="0x40")) OR (SourceImage="C:\\ProgramData\\VMware\\VMware Tools\\*" SourceImage="*\\vmtoolsd.exe") OR (SourceImage="C:\\WINDOWS\\system32\\svchost.exe" GrantedAccess="0x100000") OR ((SourceImage="C:\\WINDOWS\\system32\\wbem\\wmiprvse.exe" OR SourceImage="C:\\Windows\\syswow64\\MsiExec.exe" OR SourceImage="C:\\Windows\\System32\\msiexec.exe") (GrantedAccess="0x1410" OR GrantedAccess="0x410")) OR ((SourceImage="*\\thor.exe" OR SourceImage="*\\thor64.exe" OR SourceImage="*\\aurora-agent.exe" OR SourceImage="*\\aurora-agent-64.exe") (GrantedAccess="0x40" OR GrantedAccess="0x1010")) OR (SourceImage="*\\explorer.exe" GrantedAccess="0x401") OR ((SourceImage="C:\\Windows\\system32\\wininit.exe" OR SourceImage="C:\\Windows\\System32\\lsass.exe") GrantedAccess="0x1000000") OR (SourceImage="C:\\Windows\\system32\\MRT.exe" (GrantedAccess="0x1410" OR GrantedAccess="0x1418")) OR (GrantedAccess="0x40" (SourceImage="*\\handle.exe" OR SourceImage="*\\handle64.exe")) OR ((SourceImage="C:\\Program Files\\*" OR SourceImage="C:\\Program Files (x86)\\*") (GrantedAccess="0x1410" OR GrantedAccess="0x410")) OR (SourceImage="C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\*" SourceImage="*\\Installer\\setup.exe") OR (SourceImage="*\\AppData\\Local\\WebEx\\WebexHost.exe" GrantedAccess="0x401"))) | table ComputerName,User,SourceImage | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002 car.2019-04-004" | eval sigma_title="Credentials Dumping Tools Accessing LSASS Memory" | eval sigma_description="Detects process access LSASS memory which is typical for credentials dumping tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Syscall of NtOpenProcess - sysmon]
description = Detects the usage of the direct syscall of NtOpenProcess which might be done from a CobaltStrike BOF.
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CallTrace="UNKNOWN*" NOT ((TargetImage="C:\\Program Files\\Cylance\\Desktop\\CylanceUI.exe" SourceImage="C:\\Windows\\Explorer.EXE") OR (TargetImage="C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\MicrosoftEdgeUpdate.exe" SourceImage="C:\\Program Files (x86)\\Microsoft\\Temp\*\\MicrosoftEdgeUpdate.exe") OR (TargetImage="*vcredist_x64.exe" SourceImage="*vcredist_x64.exe") OR (TargetImage="C:\\Windows\\system32\\systeminfo.exe" SourceImage="*setup64.exe") OR (TargetImage="*AmazonSSMAgentSetup.exe" SourceImage="*AmazonSSMAgentSetup.exe") OR (TargetImage="*C:\\Program Files\\Mozilla Firefox\\firefox.exe" SourceImage="*C:\\Program Files\\Mozilla Firefox\\firefox.exe"))) | eval sigma_attack_tags="attack.execution attack.t1106" | eval sigma_title="Direct Syscall of NtOpenProcess" | eval sigma_description="Detects the usage of the direct syscall of NtOpenProcess which might be done from a CobaltStrike BOF."
dispatch.earliest_time = -24h@h
alert.track = 0

[HandleKatz Duplicating LSASS Handle - sysmon]
description = Detects HandleKatz opening LSASS to duplicate its handle to later dump the memory without opening any new handles
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" GrantedAccess="0x1440" CallTrace="C:\\Windows\\System32\\ntdll.dll+*" CallTrace="*|UNKNOWN(*" CallTrace="*)") | eval sigma_attack_tags="attack.execution attack.t1106 attack.defense_evasion attack.t1003.001" | eval sigma_title="HandleKatz Duplicating LSASS Handle" | eval sigma_description="Detects HandleKatz opening LSASS to duplicate its handle to later dump the memory without opening any new handles"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious In-Memory Module Execution - sysmon]
description = Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display 'UNKNOWN' as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CallTrace="*C:\\WINDOWS\\SYSTEM32\\ntdll.dll+*" CallTrace="*|C:\\WINDOWS\\System32\\KERNELBASE.dll+*" CallTrace="*|UNKNOWN(*" CallTrace="*)*") OR (CallTrace="*UNKNOWN(*" CallTrace="*)|UNKNOWN(*" CallTrace="*)")) OR (CallTrace="*UNKNOWN*" (GrantedAccess="0x1F0FFF" OR GrantedAccess="0x1F1FFF" OR GrantedAccess="0x143A" OR GrantedAccess="0x1410" OR GrantedAccess="0x1010" OR GrantedAccess="0x1F2FFF" OR GrantedAccess="0x1F3FFF" OR GrantedAccess="0x1FFFFF"))) NOT (((SourceImage="*\\Windows\\System32\\sdiagnhost.exe" OR SourceImage="*\\procexp64.exe" OR SourceImage="*\\procexp.exe" OR SourceImage="*\\Microsoft VS Code\\Code.exe" OR SourceImage="*\\aurora-agent-64.exe" OR SourceImage="*\\aurora-agent.exe" OR SourceImage="*\\git\\usr\\bin\\sh.exe" OR SourceImage="*\\IDE\\devenv.exe" OR SourceImage="*\\GitHubDesktop\\Update.exe" OR SourceImage="*\\RuntimeBroker.exe" OR SourceImage="*\\backgroundTaskHost.exe" OR SourceImage="*\\GitHubDesktop.exe") OR (SourceImage="C:\\Program Files (x86)\\*" OR SourceImage="C:\\Program Files\\*" OR SourceImage="C:\\Windows\\Microsoft.NET\\Framework\\*\\NGenTask.exe*" OR SourceImage="C:\\Program Files (x86)\\Microsoft Visual Studio\\*" OR SourceImage="C:\\Program Files\\Microsoft Visual Studio\\*" OR SourceImage="C:\\Windows\\Microsoft.NET\\Framework*" OR SourceImage="C:\\WINDOWS\\System32\\DriverStore\\*" OR SourceImage="C:\\Windows\\System32\\WindowsPowerShell\\*") OR (SourceImage="C:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe" OR SourceImage="C:\\WINDOWS\\system32\\taskhostw.exe" OR SourceImage="C:\\WINDOWS\\system32\\ctfmon.exe" OR SourceImage="C:\\WINDOWS\\system32\\NhNotifSys.exe" OR SourceImage="C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe" OR SourceImage="C:\\Windows\\explorer.exe") OR TargetImage="C:\\Windows\\System32\\RuntimeBroker.exe" OR TargetImage="*\\Microsoft VS Code\\Code.exe" OR CallTrace="*|C:\\WINDOWS\\System32\\RPCRT4.dll+*") OR (SourceImage="C:\\WINDOWS\\Explorer.EXE" (TargetImage="C:\\WINDOWS\\system32\\backgroundTaskHost.exe" OR TargetImage="C:\\WINDOWS\\explorer.exe")) OR (SourceImage="C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*" SourceImage="*\\MsMpEng.exe") OR (SourceImage="*\\eclipse.exe" (CallTrace="*\\jre\\bin\\java.dll*" OR CallTrace="*|C:\\Windows\\SYSTEM32\\windows.storage.dll+*" OR CallTrace="*\\configuration\\org.eclipse.osgi\\*")) OR (SourceImage="C:\\Windows\\system32\\OpenWith.exe" TargetImage="C:\\Windows\\Explorer.EXE"))) | table ComputerName,User,SourceImage,TargetImage,CallTrace | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1055.001 attack.t1055.002" | eval sigma_title="Suspicious In-Memory Module Execution" | eval sigma_description="Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display 'UNKNOWN' as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Memory Asccess - sysmon]
description = Detects suspect access to svchost process memory such as that used by Invoke-Phantom to kill the winRM windows event logging service.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\WINDOWS\\System32\\svchost.exe" GrantedAccess="0x1F3FFF" CallTrace="*UNKNOWN*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspect Svchost Memory Asccess" | eval sigma_description="Detects suspect access to svchost process memory such as that used by Invoke-Phantom to kill the winRM windows event logging service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Credential Dumping by LaZagne - sysmon]
description = Detects LSASS process access by LaZagne for credential dumping.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" CallTrace="*C:\\Windows\\SYSTEM32\\ntdll.dll+*" CallTrace="*|C:\\Windows\\System32\\KERNELBASE.dll+*" CallTrace="*_ctypes.pyd+*" CallTrace="*python27.dll+*" GrantedAccess="0x1FFFFF") | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0349" | eval sigma_title="Credential Dumping by LaZagne" | eval sigma_description="Detects LSASS process access by LaZagne for credential dumping."
dispatch.earliest_time = -24h@h
alert.track = 0

[LittleCorporal Generated Maldoc Injection - sysmon]
description = Detects the process injection of a LittleCorporal generated Maldoc.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") SourceImage="*\\winword.exe" CallTrace="*:\\Windows\\Microsoft.NET\\Framework64\\v2.*" CallTrace="*UNKNOWN*") | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.t1055.003" | eval sigma_title="LittleCorporal Generated Maldoc Injection" | eval sigma_description="Detects the process injection of a LittleCorporal generated Maldoc."
dispatch.earliest_time = -24h@h
alert.track = 0

[Load Undocumented Autoelevated COM Interface - sysmon]
description = COM interface (EditionUpgradeManager) that is not used by standard executables.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CallTrace="*editionupgrademanagerobj.dll*") | table ComputerName,User,SourceImage,TargetImage,CallTrace | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="Load Undocumented Autoelevated COM Interface" | eval sigma_description="COM interface (EditionUpgradeManager) that is not used by standard executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[Lsass Memory Dump via Comsvcs DLL - sysmon]
description = Detects adversaries leveraging the MiniDump export function from comsvcs.dll via rundll32 to perform a memory dump from lsass.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" SourceImage="C:\\Windows\\System32\\rundll32.exe" CallTrace="*comsvcs.dll*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Lsass Memory Dump via Comsvcs DLL" | eval sigma_description="Detects adversaries leveraging the MiniDump export function from comsvcs.dll via rundll32 to perform a memory dump from lsass."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access from White-Listed Processes - sysmon]
description = Detects a possible process memory dump that uses the white-listed filename like TrolleyExpress.exe as a way to dump the lsass process memory without Microsoft Defender interference
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" (SourceImage="*\\TrolleyExpress.exe" OR SourceImage="*\\ProcessDump.exe" OR SourceImage="*\\dump64.exe") (GrantedAccess="*10" OR GrantedAccess="*30" OR GrantedAccess="*50" OR GrantedAccess="*70" OR GrantedAccess="*90" OR GrantedAccess="*B0" OR GrantedAccess="*D0" OR GrantedAccess="*F0" OR GrantedAccess="*18" OR GrantedAccess="*38" OR GrantedAccess="*58" OR GrantedAccess="*78" OR GrantedAccess="*98" OR GrantedAccess="*B8" OR GrantedAccess="*D8" OR GrantedAccess="*F8" OR GrantedAccess="*1A" OR GrantedAccess="*3A" OR GrantedAccess="*5A" OR GrantedAccess="*7A" OR GrantedAccess="*9A" OR GrantedAccess="*BA" OR GrantedAccess="*DA" OR GrantedAccess="*FA" OR GrantedAccess="*0x14C2" OR GrantedAccess="*FF")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="LSASS Access from White-Listed Processes" | eval sigma_description="Detects a possible process memory dump that uses the white-listed filename like TrolleyExpress.exe as a way to dump the lsass process memory without Microsoft Defender interference"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Access by Tool Named Dump - sysmon]
description = Detects a possible process memory dump based on a keyword in the file name of the accessing process
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" SourceImage="*dump*" (GrantedAccess="*10" OR GrantedAccess="*30" OR GrantedAccess="*50" OR GrantedAccess="*70" OR GrantedAccess="*90" OR GrantedAccess="*B0" OR GrantedAccess="*D0" OR GrantedAccess="*F0" OR GrantedAccess="*18" OR GrantedAccess="*38" OR GrantedAccess="*58" OR GrantedAccess="*78" OR GrantedAccess="*98" OR GrantedAccess="*B8" OR GrantedAccess="*D8" OR GrantedAccess="*F8" OR GrantedAccess="*1A" OR GrantedAccess="*3A" OR GrantedAccess="*5A" OR GrantedAccess="*7A" OR GrantedAccess="*9A" OR GrantedAccess="*BA" OR GrantedAccess="*DA" OR GrantedAccess="*FA" OR GrantedAccess="*0x14C2" OR GrantedAccess="*FF")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="LSASS Memory Access by Tool Named Dump" | eval sigma_description="Detects a possible process memory dump based on a keyword in the file name of the accessing process"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dump - sysmon]
description = Detects process LSASS memory dump using Mimikatz, NanoDump, Invoke-Mimikatz, Procdump or Taskmgr based on the CallTrace pointing to ntdll.dll, dbghelp.dll or dbgcore.dll for win10, server2016 and up.
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" (GrantedAccess="*0x1038*" OR GrantedAccess="*0x1438*" OR GrantedAccess="*0x143a*") (CallTrace="*dbghelp.dll*" OR CallTrace="*dbgcore.dll*" OR CallTrace="*ntdll.dll*")) NOT ((CallTrace="*|C:\\Windows\\Temp\\asgard2-agent\\*" CallTrace="*\\thor\\thor64.exe+*" CallTrace="*|UNKNOWN(*" GrantedAccess="0x103800"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="LSASS Memory Dump" | eval sigma_description="Detects process LSASS memory dump using Mimikatz, NanoDump, Invoke-Mimikatz, Procdump or Taskmgr based on the CallTrace pointing to ntdll.dll, dbghelp.dll or dbgcore.dll for win10, server2016 and up."
dispatch.earliest_time = -24h@h
alert.track = 0

[WerFault Accassing LSASS - sysmon]
description = Detects process LSASS memory dump using Mimikatz, NanoDump, Invoke-Mimikatz, Procdump or Taskmgr based on the CallTrace pointing to ntdll.dll, dbghelp.dll or dbgcore.dll for win10, server2016 and up.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") SourceImage="*\\WerFault.exe" TargetImage="*\\lsass.exe" GrantedAccess="0x1FFFFF") | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="WerFault Accassing LSASS" | eval sigma_description="Detects process LSASS memory dump using Mimikatz, NanoDump, Invoke-Mimikatz, Procdump or Taskmgr based on the CallTrace pointing to ntdll.dll, dbghelp.dll or dbgcore.dll for win10, server2016 and up."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malware Shellcode in Verclsid Target Process - sysmon]
description = Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\verclsid.exe" GrantedAccess="0x1FFFFF") ((CallTrace="*|UNKNOWN(*" CallTrace="*VBE7.DLL*") OR (SourceImage="*\\Microsoft Office\\*" CallTrace="*|UNKNOWN*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Malware Shellcode in Verclsid Target Process" | eval sigma_description="Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz through Windows Remote Management - sysmon]
description = Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" SourceImage="C:\\Windows\\system32\\wsmprovhost.exe") NOT (GrantedAccess="0x80000000")) | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1003.001 attack.t1059.001 attack.lateral_movement attack.t1021.006 attack.s0002" | eval sigma_title="Mimikatz through Windows Remote Management" | eval sigma_description="Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Credential Dumping by Pypykatz - sysmon]
description = Detects LSASS process access by pypykatz for credential dumping.
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" CallTrace="*C:\\Windows\\SYSTEM32\\ntdll.dll+*" CallTrace="*C:\\Windows\\System32\\KERNELBASE.dll+*" CallTrace="*libffi-7.dll*" CallTrace="*_ctypes.pyd+*" CallTrace="*python3*.dll+*" GrantedAccess="0x1FFFFF") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Credential Dumping by Pypykatz" | eval sigma_description="Detects LSASS process access by pypykatz for credential dumping."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare GrantedAccess Flags on LSASS Access - sysmon]
description = Detects process access to LSASS memory with suspicious access flags 0x410 and 0x01410 (spin-off of similar rule)
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" GrantedAccess="*10") NOT (((SourceImage="C:\\WINDOWS\\system32\\taskmgr.exe" OR SourceImage="C:\\Program Files\\Malwarebytes\\Anti-Malware\\MBAMService.exe" OR SourceImage="C:\\PROGRAMDATA\\MALWAREBYTES\\MBAMSERVICE\\ctlrupdate\\mbupdatr.exe" OR SourceImage="C:\\WINDOWS\\system32\\taskhostw.exe" OR SourceImage="C:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe" OR SourceImage="C:\\Program Files\\Windows Defender\\MsMpEng.exe" OR SourceImage="C:\\Windows\\SysWOW64\\msiexec.exe" OR SourceImage="C:\\Windows\\System32\\msiexec.exe" OR SourceImage="C:\\Windows\\System32\\lsass.exe" OR SourceImage="C:\\WINDOWS\\System32\\perfmon.exe")) OR (SourceImage="C:\\ProgramData\\Microsoft\\Windows Defender\\*" SourceImage="*\\MsMpEng.exe") OR (SourceImage="C:\\Program Files\\WindowsApps\\*" SourceImage="*\\GamingServices.exe") OR ((SourceImage="*\\PROCEXP64.EXE" OR SourceImage="*\\PROCEXP.EXE")) OR (SourceImage="C:\\ProgramData\\VMware\\VMware Tools\\*" SourceImage="*\\vmtoolsd.exe") OR ((SourceImage="C:\\Program Files\\*" OR SourceImage="C:\\Program Files (x86)\\*") SourceImage="*Antivirus*") OR (SourceImage="C:\\WINDOWS\\system32\\wbem\\wmiprvse.exe") OR (SourceImage="C:\\Windows\\sysWOW64\\wbem\\wmiprvse.exe") OR (SourceImage="C:\\Program Files\\Common Files\\McAfee\\MMSSHost\\MMSSHOST.exe") OR ((SourceImage="*\\thor64.exe" OR SourceImage="*\\thor.exe")) OR (SourceImage="*\\AppData\\Local\\Temp\\*" SourceImage="*\\vs_bootstrapper_*" GrantedAccess="0x1410") OR ((SourceImage="C:\\Program Files\\*" OR SourceImage="C:\\Program Files (x86)\\*" OR SourceImage="C:\\WINDOWS\\system32\\*")) OR (SourceImage="*C:\\Users\\*" SourceImage="*\\AppData\\Local\\*" (SourceImage="*\\Microsoft VS Code\\Code.exe" OR SourceImage="*\\software_reporter_tool.exe" OR SourceImage="*\\DropboxUpdate.exe" OR SourceImage="*\\MBAMInstallerService.exe" OR SourceImage="*\\WebEx\\WebexHost.exe ")))) | table User,SourceImage,GrantedAccess | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="Rare GrantedAccess Flags on LSASS Access" | eval sigma_description="Detects process access to LSASS memory with suspicious access flags 0x410 and 0x01410 (spin-off of similar rule)"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access from Program in Suspicious Folder - sysmon]
description = Detects process access to LSASS memory with suspicious access flags and from a suspicious folder
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" (GrantedAccess="*10" OR GrantedAccess="*30" OR GrantedAccess="*50" OR GrantedAccess="*70" OR GrantedAccess="*90" OR GrantedAccess="*B0" OR GrantedAccess="*D0" OR GrantedAccess="*F0" OR GrantedAccess="*18" OR GrantedAccess="*38" OR GrantedAccess="*58" OR GrantedAccess="*78" OR GrantedAccess="*98" OR GrantedAccess="*B8" OR GrantedAccess="*D8" OR GrantedAccess="*F8" OR GrantedAccess="*1A" OR GrantedAccess="*3A" OR GrantedAccess="*5A" OR GrantedAccess="*7A" OR GrantedAccess="*9A" OR GrantedAccess="*BA" OR GrantedAccess="*DA" OR GrantedAccess="*FA" OR GrantedAccess="*0x14C2" OR GrantedAccess="*FF") (SourceImage="*\\Temp\\*" OR SourceImage="*\\Users\\Public\\*" OR SourceImage="*\\PerfLogs\\*" OR SourceImage="*\\AppData\\*" OR SourceImage="*\\Temporary*")) NOT ((SourceImage="*C:\\Users\\*" SourceImage="*\\AppData\\Local\\*" (SourceImage="*\\Microsoft VS Code\\Code.exe" OR SourceImage="*\\software_reporter_tool.exe" OR SourceImage="*\\DropboxUpdate.exe" OR SourceImage="*\\MBAMInstallerService.exe" OR SourceImage="*\\WebexMTA.exe" OR SourceImage="*\\WebEx\\WebexHost.exe") GrantedAccess="0x410") OR (SourceImage="C:\\Windows\\Temp\\*" SourceImage="*.tmp\\DropboxUpdate.exe" GrantedAccess="0x410") OR (SourceImage="C:\\Windows\\Temp\\asgard2-agent\\*" (SourceImage="*\\thor64.exe" OR SourceImage="*\\thor.exe") (GrantedAccess="0x1fffff" OR GrantedAccess="0x1010")) OR (SourceImage="*\\AppData\\Local\\Temp\\*" SourceImage="*\\vs_bootstrapper_*" GrantedAccess="0x1410"))) | table User,SourceImage,GrantedAccess | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="LSASS Access from Program in Suspicious Folder" | eval sigma_description="Detects process access to LSASS memory with suspicious access flags and from a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GrantedAccess Flags on LSASS Access - sysmon]
description = Detects process access to LSASS memory with suspicious access flags
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\lsass.exe" (GrantedAccess="*30" OR GrantedAccess="*50" OR GrantedAccess="*70" OR GrantedAccess="*90" OR GrantedAccess="*B0" OR GrantedAccess="*D0" OR GrantedAccess="*F0" OR GrantedAccess="*18" OR GrantedAccess="*38" OR GrantedAccess="*58" OR GrantedAccess="*78" OR GrantedAccess="*98" OR GrantedAccess="*B8" OR GrantedAccess="*D8" OR GrantedAccess="*F8" OR GrantedAccess="*1A" OR GrantedAccess="*3A" OR GrantedAccess="*5A" OR GrantedAccess="*7A" OR GrantedAccess="*9A" OR GrantedAccess="*BA" OR GrantedAccess="*DA" OR GrantedAccess="*FA" OR GrantedAccess="*0x14C2")) NOT (((SourceImage="C:\\WINDOWS\\system32\\taskmgr.exe" OR SourceImage="C:\\Program Files\\Malwarebytes\\Anti-Malware\\MBAMService.exe" OR SourceImage="C:\\PROGRAMDATA\\MALWAREBYTES\\MBAMSERVICE\\ctlrupdate\\mbupdatr.exe" OR SourceImage="C:\\WINDOWS\\system32\\taskhostw.exe" OR SourceImage="C:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe" OR SourceImage="C:\\Program Files\\Windows Defender\\MsMpEng.exe" OR SourceImage="C:\\Windows\\SysWOW64\\msiexec.exe" OR SourceImage="C:\\Windows\\System32\\msiexec.exe" OR SourceImage="C:\\Windows\\System32\\lsass.exe" OR SourceImage="C:\\WINDOWS\\System32\\perfmon.exe" OR SourceImage="C:\\Windows\\System32\\MRT.exe" OR SourceImage="C:\\Program Files\\Cisco\\Cisco AnyConnect Secure Mobility Client\\vpnagent.exe" OR SourceImage="C:\\Program Files (x86)\\Cisco\\Cisco AnyConnect Secure Mobility Client\\vpnagent.exe")) OR (SourceImage="C:\\ProgramData\\Microsoft\\Windows Defender\\*" SourceImage="*\\MsMpEng.exe") OR (SourceImage="C:\\ProgramData\\VMware\\VMware Tools\\*" SourceImage="*\\vmtoolsd.exe") OR ((SourceImage="C:\\Program Files\\*" OR SourceImage="C:\\Program Files (x86)\\*") SourceImage="*Antivirus*") OR (SourceImage="C:\\WINDOWS\\system32\\MRT.exe" GrantedAccess="0x1418") OR (SourceImage="C:\\Program Files\\Common Files\\McAfee\\MMSSHost\\MMSSHOST.exe") OR (SourceImage="C:\\Windows\\Temp\\asgard2-agent\\*" (SourceImage="*\\thor64.exe" OR SourceImage="*\\thor.exe") GrantedAccess="0x1fffff") OR (CallTrace="*|C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\{*" CallTrace="*}\\mpengine.dll+*" GrantedAccess="0x1418"))) | table User,SourceImage,GrantedAccess | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0002" | eval sigma_title="Suspicious GrantedAccess Flags on LSASS Access" | eval sigma_description="Detects process access to LSASS memory with suspicious access flags"
dispatch.earliest_time = -24h@h
alert.track = 0

[SVCHOST Credential Dump - sysmon]
description = Detects when a process, such as mimikatz, accesses the memory of svchost to dump credentials
search = index=sysmon* ((EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (TargetImage="*\\svchost.exe" GrantedAccess="0x143a") NOT ((SourceImage="*\\services.exe" OR SourceImage="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.t1548" | eval sigma_title="SVCHOST Credential Dump" | eval sigma_description="Detects when a process, such as mimikatz, accesses the memory of svchost to dump credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using WOW64 Logger DLL Hijack - sysmon]
description = Detects the pattern of UAC Bypass using a WoW64 logger DLL hijack (UACMe 30)
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") SourceImage="*:\\Windows\\SysWOW64\\*" GrantedAccess="0x1fffff" CallTrace="UNKNOWN(0000000000000000)|UNKNOWN(0000000000000000)|*") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using WOW64 Logger DLL Hijack" | eval sigma_description="Detects the pattern of UAC Bypass using a WoW64 logger DLL hijack (UACMe 30)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shellcode Injection - sysmon]
description = Detects shellcode injection by Metasploit's migrate and Empire's psinject
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (GrantedAccess="0x147a" OR GrantedAccess="0x1f3fff") CallTrace="*UNKNOWN*") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Shellcode Injection" | eval sigma_description="Detects shellcode injection by Metasploit's migrate and Empire's psinject"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LSASS Access Via MalSecLogon - sysmon]
description = Detects suspicious access to Lsass handle via a call trace to 'seclogon.dll'
search = index=sysmon* (EventCode="10" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") TargetImage="*\\lsass.exe" SourceImage="*\\svchost.exe" GrantedAccess="0x14c0" CallTrace="*seclogon.dll*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Suspicious LSASS Access Via MalSecLogon" | eval sigma_description="Detects suspicious access to Lsass handle via a call trace to 'seclogon.dll'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious 7zip Subprocess - winevent]
description = 7-Zip through 21.07 on Windows allows privilege escalation (CVE-2022-29072) and command execution when a file with the .7z extension is dragged to the Help>Contents area. This is caused by misconfiguration of 7z.dll and a heap overflow. The command runs in a child process under the 7zFM.exe process.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\cmd.exe" Creator_Process_Name="*\\7zFM.exe") NOT ((Process_Command_Line="* /c *") OR (NOT Process_Command_Line="*"))) | eval sigma_attack_tags="cve.2022.29072" | eval sigma_title="Suspicious 7zip Subprocess" | eval sigma_description="7-Zip through 21.07 on Windows allows privilege escalation (CVE-2022-29072) and command execution when a file with the .7z extension is dragged to the Help>Contents area. This is caused by misconfiguration of 7z.dll and a heap overflow. The command runs in a child process under the 7zFM.exe process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious 7zip Subprocess - sysmon]
description = 7-Zip through 21.07 on Windows allows privilege escalation (CVE-2022-29072) and command execution when a file with the .7z extension is dragged to the Help>Contents area. This is caused by misconfiguration of 7z.dll and a heap overflow. The command runs in a child process under the 7zFM.exe process.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\cmd.exe" ParentImage="*\\7zFM.exe") NOT ((CommandLine="* /c *") OR (NOT CommandLine="*"))) | eval sigma_attack_tags="cve.2022.29072" | eval sigma_title="Suspicious 7zip Subprocess" | eval sigma_description="7-Zip through 21.07 on Windows allows privilege escalation (CVE-2022-29072) and command execution when a file with the .7z extension is dragged to the Help>Contents area. This is caused by misconfiguration of 7z.dll and a heap overflow. The command runs in a child process under the 7zFM.exe process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Abused Debug Privilege by Arbitrary Parent Processes - winevent]
description = Detection of unusual child processes by different system processes
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\winlogon.exe" OR Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\lsass.exe" OR Creator_Process_Name="*\\csrss.exe" OR Creator_Process_Name="*\\smss.exe" OR Creator_Process_Name="*\\wininit.exe" OR Creator_Process_Name="*\\spoolsv.exe" OR Creator_Process_Name="*\\searchindexer.exe") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\cmd.exe") (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*")) NOT (Process_Command_Line="* route *" Process_Command_Line="* ADD *")) | table Creator_Process_Name,New_Process_Name,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Abused Debug Privilege by Arbitrary Parent Processes" | eval sigma_description="Detection of unusual child processes by different system processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abused Debug Privilege by Arbitrary Parent Processes - sysmon]
description = Detection of unusual child processes by different system processes
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\winlogon.exe" OR ParentImage="*\\services.exe" OR ParentImage="*\\lsass.exe" OR ParentImage="*\\csrss.exe" OR ParentImage="*\\smss.exe" OR ParentImage="*\\wininit.exe" OR ParentImage="*\\spoolsv.exe" OR ParentImage="*\\searchindexer.exe") (Image="*\\powershell.exe" OR Image="*\\cmd.exe") (User="*AUTHORI*" OR User="*AUTORI*")) NOT (CommandLine="* route *" CommandLine="* ADD *")) | table ParentImage,Image,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Abused Debug Privilege by Arbitrary Parent Processes" | eval sigma_description="Detection of unusual child processes by different system processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Windows Telemetry For Persistence - winevent]
description = Windows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections. This binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run. The problem is, it will run any arbitrary command without restriction of location or type.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*schtasks*" Process_Command_Line="*\\Application Experience\\Microsoft Compatibility Appraiser*") | table EventCode,Process_Command_Line,TargetObject,NewValue | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1112 attack.t1053" | eval sigma_title="Abusing Windows Telemetry For Persistence" | eval sigma_description="Windows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections. This binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run. The problem is, it will run any arbitrary command without restriction of location or type."
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Windows Telemetry For Persistence - sysmon]
description = Windows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections. This binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run. The problem is, it will run any arbitrary command without restriction of location or type.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*schtasks*" CommandLine="*\\Application Experience\\Microsoft Compatibility Appraiser*") | table EventCode,CommandLine,TargetObject,Details | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1112 attack.t1053" | eval sigma_title="Abusing Windows Telemetry For Persistence" | eval sigma_description="Windows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections. This binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run. The problem is, it will run any arbitrary command without restriction of location or type."
dispatch.earliest_time = -24h@h
alert.track = 0

[Accesschk Usage To Check Privileges - winevent]
description = Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify privileges
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="*AccessChk" OR Description="*Reports effective permissions*" OR New_Process_Name="*\\accesschk.exe") (Process_Command_Line="*uwcqv *" OR Process_Command_Line="*kwsu *" OR Process_Command_Line="*qwsu *" OR Process_Command_Line="*uwdqs *")) | table IntegrityLevel,Product,Description,Process_Command_Line | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Accesschk Usage To Check Privileges" | eval sigma_description="Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify privileges"
dispatch.earliest_time = -24h@h
alert.track = 0

[Accesschk Usage To Check Privileges - sysmon]
description = Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify privileges
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="*AccessChk" OR Description="*Reports effective permissions*" OR Image="*\\accesschk.exe") (CommandLine="*uwcqv *" OR CommandLine="*kwsu *" OR CommandLine="*qwsu *" OR CommandLine="*uwdqs *")) | table IntegrityLevel,Product,Description,CommandLine | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Accesschk Usage To Check Privileges" | eval sigma_description="Accesschk is an access and privilege audit tool developed by SysInternal and often being used by attacker to verify privileges"
dispatch.earliest_time = -24h@h
alert.track = 0

[AdFind Usage Detection - winevent]
description = AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*domainlist*" OR Process_Command_Line="*trustdmp*" OR Process_Command_Line="*dcmodes*" OR Process_Command_Line="*adinfo*" OR Process_Command_Line="* dclist *" OR Process_Command_Line="*computer_pwdnotreqd*" OR Process_Command_Line="*objectcategory=*" OR Process_Command_Line="*-subnets -f*" OR Process_Command_Line="*name=\"Domain Admins\"*" OR Process_Command_Line="*-sc u:*" OR Process_Command_Line="*domainncs*" OR Process_Command_Line="*dompol*" OR Process_Command_Line="* oudmp *" OR Process_Command_Line="*subnetdmp*" OR Process_Command_Line="*gpodmp*" OR Process_Command_Line="*fspdmp*" OR Process_Command_Line="*users_noexpire*" OR Process_Command_Line="*computers_active*")) | eval sigma_attack_tags="attack.discovery attack.t1482 attack.t1018" | eval sigma_title="AdFind Usage Detection" | eval sigma_description="AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain."
dispatch.earliest_time = -24h@h
alert.track = 0

[AdFind Usage Detection - sysmon]
description = AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*domainlist*" OR CommandLine="*trustdmp*" OR CommandLine="*dcmodes*" OR CommandLine="*adinfo*" OR CommandLine="* dclist *" OR CommandLine="*computer_pwdnotreqd*" OR CommandLine="*objectcategory=*" OR CommandLine="*-subnets -f*" OR CommandLine="*name=\"Domain Admins\"*" OR CommandLine="*-sc u:*" OR CommandLine="*domainncs*" OR CommandLine="*dompol*" OR CommandLine="* oudmp *" OR CommandLine="*subnetdmp*" OR CommandLine="*gpodmp*" OR CommandLine="*fspdmp*" OR CommandLine="*users_noexpire*" OR CommandLine="*computers_active*")) | eval sigma_attack_tags="attack.discovery attack.t1482 attack.t1018" | eval sigma_title="AdFind Usage Detection" | eval sigma_description="AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - winevent]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\advanced_ip_scanner*" OR (Process_Command_Line="*/portable*" Process_Command_Line="*/lng*"))) | eval sigma_attack_tags="attack.discovery attack.t1046 attack.t1135" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - sysmon]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\advanced_ip_scanner*" OR (CommandLine="*/portable*" CommandLine="*/lng*"))) | eval sigma_attack_tags="attack.discovery attack.t1046 attack.t1135" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced Port Scanner - winevent]
description = Detects the use of Advanced Port Scanner.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\advanced_port_scanner*" OR (Process_Command_Line="*/portable*" Process_Command_Line="*/lng*"))) | eval sigma_attack_tags="attack.discovery attack.t1046 attack.t1135" | eval sigma_title="Advanced Port Scanner" | eval sigma_description="Detects the use of Advanced Port Scanner."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced Port Scanner - sysmon]
description = Detects the use of Advanced Port Scanner.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\advanced_port_scanner*" OR (CommandLine="*/portable*" CommandLine="*/lng*"))) | eval sigma_attack_tags="attack.discovery attack.t1046 attack.t1135" | eval sigma_title="Advanced Port Scanner" | eval sigma_description="Detects the use of Advanced Port Scanner."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute From Alternate Data Streams - winevent]
description = Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Process_Command_Line="*txt:*" ((Process_Command_Line="*type *" Process_Command_Line="* > *") OR (Process_Command_Line="*makecab *" Process_Command_Line="*.cab*") OR (Process_Command_Line="*reg *" Process_Command_Line="* export *") OR (Process_Command_Line="*regedit *" Process_Command_Line="* /E *") OR (Process_Command_Line="*esentutl *" Process_Command_Line="* /y *" Process_Command_Line="* /d *" Process_Command_Line="* /o *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004" | eval sigma_title="Execute From Alternate Data Streams" | eval sigma_description="Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute From Alternate Data Streams - sysmon]
description = Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CommandLine="*txt:*" ((CommandLine="*type *" CommandLine="* > *") OR (CommandLine="*makecab *" CommandLine="*.cab*") OR (CommandLine="*reg *" CommandLine="* export *") OR (CommandLine="*regedit *" CommandLine="* /E *") OR (CommandLine="*esentutl *" CommandLine="* /y *" CommandLine="* /d *" CommandLine="* /o *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004" | eval sigma_title="Execute From Alternate Data Streams" | eval sigma_description="Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated MSI Spawned Cmd And Powershell - winevent]
description = This rule looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe") Creator_Process_Name="*\\Windows\\Installer\\*" Creator_Process_Name="*msi*" Creator_Process_Name="*tmp") | table New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated MSI Spawned Cmd And Powershell" | eval sigma_description="This rule looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated MSI Spawned Cmd And Powershell - sysmon]
description = This rule looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\cmd.exe" OR Image="*\\powershell.exe") ParentImage="*\\Windows\\Installer\\*" ParentImage="*msi*" ParentImage="*tmp") | table Image,ParentImage | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated MSI Spawned Cmd And Powershell" | eval sigma_description="This rule looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated Windows Installer - winevent]
description = This rule looks for Windows Installer service (msiexec.exe) trying to install MSI packages with SYSTEM privilege
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\Windows\\Installer\\*" New_Process_Name="*msi*" New_Process_Name="*tmp" (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*")) OR (New_Process_Name="*\\msiexec.exe" (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*") IntegrityLevel="System")) NOT ((Creator_Process_Name="C:\\Windows\\System32\\services.exe") OR (Process_Command_Line="*\\system32\\msiexec.exe /V" OR ParentCommandLine="*\\system32\\msiexec.exe /V"))) | table IntegrityLevel,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated Windows Installer" | eval sigma_description="This rule looks for Windows Installer service (msiexec.exe) trying to install MSI packages with SYSTEM privilege"
dispatch.earliest_time = -24h@h
alert.track = 0

[Always Install Elevated Windows Installer - sysmon]
description = This rule looks for Windows Installer service (msiexec.exe) trying to install MSI packages with SYSTEM privilege
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Windows\\Installer\\*" Image="*msi*" Image="*tmp" (User="*AUTHORI*" OR User="*AUTORI*")) OR (Image="*\\msiexec.exe" (User="*AUTHORI*" OR User="*AUTORI*") IntegrityLevel="System")) NOT ((ParentImage="C:\\Windows\\System32\\services.exe") OR (CommandLine="*\\system32\\msiexec.exe /V" OR ParentCommandLine="*\\system32\\msiexec.exe /V"))) | table IntegrityLevel,User,Image | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Always Install Elevated Windows Installer" | eval sigma_description="This rule looks for Windows Installer service (msiexec.exe) trying to install MSI packages with SYSTEM privilege"
dispatch.earliest_time = -24h@h
alert.track = 0

[AnyDesk Silent Installation - winevent]
description = AnyDesk Remote Desktop silent installation can be used by attacker to gain remote access.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*--install*" Process_Command_Line="*--start-with-win*" Process_Command_Line="*--silent*") | table Process_Command_Line,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="attack.t1219" | eval sigma_title="AnyDesk Silent Installation" | eval sigma_description="AnyDesk Remote Desktop silent installation can be used by attacker to gain remote access."
dispatch.earliest_time = -24h@h
alert.track = 0

[AnyDesk Silent Installation - sysmon]
description = AnyDesk Remote Desktop silent installation can be used by attacker to gain remote access.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*--install*" CommandLine="*--start-with-win*" CommandLine="*--silent*") | table CommandLine,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="attack.t1219" | eval sigma_title="AnyDesk Silent Installation" | eval sigma_description="AnyDesk Remote Desktop silent installation can be used by attacker to gain remote access."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Anydesk Remote Access Software from Suspicious Folder - winevent]
description = An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land) 

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\AnyDesk.exe" OR Description="AnyDesk" OR Product="AnyDesk" OR Company="AnyDesk Software GmbH") NOT ((New_Process_Name="*\\AppData\\\*" OR New_Process_Name="*Program Files (x86)\\AnyDesk*" OR New_Process_Name="*Program Files\\AnyDesk*"))) | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Use of Anydesk Remote Access Software from Suspicious Folder" | eval sigma_description="An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land) 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Anydesk Remote Access Software from Suspicious Folder - sysmon]
description = An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land) 

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\AnyDesk.exe" OR Description="AnyDesk" OR Product="AnyDesk" OR Company="AnyDesk Software GmbH") NOT ((Image="*\\AppData\\\*" OR Image="*Program Files (x86)\\AnyDesk*" OR Image="*Program Files\\AnyDesk*"))) | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Use of Anydesk Remote Access Software from Suspicious Folder" | eval sigma_description="An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land) 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task WScript VBScript - winevent]
description = Detects specific process parameters as used by ACTINIUM scheduled task persistence creation.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*schtasks*" Process_Command_Line="*create*" Process_Command_Line="*wscript*" Process_Command_Line="*e:vbscript*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1053 attack.t1053.005" | eval sigma_title="Scheduled Task WScript VBScript" | eval sigma_description="Detects specific process parameters as used by ACTINIUM scheduled task persistence creation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task WScript VBScript - sysmon]
description = Detects specific process parameters as used by ACTINIUM scheduled task persistence creation.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*schtasks*" CommandLine="*create*" CommandLine="*wscript*" CommandLine="*e:vbscript*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1053 attack.t1053.005" | eval sigma_title="Scheduled Task WScript VBScript" | eval sigma_description="Detects specific process parameters as used by ACTINIUM scheduled task persistence creation."
dispatch.earliest_time = -24h@h
alert.track = 0

[APT29 - winevent]
description = This method detects a suspicious PowerShell command line combination as used by APT29 in a campaign against U.S. think tanks.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-noni*" Process_Command_Line="*-ep*" Process_Command_Line="*bypass*" Process_Command_Line="*$*") | eval sigma_attack_tags="attack.execution attack.g0016 attack.t1059.001" | eval sigma_title="APT29" | eval sigma_description="This method detects a suspicious PowerShell command line combination as used by APT29 in a campaign against U.S. think tanks."
dispatch.earliest_time = -24h@h
alert.track = 0

[APT29 - sysmon]
description = This method detects a suspicious PowerShell command line combination as used by APT29 in a campaign against U.S. think tanks.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-noni*" CommandLine="*-ep*" CommandLine="*bypass*" CommandLine="*$*") | eval sigma_attack_tags="attack.execution attack.g0016 attack.t1059.001" | eval sigma_title="APT29" | eval sigma_description="This method detects a suspicious PowerShell command line combination as used by APT29 in a campaign against U.S. think tanks."
dispatch.earliest_time = -24h@h
alert.track = 0

[Baby Shark Activity - winevent]
description = Detects activity that could be related to Baby Shark malware
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="reg*query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"" OR Process_Command_Line="powershell.exe mshta.exe http*" OR Process_Command_Line="cmd.exe /c taskkill /im cmd.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.001 attack.discovery attack.t1012 attack.defense_evasion attack.t1218.005" | eval sigma_title="Baby Shark Activity" | eval sigma_description="Detects activity that could be related to Baby Shark malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Baby Shark Activity - sysmon]
description = Detects activity that could be related to Baby Shark malware
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="reg*query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"" OR CommandLine="powershell.exe mshta.exe http*" OR CommandLine="cmd.exe /c taskkill /im cmd.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.001 attack.discovery attack.t1012 attack.defense_evasion attack.t1218.005" | eval sigma_title="Baby Shark Activity" | eval sigma_description="Detects activity that could be related to Baby Shark malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Credential Access Activity - winevent]
description = Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\xcopy.exe" Process_Command_Line="*/S*" Process_Command_Line="*/E*" Process_Command_Line="*/C*" Process_Command_Line="*/Q*" Process_Command_Line="*/H*" Process_Command_Line="*\\\*") OR (New_Process_Name="*\\adexplorer.exe" Process_Command_Line="*-snapshot*" Process_Command_Line="*\"\"*" Process_Command_Line="*c:\\users\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1552.001 attack.t1003.003" | eval sigma_title="Judgement Panda Credential Access Activity" | eval sigma_description="Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Credential Access Activity - sysmon]
description = Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\xcopy.exe" CommandLine="*/S*" CommandLine="*/E*" CommandLine="*/C*" CommandLine="*/Q*" CommandLine="*/H*" CommandLine="*\\\*") OR (Image="*\\adexplorer.exe" CommandLine="*-snapshot*" CommandLine="*\"\"*" CommandLine="*c:\\users\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1552.001 attack.t1003.003" | eval sigma_title="Judgement Panda Credential Access Activity" | eval sigma_description="Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlueMashroom DLL Load - winevent]
description = Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\regsvr32*" Process_Command_Line="*\\AppData\\Local\\*") OR (Process_Command_Line="*\\AppData\\Local\\*" Process_Command_Line="*,DllEntry*")) NOT ((Process_Command_Line="*AppData\\Local\\Microsoft\\TeamsMeetingAddin\\*" OR (Process_Command_Line="*\\x86\\Microsoft.Teams.AddinLoader.dll" OR Process_Command_Line="*\\x86\\Microsoft.Teams.AddinLoader.dll\"" OR Process_Command_Line="*\\x64\\Microsoft.Teams.AddinLoader.dll" OR Process_Command_Line="*\\x64\\Microsoft.Teams.AddinLoader.dll\"")) OR (Process_Command_Line="*\\AppData\\Local\\WebEx\\WebEx64\\Meetings\\atucfobj.dll"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="BlueMashroom DLL Load" | eval sigma_description="Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlueMashroom DLL Load - sysmon]
description = Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\regsvr32*" CommandLine="*\\AppData\\Local\\*") OR (CommandLine="*\\AppData\\Local\\*" CommandLine="*,DllEntry*")) NOT ((CommandLine="*AppData\\Local\\Microsoft\\TeamsMeetingAddin\\*" OR (CommandLine="*\\x86\\Microsoft.Teams.AddinLoader.dll" OR CommandLine="*\\x86\\Microsoft.Teams.AddinLoader.dll\"" OR CommandLine="*\\x64\\Microsoft.Teams.AddinLoader.dll" OR CommandLine="*\\x64\\Microsoft.Teams.AddinLoader.dll\"")) OR (CommandLine="*\\AppData\\Local\\WebEx\\WebEx64\\Meetings\\atucfobj.dll"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="BlueMashroom DLL Load" | eval sigma_description="Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Chafer Activity - winevent]
description = Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\Service.exe*" (Process_Command_Line="*i" OR Process_Command_Line="*u")) OR (Process_Command_Line="*\\microsoft\\Taskbar\\autoit3.exe" OR Process_Command_Line="C:\\wsc.exe*") OR (New_Process_Name="*\\Windows\\Temp\\DB\\*" New_Process_Name="*.exe") OR (Process_Command_Line="*\\nslookup.exe*" Process_Command_Line="*-q=TXT*" Creator_Process_Name="*\\Autoit*"))) | eval sigma_attack_tags="attack.persistence attack.g0049 attack.t1053.005 attack.s0111 attack.t1543.003 attack.defense_evasion attack.t1112 attack.command_and_control attack.t1071.004" | eval sigma_title="Chafer Activity" | eval sigma_description="Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[Chafer Activity - sysmon]
description = Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\Service.exe*" (CommandLine="*i" OR CommandLine="*u")) OR (CommandLine="*\\microsoft\\Taskbar\\autoit3.exe" OR CommandLine="C:\\wsc.exe*") OR (Image="*\\Windows\\Temp\\DB\\*" Image="*.exe") OR (CommandLine="*\\nslookup.exe*" CommandLine="*-q=TXT*" ParentImage="*\\Autoit*"))) | eval sigma_attack_tags="attack.persistence attack.g0049 attack.t1053.005 attack.s0111 attack.t1543.003 attack.defense_evasion attack.t1112 attack.command_and_control attack.t1071.004" | eval sigma_title="Chafer Activity" | eval sigma_description="Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIExec VBS Script - winevent]
description = Detects suspicious file execution by wscript and cscript
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cscript.exe" Process_Command_Line="*.vbs*" Process_Command_Line="*/shell*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.g0045 attack.t1059.005" | eval sigma_title="WMIExec VBS Script" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIExec VBS Script - sysmon]
description = Detects suspicious file execution by wscript and cscript
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cscript.exe" CommandLine="*.vbs*" CommandLine="*/shell*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.g0045 attack.t1059.005" | eval sigma_title="WMIExec VBS Script" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExecWin - winevent]
description = Detects CrackMapExecWin Activity as Described by NCSC
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\crackmapexec.exe") | eval sigma_attack_tags="attack.g0035 attack.credential_access attack.discovery attack.t1110 attack.t1087" | eval sigma_title="CrackMapExecWin" | eval sigma_description="Detects CrackMapExecWin Activity as Described by NCSC"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExecWin - sysmon]
description = Detects CrackMapExecWin Activity as Described by NCSC
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\crackmapexec.exe") | eval sigma_attack_tags="attack.g0035 attack.credential_access attack.discovery attack.t1110 attack.t1087" | eval sigma_title="CrackMapExecWin" | eval sigma_description="Detects CrackMapExecWin Activity as Described by NCSC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Elise Backdoor - winevent]
description = Detects Elise backdoor acitivty as used by APT32
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="C:\\Windows\\SysWOW64\\cmd.exe" Process_Command_Line="*\\Windows\\Caches\\NavShExt.dll *") OR Process_Command_Line="*\\AppData\\Roaming\\MICROS~1\\Windows\\Caches\\NavShExt.dll,Setting")) | eval sigma_attack_tags="attack.g0030 attack.g0050 attack.s0081 attack.execution attack.t1059.003" | eval sigma_title="Elise Backdoor" | eval sigma_description="Detects Elise backdoor acitivty as used by APT32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Elise Backdoor - sysmon]
description = Detects Elise backdoor acitivty as used by APT32
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="C:\\Windows\\SysWOW64\\cmd.exe" CommandLine="*\\Windows\\Caches\\NavShExt.dll *") OR CommandLine="*\\AppData\\Roaming\\MICROS~1\\Windows\\Caches\\NavShExt.dll,Setting")) | eval sigma_attack_tags="attack.g0030 attack.g0050 attack.s0081 attack.execution attack.t1059.003" | eval sigma_title="Elise Backdoor" | eval sigma_description="Detects Elise backdoor acitivty as used by APT32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emissary Panda Malware SLLauncher - winevent]
description = Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sllauncher.exe" New_Process_Name="*\\svchost.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Emissary Panda Malware SLLauncher" | eval sigma_description="Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emissary Panda Malware SLLauncher - sysmon]
description = Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sllauncher.exe" Image="*\\svchost.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Emissary Panda Malware SLLauncher" | eval sigma_description="Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire Monkey - winevent]
description = Detects EmpireMonkey APT reported Activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*/i:%APPDATA%\\logs.txt scrobj.dll" New_Process_Name="*\\cutil.exe") OR (Process_Command_Line="*/i:%APPDATA%\\logs.txt scrobj.dll" Description="Microsoft(C) Registerserver"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Empire Monkey" | eval sigma_description="Detects EmpireMonkey APT reported Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire Monkey - sysmon]
description = Detects EmpireMonkey APT reported Activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*/i:%APPDATA%\\logs.txt scrobj.dll" Image="*\\cutil.exe") OR (CommandLine="*/i:%APPDATA%\\logs.txt scrobj.dll" Description="Microsoft(C) Registerserver"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Empire Monkey" | eval sigma_description="Detects EmpireMonkey APT reported Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Group DLL_U Load - winevent]
description = Detects a specific tool and export used by EquationGroup
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe" Process_Command_Line="*,dll_u") OR Process_Command_Line="* -export dll_u *")) | eval sigma_attack_tags="attack.g0020 attack.defense_evasion attack.t1218.011" | eval sigma_title="Equation Group DLL_U Load" | eval sigma_description="Detects a specific tool and export used by EquationGroup"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Group DLL_U Load - sysmon]
description = Detects a specific tool and export used by EquationGroup
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe" CommandLine="*,dll_u") OR CommandLine="* -export dll_u *")) | eval sigma_attack_tags="attack.g0020 attack.defense_evasion attack.t1218.011" | eval sigma_title="Equation Group DLL_U Load" | eval sigma_description="Detects a specific tool and export used by EquationGroup"
dispatch.earliest_time = -24h@h
alert.track = 0

[EvilNum Golden Chickens Deployment via OCX Files - winevent]
description = Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*regsvr32*" Process_Command_Line="*/s*" Process_Command_Line="*/i*" Process_Command_Line="*\\AppData\\Roaming\\*" Process_Command_Line="*.ocx*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="EvilNum Golden Chickens Deployment via OCX Files" | eval sigma_description="Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[EvilNum Golden Chickens Deployment via OCX Files - sysmon]
description = Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*regsvr32*" CommandLine="*/s*" CommandLine="*/i*" CommandLine="*\\AppData\\Roaming\\*" CommandLine="*.ocx*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="EvilNum Golden Chickens Deployment via OCX Files" | eval sigma_description="Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - winevent]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (sha1="53a44c2396d15c3a03723fa5e5db54cafd527635" OR sha1="9c5e496921e3bc882dc40694f1dcc3746a75db19" OR sha1="aeb573accfd95758550cf30bf04f389a92922844" OR sha1="79ef78a797403a4ed1a616c68e07fff868a8650a" OR sha1="4f6f38b4cec35e895d91c052b1f5a83d665c2196" OR sha1="1e8c2cac2e4ce7cbd33c3858eb2e24531cb8a84d" OR sha1="e841a63e47361a572db9a7334af459ddca11347a" OR sha1="c28f606df28a9bc8df75a4d5e5837fc5522dd34d" OR sha1="2e94b305d6812a9f96e6781c888e48c7fb157b6b" OR sha1="dd44133716b8a241957b912fa6a02efde3ce3025" OR sha1="8793bf166cb89eb55f0593404e4e933ab605e803" OR sha1="a39b57032dbb2335499a51e13470a7cd5d86b138" OR sha1="41cc2b15c662bc001c0eb92f6cc222934f0beeea" OR sha1="d209430d6af54792371174e70e27dd11d3def7a7" OR sha1="1c6452026c56efd2c94cea7e0f671eb55515edb0" OR sha1="c6b41d3afdcdcaf9f442bbe772f5da871801fd5a" OR sha1="4923d460e22fbbf165bbbaba168e5a46b8157d9f" OR sha1="f201504bd96e81d0d350c3a8332593ee1c9e09de" OR sha1="ddd2db1127632a2a52943a2fe516a2e7d05d70d2")) | eval sigma_attack_tags="attack.credential_access attack.t1212 attack.command_and_control attack.t1071" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - sysmon]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (sha1="53a44c2396d15c3a03723fa5e5db54cafd527635" OR sha1="9c5e496921e3bc882dc40694f1dcc3746a75db19" OR sha1="aeb573accfd95758550cf30bf04f389a92922844" OR sha1="79ef78a797403a4ed1a616c68e07fff868a8650a" OR sha1="4f6f38b4cec35e895d91c052b1f5a83d665c2196" OR sha1="1e8c2cac2e4ce7cbd33c3858eb2e24531cb8a84d" OR sha1="e841a63e47361a572db9a7334af459ddca11347a" OR sha1="c28f606df28a9bc8df75a4d5e5837fc5522dd34d" OR sha1="2e94b305d6812a9f96e6781c888e48c7fb157b6b" OR sha1="dd44133716b8a241957b912fa6a02efde3ce3025" OR sha1="8793bf166cb89eb55f0593404e4e933ab605e803" OR sha1="a39b57032dbb2335499a51e13470a7cd5d86b138" OR sha1="41cc2b15c662bc001c0eb92f6cc222934f0beeea" OR sha1="d209430d6af54792371174e70e27dd11d3def7a7" OR sha1="1c6452026c56efd2c94cea7e0f671eb55515edb0" OR sha1="c6b41d3afdcdcaf9f442bbe772f5da871801fd5a" OR sha1="4923d460e22fbbf165bbbaba168e5a46b8157d9f" OR sha1="f201504bd96e81d0d350c3a8332593ee1c9e09de" OR sha1="ddd2db1127632a2a52943a2fe516a2e7d05d70d2")) | eval sigma_attack_tags="attack.credential_access attack.t1212 attack.command_and_control attack.t1071" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - winevent]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) sha1="e570585edc69f9074cb5e8a790708336bd45ca0f" NOT ((New_Process_Name="*:\\Program Files(x86)\\*" OR New_Process_Name="*:\\Program Files\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1212 attack.command_and_control attack.t1071" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - sysmon]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) sha1="e570585edc69f9074cb5e8a790708336bd45ca0f" NOT ((Image="*:\\Program Files(x86)\\*" OR Image="*:\\Program Files\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1212 attack.command_and_control attack.t1071" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious UltraVNC Execution - winevent]
description = Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-autoreconnect *" Process_Command_Line="*-connect *" Process_Command_Line="*-id:*") | eval sigma_attack_tags="attack.lateral_movement attack.g0047 attack.t1021.005" | eval sigma_title="Suspicious UltraVNC Execution" | eval sigma_description="Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious UltraVNC Execution - sysmon]
description = Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-autoreconnect *" CommandLine="*-connect *" CommandLine="*-id:*") | eval sigma_attack_tags="attack.lateral_movement attack.g0047 attack.t1021.005" | eval sigma_title="Suspicious UltraVNC Execution" | eval sigma_description="Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Greenbug Campaign Indicators - winevent]
description = Detects tools and process executions as observed in a Greenbug campaign in May 2020
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*bitsadmin*" Process_Command_Line="*/transfer*" Process_Command_Line="*CSIDL_APPDATA*") OR Process_Command_Line="*CSIDL_SYSTEM_DRIVE*" OR (Process_Command_Line="*\\msf.ps1*" OR Process_Command_Line="*8989 -e cmd.exe*" OR Process_Command_Line="*system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill*" OR Process_Command_Line="*-nop -w hidden -c $k=new-object*" OR Process_Command_Line="*[Net.CredentialCache]::DefaultCredentials;IEX *" OR Process_Command_Line="* -nop -w hidden -c $m=new-object net.webclient;$m*" OR Process_Command_Line="*-noninteractive -executionpolicy bypass whoami*" OR Process_Command_Line="*-noninteractive -executionpolicy bypass netstat -a*" OR Process_Command_Line="*L3NlcnZlcj1*") OR (New_Process_Name="*\\adobe\\Adobe.exe" OR New_Process_Name="*\\oracle\\local.exe" OR New_Process_Name="*\\revshell.exe" OR New_Process_Name="*infopagesbackup\\ncat.exe" OR New_Process_Name="*CSIDL_SYSTEM\\cmd.exe" OR New_Process_Name="*\\programdata\\oracle\\java.exe" OR New_Process_Name="*CSIDL_COMMON_APPDATA\\comms\\comms.exe" OR New_Process_Name="*\\Programdata\\VMware\\Vmware.exe"))) | eval sigma_attack_tags="attack.g0049 attack.execution attack.t1059.001 attack.command_and_control attack.t1105 attack.defense_evasion attack.t1036.005" | eval sigma_title="Greenbug Campaign Indicators" | eval sigma_description="Detects tools and process executions as observed in a Greenbug campaign in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Greenbug Campaign Indicators - sysmon]
description = Detects tools and process executions as observed in a Greenbug campaign in May 2020
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*bitsadmin*" CommandLine="*/transfer*" CommandLine="*CSIDL_APPDATA*") OR CommandLine="*CSIDL_SYSTEM_DRIVE*" OR (CommandLine="*\\msf.ps1*" OR CommandLine="*8989 -e cmd.exe*" OR CommandLine="*system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill*" OR CommandLine="*-nop -w hidden -c $k=new-object*" OR CommandLine="*[Net.CredentialCache]::DefaultCredentials;IEX *" OR CommandLine="* -nop -w hidden -c $m=new-object net.webclient;$m*" OR CommandLine="*-noninteractive -executionpolicy bypass whoami*" OR CommandLine="*-noninteractive -executionpolicy bypass netstat -a*" OR CommandLine="*L3NlcnZlcj1*") OR (Image="*\\adobe\\Adobe.exe" OR Image="*\\oracle\\local.exe" OR Image="*\\revshell.exe" OR Image="*infopagesbackup\\ncat.exe" OR Image="*CSIDL_SYSTEM\\cmd.exe" OR Image="*\\programdata\\oracle\\java.exe" OR Image="*CSIDL_COMMON_APPDATA\\comms\\comms.exe" OR Image="*\\Programdata\\VMware\\Vmware.exe"))) | eval sigma_attack_tags="attack.g0049 attack.execution attack.t1059.001 attack.command_and_control attack.t1105 attack.defense_evasion attack.t1036.005" | eval sigma_title="Greenbug Campaign Indicators" | eval sigma_description="Detects tools and process executions as observed in a Greenbug campaign in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange Exploitation Activity - winevent]
description = Detects activity observed by different researchers to be HAFNIUM group activity (or related) on Exchange servers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*attrib*" Process_Command_Line="* +h *" Process_Command_Line="* +s *" Process_Command_Line="* +r *" Process_Command_Line="*.aspx*") OR (Process_Command_Line="*schtasks*" Process_Command_Line="*VSPerfMon*") OR (Process_Command_Line="*vssadmin list shadows*" Process_Command_Line="*Temp\\__output*") OR Process_Command_Line="*%TEMP%\\execute.bat*" OR New_Process_Name="*Users\\Public\\opera\\Opera_browser.exe" OR (New_Process_Name="*Opera_browser.exe" (Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\svchost.exe")) OR New_Process_Name="*\\ProgramData\\VSPerfMon\\*" OR (Process_Command_Line="* -t7z *" Process_Command_Line="*C:\\Programdata\\pst*" Process_Command_Line="*\\it.zip*") OR (New_Process_Name="*\\makecab.exe" (Process_Command_Line="*Microsoft\\Exchange Server\\*" OR Process_Command_Line="*inetpub\\wwwroot*")) OR (Process_Command_Line="*\\Temp\\xx.bat*" OR Process_Command_Line="*Windows\\WwanSvcdcs*" OR Process_Command_Line="*Windows\\Temp\\cw.exe*") OR (Process_Command_Line="*\\comsvcs.dll*" Process_Command_Line="*Minidump*" Process_Command_Line="*\\inetpub\\wwwroot*") OR (Process_Command_Line="*dsquery*" Process_Command_Line="* -uco *" Process_Command_Line="*\\inetpub\\wwwroot*"))) | eval sigma_attack_tags="attack.persistence attack.t1546 attack.t1053" | eval sigma_title="Exchange Exploitation Activity" | eval sigma_description="Detects activity observed by different researchers to be HAFNIUM group activity (or related) on Exchange servers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange Exploitation Activity - sysmon]
description = Detects activity observed by different researchers to be HAFNIUM group activity (or related) on Exchange servers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*attrib*" CommandLine="* +h *" CommandLine="* +s *" CommandLine="* +r *" CommandLine="*.aspx*") OR (CommandLine="*schtasks*" CommandLine="*VSPerfMon*") OR (CommandLine="*vssadmin list shadows*" CommandLine="*Temp\\__output*") OR CommandLine="*%TEMP%\\execute.bat*" OR Image="*Users\\Public\\opera\\Opera_browser.exe" OR (Image="*Opera_browser.exe" (ParentImage="*\\services.exe" OR ParentImage="*\\svchost.exe")) OR Image="*\\ProgramData\\VSPerfMon\\*" OR (CommandLine="* -t7z *" CommandLine="*C:\\Programdata\\pst*" CommandLine="*\\it.zip*") OR (Image="*\\makecab.exe" (CommandLine="*Microsoft\\Exchange Server\\*" OR CommandLine="*inetpub\\wwwroot*")) OR (CommandLine="*\\Temp\\xx.bat*" OR CommandLine="*Windows\\WwanSvcdcs*" OR CommandLine="*Windows\\Temp\\cw.exe*") OR (CommandLine="*\\comsvcs.dll*" CommandLine="*Minidump*" CommandLine="*\\inetpub\\wwwroot*") OR (CommandLine="*dsquery*" CommandLine="* -uco *" CommandLine="*\\inetpub\\wwwroot*"))) | eval sigma_attack_tags="attack.persistence attack.t1546 attack.t1053" | eval sigma_title="Exchange Exploitation Activity" | eval sigma_description="Detects activity observed by different researchers to be HAFNIUM group activity (or related) on Exchange servers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hurricane Panda Activity - winevent]
description = Detects Hurricane Panda Activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*localgroup*" Process_Command_Line="*admin*" Process_Command_Line="*/add*") OR (Process_Command_Line="*\\Win64.exe*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.g0009 attack.t1068" | eval sigma_title="Hurricane Panda Activity" | eval sigma_description="Detects Hurricane Panda Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hurricane Panda Activity - sysmon]
description = Detects Hurricane Panda Activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*localgroup*" CommandLine="*admin*" CommandLine="*/add*") OR (CommandLine="*\\Win64.exe*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.g0009 attack.t1068" | eval sigma_title="Hurricane Panda Activity" | eval sigma_description="Detects Hurricane Panda Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Exfil Activity - winevent]
description = Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*eprod.ldf" OR (Process_Command_Line="*\\ldifde.exe -f -n *" OR Process_Command_Line="*\\7za.exe a 1.7z *" OR Process_Command_Line="*\\aaaa\\procdump64.exe*" OR Process_Command_Line="*\\aaaa\\netsess.exe*" OR Process_Command_Line="*\\aaaa\\7za.exe*" OR Process_Command_Line="*copy .\\1.7z \\*" OR Process_Command_Line="*copy \\client\\c$\\aaaa\\*") OR New_Process_Name="C:\\Users\\Public\\7za.exe")) | eval sigma_attack_tags="attack.lateral_movement attack.g0010 attack.credential_access attack.t1003.001 attack.exfiltration attack.t1560.001" | eval sigma_title="Judgement Panda Exfil Activity" | eval sigma_description="Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Exfil Activity - sysmon]
description = Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*eprod.ldf" OR (CommandLine="*\\ldifde.exe -f -n *" OR CommandLine="*\\7za.exe a 1.7z *" OR CommandLine="*\\aaaa\\procdump64.exe*" OR CommandLine="*\\aaaa\\netsess.exe*" OR CommandLine="*\\aaaa\\7za.exe*" OR CommandLine="*copy .\\1.7z \\*" OR CommandLine="*copy \\client\\c$\\aaaa\\*") OR Image="C:\\Users\\Public\\7za.exe")) | eval sigma_attack_tags="attack.lateral_movement attack.g0010 attack.credential_access attack.t1003.001 attack.exfiltration attack.t1560.001" | eval sigma_title="Judgement Panda Exfil Activity" | eval sigma_description="Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ke3chang Registry Key Modifications - winevent]
description = Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*-Property DWORD -name DisableFirstRunCustomize -value 2 -Force*" OR Process_Command_Line="*-Property String -name Check_Associations -value*" OR Process_Command_Line="*-Property DWORD -name IEHarden -value 0 -Force*")) | eval sigma_attack_tags="attack.g0004 attack.defense_evasion attack.t1562.001" | eval sigma_title="Ke3chang Registry Key Modifications" | eval sigma_description="Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ke3chang Registry Key Modifications - sysmon]
description = Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*-Property DWORD -name DisableFirstRunCustomize -value 2 -Force*" OR CommandLine="*-Property String -name Check_Associations -value*" OR CommandLine="*-Property DWORD -name IEHarden -value 0 -Force*")) | eval sigma_attack_tags="attack.g0004 attack.defense_evasion attack.t1562.001" | eval sigma_title="Ke3chang Registry Key Modifications" | eval sigma_description="Detects Registry modifications performed by Ke3chang malware in campaigns running in 2019 and 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - winevent]
description = Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*mshta*" Process_Command_Line="*.zip*") OR (Creator_Process_Name="C:\\Windows\\System32\\wbem\\wmiprvse.exe" New_Process_Name="C:\\Windows\\System32\\mshta.exe") OR (Creator_Process_Name="*:\\Users\\Public\\*" New_Process_Name="C:\\Windows\\System32\\rundll32.exe"))) | eval sigma_attack_tags="attack.g0032 attack.execution attack.t1106" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - sysmon]
description = Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*mshta*" CommandLine="*.zip*") OR (ParentImage="C:\\Windows\\System32\\wbem\\wmiprvse.exe" Image="C:\\Windows\\System32\\mshta.exe") OR (ParentImage="*:\\Users\\Public\\*" Image="C:\\Windows\\System32\\rundll32.exe"))) | eval sigma_attack_tags="attack.g0032 attack.execution attack.t1106" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in Malwarebytes's threat report on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - winevent]
description = Detects different process creation events as described in various threat reports on Lazarus group activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*reg.exe save hklm\\sam %temp%\\~reg_sam.save*" OR Process_Command_Line="*1q2w3e4r@#$@#$@#$*" OR Process_Command_Line="* -hp1q2w3e4 *" OR Process_Command_Line="*.dat data03 10000 -p *") OR (Process_Command_Line="*process call create*" Process_Command_Line="* > %temp%\\~*") OR (Process_Command_Line="*netstat -aon | find *" Process_Command_Line="* > %temp%\\~*") OR Process_Command_Line="*.255 10 C:\\ProgramData\\*")) | eval sigma_attack_tags="attack.g0032 attack.execution attack.t1059" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Activity - sysmon]
description = Detects different process creation events as described in various threat reports on Lazarus group activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*reg.exe save hklm\\sam %temp%\\~reg_sam.save*" OR CommandLine="*1q2w3e4r@#$@#$@#$*" OR CommandLine="* -hp1q2w3e4 *" OR CommandLine="*.dat data03 10000 -p *") OR (CommandLine="*process call create*" CommandLine="* > %temp%\\~*") OR (CommandLine="*netstat -aon | find *" CommandLine="* > %temp%\\~*") OR CommandLine="*.255 10 C:\\ProgramData\\*")) | eval sigma_attack_tags="attack.g0032 attack.execution attack.t1059" | eval sigma_title="Lazarus Activity" | eval sigma_description="Detects different process creation events as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Loaders - winevent]
description = Detects different loaders as described in various threat reports on Lazarus group activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*cmd.exe /c *" Process_Command_Line="* -p 0x*" (Process_Command_Line="*C:\\ProgramData\\*" OR Process_Command_Line="*C:\\RECYCLER\\*")) OR (Process_Command_Line="*rundll32.exe *" Process_Command_Line="*C:\\ProgramData\\*" (Process_Command_Line="*.bin,*" OR Process_Command_Line="*.tmp,*" OR Process_Command_Line="*.dat,*" OR Process_Command_Line="*.io,*" OR Process_Command_Line="*.ini,*" OR Process_Command_Line="*.db,*")))) | eval sigma_attack_tags="attack.g0032 attack.execution attack.t1059" | eval sigma_title="Lazarus Loaders" | eval sigma_description="Detects different loaders as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Loaders - sysmon]
description = Detects different loaders as described in various threat reports on Lazarus group activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*cmd.exe /c *" CommandLine="* -p 0x*" (CommandLine="*C:\\ProgramData\\*" OR CommandLine="*C:\\RECYCLER\\*")) OR (CommandLine="*rundll32.exe *" CommandLine="*C:\\ProgramData\\*" (CommandLine="*.bin,*" OR CommandLine="*.tmp,*" OR CommandLine="*.dat,*" OR CommandLine="*.io,*" OR CommandLine="*.ini,*" OR CommandLine="*.db,*")))) | eval sigma_attack_tags="attack.g0032 attack.execution attack.t1059" | eval sigma_title="Lazarus Loaders" | eval sigma_description="Detects different loaders as described in various threat reports on Lazarus group activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Session Highjacker - winevent]
description = Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msdtc.exe" OR New_Process_Name="*\\gpvc.exe") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Lazarus Session Highjacker" | eval sigma_description="Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Session Highjacker - sysmon]
description = Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msdtc.exe" OR Image="*\\gpvc.exe") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Lazarus Session Highjacker" | eval sigma_description="Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Tunnel Technique from MuddyWater - winevent]
description = Detecting DNS tunnel activity for Muddywater actor
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Creator_Process_Name="*\\excel.exe" Process_Command_Line="*DataExchange.dll*") | eval sigma_attack_tags="attack.command_and_control attack.t1071.004" | eval sigma_title="DNS Tunnel Technique from MuddyWater" | eval sigma_description="Detecting DNS tunnel activity for Muddywater actor"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Tunnel Technique from MuddyWater - sysmon]
description = Detecting DNS tunnel activity for Muddywater actor
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" ParentImage="*\\excel.exe" CommandLine="*DataExchange.dll*") | eval sigma_attack_tags="attack.command_and_control attack.t1071.004" | eval sigma_title="DNS Tunnel Technique from MuddyWater" | eval sigma_description="Detecting DNS tunnel activity for Muddywater actor"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mustang Panda Dropper - winevent]
description = Detects specific process parameters as used by Mustang Panda droppers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*Temp\\wtask.exe /create*" OR Process_Command_Line="*%windir:~-3,1%%PUBLIC:~-9,1%*" OR Process_Command_Line="*/tn \"Security Script *" OR Process_Command_Line="*%windir:~-1,1%*") OR (Process_Command_Line="*/E:vbscript*" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*.txt*" Process_Command_Line="*/F*") OR New_Process_Name="*Temp\\winwsh.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1587.001 attack.resource_development" | eval sigma_title="Mustang Panda Dropper" | eval sigma_description="Detects specific process parameters as used by Mustang Panda droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mustang Panda Dropper - sysmon]
description = Detects specific process parameters as used by Mustang Panda droppers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*Temp\\wtask.exe /create*" OR CommandLine="*%windir:~-3,1%%PUBLIC:~-9,1%*" OR CommandLine="*/tn \"Security Script *" OR CommandLine="*%windir:~-1,1%*") OR (CommandLine="*/E:vbscript*" CommandLine="*C:\\Users\\*" CommandLine="*.txt*" CommandLine="*/F*") OR Image="*Temp\\winwsh.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1587.001 attack.resource_development" | eval sigma_title="Mustang Panda Dropper" | eval sigma_description="Detects specific process parameters as used by Mustang Panda droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[REvil Kaseya Incident Malware Patterns - winevent]
description = Detects process command line patterns and locations used by REvil group in Kaseya incident (can also match on other malware)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*C:\\Windows\\cert.exe*" OR Process_Command_Line="*del /q /f c:\\kworking\\agent.crt*" OR Process_Command_Line="*Kaseya VSA Agent Hot-fix*" OR Process_Command_Line="*\\AppData\\Local\\Temp\\MsMpEng.exe*" OR Process_Command_Line="*rmdir /s /q %SystemDrive%\\inetpub\\logs*" OR Process_Command_Line="*del /s /q /f %SystemDrive%\\*.log*" OR Process_Command_Line="*c:\\kworking1\\agent.exe*" OR Process_Command_Line="*c:\\kworking1\\agent.crt*") OR (New_Process_Name="C:\\Windows\\MsMpEng.exe" OR New_Process_Name="C:\\Windows\\cert.exe" OR New_Process_Name="C:\\kworking\\agent.exe" OR New_Process_Name="C:\\kworking1\\agent.exe") OR (Process_Command_Line="*del /s /q /f*" Process_Command_Line="*WebPages\\Errors\\webErrorLog.txt*"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.g0115" | eval sigma_title="REvil Kaseya Incident Malware Patterns" | eval sigma_description="Detects process command line patterns and locations used by REvil group in Kaseya incident (can also match on other malware)"
dispatch.earliest_time = -24h@h
alert.track = 0

[REvil Kaseya Incident Malware Patterns - sysmon]
description = Detects process command line patterns and locations used by REvil group in Kaseya incident (can also match on other malware)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*C:\\Windows\\cert.exe*" OR CommandLine="*del /q /f c:\\kworking\\agent.crt*" OR CommandLine="*Kaseya VSA Agent Hot-fix*" OR CommandLine="*\\AppData\\Local\\Temp\\MsMpEng.exe*" OR CommandLine="*rmdir /s /q %SystemDrive%\\inetpub\\logs*" OR CommandLine="*del /s /q /f %SystemDrive%\\*.log*" OR CommandLine="*c:\\kworking1\\agent.exe*" OR CommandLine="*c:\\kworking1\\agent.crt*") OR (Image="C:\\Windows\\MsMpEng.exe" OR Image="C:\\Windows\\cert.exe" OR Image="C:\\kworking\\agent.exe" OR Image="C:\\kworking1\\agent.exe") OR (CommandLine="*del /s /q /f*" CommandLine="*WebPages\\Errors\\webErrorLog.txt*"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.g0115" | eval sigma_title="REvil Kaseya Incident Malware Patterns" | eval sigma_description="Detects process command line patterns and locations used by REvil group in Kaseya incident (can also match on other malware)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Defrag Deactivation - winevent]
description = Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" (Process_Command_Line="*/delete*" OR Process_Command_Line="*/change*") Process_Command_Line="*/TN*" Process_Command_Line="*\\Microsoft\\Windows\\Defrag\\ScheduledDefrag*") | eval sigma_attack_tags="attack.persistence attack.t1053.005 attack.s0111" | eval sigma_title="Defrag Deactivation" | eval sigma_description="Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Defrag Deactivation - sysmon]
description = Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" (CommandLine="*/delete*" OR CommandLine="*/change*") CommandLine="*/TN*" CommandLine="*\\Microsoft\\Windows\\Defrag\\ScheduledDefrag*") | eval sigma_attack_tags="attack.persistence attack.t1053.005 attack.s0111" | eval sigma_title="Defrag Deactivation" | eval sigma_description="Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sofacy Trojan Loader Activity - winevent]
description = Detects Trojan loader activity as used by APT28
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*rundll32.exe*" Process_Command_Line="*%APPDATA%\\*") (Process_Command_Line="*.dat\",*" OR (Process_Command_Line="*.dll\",#1" OR Process_Command_Line="*.dll #1" OR Process_Command_Line="*.dll\" #1"))) | eval sigma_attack_tags="attack.g0007 attack.execution attack.t1059.003 attack.defense_evasion car.2013-10-002 attack.t1218.011" | eval sigma_title="Sofacy Trojan Loader Activity" | eval sigma_description="Detects Trojan loader activity as used by APT28"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sofacy Trojan Loader Activity - sysmon]
description = Detects Trojan loader activity as used by APT28
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*rundll32.exe*" CommandLine="*%APPDATA%\\*") (CommandLine="*.dat\",*" OR (CommandLine="*.dll\",#1" OR CommandLine="*.dll #1" OR CommandLine="*.dll\" #1"))) | eval sigma_attack_tags="attack.g0007 attack.execution attack.t1059.003 attack.defense_evasion car.2013-10-002 attack.t1218.011" | eval sigma_title="Sofacy Trojan Loader Activity" | eval sigma_description="Detects Trojan loader activity as used by APT28"
dispatch.earliest_time = -24h@h
alert.track = 0

[SOURGUM Actor Behaviours - winevent]
description = Suspicious behaviours related to an actor tracked by Microsoft as SOURGUM
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*windows\\system32\\Physmem.sys*" OR (New_Process_Name="*Windows\\system32\\ime\\SHARED\\WimBootConfigurations.ini*" OR New_Process_Name="*Windows\\system32\\ime\\IMEJP\\WimBootConfigurations.ini*" OR New_Process_Name="*Windows\\system32\\ime\\IMETC\\WimBootConfigurations.ini*")) OR ((New_Process_Name="*windows\\system32\\filepath2*" OR New_Process_Name="*windows\\system32\\ime*") Process_Command_Line="*reg add*" (Process_Command_Line="*HKEY_LOCAL_MACHINE\\software\\classes\\clsid\\{7c857801-7381-11cf-884d-00aa004b2e24}\\inprocserver32*" OR Process_Command_Line="*HKEY_LOCAL_MACHINE\\software\\classes\\clsid\\{cf4cc405-e2c5-4ddd-b3ce-5e7582d8c9fa}\\inprocserver32*")))) | eval sigma_attack_tags="attack.t1546 attack.t1546.015 attack.persistence attack.privilege_escalation" | eval sigma_title="SOURGUM Actor Behaviours" | eval sigma_description="Suspicious behaviours related to an actor tracked by Microsoft as SOURGUM"
dispatch.earliest_time = -24h@h
alert.track = 0

[SOURGUM Actor Behaviours - sysmon]
description = Suspicious behaviours related to an actor tracked by Microsoft as SOURGUM
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*windows\\system32\\Physmem.sys*" OR (Image="*Windows\\system32\\ime\\SHARED\\WimBootConfigurations.ini*" OR Image="*Windows\\system32\\ime\\IMEJP\\WimBootConfigurations.ini*" OR Image="*Windows\\system32\\ime\\IMETC\\WimBootConfigurations.ini*")) OR ((Image="*windows\\system32\\filepath2*" OR Image="*windows\\system32\\ime*") CommandLine="*reg add*" (CommandLine="*HKEY_LOCAL_MACHINE\\software\\classes\\clsid\\{7c857801-7381-11cf-884d-00aa004b2e24}\\inprocserver32*" OR CommandLine="*HKEY_LOCAL_MACHINE\\software\\classes\\clsid\\{cf4cc405-e2c5-4ddd-b3ce-5e7582d8c9fa}\\inprocserver32*")))) | eval sigma_attack_tags="attack.t1546 attack.t1546.015 attack.persistence attack.privilege_escalation" | eval sigma_title="SOURGUM Actor Behaviours" | eval sigma_description="Suspicious behaviours related to an actor tracked by Microsoft as SOURGUM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ps.exe Renamed SysInternals Tool - winevent]
description = Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="ps.exe -accepteula") | eval sigma_attack_tags="attack.defense_evasion attack.g0035 attack.t1036.003 car.2013-05-009" | eval sigma_title="Ps.exe Renamed SysInternals Tool" | eval sigma_description="Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ps.exe Renamed SysInternals Tool - sysmon]
description = Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="ps.exe -accepteula") | eval sigma_attack_tags="attack.defense_evasion attack.g0035 attack.t1036.003 car.2013-05-009" | eval sigma_title="Ps.exe Renamed SysInternals Tool" | eval sigma_description="Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report"
dispatch.earliest_time = -24h@h
alert.track = 0

[TA505 Dropper Load Pattern - winevent]
description = Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\wmiprvse.exe" (New_Process_Name="*\\mshta.exe" OR OriginalFileName="mshta.exe")) | eval sigma_attack_tags="attack.execution attack.g0092 attack.t1106" | eval sigma_title="TA505 Dropper Load Pattern" | eval sigma_description="Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents"
dispatch.earliest_time = -24h@h
alert.track = 0

[TA505 Dropper Load Pattern - sysmon]
description = Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\wmiprvse.exe" (Image="*\\mshta.exe" OR OriginalFileName="mshta.exe")) | eval sigma_attack_tags="attack.execution attack.g0092 attack.t1106" | eval sigma_title="TA505 Dropper Load Pattern" | eval sigma_description="Detects mshta loaded by wmiprvse as parent as used by TA505 malicious documents"
dispatch.earliest_time = -24h@h
alert.track = 0

[TAIDOOR RAT DLL Load - winevent]
description = Detects specific process characteristics of Chinese TAIDOOR RAT malware load
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*dll,MyStart*" OR Process_Command_Line="*dll MyStart*") OR (Process_Command_Line="* MyStart" Process_Command_Line="*rundll32.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1055.001" | eval sigma_title="TAIDOOR RAT DLL Load" | eval sigma_description="Detects specific process characteristics of Chinese TAIDOOR RAT malware load"
dispatch.earliest_time = -24h@h
alert.track = 0

[TAIDOOR RAT DLL Load - sysmon]
description = Detects specific process characteristics of Chinese TAIDOOR RAT malware load
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*dll,MyStart*" OR CommandLine="*dll MyStart*") OR (CommandLine="* MyStart" CommandLine="*rundll32.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1055.001" | eval sigma_title="TAIDOOR RAT DLL Load" | eval sigma_description="Detects specific process characteristics of Chinese TAIDOOR RAT malware load"
dispatch.earliest_time = -24h@h
alert.track = 0

[TropicTrooper Campaign November 2018 - winevent]
description = Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="TropicTrooper Campaign November 2018" | eval sigma_description="Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia"
dispatch.earliest_time = -24h@h
alert.track = 0

[TropicTrooper Campaign November 2018 - sysmon]
description = Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="TropicTrooper Campaign November 2018" | eval sigma_description="Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Lateral Movement - winevent]
description = Detects automated lateral movement by Turla group
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="net use \\%DomainController%\\C$ \"P@ssw0rd\" *" OR Process_Command_Line="dir c:\\*.doc* /s" OR Process_Command_Line="dir %TEMP%\\*.exe")) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1059 attack.lateral_movement attack.t1021.002 attack.discovery attack.t1083 attack.t1135" | eval sigma_title="Turla Group Lateral Movement" | eval sigma_description="Detects automated lateral movement by Turla group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Lateral Movement - sysmon]
description = Detects automated lateral movement by Turla group
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="net use \\%DomainController%\\C$ \"P@ssw0rd\" *" OR CommandLine="dir c:\\*.doc* /s" OR CommandLine="dir %TEMP%\\*.exe")) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1059 attack.lateral_movement attack.t1021.002 attack.discovery attack.t1083 attack.t1135" | eval sigma_title="Turla Group Lateral Movement" | eval sigma_description="Detects automated lateral movement by Turla group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Commands May 2020 - winevent]
description = Detects commands used by Turla group as reported by ESET in May 2020
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*tracert -h 10 yahoo.com*" OR Process_Command_Line="*.WSqmCons))|iex;*" OR Process_Command_Line="*Fr`omBa`se6`4Str`ing*") OR (Process_Command_Line="*net use https://docs.live.net*" Process_Command_Line="*@aol.co.uk*"))) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1059.001 attack.t1053.005 attack.t1027" | eval sigma_title="Turla Group Commands May 2020" | eval sigma_description="Detects commands used by Turla group as reported by ESET in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Commands May 2020 - sysmon]
description = Detects commands used by Turla group as reported by ESET in May 2020
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*tracert -h 10 yahoo.com*" OR CommandLine="*.WSqmCons))|iex;*" OR CommandLine="*Fr`omBa`se6`4Str`ing*") OR (CommandLine="*net use https://docs.live.net*" CommandLine="*@aol.co.uk*"))) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1059.001 attack.t1053.005 attack.t1027" | eval sigma_title="Turla Group Commands May 2020" | eval sigma_description="Detects commands used by Turla group as reported by ESET in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[UNC2452 Process Creation Patterns - winevent]
description = Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((((Process_Command_Line="*7z.exe a -v500m -mx9 -r0 -p*" OR (ParentCommandLine="*wscript.exe*" ParentCommandLine="*.vbs*" Process_Command_Line="*rundll32.exe*" Process_Command_Line="*C:\\Windows*" Process_Command_Line="*.dll,Tk_*")) OR (Creator_Process_Name="*\\rundll32.exe" ParentCommandLine="*C:\\Windows*" Process_Command_Line="*cmd.exe /C *")) OR (Process_Command_Line="*rundll32 c:\\windows\\*" Process_Command_Line="*.dll *")) OR ((Creator_Process_Name="*\\rundll32.exe" New_Process_Name="*\\dllhost.exe") NOT ((Process_Command_Line=" " OR Process_Command_Line=""))))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="UNC2452 Process Creation Patterns" | eval sigma_description="Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries"
dispatch.earliest_time = -24h@h
alert.track = 0

[UNC2452 Process Creation Patterns - sysmon]
description = Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((((CommandLine="*7z.exe a -v500m -mx9 -r0 -p*" OR (ParentCommandLine="*wscript.exe*" ParentCommandLine="*.vbs*" CommandLine="*rundll32.exe*" CommandLine="*C:\\Windows*" CommandLine="*.dll,Tk_*")) OR (ParentImage="*\\rundll32.exe" ParentCommandLine="*C:\\Windows*" CommandLine="*cmd.exe /C *")) OR (CommandLine="*rundll32 c:\\windows\\*" CommandLine="*.dll *")) OR ((ParentImage="*\\rundll32.exe" Image="*\\dllhost.exe") NOT ((CommandLine=" " OR CommandLine=""))))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="UNC2452 Process Creation Patterns" | eval sigma_description="Detects a specific process creation patterns as seen used by UNC2452 and provided by Microsoft as Microsoft Defender ATP queries"
dispatch.earliest_time = -24h@h
alert.track = 0

[Unidentified Attacker November 2018 - winevent]
description = A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cyzfc.dat,*" Process_Command_Line="*PointFunctionCall") | eval sigma_attack_tags="attack.execution attack.t1218.011" | eval sigma_title="Unidentified Attacker November 2018" | eval sigma_description="A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016."
dispatch.earliest_time = -24h@h
alert.track = 0

[Unidentified Attacker November 2018 - sysmon]
description = A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cyzfc.dat,*" CommandLine="*PointFunctionCall") | eval sigma_attack_tags="attack.execution attack.t1218.011" | eval sigma_title="Unidentified Attacker November 2018" | eval sigma_description="A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016."
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Malware HK University Campaign - winevent]
description = Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*C:\\Windows\\Temp*" OR Creator_Process_Name="*\\hpqhvind.exe*") New_Process_Name="C:\\ProgramData\\DRM*") OR (Creator_Process_Name="C:\\ProgramData\\DRM*" New_Process_Name="*\\wmplayer.exe") OR (Creator_Process_Name="*\\Test.exe" New_Process_Name="*\\wmplayer.exe") OR New_Process_Name="C:\\ProgramData\\DRM\\CLR\\CLR.exe" OR (Creator_Process_Name="C:\\ProgramData\\DRM\\Windows*" New_Process_Name="*\\SearchFilterHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.g0044" | eval sigma_title="Winnti Malware HK University Campaign" | eval sigma_description="Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Malware HK University Campaign - sysmon]
description = Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*C:\\Windows\\Temp*" OR ParentImage="*\\hpqhvind.exe*") Image="C:\\ProgramData\\DRM*") OR (ParentImage="C:\\ProgramData\\DRM*" Image="*\\wmplayer.exe") OR (ParentImage="*\\Test.exe" Image="*\\wmplayer.exe") OR Image="C:\\ProgramData\\DRM\\CLR\\CLR.exe" OR (ParentImage="C:\\ProgramData\\DRM\\Windows*" Image="*\\SearchFilterHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.g0044" | eval sigma_title="Winnti Malware HK University Campaign" | eval sigma_description="Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Pipemon Characteristics - winevent]
description = Detects specific process characteristics of Winnti Pipemon malware reported by ESET
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*setup0.exe -p*" OR (Process_Command_Line="*setup.exe*" (Process_Command_Line="*-x:0" OR Process_Command_Line="*-x:1" OR Process_Command_Line="*-x:2")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.g0044" | eval sigma_title="Winnti Pipemon Characteristics" | eval sigma_description="Detects specific process characteristics of Winnti Pipemon malware reported by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Pipemon Characteristics - sysmon]
description = Detects specific process characteristics of Winnti Pipemon malware reported by ESET
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*setup0.exe -p*" OR (CommandLine="*setup.exe*" (CommandLine="*-x:0" OR CommandLine="*-x:1" OR CommandLine="*-x:2")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.g0044" | eval sigma_title="Winnti Pipemon Characteristics" | eval sigma_description="Detects specific process characteristics of Winnti Pipemon malware reported by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operation Wocao Activity - winevent]
description = Detects activity mentioned in Operation Wocao report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*checkadmin.exe 127.0.0.1 -all*" OR Process_Command_Line="*netsh advfirewall firewall add rule name=powershell dir=in*" OR Process_Command_Line="*cmd /c powershell.exe -ep bypass -file c:\\s.ps1*" OR Process_Command_Line="*/tn win32times /f*" OR Process_Command_Line="*create win32times binPath=*" OR Process_Command_Line="*\\c$\\windows\\system32\\devmgr.dll*" OR Process_Command_Line="* -exec bypass -enc JgAg*" OR Process_Command_Line="*type *keepass\\KeePass.config.xml*" OR Process_Command_Line="*iie.exe iie.txt*" OR Process_Command_Line="*reg*query HKEY_CURRENT_USER\\Software\\*\\PuTTY\\Sessions\\*")) | eval sigma_attack_tags="attack.discovery attack.t1012 attack.defense_evasion attack.t1036.004 attack.t1027 attack.execution attack.t1053.005 attack.t1059.001" | eval sigma_title="Operation Wocao Activity" | eval sigma_description="Detects activity mentioned in Operation Wocao report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operation Wocao Activity - sysmon]
description = Detects activity mentioned in Operation Wocao report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*checkadmin.exe 127.0.0.1 -all*" OR CommandLine="*netsh advfirewall firewall add rule name=powershell dir=in*" OR CommandLine="*cmd /c powershell.exe -ep bypass -file c:\\s.ps1*" OR CommandLine="*/tn win32times /f*" OR CommandLine="*create win32times binPath=*" OR CommandLine="*\\c$\\windows\\system32\\devmgr.dll*" OR CommandLine="* -exec bypass -enc JgAg*" OR CommandLine="*type *keepass\\KeePass.config.xml*" OR CommandLine="*iie.exe iie.txt*" OR CommandLine="*reg*query HKEY_CURRENT_USER\\Software\\*\\PuTTY\\Sessions\\*")) | eval sigma_attack_tags="attack.discovery attack.t1012 attack.defense_evasion attack.t1036.004 attack.t1027 attack.execution attack.t1053.005 attack.t1059.001" | eval sigma_title="Operation Wocao Activity" | eval sigma_description="Detects activity mentioned in Operation Wocao report"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZxShell Malware - winevent]
description = Detects a ZxShell start by the called and well-known function name
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" (Process_Command_Line="*zxFunction*" OR Process_Command_Line="*RemoteDiskXXXXX*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.defense_evasion attack.t1218.011 attack.s0412 attack.g0001" | eval sigma_title="ZxShell Malware" | eval sigma_description="Detects a ZxShell start by the called and well-known function name"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZxShell Malware - sysmon]
description = Detects a ZxShell start by the called and well-known function name
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" (CommandLine="*zxFunction*" OR CommandLine="*RemoteDiskXXXXX*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.defense_evasion attack.t1218.011 attack.s0412 attack.g0001" | eval sigma_title="ZxShell Malware" | eval sigma_description="Detects a ZxShell start by the called and well-known function name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Arbitrary Shell Command Execution Via Settingcontent-Ms - winevent]
description = The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create 'shortcuts' to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Process_Command_Line="*.SettingContent-ms*" NOT (Process_Command_Line="*immersivecontrolpanel*")) | table ParentProcess,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1204 attack.t1566.001 attack.execution attack.initial_access" | eval sigma_title="Arbitrary Shell Command Execution Via Settingcontent-Ms" | eval sigma_description="The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create 'shortcuts' to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries."
dispatch.earliest_time = -24h@h
alert.track = 0

[Arbitrary Shell Command Execution Via Settingcontent-Ms - sysmon]
description = The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create 'shortcuts' to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CommandLine="*.SettingContent-ms*" NOT (CommandLine="*immersivecontrolpanel*")) | table ParentProcess,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1204 attack.t1566.001 attack.execution attack.initial_access" | eval sigma_title="Arbitrary Shell Command Execution Via Settingcontent-Ms" | eval sigma_description="The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create 'shortcuts' to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries."
dispatch.earliest_time = -24h@h
alert.track = 0

[Phishing Pattern ISO in Archive - winevent]
description = Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is open a signa of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\Winrar.exe" OR Creator_Process_Name="*\\7zFM.exe" OR Creator_Process_Name="*\\peazip.exe") (New_Process_Name="*\\isoburn.exe" OR New_Process_Name="*\\PowerISO.exe" OR New_Process_Name="*\\ImgBurn.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566" | eval sigma_title="Phishing Pattern ISO in Archive" | eval sigma_description="Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is open a signa of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Phishing Pattern ISO in Archive - sysmon]
description = Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is open a signa of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\Winrar.exe" OR ParentImage="*\\7zFM.exe" OR ParentImage="*\\peazip.exe") (Image="*\\isoburn.exe" OR Image="*\\PowerISO.exe" OR Image="*\\ImgBurn.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566" | eval sigma_title="Phishing Pattern ISO in Archive" | eval sigma_description="Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is open a signa of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Using AppVLP To Circumvent ASR File Path Rule - winevent]
description = Application Virtualization Utility is included with Microsoft Office. We are able to abuse 'AppVLP' to execute shell commands.
Normally, this binary is used for Application Virtualization, but we can use it as an abuse binary to circumvent the ASR file path rule folder
or to mark a file as a system file.

search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*appvlp.exe*" (Process_Command_Line="*cmd.exe*" OR Process_Command_Line="*powershell.exe*") (Process_Command_Line="*.sh*" OR Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bin*" OR Process_Command_Line="*.bat*" OR Process_Command_Line="*.cmd*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.msh*" OR Process_Command_Line="*.reg*" OR Process_Command_Line="*.scr*" OR Process_Command_Line="*.ps*" OR Process_Command_Line="*.vb*" OR Process_Command_Line="*.jar*" OR Process_Command_Line="*.pl*" OR Process_Command_Line="*.inf*")) | table ParentProcess,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1218 attack.defense_evasion attack.execution" | eval sigma_title="Using AppVLP To Circumvent ASR File Path Rule" | eval sigma_description="Application Virtualization Utility is included with Microsoft Office. We are able to abuse 'AppVLP' to execute shell commands.
Normally, this binary is used for Application Virtualization, but we can use it as an abuse binary to circumvent the ASR file path rule folder
or to mark a file as a system file.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Using AppVLP To Circumvent ASR File Path Rule - sysmon]
description = Application Virtualization Utility is included with Microsoft Office. We are able to abuse 'AppVLP' to execute shell commands.
Normally, this binary is used for Application Virtualization, but we can use it as an abuse binary to circumvent the ASR file path rule folder
or to mark a file as a system file.

search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*appvlp.exe*" (CommandLine="*cmd.exe*" OR CommandLine="*powershell.exe*") (CommandLine="*.sh*" OR CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bin*" OR CommandLine="*.bat*" OR CommandLine="*.cmd*" OR CommandLine="*.js*" OR CommandLine="*.msh*" OR CommandLine="*.reg*" OR CommandLine="*.scr*" OR CommandLine="*.ps*" OR CommandLine="*.vb*" OR CommandLine="*.jar*" OR CommandLine="*.pl*" OR CommandLine="*.inf*")) | table ParentProcess,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1218 attack.defense_evasion attack.execution" | eval sigma_title="Using AppVLP To Circumvent ASR File Path Rule" | eval sigma_description="Application Virtualization Utility is included with Microsoft Office. We are able to abuse 'AppVLP' to execute shell commands.
Normally, this binary is used for Application Virtualization, but we can use it as an abuse binary to circumvent the ASR file path rule folder
or to mark a file as a system file.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Atlassian Confluence CVE-2021-26084 - winevent]
description = Detects spawning of suspicious child processes by Atlassian Confluence server which may indicate successful exploitation of CVE-2021-26084
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\Atlassian\\Confluence\\jre\\bin\\java.exe" (Process_Command_Line="*cmd /c*" OR Process_Command_Line="*cmd /k*" OR Process_Command_Line="*powershell*" OR Process_Command_Line="*certutil*" OR Process_Command_Line="*curl*" OR Process_Command_Line="*whoami*" OR Process_Command_Line="*ipconfig*")) | eval sigma_attack_tags="attack.initial_access attack.execution attack.t1190 attack.t1059" | eval sigma_title="Atlassian Confluence CVE-2021-26084" | eval sigma_description="Detects spawning of suspicious child processes by Atlassian Confluence server which may indicate successful exploitation of CVE-2021-26084"
dispatch.earliest_time = -24h@h
alert.track = 0

[Atlassian Confluence CVE-2021-26084 - sysmon]
description = Detects spawning of suspicious child processes by Atlassian Confluence server which may indicate successful exploitation of CVE-2021-26084
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\Atlassian\\Confluence\\jre\\bin\\java.exe" (CommandLine="*cmd /c*" OR CommandLine="*cmd /k*" OR CommandLine="*powershell*" OR CommandLine="*certutil*" OR CommandLine="*curl*" OR CommandLine="*whoami*" OR CommandLine="*ipconfig*")) | eval sigma_attack_tags="attack.initial_access attack.execution attack.t1190 attack.t1059" | eval sigma_title="Atlassian Confluence CVE-2021-26084" | eval sigma_description="Detects spawning of suspicious child processes by Atlassian Confluence server which may indicate successful exploitation of CVE-2021-26084"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hiding Files with Attrib.exe - winevent]
description = Detects usage of attrib.exe to hide files from users.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\attrib.exe" Process_Command_Line="* +h *") NOT ((Process_Command_Line="*\\desktop.ini *" OR (Creator_Process_Name="*\\cmd.exe" Process_Command_Line="+R +H +S +A \\*.cui" ParentCommandLine="C:\\WINDOWS\\system32\\*.bat")))) | table Process_Command_Line,ParentCommandLine,Account_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1564.001" | eval sigma_title="Hiding Files with Attrib.exe" | eval sigma_description="Detects usage of attrib.exe to hide files from users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Hiding Files with Attrib.exe - sysmon]
description = Detects usage of attrib.exe to hide files from users.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\attrib.exe" CommandLine="* +h *") NOT ((CommandLine="*\\desktop.ini *" OR (ParentImage="*\\cmd.exe" CommandLine="+R +H +S +A \\*.cui" ParentCommandLine="C:\\WINDOWS\\system32\\*.bat")))) | table CommandLine,ParentCommandLine,User | eval sigma_attack_tags="attack.defense_evasion attack.t1564.001" | eval sigma_title="Hiding Files with Attrib.exe" | eval sigma_description="Detects usage of attrib.exe to hide files from users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Set Suspicious Files as System Files Using Attrib - winevent]
description = Detects usage of attrib with '+s' option to set suspcious script or executable as system files to hide them from users and make them unable to delete with simple rights. The rule limit the search to sepcific extensions and directories to avoid FP's
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\attrib.exe" Process_Command_Line="* +s*" (Process_Command_Line="* %*" OR Process_Command_Line="*\\Users\\Public\\*" OR Process_Command_Line="*\\AppData\\Local\\*" OR Process_Command_Line="*\\ProgramData\\*" OR Process_Command_Line="*\\Downloads\\*" OR Process_Command_Line="*\\Windows\\Temp\\*") (Process_Command_Line="*.bat*" OR Process_Command_Line="*.ps1*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.vbs*" OR Process_Command_Line="*.exe*")) NOT (Process_Command_Line="*\\Windows\\TEMP\\*" Process_Command_Line="*.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1564.001" | eval sigma_title="Set Suspicious Files as System Files Using Attrib" | eval sigma_description="Detects usage of attrib with '+s' option to set suspcious script or executable as system files to hide them from users and make them unable to delete with simple rights. The rule limit the search to sepcific extensions and directories to avoid FP's"
dispatch.earliest_time = -24h@h
alert.track = 0

[Set Suspicious Files as System Files Using Attrib - sysmon]
description = Detects usage of attrib with '+s' option to set suspcious script or executable as system files to hide them from users and make them unable to delete with simple rights. The rule limit the search to sepcific extensions and directories to avoid FP's
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\attrib.exe" CommandLine="* +s*" (CommandLine="* %*" OR CommandLine="*\\Users\\Public\\*" OR CommandLine="*\\AppData\\Local\\*" OR CommandLine="*\\ProgramData\\*" OR CommandLine="*\\Downloads\\*" OR CommandLine="*\\Windows\\Temp\\*") (CommandLine="*.bat*" OR CommandLine="*.ps1*" OR CommandLine="*.vbe*" OR CommandLine="*.vbs*" OR CommandLine="*.exe*")) NOT (CommandLine="*\\Windows\\TEMP\\*" CommandLine="*.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1564.001" | eval sigma_title="Set Suspicious Files as System Files Using Attrib" | eval sigma_description="Detects usage of attrib with '+s' option to set suspcious script or executable as system files to hide them from users and make them unable to delete with simple rights. The rule limit the search to sepcific extensions and directories to avoid FP's"
dispatch.earliest_time = -24h@h
alert.track = 0

[Automated Collection Command Prompt - winevent]
description = Once established within a system or network, an adversary may use automated techniques for collecting internal data.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*.doc*" OR Process_Command_Line="*.docx*" OR Process_Command_Line="*.xls*" OR Process_Command_Line="*.xlsx*" OR Process_Command_Line="*.ppt*" OR Process_Command_Line="*.pptx*" OR Process_Command_Line="*.rtf*" OR Process_Command_Line="*.pdf*" OR Process_Command_Line="*.txt*") ((Process_Command_Line="*dir *" Process_Command_Line="* /b *" Process_Command_Line="* /s *") OR (OriginalFileName="FINDSTR.EXE" (Process_Command_Line="* /e *" OR Process_Command_Line="* /si *")))) | eval sigma_attack_tags="attack.collection attack.t1119 attack.credential_access attack.t1552.001" | eval sigma_title="Automated Collection Command Prompt" | eval sigma_description="Once established within a system or network, an adversary may use automated techniques for collecting internal data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Automated Collection Command Prompt - sysmon]
description = Once established within a system or network, an adversary may use automated techniques for collecting internal data.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*.doc*" OR CommandLine="*.docx*" OR CommandLine="*.xls*" OR CommandLine="*.xlsx*" OR CommandLine="*.ppt*" OR CommandLine="*.pptx*" OR CommandLine="*.rtf*" OR CommandLine="*.pdf*" OR CommandLine="*.txt*") ((CommandLine="*dir *" CommandLine="* /b *" CommandLine="* /s *") OR (OriginalFileName="FINDSTR.EXE" (CommandLine="* /e *" OR CommandLine="* /si *")))) | eval sigma_attack_tags="attack.collection attack.t1119 attack.credential_access attack.t1552.001" | eval sigma_title="Automated Collection Command Prompt" | eval sigma_description="Once established within a system or network, an adversary may use automated techniques for collecting internal data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bad Opsec Defaults Sacrificial Processes With Improper Arguments - winevent]
description = Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\WerFault.exe" Process_Command_Line="*\\WerFault.exe") OR (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*\\rundll32.exe") OR (New_Process_Name="*\\regsvcs.exe" Process_Command_Line="*\\regsvcs.exe") OR (New_Process_Name="*\\regasm.exe" Process_Command_Line="*\\regasm.exe") OR (New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*\\regsvr32.exe"))) | table Creator_Process_Name,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Bad Opsec Defaults Sacrificial Processes With Improper Arguments" | eval sigma_description="Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bad Opsec Defaults Sacrificial Processes With Improper Arguments - sysmon]
description = Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\WerFault.exe" CommandLine="*\\WerFault.exe") OR (Image="*\\rundll32.exe" CommandLine="*\\rundll32.exe") OR (Image="*\\regsvcs.exe" CommandLine="*\\regsvcs.exe") OR (Image="*\\regasm.exe" CommandLine="*\\regasm.exe") OR (Image="*\\regsvr32.exe" CommandLine="*\\regsvr32.exe"))) | table ParentImage,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Bad Opsec Defaults Sacrificial Processes With Improper Arguments" | eval sigma_description="Detects attackers using tooling with bad opsec defaults e.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run, one trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded Powershell Invoke Cmdlets - winevent]
description = Detects base64 encoded powershell cmdlet invocation of known suspicious cmdlets
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*SQBuAHYAbwBrAGUALQBCAGwAbwBvAGQASABvAHUAbgBkA*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0AQgBsAG8AbwBkAEgAbwB1AG4AZA*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtAEIAbABvAG8AZABIAG8AdQBuAGQA*" OR Process_Command_Line="*SQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoA*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0ATQBpAG0AaQBrAGEAdAB6A*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAeg*" OR Process_Command_Line="*SQBuAHYAbwBrAGUALQBXAE0ASQBFAHgAZQBjA*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0AVwBNAEkARQB4AGUAYw*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtAFcATQBJAEUAeABlAGMA*")) | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Malicious Base64 Encoded Powershell Invoke Cmdlets" | eval sigma_description="Detects base64 encoded powershell cmdlet invocation of known suspicious cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded Powershell Invoke Cmdlets - sysmon]
description = Detects base64 encoded powershell cmdlet invocation of known suspicious cmdlets
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*SQBuAHYAbwBrAGUALQBCAGwAbwBvAGQASABvAHUAbgBkA*" OR CommandLine="*kAbgB2AG8AawBlAC0AQgBsAG8AbwBkAEgAbwB1AG4AZA*" OR CommandLine="*JAG4AdgBvAGsAZQAtAEIAbABvAG8AZABIAG8AdQBuAGQA*" OR CommandLine="*SQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoA*" OR CommandLine="*kAbgB2AG8AawBlAC0ATQBpAG0AaQBrAGEAdAB6A*" OR CommandLine="*JAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAeg*" OR CommandLine="*SQBuAHYAbwBrAGUALQBXAE0ASQBFAHgAZQBjA*" OR CommandLine="*kAbgB2AG8AawBlAC0AVwBNAEkARQB4AGUAYw*" OR CommandLine="*JAG4AdgBvAGsAZQAtAFcATQBJAEUAeABlAGMA*")) | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Malicious Base64 Encoded Powershell Invoke Cmdlets" | eval sigma_description="Detects base64 encoded powershell cmdlet invocation of known suspicious cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Base64 Encoded Listing of Shadowcopy - winevent]
description = Detects base64 encoded listing Win32_Shadowcopy
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*VwBpAG4AMwAyAF8AUwBoAGEAZABvAHcAYwBvAHAAeQAgAHwAIABGAG8AcgBFAGEAYwBoAC0ATwBiAGoAZQBjAHQA*" OR Process_Command_Line="*cAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkAIAB8ACAARgBvAHIARQBhAGMAaAAtAE8AYgBqAGUAYwB0A*" OR Process_Command_Line="*XAGkAbgAzADIAXwBTAGgAYQBkAG8AdwBjAG8AcAB5ACAAfAAgAEYAbwByAEUAYQBjAGgALQBPAGIAagBlAGMAdA*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Base64 Encoded Listing of Shadowcopy" | eval sigma_description="Detects base64 encoded listing Win32_Shadowcopy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Base64 Encoded Listing of Shadowcopy - sysmon]
description = Detects base64 encoded listing Win32_Shadowcopy
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*VwBpAG4AMwAyAF8AUwBoAGEAZABvAHcAYwBvAHAAeQAgAHwAIABGAG8AcgBFAGEAYwBoAC0ATwBiAGoAZQBjAHQA*" OR CommandLine="*cAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkAIAB8ACAARgBvAHIARQBhAGMAaAAtAE8AYgBqAGUAYwB0A*" OR CommandLine="*XAGkAbgAzADIAXwBTAGgAYQBkAG8AdwBjAG8AcAB5ACAAfAAgAEYAbwByAEUAYQBjAGgALQBPAGIAagBlAGMAdA*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Base64 Encoded Listing of Shadowcopy" | eval sigma_description="Detects base64 encoded listing Win32_Shadowcopy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Base64 Encoded Reflective Assembly Load - winevent]
description = Detects base64 encoded .NET reflective loading of Assembly
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA*" OR Process_Command_Line="*sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA*" OR Process_Command_Line="*bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA*" OR Process_Command_Line="*AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiAC*" OR Process_Command_Line="*BbAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgAp*" OR Process_Command_Line="*AWwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAK*" OR Process_Command_Line="*WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAKQ*" OR Process_Command_Line="*sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiACkA*" OR Process_Command_Line="*bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgApA*" OR Process_Command_Line="*WwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA*" OR Process_Command_Line="*sAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA*" OR Process_Command_Line="*bAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA*")) | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Base64 Encoded Reflective Assembly Load" | eval sigma_description="Detects base64 encoded .NET reflective loading of Assembly"
dispatch.earliest_time = -24h@h
alert.track = 0

[Base64 Encoded Reflective Assembly Load - sysmon]
description = Detects base64 encoded .NET reflective loading of Assembly
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA*" OR CommandLine="*sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA*" OR CommandLine="*bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA*" OR CommandLine="*AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiAC*" OR CommandLine="*BbAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgAp*" OR CommandLine="*AWwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAK*" OR CommandLine="*WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAKQ*" OR CommandLine="*sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiACkA*" OR CommandLine="*bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgApA*" OR CommandLine="*WwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA*" OR CommandLine="*sAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA*" OR CommandLine="*bAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA*")) | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Base64 Encoded Reflective Assembly Load" | eval sigma_description="Detects base64 encoded .NET reflective loading of Assembly"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download from Suspicious Domain - winevent]
description = Detects usage of bitsadmin downloading a file from a suspicious domain
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bitsadmin.exe" (Process_Command_Line="* /transfer *" OR Process_Command_Line="* /create *" OR Process_Command_Line="* /addfile *") (Process_Command_Line="*raw.githubusercontent.com*" OR Process_Command_Line="*gist.githubusercontent.com*" OR Process_Command_Line="*pastebin.com*" OR Process_Command_Line="*cdn.discordapp.com/attachments/*" OR Process_Command_Line="*mediafire.com*" OR Process_Command_Line="*mega.nz*" OR Process_Command_Line="*ddns.net*" OR Process_Command_Line="*.paste.ee*" OR Process_Command_Line="*.hastebin.com*" OR Process_Command_Line="*.ghostbin.co/*" OR Process_Command_Line="*ufile.io*" OR Process_Command_Line="*storage.googleapis.com*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download from Suspicious Domain" | eval sigma_description="Detects usage of bitsadmin downloading a file from a suspicious domain"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download from Suspicious Domain - sysmon]
description = Detects usage of bitsadmin downloading a file from a suspicious domain
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bitsadmin.exe" (CommandLine="* /transfer *" OR CommandLine="* /create *" OR CommandLine="* /addfile *") (CommandLine="*raw.githubusercontent.com*" OR CommandLine="*gist.githubusercontent.com*" OR CommandLine="*pastebin.com*" OR CommandLine="*cdn.discordapp.com/attachments/*" OR CommandLine="*mediafire.com*" OR CommandLine="*mega.nz*" OR CommandLine="*ddns.net*" OR CommandLine="*.paste.ee*" OR CommandLine="*.hastebin.com*" OR CommandLine="*.ghostbin.co/*" OR CommandLine="*ufile.io*" OR CommandLine="*storage.googleapis.com*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download from Suspicious Domain" | eval sigma_description="Detects usage of bitsadmin downloading a file from a suspicious domain"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download File with Suspicious Extension - winevent]
description = Detects usage of bitsadmin downloading a file with a suspicious extension
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bitsadmin.exe" (Process_Command_Line="* /transfer *" OR Process_Command_Line="* /create *" OR Process_Command_Line="* /addfile *") (Process_Command_Line="*.asax*" OR Process_Command_Line="*.ashx*" OR Process_Command_Line="*.asmx*" OR Process_Command_Line="*.asp*" OR Process_Command_Line="*.aspx*" OR Process_Command_Line="*.bat*" OR Process_Command_Line="*.cfm*" OR Process_Command_Line="*.cgi*" OR Process_Command_Line="*.chm*" OR Process_Command_Line="*.cmd*" OR Process_Command_Line="*.gif*" OR Process_Command_Line="*.jpeg*" OR Process_Command_Line="*.jpg*" OR Process_Command_Line="*.jsp*" OR Process_Command_Line="*.jspx*" OR Process_Command_Line="*.png*" OR Process_Command_Line="*.ps1*" OR Process_Command_Line="*.psm1*" OR Process_Command_Line="*.scf*" OR Process_Command_Line="*.sct*" OR Process_Command_Line="*.txt*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.vbs*" OR Process_Command_Line="*.war*" OR Process_Command_Line="*.wsf*" OR Process_Command_Line="*.wsh*" OR Process_Command_Line="*.zip*" OR Process_Command_Line="*.rar*" OR Process_Command_Line="*.dll*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download File with Suspicious Extension" | eval sigma_description="Detects usage of bitsadmin downloading a file with a suspicious extension"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download File with Suspicious Extension - sysmon]
description = Detects usage of bitsadmin downloading a file with a suspicious extension
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bitsadmin.exe" (CommandLine="* /transfer *" OR CommandLine="* /create *" OR CommandLine="* /addfile *") (CommandLine="*.asax*" OR CommandLine="*.ashx*" OR CommandLine="*.asmx*" OR CommandLine="*.asp*" OR CommandLine="*.aspx*" OR CommandLine="*.bat*" OR CommandLine="*.cfm*" OR CommandLine="*.cgi*" OR CommandLine="*.chm*" OR CommandLine="*.cmd*" OR CommandLine="*.gif*" OR CommandLine="*.jpeg*" OR CommandLine="*.jpg*" OR CommandLine="*.jsp*" OR CommandLine="*.jspx*" OR CommandLine="*.png*" OR CommandLine="*.ps1*" OR CommandLine="*.psm1*" OR CommandLine="*.scf*" OR CommandLine="*.sct*" OR CommandLine="*.txt*" OR CommandLine="*.vbe*" OR CommandLine="*.vbs*" OR CommandLine="*.war*" OR CommandLine="*.wsf*" OR CommandLine="*.wsh*" OR CommandLine="*.zip*" OR CommandLine="*.rar*" OR CommandLine="*.dll*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download File with Suspicious Extension" | eval sigma_description="Detects usage of bitsadmin downloading a file with a suspicious extension"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download File from IP - winevent]
description = Detects usage of bitsadmin downloading a file using an URL that contains an IP
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bitsadmin.exe" (Process_Command_Line="* /transfer *" OR Process_Command_Line="* /create *" OR Process_Command_Line="* /addfile *") (Process_Command_Line="*http://1*" OR Process_Command_Line="*http://2*" OR Process_Command_Line="*http://3*" OR Process_Command_Line="*http://4*" OR Process_Command_Line="*http://5*" OR Process_Command_Line="*http://6*" OR Process_Command_Line="*http://7*" OR Process_Command_Line="*http://8*" OR Process_Command_Line="*http://9*" OR Process_Command_Line="*https://1*" OR Process_Command_Line="*https://2*" OR Process_Command_Line="*https://3*" OR Process_Command_Line="*https://4*" OR Process_Command_Line="*https://5*" OR Process_Command_Line="*https://6*" OR Process_Command_Line="*https://7*" OR Process_Command_Line="*https://8*" OR Process_Command_Line="*https://9*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download File from IP" | eval sigma_description="Detects usage of bitsadmin downloading a file using an URL that contains an IP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download File from IP - sysmon]
description = Detects usage of bitsadmin downloading a file using an URL that contains an IP
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bitsadmin.exe" (CommandLine="* /transfer *" OR CommandLine="* /create *" OR CommandLine="* /addfile *") (CommandLine="*http://1*" OR CommandLine="*http://2*" OR CommandLine="*http://3*" OR CommandLine="*http://4*" OR CommandLine="*http://5*" OR CommandLine="*http://6*" OR CommandLine="*http://7*" OR CommandLine="*http://8*" OR CommandLine="*http://9*" OR CommandLine="*https://1*" OR CommandLine="*https://2*" OR CommandLine="*https://3*" OR CommandLine="*https://4*" OR CommandLine="*https://5*" OR CommandLine="*https://6*" OR CommandLine="*https://7*" OR CommandLine="*https://8*" OR CommandLine="*https://9*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download File from IP" | eval sigma_description="Detects usage of bitsadmin downloading a file using an URL that contains an IP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download to Suspicious Target Folder - winevent]
description = Detects usage of bitsadmin downloading a file to a suspicious target folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bitsadmin.exe" (Process_Command_Line="* /transfer *" OR Process_Command_Line="* /create *" OR Process_Command_Line="* /addfile *") (Process_Command_Line="*C:\\Users\\Public\\*" OR Process_Command_Line="*%public%*" OR Process_Command_Line="*\\Desktop\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download to Suspicious Target Folder" | eval sigma_description="Detects usage of bitsadmin downloading a file to a suspicious target folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download to Suspicious Target Folder - sysmon]
description = Detects usage of bitsadmin downloading a file to a suspicious target folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bitsadmin.exe" (CommandLine="* /transfer *" OR CommandLine="* /create *" OR CommandLine="* /addfile *") (CommandLine="*C:\\Users\\Public\\*" OR CommandLine="*%public%*" OR CommandLine="*\\Desktop\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download to Suspicious Target Folder" | eval sigma_description="Detects usage of bitsadmin downloading a file to a suspicious target folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download to Uncommon Target Folder - winevent]
description = Detects usage of bitsadmin downloading a file to uncommon target folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bitsadmin.exe" (Process_Command_Line="* /transfer *" OR Process_Command_Line="* /create *" OR Process_Command_Line="* /addfile *") (Process_Command_Line="*C:\\Windows\\Temp\\*" OR Process_Command_Line="*%temp%*" OR Process_Command_Line="*C:\\ProgramData\\*" OR Process_Command_Line="*%ProgramData%*" OR Process_Command_Line="*\\AppData\\Local\\*" OR Process_Command_Line="*%AppData%*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download to Uncommon Target Folder" | eval sigma_description="Detects usage of bitsadmin downloading a file to uncommon target folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download to Uncommon Target Folder - sysmon]
description = Detects usage of bitsadmin downloading a file to uncommon target folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bitsadmin.exe" (CommandLine="* /transfer *" OR CommandLine="* /create *" OR CommandLine="* /addfile *") (CommandLine="*C:\\Windows\\Temp\\*" OR CommandLine="*%temp%*" OR CommandLine="*C:\\ProgramData\\*" OR CommandLine="*%ProgramData%*" OR CommandLine="*\\AppData\\Local\\*" OR CommandLine="*%AppData%*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download to Uncommon Target Folder" | eval sigma_description="Detects usage of bitsadmin downloading a file to uncommon target folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download - winevent]
description = Detects usage of bitsadmin downloading a file
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\bitsadmin.exe" (Process_Command_Line="* /create *" OR Process_Command_Line="* /addfile *") Process_Command_Line="*http*") OR (New_Process_Name="*\\bitsadmin.exe" Process_Command_Line="* /transfer *") OR Process_Command_Line="*copy bitsadmin.exe*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download" | eval sigma_description="Detects usage of bitsadmin downloading a file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download - sysmon]
description = Detects usage of bitsadmin downloading a file
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\bitsadmin.exe" (CommandLine="* /create *" OR CommandLine="* /addfile *") CommandLine="*http*") OR (Image="*\\bitsadmin.exe" CommandLine="* /transfer *") OR CommandLine="*copy bitsadmin.exe*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190 attack.t1036.003" | eval sigma_title="Bitsadmin Download" | eval sigma_description="Detects usage of bitsadmin downloading a file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification of Boot Configuration - winevent]
description = Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\bcdedit.exe" Process_Command_Line="*set*") ((Process_Command_Line="*bootstatuspolicy*" Process_Command_Line="*ignoreallfailures*") OR (Process_Command_Line="*recoveryenabled*" Process_Command_Line="*no*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Modification of Boot Configuration" | eval sigma_description="Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique."
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification of Boot Configuration - sysmon]
description = Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\bcdedit.exe" CommandLine="*set*") ((CommandLine="*bootstatuspolicy*" CommandLine="*ignoreallfailures*") OR (CommandLine="*recoveryenabled*" CommandLine="*no*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Modification of Boot Configuration" | eval sigma_description="Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique."
dispatch.earliest_time = -24h@h
alert.track = 0

[SquiblyTwo - winevent]
description = Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\wmic.exe" Process_Command_Line="*wmic*" Process_Command_Line="*format*" Process_Command_Line="*http*") OR (((Imphash="1B1A3F43BF37B5BFE60751F2EE2F326E" OR Imphash="37777A96245A3C74EB217308F3546F4C" OR Imphash="9D87C9D67CE724033C0B40CC4CA1B206") OR (Hashes="*IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E*" OR Hashes="*IMPHASH=37777A96245A3C74EB217308F3546F4C*" OR Hashes="*IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206*")) (Process_Command_Line="*format:*" Process_Command_Line="*http*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1047 attack.t1220 attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="SquiblyTwo" | eval sigma_description="Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash"
dispatch.earliest_time = -24h@h
alert.track = 0

[SquiblyTwo - sysmon]
description = Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\wmic.exe" CommandLine="*wmic*" CommandLine="*format*" CommandLine="*http*") OR (((Imphash="1B1A3F43BF37B5BFE60751F2EE2F326E" OR Imphash="37777A96245A3C74EB217308F3546F4C" OR Imphash="9D87C9D67CE724033C0B40CC4CA1B206") OR (Hashes="*IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E*" OR Hashes="*IMPHASH=37777A96245A3C74EB217308F3546F4C*" OR Hashes="*IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206*")) (CommandLine="*format:*" CommandLine="*http*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1047 attack.t1220 attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="SquiblyTwo" | eval sigma_description="Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash"
dispatch.earliest_time = -24h@h
alert.track = 0

[F-Secure C3 Load by Rundll32 - winevent]
description = F-Secure C3 produces DLLs with a default exported StartNodeRelay function.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*.dll*" Process_Command_Line="*StartNodeRelay*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="F-Secure C3 Load by Rundll32" | eval sigma_description="F-Secure C3 produces DLLs with a default exported StartNodeRelay function."
dispatch.earliest_time = -24h@h
alert.track = 0

[F-Secure C3 Load by Rundll32 - sysmon]
description = F-Secure C3 produces DLLs with a default exported StartNodeRelay function.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*.dll*" CommandLine="*StartNodeRelay*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="F-Secure C3 Load by Rundll32" | eval sigma_description="F-Secure C3 produces DLLs with a default exported StartNodeRelay function."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Load DLL via CertOC.exe - winevent]
description = Detects when a user installs certificates by using CertOC.exe to loads the target DLL file.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\certoc.exe" OR OriginalFileName="CertOC.exe") (Process_Command_Line="*-LoadDLL*" Process_Command_Line="*.dll*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Load DLL via CertOC.exe" | eval sigma_description="Detects when a user installs certificates by using CertOC.exe to loads the target DLL file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Load DLL via CertOC.exe - sysmon]
description = Detects when a user installs certificates by using CertOC.exe to loads the target DLL file.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\certoc.exe" OR OriginalFileName="CertOC.exe") (CommandLine="*-LoadDLL*" CommandLine="*.dll*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Load DLL via CertOC.exe" | eval sigma_description="Detects when a user installs certificates by using CertOC.exe to loads the target DLL file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association To Executable - winevent]
description = Detects when a program changes the default file association of any extension to an executable
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*cmd*" Process_Command_Line="* /c *" Process_Command_Line="*assoc *" Process_Command_Line="*exefile*") NOT (Process_Command_Line="*.exe=exefile*")) | eval sigma_attack_tags="attack.persistence attack.t1546.001" | eval sigma_title="Change Default File Association To Executable" | eval sigma_description="Detects when a program changes the default file association of any extension to an executable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association To Executable - sysmon]
description = Detects when a program changes the default file association of any extension to an executable
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*cmd*" CommandLine="* /c *" CommandLine="*assoc *" CommandLine="*exefile*") NOT (CommandLine="*.exe=exefile*")) | eval sigma_attack_tags="attack.persistence attack.t1546.001" | eval sigma_title="Change Default File Association To Executable" | eval sigma_description="Detects when a program changes the default file association of any extension to an executable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association - winevent]
description = When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cmd*" Process_Command_Line="*/c*" Process_Command_Line="*assoc*") | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.001" | eval sigma_title="Change Default File Association" | eval sigma_description="When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association - sysmon]
description = When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cmd*" CommandLine="*/c*" CommandLine="*assoc*") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.001" | eval sigma_title="Change Default File Association" | eval sigma_description="When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell ChromeLoader Browser Hijacker - winevent]
description = Detects PowerShell spawning chrome.exe containing load-extension and AppData\Local in the process command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\chrome.exe" Creator_Process_Name="*\\powershell.exe" Process_Command_Line="*--load-extension=*" Process_Command_Line="*\\AppData\\Local\\*") | eval sigma_attack_tags="attack.persistence attack.t1176" | eval sigma_title="Powershell ChromeLoader Browser Hijacker" | eval sigma_description="Detects PowerShell spawning chrome.exe containing load-extension and AppData\Local in the process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell ChromeLoader Browser Hijacker - sysmon]
description = Detects PowerShell spawning chrome.exe containing load-extension and AppData\Local in the process command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\chrome.exe" ParentImage="*\\powershell.exe" CommandLine="*--load-extension=*" CommandLine="*\\AppData\\Local\\*") | eval sigma_attack_tags="attack.persistence attack.t1176" | eval sigma_title="Powershell ChromeLoader Browser Hijacker" | eval sigma_description="Detects PowerShell spawning chrome.exe containing load-extension and AppData\Local in the process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[CleanWipe Usage - winevent]
description = Detects the use of CleanWipe a tool usually used to delete Symantec antivirus.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\SepRemovalToolNative_x64.exe" OR (New_Process_Name="*\\CATClean.exe" Process_Command_Line="*--uninstall*") OR (New_Process_Name="*\\NetInstaller.exe" Process_Command_Line="*-r*") OR (New_Process_Name="*\\WFPUnins.exe" Process_Command_Line="*/uninstall*" Process_Command_Line="*/enterprise*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="CleanWipe Usage" | eval sigma_description="Detects the use of CleanWipe a tool usually used to delete Symantec antivirus."
dispatch.earliest_time = -24h@h
alert.track = 0

[CleanWipe Usage - sysmon]
description = Detects the use of CleanWipe a tool usually used to delete Symantec antivirus.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\SepRemovalToolNative_x64.exe" OR (Image="*\\CATClean.exe" CommandLine="*--uninstall*") OR (Image="*\\NetInstaller.exe" CommandLine="*-r*") OR (Image="*\\WFPUnins.exe" CommandLine="*/uninstall*" CommandLine="*/enterprise*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="CleanWipe Usage" | eval sigma_description="Detects the use of CleanWipe a tool usually used to delete Symantec antivirus."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of CLIP - winevent]
description = Adversaries may collect data stored in the clipboard from users copying information within or between applications.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") OriginalFileName="clip.exe") | eval sigma_attack_tags="attack.collection attack.t1115" | eval sigma_title="Use of CLIP" | eval sigma_description="Adversaries may collect data stored in the clipboard from users copying information within or between applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of CLIP - sysmon]
description = Adversaries may collect data stored in the clipboard from users copying information within or between applications.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") OriginalFileName="clip.exe") | eval sigma_attack_tags="attack.collection attack.t1115" | eval sigma_title="Use of CLIP" | eval sigma_description="Adversaries may collect data stored in the clipboard from users copying information within or between applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Cmd Delete File - winevent]
description = Adversaries may delete files left behind by the actions of their intrusion activity.
Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint. 

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*del *" Process_Command_Line="*/f*") OR (Process_Command_Line="*rmdir*" Process_Command_Line="*/s*" Process_Command_Line="*/q*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Windows Cmd Delete File" | eval sigma_description="Adversaries may delete files left behind by the actions of their intrusion activity.
Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Cmd Delete File - sysmon]
description = Adversaries may delete files left behind by the actions of their intrusion activity.
Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint. 

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*del *" CommandLine="*/f*") OR (CommandLine="*rmdir*" CommandLine="*/s*" CommandLine="*/q*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Windows Cmd Delete File" | eval sigma_description="Adversaries may delete files left behind by the actions of their intrusion activity.
Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint. 
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Dosfuscation Character in Commandline - winevent]
description = Posssible Payload Obfuscation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*^^*" OR Process_Command_Line="*,;,*" OR Process_Command_Line="*%COMSPEC:~*" OR Process_Command_Line="* s^et *" OR Process_Command_Line="* s^e^t *" OR Process_Command_Line="* se^t *")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Suspicious Dosfuscation Character in Commandline" | eval sigma_description="Posssible Payload Obfuscation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Dosfuscation Character in Commandline - sysmon]
description = Posssible Payload Obfuscation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*^^*" OR CommandLine="*,;,*" OR CommandLine="*%COMSPEC:~*" OR CommandLine="* s^et *" OR CommandLine="* s^e^t *" OR CommandLine="* se^t *")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Suspicious Dosfuscation Character in Commandline" | eval sigma_description="Posssible Payload Obfuscation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Redirect Output in CommandLine - winevent]
description = Use '>' to redicrect information in commandline
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Process_Command_Line="*>*") | eval sigma_attack_tags="attack.discovery attack.t1082" | eval sigma_title="Redirect Output in CommandLine" | eval sigma_description="Use '>' to redicrect information in commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Redirect Output in CommandLine - sysmon]
description = Use '>' to redicrect information in commandline
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" CommandLine="*>*") | eval sigma_attack_tags="attack.discovery attack.t1082" | eval sigma_title="Redirect Output in CommandLine" | eval sigma_description="Use '>' to redicrect information in commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmdkey Cached Credentials Recon - winevent]
description = Detects usage of cmdkey to look for cached credentials
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\cmdkey.exe" OR OriginalFileName="cmdkey.exe") (Process_Command_Line="* /l*" OR Process_Command_Line="* -l*")) | table Process_Command_Line,ParentCommandLine,Account_Name | eval sigma_attack_tags="attack.credential_access attack.t1003.005" | eval sigma_title="Cmdkey Cached Credentials Recon" | eval sigma_description="Detects usage of cmdkey to look for cached credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmdkey Cached Credentials Recon - sysmon]
description = Detects usage of cmdkey to look for cached credentials
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\cmdkey.exe" OR OriginalFileName="cmdkey.exe") (CommandLine="* /l*" OR CommandLine="* -l*")) | table CommandLine,ParentCommandLine,User | eval sigma_attack_tags="attack.credential_access attack.t1003.005" | eval sigma_title="Cmdkey Cached Credentials Recon" | eval sigma_description="Detects usage of cmdkey to look for cached credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP UAC Bypass via COM Object Access - winevent]
description = Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\DllHost.exe" (IntegrityLevel="High" OR IntegrityLevel="System") (ParentCommandLine="* /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}*" OR ParentCommandLine="* /Processid:{3E000D72-A845-4CD9-BD83-80C07C3B881F}*" OR ParentCommandLine="* /Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}*" OR ParentCommandLine="* /Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}*" OR ParentCommandLine="* /Processid:{E9495B87-D950-4AB5-87A5-FF6D70BF3E90}*")) | table Process_Command_Line,ParentCommandLine,Hashes | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1218.003 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP UAC Bypass via COM Object Access" | eval sigma_description="Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP UAC Bypass via COM Object Access - sysmon]
description = Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\DllHost.exe" (IntegrityLevel="High" OR IntegrityLevel="System") (ParentCommandLine="* /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}*" OR ParentCommandLine="* /Processid:{3E000D72-A845-4CD9-BD83-80C07C3B881F}*" OR ParentCommandLine="* /Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}*" OR ParentCommandLine="* /Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}*" OR ParentCommandLine="* /Processid:{E9495B87-D950-4AB5-87A5-FF6D70BF3E90}*")) | table CommandLine,ParentCommandLine,Hashes | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002 attack.t1218.003 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP UAC Bypass via COM Object Access" | eval sigma_description="Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP Execution Process Creation - winevent]
description = Detects various indicators of Microsoft Connection Manager Profile Installer execution
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\cmstp.exe") | table Process_Command_Line,ParentCommandLine,NewValue | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.003 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP Execution Process Creation" | eval sigma_description="Detects various indicators of Microsoft Connection Manager Profile Installer execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP Execution Process Creation - sysmon]
description = Detects various indicators of Microsoft Connection Manager Profile Installer execution
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\cmstp.exe") | table CommandLine,ParentCommandLine,Details | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.003 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP Execution Process Creation" | eval sigma_description="Detects various indicators of Microsoft Connection Manager Profile Installer execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operator Bloopers Cobalt Strike Commands - winevent]
description = Detects use of Cobalt Strike commands accidentally entered in the CMD shell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="cmd.exe*" OR Process_Command_Line="c:\\windows\\system32\\cmd.exe*") (Process_Command_Line="*psinject*" OR Process_Command_Line="*spawnas*" OR Process_Command_Line="*make_token*" OR Process_Command_Line="*remote-exec*" OR Process_Command_Line="*rev2self*" OR Process_Command_Line="*dcsync*" OR Process_Command_Line="*logonpasswords*" OR Process_Command_Line="*execute-assembly*" OR Process_Command_Line="*getsystem*") New_Process_Name="*\\cmd.exe") | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Operator Bloopers Cobalt Strike Commands" | eval sigma_description="Detects use of Cobalt Strike commands accidentally entered in the CMD shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operator Bloopers Cobalt Strike Commands - sysmon]
description = Detects use of Cobalt Strike commands accidentally entered in the CMD shell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="cmd.exe*" OR CommandLine="c:\\windows\\system32\\cmd.exe*") (CommandLine="*psinject*" OR CommandLine="*spawnas*" OR CommandLine="*make_token*" OR CommandLine="*remote-exec*" OR CommandLine="*rev2self*" OR CommandLine="*dcsync*" OR CommandLine="*logonpasswords*" OR CommandLine="*execute-assembly*" OR CommandLine="*getsystem*") Image="*\\cmd.exe") | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Operator Bloopers Cobalt Strike Commands" | eval sigma_description="Detects use of Cobalt Strike commands accidentally entered in the CMD shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operator Bloopers Cobalt Strike Modules - winevent]
description = Detects use of Cobalt Strike module commands accidentally entered in the CMD shell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="cmd.exe*" OR Process_Command_Line="c:\\windows\\system32\\cmd.exe*") (Process_Command_Line="*Invoke-UserHunter*" OR Process_Command_Line="*Invoke-ShareFinder*" OR Process_Command_Line="*Invoke-Kerberoast*" OR Process_Command_Line="*Invoke-SMBAutoBrute*" OR Process_Command_Line="*Invoke-Nightmare*" OR Process_Command_Line="*zerologon*" OR Process_Command_Line="*av_query*") New_Process_Name="*\\cmd.exe") | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Operator Bloopers Cobalt Strike Modules" | eval sigma_description="Detects use of Cobalt Strike module commands accidentally entered in the CMD shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operator Bloopers Cobalt Strike Modules - sysmon]
description = Detects use of Cobalt Strike module commands accidentally entered in the CMD shell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="cmd.exe*" OR CommandLine="c:\\windows\\system32\\cmd.exe*") (CommandLine="*Invoke-UserHunter*" OR CommandLine="*Invoke-ShareFinder*" OR CommandLine="*Invoke-Kerberoast*" OR CommandLine="*Invoke-SMBAutoBrute*" OR CommandLine="*Invoke-Nightmare*" OR CommandLine="*zerologon*" OR CommandLine="*av_query*") Image="*\\cmd.exe") | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Operator Bloopers Cobalt Strike Modules" | eval sigma_description="Detects use of Cobalt Strike module commands accidentally entered in the CMD shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Load by Rundll32 - winevent]
description = Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*.dll*" (Process_Command_Line="* StartW" OR Process_Command_Line="*,StartW")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="CobaltStrike Load by Rundll32" | eval sigma_description="Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line."
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Load by Rundll32 - sysmon]
description = Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*.dll*" (CommandLine="* StartW" OR CommandLine="*,StartW")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="CobaltStrike Load by Rundll32" | eval sigma_description="Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line."
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Process Patterns - winevent]
description = Detects process patterns found in Cobalt Strike beacon activity (see reference for more details) and also cases in which a China Chopper like webshell is used to run whoami
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\cmd.exe /C whoami*" Creator_Process_Name="C:\\Temp*") OR (Process_Command_Line="*conhost.exe 0xffffffff -ForceV1*" (ParentCommandLine="*/C whoami*" OR ParentCommandLine="*cmd.exe /C echo*" OR ParentCommandLine="* > \\\\.\\pipe*")) OR ((Process_Command_Line="*cmd.exe /c echo*" OR Process_Command_Line="*> \\\\.\\pipe*" OR Process_Command_Line="*\\whoami.exe*") Creator_Process_Name="*\\dllhost.exe") OR (New_Process_Name="*\\cmd.exe" Creator_Process_Name="*\\runonce.exe" ParentCommandLine="*\\runonce.exe"))) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="CobaltStrike Process Patterns" | eval sigma_description="Detects process patterns found in Cobalt Strike beacon activity (see reference for more details) and also cases in which a China Chopper like webshell is used to run whoami"
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Process Patterns - sysmon]
description = Detects process patterns found in Cobalt Strike beacon activity (see reference for more details) and also cases in which a China Chopper like webshell is used to run whoami
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\cmd.exe /C whoami*" ParentImage="C:\\Temp*") OR (CommandLine="*conhost.exe 0xffffffff -ForceV1*" (ParentCommandLine="*/C whoami*" OR ParentCommandLine="*cmd.exe /C echo*" OR ParentCommandLine="* > \\\\.\\pipe*")) OR ((CommandLine="*cmd.exe /c echo*" OR CommandLine="*> \\\\.\\pipe*" OR CommandLine="*\\whoami.exe*") ParentImage="*\\dllhost.exe") OR (Image="*\\cmd.exe" ParentImage="*\\runonce.exe" ParentCommandLine="*\\runonce.exe"))) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="CobaltStrike Process Patterns" | eval sigma_description="Detects process patterns found in Cobalt Strike beacon activity (see reference for more details) and also cases in which a China Chopper like webshell is used to run whoami"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Path Traversal Evasion - winevent]
description = Detects the attempt to evade or obfuscate the executed command on the CommandLine using bogus path traversal
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\Windows\\*" (Process_Command_Line="*\\..\\Windows\\*" OR Process_Command_Line="*\\..\\System32\\*" OR Process_Command_Line="*\\..\\..\\*")) OR Process_Command_Line="*.exe\\..\\*") NOT (Process_Command_Line="*\\Google\\Drive\\googledrivesync.exe\\..\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Command Line Path Traversal Evasion" | eval sigma_description="Detects the attempt to evade or obfuscate the executed command on the CommandLine using bogus path traversal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Path Traversal Evasion - sysmon]
description = Detects the attempt to evade or obfuscate the executed command on the CommandLine using bogus path traversal
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Windows\\*" (CommandLine="*\\..\\Windows\\*" OR CommandLine="*\\..\\System32\\*" OR CommandLine="*\\..\\..\\*")) OR CommandLine="*.exe\\..\\*") NOT (CommandLine="*\\Google\\Drive\\googledrivesync.exe\\..\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Command Line Path Traversal Evasion" | eval sigma_description="Detects the attempt to evade or obfuscate the executed command on the CommandLine using bogus path traversal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmd.exe CommandLine Path Traversal - winevent]
description = detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (ParentCommandLine="*cmd*" ParentCommandLine="*/c*" Process_Command_Line="*/../../*") NOT ((Process_Command_Line="*\\Tasktop\\keycloak\\bin\\/../../jre\\bin\\java*"))) | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Cmd.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmd.exe CommandLine Path Traversal - sysmon]
description = detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentCommandLine="*cmd*" ParentCommandLine="*/c*" CommandLine="*/../../*") NOT ((CommandLine="*\\Tasktop\\keycloak\\bin\\/../../jre\\bin\\java*"))) | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Cmd.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conhost.exe CommandLine Path Traversal - winevent]
description = detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="*conhost*" Process_Command_Line="*/../../*") | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Conhost.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conhost.exe CommandLine Path Traversal - sysmon]
description = detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="*conhost*" CommandLine="*/../../*") | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Conhost.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti Ransomware Execution - winevent]
description = Conti ransomware command line ioc
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-m *" Process_Command_Line="*-net *" Process_Command_Line="*-size *" Process_Command_Line="*-nomutex *" Process_Command_Line="*-p \\\*" Process_Command_Line="*$*") | eval sigma_attack_tags="attack.impact attack.s0575 attack.t1486" | eval sigma_title="Conti Ransomware Execution" | eval sigma_description="Conti ransomware command line ioc"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti Ransomware Execution - sysmon]
description = Conti ransomware command line ioc
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-m *" CommandLine="*-net *" CommandLine="*-size *" CommandLine="*-nomutex *" CommandLine="*-p \\\*" CommandLine="*$*") | eval sigma_attack_tags="attack.impact attack.s0575 attack.t1486" | eval sigma_title="Conti Ransomware Execution" | eval sigma_description="Conti ransomware command line ioc"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti Backup Database - winevent]
description = Detects a command used by conti to dump database
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*sqlcmd *" OR Process_Command_Line="*sqlcmd.exe*") Process_Command_Line="* -S localhost *" (Process_Command_Line="*sys.sysprocesses*" OR Process_Command_Line="*master.dbo.sysdatabases*" OR Process_Command_Line="*BACKUP DATABASE*")) | eval sigma_attack_tags="attack.collection attack.t1005" | eval sigma_title="Conti Backup Database" | eval sigma_description="Detects a command used by conti to dump database"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti Backup Database - sysmon]
description = Detects a command used by conti to dump database
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*sqlcmd *" OR CommandLine="*sqlcmd.exe*") CommandLine="* -S localhost *" (CommandLine="*sys.sysprocesses*" OR CommandLine="*master.dbo.sysdatabases*" OR CommandLine="*BACKUP DATABASE*")) | eval sigma_attack_tags="attack.collection attack.t1005" | eval sigma_title="Conti Backup Database" | eval sigma_description="Detects a command used by conti to dump database"
dispatch.earliest_time = -24h@h
alert.track = 0

[Control Panel Items - winevent]
description = Detects the malicious use of a control panel item
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*.cpl" NOT ((Process_Command_Line="*\\System32\\*" OR Process_Command_Line="*%System%*"))) NOT (Process_Command_Line="*regsvr32 *" Process_Command_Line="* /s *" Process_Command_Line="*igfxCPL.cpl*")) OR (New_Process_Name="*\\reg.exe" Process_Command_Line="*add*" Process_Command_Line="*CurrentVersion\\Control Panel\\CPLs*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.002 attack.persistence attack.t1546" | eval sigma_title="Control Panel Items" | eval sigma_description="Detects the malicious use of a control panel item"
dispatch.earliest_time = -24h@h
alert.track = 0

[Control Panel Items - sysmon]
description = Detects the malicious use of a control panel item
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*.cpl" NOT ((CommandLine="*\\System32\\*" OR CommandLine="*%System%*"))) NOT (CommandLine="*regsvr32 *" CommandLine="* /s *" CommandLine="*igfxCPL.cpl*")) OR (Image="*\\reg.exe" CommandLine="*add*" CommandLine="*CurrentVersion\\Control Panel\\CPLs*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.002 attack.persistence attack.t1546" | eval sigma_title="Control Panel Items" | eval sigma_description="Detects the malicious use of a control panel item"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copying Sensitive Files with Credential Data - winevent]
description = Files with well-known filenames (sensitive files with credential data) copying
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\esentutl.exe" (Process_Command_Line="*vss*" OR Process_Command_Line="* /m *" OR Process_Command_Line="* /y *")) OR (Process_Command_Line="*\\windows\\ntds\\ntds.dit*" OR Process_Command_Line="*\\config\\sam*" OR Process_Command_Line="*\\config\\security*" OR Process_Command_Line="*\\config\\system *" OR Process_Command_Line="*\\repair\\sam*" OR Process_Command_Line="*\\repair\\system*" OR Process_Command_Line="*\\repair\\security*" OR Process_Command_Line="*\\config\\RegBack\\sam*" OR Process_Command_Line="*\\config\\RegBack\\system*" OR Process_Command_Line="*\\config\\RegBack\\security*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003 car.2013-07-001 attack.s0404" | eval sigma_title="Copying Sensitive Files with Credential Data" | eval sigma_description="Files with well-known filenames (sensitive files with credential data) copying"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copying Sensitive Files with Credential Data - sysmon]
description = Files with well-known filenames (sensitive files with credential data) copying
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\esentutl.exe" (CommandLine="*vss*" OR CommandLine="* /m *" OR CommandLine="* /y *")) OR (CommandLine="*\\windows\\ntds\\ntds.dit*" OR CommandLine="*\\config\\sam*" OR CommandLine="*\\config\\security*" OR CommandLine="*\\config\\system *" OR CommandLine="*\\repair\\sam*" OR CommandLine="*\\repair\\system*" OR CommandLine="*\\repair\\security*" OR CommandLine="*\\config\\RegBack\\sam*" OR CommandLine="*\\config\\RegBack\\system*" OR CommandLine="*\\config\\RegBack\\security*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003 car.2013-07-001 attack.s0404" | eval sigma_title="Copying Sensitive Files with Credential Data" | eval sigma_description="Files with well-known filenames (sensitive files with credential data) copying"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Process Patterns - winevent]
description = Detects suspicious process patterns found in logs when CrackMapExec is used
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*cmd.exe /c *" Process_Command_Line="*tasklist /fi *" Process_Command_Line="*Imagename eq lsass.exe*" (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*")) OR (Process_Command_Line="*do rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump*" Process_Command_Line="*\\Windows\\Temp\\*" Process_Command_Line="* full*" Process_Command_Line="*%%B*") OR (Process_Command_Line="*tasklist /v /fo csv*" Process_Command_Line="*findstr /i \"lsass\"*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="CrackMapExec Process Patterns" | eval sigma_description="Detects suspicious process patterns found in logs when CrackMapExec is used"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Process Patterns - sysmon]
description = Detects suspicious process patterns found in logs when CrackMapExec is used
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*cmd.exe /c *" CommandLine="*tasklist /fi *" CommandLine="*Imagename eq lsass.exe*" (User="*AUTHORI*" OR User="*AUTORI*")) OR (CommandLine="*do rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump*" CommandLine="*\\Windows\\Temp\\*" CommandLine="* full*" CommandLine="*%%B*") OR (CommandLine="*tasklist /v /fo csv*" CommandLine="*findstr /i \"lsass\"*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="CrackMapExec Process Patterns" | eval sigma_description="Detects suspicious process patterns found in logs when CrackMapExec is used"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mavinject Inject DLL Into Running Process - winevent]
description = Injects arbitrary DLL into running process specified by process ID. Requires Windows 10.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /INJECTRUNNING*" Process_Command_Line="*.dll*" (OriginalFileName="mavinject32.exe" OR OriginalFileName="mavinject64.exe")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.collection attack.t1218.013 attack.t1056.004" | eval sigma_title="Mavinject Inject DLL Into Running Process" | eval sigma_description="Injects arbitrary DLL into running process specified by process ID. Requires Windows 10."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mavinject Inject DLL Into Running Process - sysmon]
description = Injects arbitrary DLL into running process specified by process ID. Requires Windows 10.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /INJECTRUNNING*" CommandLine="*.dll*" (OriginalFileName="mavinject32.exe" OR OriginalFileName="mavinject64.exe")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.collection attack.t1218.013 attack.t1056.004" | eval sigma_title="Mavinject Inject DLL Into Running Process" | eval sigma_description="Injects arbitrary DLL into running process specified by process ID. Requires Windows 10."
dispatch.earliest_time = -24h@h
alert.track = 0

[Node Process Executions - winevent]
description = Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\Adobe Creative Cloud Experience\\libs\\node.exe" NOT (Process_Command_Line="*Adobe Creative Cloud Experience\\js*")) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1127 attack.t1059.007" | eval sigma_title="Node Process Executions" | eval sigma_description="Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud"
dispatch.earliest_time = -24h@h
alert.track = 0

[Node Process Executions - sysmon]
description = Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\Adobe Creative Cloud Experience\\libs\\node.exe" NOT (CommandLine="*Adobe Creative Cloud Experience\\js*")) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1127 attack.t1059.007" | eval sigma_title="Node Process Executions" | eval sigma_description="Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dropping Of Password Filter DLL - winevent]
description = Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa*" Process_Command_Line="*scecli\\0*" Process_Command_Line="*reg add*") | eval sigma_attack_tags="attack.credential_access attack.t1556.002" | eval sigma_title="Dropping Of Password Filter DLL" | eval sigma_description="Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dropping Of Password Filter DLL - sysmon]
description = Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa*" CommandLine="*scecli\\0*" CommandLine="*reg add*") | eval sigma_attack_tags="attack.credential_access attack.t1556.002" | eval sigma_title="Dropping Of Password Filter DLL" | eval sigma_description="Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fireball Archer Install - winevent]
description = Detects Archer malware invocation via rundll32
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*InstallArcherSvc*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.011" | eval sigma_title="Fireball Archer Install" | eval sigma_description="Detects Archer malware invocation via rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fireball Archer Install - sysmon]
description = Detects Archer malware invocation via rundll32
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*InstallArcherSvc*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218.011" | eval sigma_title="Fireball Archer Install" | eval sigma_description="Detects Archer malware invocation via rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Maze Ransomware - winevent]
description = Detects specific process characteristics of Maze ransomware word document droppers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\WINWORD.exe" New_Process_Name="*.tmp") OR (New_Process_Name="*\\wmic.exe" Creator_Process_Name="*\\Temp\\*" Process_Command_Line="*shadowcopy delete") OR (Process_Command_Line="*shadowcopy delete" Process_Command_Line="*\\..\\..\\system32*"))) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.t1047 attack.impact attack.t1490" | eval sigma_title="Maze Ransomware" | eval sigma_description="Detects specific process characteristics of Maze ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Maze Ransomware - sysmon]
description = Detects specific process characteristics of Maze ransomware word document droppers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\WINWORD.exe" Image="*.tmp") OR (Image="*\\wmic.exe" ParentImage="*\\Temp\\*" CommandLine="*shadowcopy delete") OR (CommandLine="*shadowcopy delete" CommandLine="*\\..\\..\\system32*"))) | table ComputerName,User,Image | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.t1047 attack.impact attack.t1490" | eval sigma_title="Maze Ransomware" | eval sigma_description="Detects specific process characteristics of Maze ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Snatch Ransomware - winevent]
description = Detects specific process characteristics of Snatch ransomware word document droppers
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*shutdown /r /f /t 00*" OR Process_Command_Line="*net stop SuperBackupMan*")) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Snatch Ransomware" | eval sigma_description="Detects specific process characteristics of Snatch ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Snatch Ransomware - sysmon]
description = Detects specific process characteristics of Snatch ransomware word document droppers
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*shutdown /r /f /t 00*" OR CommandLine="*net stop SuperBackupMan*")) | table ComputerName,User,Image | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Snatch Ransomware" | eval sigma_description="Detects specific process characteristics of Snatch ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Crypto Mining Indicators - winevent]
description = Detects command line parameters or strings often used by crypto miners
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* --cpu-priority=*" OR Process_Command_Line="*--donate-level=0*" OR Process_Command_Line="* -o pool.*" OR Process_Command_Line="* --nicehash*" OR Process_Command_Line="* --algo=rx/0 *" OR Process_Command_Line="*stratum+tcp://*" OR Process_Command_Line="*stratum+udp://*" OR Process_Command_Line="*LS1kb25hdGUtbGV2ZWw9*" OR Process_Command_Line="*0tZG9uYXRlLWxldmVsP*" OR Process_Command_Line="*tLWRvbmF0ZS1sZXZlbD*" OR Process_Command_Line="*c3RyYXR1bSt0Y3A6Ly*" OR Process_Command_Line="*N0cmF0dW0rdGNwOi8v*" OR Process_Command_Line="*zdHJhdHVtK3RjcDovL*" OR Process_Command_Line="*c3RyYXR1bSt1ZHA6Ly*" OR Process_Command_Line="*N0cmF0dW0rdWRwOi8v*" OR Process_Command_Line="*zdHJhdHVtK3VkcDovL*")) | eval sigma_attack_tags="attack.impact attack.t1496" | eval sigma_title="Windows Crypto Mining Indicators" | eval sigma_description="Detects command line parameters or strings often used by crypto miners"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Crypto Mining Indicators - sysmon]
description = Detects command line parameters or strings often used by crypto miners
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* --cpu-priority=*" OR CommandLine="*--donate-level=0*" OR CommandLine="* -o pool.*" OR CommandLine="* --nicehash*" OR CommandLine="* --algo=rx/0 *" OR CommandLine="*stratum+tcp://*" OR CommandLine="*stratum+udp://*" OR CommandLine="*LS1kb25hdGUtbGV2ZWw9*" OR CommandLine="*0tZG9uYXRlLWxldmVsP*" OR CommandLine="*tLWRvbmF0ZS1sZXZlbD*" OR CommandLine="*c3RyYXR1bSt0Y3A6Ly*" OR CommandLine="*N0cmF0dW0rdGNwOi8v*" OR CommandLine="*zdHJhdHVtK3RjcDovL*" OR CommandLine="*c3RyYXR1bSt1ZHA6Ly*" OR CommandLine="*N0cmF0dW0rdWRwOi8v*" OR CommandLine="*zdHJhdHVtK3VkcDovL*")) | eval sigma_attack_tags="attack.impact attack.t1496" | eval sigma_title="Windows Crypto Mining Indicators" | eval sigma_description="Detects command line parameters or strings often used by crypto miners"
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Usage on Windows - winevent]
description = Detects a curl process start on Windows, which indicates a file download from a remote location or a simple web request to a remote server
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\curl.exe" OR Product="The curl executable")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Curl Usage on Windows" | eval sigma_description="Detects a curl process start on Windows, which indicates a file download from a remote location or a simple web request to a remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Usage on Windows - sysmon]
description = Detects a curl process start on Windows, which indicates a file download from a remote location or a simple web request to a remote server
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\curl.exe" OR Product="The curl executable")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Curl Usage on Windows" | eval sigma_description="Detects a curl process start on Windows, which indicates a file download from a remote location or a simple web request to a remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-26857 Exchange Exploitation - winevent]
description = Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server's Unified Messaging service
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*UMWorkerProcess.exe" NOT ((New_Process_Name="*wermgr.exe" OR New_Process_Name="*WerFault.exe"))) | eval sigma_attack_tags="attack.t1203 attack.execution cve.2021.26857" | eval sigma_title="CVE-2021-26857 Exchange Exploitation" | eval sigma_description="Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server's Unified Messaging service"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-26857 Exchange Exploitation - sysmon]
description = Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server's Unified Messaging service
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*UMWorkerProcess.exe" NOT ((Image="*wermgr.exe" OR Image="*WerFault.exe"))) | eval sigma_attack_tags="attack.t1203 attack.execution cve.2021.26857" | eval sigma_title="CVE-2021-26857 Exchange Exploitation" | eval sigma_description="Detects possible successful exploitation for vulnerability described in CVE-2021-26857 by looking for | abnormal subprocesses spawning by Exchange Server's Unified Messaging service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - rar.exe - winevent]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rar.exe" Process_Command_Line="* a *") | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Data Compressed - rar.exe" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - rar.exe - sysmon]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rar.exe" CommandLine="* a *") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Data Compressed - rar.exe" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detecting Fake Instances Of Hxtsr.exe - winevent]
description = HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.HxTsr.exe is part of Outlook apps, because it resides in a hidden 'WindowsApps' subfolder of 'C:\Program Files'. Its path includes a version number, e.g., 'C:\Program Files\WindowsApps\microsoft.windowscommunicationsapps_17.7466.41167.0_x64__8wekyb3d8bbwe\HxTsr.exe'. Any instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="hxtsr.exe" NOT (CurrentDirectory="C:\\program files\\windowsapps\\microsoft.windowscommunicationsapps_*" CurrentDirectory="*\\hxtsr.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Detecting Fake Instances Of Hxtsr.exe" | eval sigma_description="HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.HxTsr.exe is part of Outlook apps, because it resides in a hidden 'WindowsApps' subfolder of 'C:\Program Files'. Its path includes a version number, e.g., 'C:\Program Files\WindowsApps\microsoft.windowscommunicationsapps_17.7466.41167.0_x64__8wekyb3d8bbwe\HxTsr.exe'. Any instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detecting Fake Instances Of Hxtsr.exe - sysmon]
description = HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.HxTsr.exe is part of Outlook apps, because it resides in a hidden 'WindowsApps' subfolder of 'C:\Program Files'. Its path includes a version number, e.g., 'C:\Program Files\WindowsApps\microsoft.windowscommunicationsapps_17.7466.41167.0_x64__8wekyb3d8bbwe\HxTsr.exe'. Any instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="hxtsr.exe" NOT (CurrentDirectory="C:\\program files\\windowsapps\\microsoft.windowscommunicationsapps_*" CurrentDirectory="*\\hxtsr.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Detecting Fake Instances Of Hxtsr.exe" | eval sigma_description="HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.HxTsr.exe is part of Outlook apps, because it resides in a hidden 'WindowsApps' subfolder of 'C:\Program Files'. Its path includes a version number, e.g., 'C:\Program Files\WindowsApps\microsoft.windowscommunicationsapps_17.7466.41167.0_x64__8wekyb3d8bbwe\HxTsr.exe'. Any instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[DInject PowerShell Cradle CommandLine Flags - winevent]
description = Detects the use of the Dinject PowerShell cradle based on the specific flags
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="* /am51*" OR Process_Command_Line="* /password*") NOT ((Process_Command_Line="* /PASSWORDCHG*" OR (Creator_Process_Name="C:\\Program Files\\CEETIS\\CEETIS_IDE.exe" OR Creator_Process_Name="C:\\Program Files (x86)\\CEETIS\\CEETIS_IDE.exe")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="DInject PowerShell Cradle CommandLine Flags" | eval sigma_description="Detects the use of the Dinject PowerShell cradle based on the specific flags"
dispatch.earliest_time = -24h@h
alert.track = 0

[DInject PowerShell Cradle CommandLine Flags - sysmon]
description = Detects the use of the Dinject PowerShell cradle based on the specific flags
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="* /am51*" OR CommandLine="* /password*") NOT ((CommandLine="* /PASSWORDCHG*" OR (ParentImage="C:\\Program Files\\CEETIS\\CEETIS_IDE.exe" OR ParentImage="C:\\Program Files (x86)\\CEETIS\\CEETIS_IDE.exe")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="DInject PowerShell Cradle CommandLine Flags" | eval sigma_description="Detects the use of the Dinject PowerShell cradle based on the specific flags"
dispatch.earliest_time = -24h@h
alert.track = 0

[Discover Private Keys - winevent]
description = Adversaries may search for private key certificate files on compromised systems for insecurely stored credential
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*dir *" OR Process_Command_Line="*findstr *") (Process_Command_Line="*.key*" OR Process_Command_Line="*.pgp*" OR Process_Command_Line="*.gpg*" OR Process_Command_Line="*.ppk*" OR Process_Command_Line="*.p12*" OR Process_Command_Line="*.pem*" OR Process_Command_Line="*.pfx*" OR Process_Command_Line="*.cer*" OR Process_Command_Line="*.p7b*" OR Process_Command_Line="*.asc*")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="Discover Private Keys" | eval sigma_description="Adversaries may search for private key certificate files on compromised systems for insecurely stored credential"
dispatch.earliest_time = -24h@h
alert.track = 0

[Discover Private Keys - sysmon]
description = Adversaries may search for private key certificate files on compromised systems for insecurely stored credential
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*dir *" OR CommandLine="*findstr *") (CommandLine="*.key*" OR CommandLine="*.pgp*" OR CommandLine="*.gpg*" OR CommandLine="*.ppk*" OR CommandLine="*.p12*" OR CommandLine="*.pem*" OR CommandLine="*.pfx*" OR CommandLine="*.cer*" OR CommandLine="*.p7b*" OR CommandLine="*.asc*")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="Discover Private Keys" | eval sigma_description="Adversaries may search for private key certificate files on compromised systems for insecurely stored credential"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Exfiltration and Tunneling Tools Execution - winevent]
description = Well-known DNS Exfiltration tools execution
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\iodine.exe" OR New_Process_Name="*\\dnscat2*")) | eval sigma_attack_tags="attack.exfiltration attack.t1048.001 attack.command_and_control attack.t1071.004 attack.t1132.001" | eval sigma_title="DNS Exfiltration and Tunneling Tools Execution" | eval sigma_description="Well-known DNS Exfiltration tools execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Exfiltration and Tunneling Tools Execution - sysmon]
description = Well-known DNS Exfiltration tools execution
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\iodine.exe" OR Image="*\\dnscat2*")) | eval sigma_attack_tags="attack.exfiltration attack.t1048.001 attack.command_and_control attack.t1071.004 attack.t1132.001" | eval sigma_title="DNS Exfiltration and Tunneling Tools Execution" | eval sigma_description="Well-known DNS Exfiltration tools execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS ServerLevelPluginDll Install - winevent]
description = Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\dnscmd.exe" Process_Command_Line="*/config*" Process_Command_Line="*/serverlevelplugindll*") | table EventCode,Process_Command_Line,ParentCommandLine,New_Process_Name,Account_Name,TargetObject | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1112" | eval sigma_title="DNS ServerLevelPluginDll Install" | eval sigma_description="Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS ServerLevelPluginDll Install - sysmon]
description = Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\dnscmd.exe" CommandLine="*/config*" CommandLine="*/serverlevelplugindll*") | table EventCode,CommandLine,ParentCommandLine,Image,User,TargetObject | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002 attack.t1112" | eval sigma_title="DNS ServerLevelPluginDll Install" | eval sigma_description="Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNSCat2 Powershell Implementation Detection Via Process Creation - winevent]
description = The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\nslookup.exe" Process_Command_Line="*\\nslookup.exe") | eventstats dc(New_Process_Name) as val by Creator_Process_Name | search val > 100 | table New_Process_Name,Process_Command_Line,Creator_Process_Name | eval sigma_attack_tags="attack.command_and_control attack.t1071 attack.t1071.004 attack.t1001.003 attack.t1041" | eval sigma_title="DNSCat2 Powershell Implementation Detection Via Process Creation" | eval sigma_description="The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally."
dispatch.earliest_time = -24h@h
alert.track = 0

[DNSCat2 Powershell Implementation Detection Via Process Creation - sysmon]
description = The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\nslookup.exe" CommandLine="*\\nslookup.exe") | eventstats dc(Image) as val by ParentImage | search val > 100 | table Image,CommandLine,ParentImage | eval sigma_attack_tags="attack.command_and_control attack.t1071 attack.t1071.004 attack.t1001.003 attack.t1041" | eval sigma_title="DNSCat2 Powershell Implementation Detection Via Process Creation" | eval sigma_description="The PowerShell implementation of DNSCat2 calls nslookup to craft queries. Counting nslookup processes spawned by PowerShell will show hundreds or thousands of instances if PS DNSCat2 is active locally."
dispatch.earliest_time = -24h@h
alert.track = 0

[Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN - winevent]
description = dotnet.exe will execute any DLL and execute unsigned code
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*.dll" OR Process_Command_Line="*.csproj") New_Process_Name="*\\dotnet.exe") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN" | eval sigma_description="dotnet.exe will execute any DLL and execute unsigned code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN - sysmon]
description = dotnet.exe will execute any DLL and execute unsigned code
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*.dll" OR CommandLine="*.csproj") Image="*\\dotnet.exe") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN" | eval sigma_description="dotnet.exe will execute any DLL and execute unsigned code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Permissions Using Dsacls - winevent]
description = Detects usage of Dsacls to grant over permissive permissions
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\dsacls.exe" OR OriginalFileName="DSACLS.EXE") Process_Command_Line="* /G *" (Process_Command_Line="*GR*" OR Process_Command_Line="*GE*" OR Process_Command_Line="*GW*" OR Process_Command_Line="*GA*" OR Process_Command_Line="*WP*" OR Process_Command_Line="*WD*")) | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Abusing Permissions Using Dsacls" | eval sigma_description="Detects usage of Dsacls to grant over permissive permissions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Permissions Using Dsacls - sysmon]
description = Detects usage of Dsacls to grant over permissive permissions
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\dsacls.exe" OR OriginalFileName="DSACLS.EXE") CommandLine="* /G *" (CommandLine="*GR*" OR CommandLine="*GE*" OR CommandLine="*GW*" OR CommandLine="*GA*" OR CommandLine="*WP*" OR CommandLine="*WD*")) | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Abusing Permissions Using Dsacls" | eval sigma_description="Detects usage of Dsacls to grant over permissive permissions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Spraying Attempts Using Dsacls - winevent]
description = Detects possible password spraying attempts using Dsacls
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\dsacls.exe" OR OriginalFileName="DSACLS.EXE") (Process_Command_Line="*/user:*" Process_Command_Line="*/passwd:*")) | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Password Spraying Attempts Using Dsacls" | eval sigma_description="Detects possible password spraying attempts using Dsacls"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Spraying Attempts Using Dsacls - sysmon]
description = Detects possible password spraying attempts using Dsacls
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\dsacls.exe" OR OriginalFileName="DSACLS.EXE") (CommandLine="*/user:*" CommandLine="*/passwd:*")) | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Password Spraying Attempts Using Dsacls" | eval sigma_description="Detects possible password spraying attempts using Dsacls"
dispatch.earliest_time = -24h@h
alert.track = 0

[DumpStack.log Defender Evasion - winevent]
description = Detects the use of the filename DumpStack.log to evade Microsoft Defender
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\DumpStack.log" OR Process_Command_Line="* -o DumpStack.log*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="DumpStack.log Defender Evasion" | eval sigma_description="Detects the use of the filename DumpStack.log to evade Microsoft Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[DumpStack.log Defender Evasion - sysmon]
description = Detects the use of the filename DumpStack.log to evade Microsoft Defender
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\DumpStack.log" OR CommandLine="* -o DumpStack.log*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="DumpStack.log Defender Evasion" | eval sigma_description="Detects the use of the filename DumpStack.log to evade Microsoft Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hidden Powershell in Link File Pattern - winevent]
description = Detects events that appear when a user click on a link file with a powershell command in it
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="C:\\Windows\\explorer.exe" New_Process_Name="C:\\Windows\\System32\\cmd.exe" Process_Command_Line="*powershell*" Process_Command_Line="*.lnk*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Hidden Powershell in Link File Pattern" | eval sigma_description="Detects events that appear when a user click on a link file with a powershell command in it"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hidden Powershell in Link File Pattern - sysmon]
description = Detects events that appear when a user click on a link file with a powershell command in it
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="C:\\Windows\\explorer.exe" Image="C:\\Windows\\System32\\cmd.exe" CommandLine="*powershell*" CommandLine="*.lnk*") | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Hidden Powershell in Link File Pattern" | eval sigma_description="Detects events that appear when a user click on a link file with a powershell command in it"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded FromBase64String - winevent]
description = Detects a base64 encoded FromBase64String keyword in a process command line
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*OjpGcm9tQmFzZTY0U3RyaW5n*" OR Process_Command_Line="*o6RnJvbUJhc2U2NFN0cmluZ*" OR Process_Command_Line="*6OkZyb21CYXNlNjRTdHJpbm*") OR (Process_Command_Line="*OgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcA*" OR Process_Command_Line="*oAOgBGAHIAbwBtAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnA*" OR Process_Command_Line="*6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZw*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.execution attack.t1059.001" | eval sigma_title="Encoded FromBase64String" | eval sigma_description="Detects a base64 encoded FromBase64String keyword in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded FromBase64String - sysmon]
description = Detects a base64 encoded FromBase64String keyword in a process command line
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*OjpGcm9tQmFzZTY0U3RyaW5n*" OR CommandLine="*o6RnJvbUJhc2U2NFN0cmluZ*" OR CommandLine="*6OkZyb21CYXNlNjRTdHJpbm*") OR (CommandLine="*OgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcA*" OR CommandLine="*oAOgBGAHIAbwBtAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnA*" OR CommandLine="*6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZw*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.execution attack.t1059.001" | eval sigma_title="Encoded FromBase64String" | eval sigma_description="Detects a base64 encoded FromBase64String keyword in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded IEX - winevent]
description = Detects a base64 encoded IEX command string in a process command line
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*SUVYIChb*" OR Process_Command_Line="*lFWCAoW*" OR Process_Command_Line="*JRVggKF*" OR Process_Command_Line="*aWV4IChb*" OR Process_Command_Line="*lleCAoW*" OR Process_Command_Line="*pZXggKF*" OR Process_Command_Line="*aWV4IChOZX*" OR Process_Command_Line="*lleCAoTmV3*" OR Process_Command_Line="*pZXggKE5ld*" OR Process_Command_Line="*SUVYIChOZX*" OR Process_Command_Line="*lFWCAoTmV3*" OR Process_Command_Line="*JRVggKE5ld*") OR (Process_Command_Line="*SQBFAFgAIAAoAFsA*" OR Process_Command_Line="*kARQBYACAAKABbA*" OR Process_Command_Line="*JAEUAWAAgACgAWw*" OR Process_Command_Line="*aQBlAHgAIAAoAFsA*" OR Process_Command_Line="*kAZQB4ACAAKABbA*" OR Process_Command_Line="*pAGUAeAAgACgAWw*" OR Process_Command_Line="*aQBlAHgAIAAoAE4AZQB3A*" OR Process_Command_Line="*kAZQB4ACAAKABOAGUAdw*" OR Process_Command_Line="*pAGUAeAAgACgATgBlAHcA*" OR Process_Command_Line="*SQBFAFgAIAAoAE4AZQB3A*" OR Process_Command_Line="*kARQBYACAAKABOAGUAdw*" OR Process_Command_Line="*JAEUAWAAgACgATgBlAHcA*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Encoded IEX" | eval sigma_description="Detects a base64 encoded IEX command string in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded IEX - sysmon]
description = Detects a base64 encoded IEX command string in a process command line
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*SUVYIChb*" OR CommandLine="*lFWCAoW*" OR CommandLine="*JRVggKF*" OR CommandLine="*aWV4IChb*" OR CommandLine="*lleCAoW*" OR CommandLine="*pZXggKF*" OR CommandLine="*aWV4IChOZX*" OR CommandLine="*lleCAoTmV3*" OR CommandLine="*pZXggKE5ld*" OR CommandLine="*SUVYIChOZX*" OR CommandLine="*lFWCAoTmV3*" OR CommandLine="*JRVggKE5ld*") OR (CommandLine="*SQBFAFgAIAAoAFsA*" OR CommandLine="*kARQBYACAAKABbA*" OR CommandLine="*JAEUAWAAgACgAWw*" OR CommandLine="*aQBlAHgAIAAoAFsA*" OR CommandLine="*kAZQB4ACAAKABbA*" OR CommandLine="*pAGUAeAAgACgAWw*" OR CommandLine="*aQBlAHgAIAAoAE4AZQB3A*" OR CommandLine="*kAZQB4ACAAKABOAGUAdw*" OR CommandLine="*pAGUAeAAgACgATgBlAHcA*" OR CommandLine="*SQBFAFgAIAAoAE4AZQB3A*" OR CommandLine="*kARQBYACAAKABOAGUAdw*" OR CommandLine="*JAEUAWAAgACgATgBlAHcA*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Encoded IEX" | eval sigma_description="Detects a base64 encoded IEX command string in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumeration for 3rd Party Creds From CLI - winevent]
description = Detects processes that query known 3rd party registry keys that holds credentials via commandline
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\Software\\SimonTatham\\PuTTY\\Sessions*" OR Process_Command_Line="*\\Software\\SimonTatham\\PuTTY\\SshHostKeys\\*" OR Process_Command_Line="*\\Software\\Mobatek\\MobaXterm\\*" OR Process_Command_Line="*\\Software\\WOW6432Node\\Radmin\\v3.0\\Server\\Parameters\\Radmin*" OR Process_Command_Line="*\\Software\\Aerofox\\FoxmailPreview*" OR Process_Command_Line="*\\Software\\Aerofox\\Foxmail\\V3.1*" OR Process_Command_Line="*\\Software\\IncrediMail\\Identities*" OR Process_Command_Line="*\\Software\\Qualcomm\\Eudora\\CommandLine*" OR Process_Command_Line="*\\Software\\RimArts\\B2\\Settings*" OR Process_Command_Line="*\\Software\\OpenVPN-GUI\\configs*" OR Process_Command_Line="*\\Software\\Martin Prikryl\\WinSCP 2\\Sessions*" OR Process_Command_Line="*\\Software\\FTPWare\\COREFTP\\Sites*" OR Process_Command_Line="*\\Software\\DownloadManager\\Passwords*" OR Process_Command_Line="*\\Software\\OpenSSH\\Agent\\Keys*" OR Process_Command_Line="*\\Software\\TightVNC\\Server*" OR Process_Command_Line="*\\Software\\ORL\\WinVNC3\\Password*" OR Process_Command_Line="*\\Software\\RealVNC\\WinVNC4*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.002" | eval sigma_title="Enumeration for 3rd Party Creds From CLI" | eval sigma_description="Detects processes that query known 3rd party registry keys that holds credentials via commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumeration for 3rd Party Creds From CLI - sysmon]
description = Detects processes that query known 3rd party registry keys that holds credentials via commandline
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\Software\\SimonTatham\\PuTTY\\Sessions*" OR CommandLine="*\\Software\\SimonTatham\\PuTTY\\SshHostKeys\\*" OR CommandLine="*\\Software\\Mobatek\\MobaXterm\\*" OR CommandLine="*\\Software\\WOW6432Node\\Radmin\\v3.0\\Server\\Parameters\\Radmin*" OR CommandLine="*\\Software\\Aerofox\\FoxmailPreview*" OR CommandLine="*\\Software\\Aerofox\\Foxmail\\V3.1*" OR CommandLine="*\\Software\\IncrediMail\\Identities*" OR CommandLine="*\\Software\\Qualcomm\\Eudora\\CommandLine*" OR CommandLine="*\\Software\\RimArts\\B2\\Settings*" OR CommandLine="*\\Software\\OpenVPN-GUI\\configs*" OR CommandLine="*\\Software\\Martin Prikryl\\WinSCP 2\\Sessions*" OR CommandLine="*\\Software\\FTPWare\\COREFTP\\Sites*" OR CommandLine="*\\Software\\DownloadManager\\Passwords*" OR CommandLine="*\\Software\\OpenSSH\\Agent\\Keys*" OR CommandLine="*\\Software\\TightVNC\\Server*" OR CommandLine="*\\Software\\ORL\\WinVNC3\\Password*" OR CommandLine="*\\Software\\RealVNC\\WinVNC4*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.002" | eval sigma_title="Enumeration for 3rd Party Creds From CLI" | eval sigma_description="Detects processes that query known 3rd party registry keys that holds credentials via commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumeration for Credentials in Registry - winevent]
description = Adversaries may search the Registry on compromised systems for insecurely stored credentials.
The Windows Registry stores configuration information that can be used by the system or other programs.
Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\reg.exe" Process_Command_Line="* query *" Process_Command_Line="*/t *" Process_Command_Line="*REG_SZ*" Process_Command_Line="*/s*") ((Process_Command_Line="*/f *" Process_Command_Line="*HKLM*") OR (Process_Command_Line="*/f *" Process_Command_Line="*HKCU*") OR Process_Command_Line="*HKCU\\Software\\SimonTatham\\PuTTY\\Sessions*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.002" | eval sigma_title="Enumeration for Credentials in Registry" | eval sigma_description="Adversaries may search the Registry on compromised systems for insecurely stored credentials.
The Windows Registry stores configuration information that can be used by the system or other programs.
Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enumeration for Credentials in Registry - sysmon]
description = Adversaries may search the Registry on compromised systems for insecurely stored credentials.
The Windows Registry stores configuration information that can be used by the system or other programs.
Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\reg.exe" CommandLine="* query *" CommandLine="*/t *" CommandLine="*REG_SZ*" CommandLine="*/s*") ((CommandLine="*/f *" CommandLine="*HKLM*") OR (CommandLine="*/f *" CommandLine="*HKCU*") OR CommandLine="*HKCU\\Software\\SimonTatham\\PuTTY\\Sessions*")) | eval sigma_attack_tags="attack.credential_access attack.t1552.002" | eval sigma_title="Enumeration for Credentials in Registry" | eval sigma_description="Adversaries may search the Registry on compromised systems for insecurely stored credentials.
The Windows Registry stores configuration information that can be used by the system or other programs.
Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Esentutl Steals Browser Information - winevent]
description = One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\esentutl.exe" OR OriginalFileName="esentutl.exe") (Process_Command_Line="*/r *" Process_Command_Line="*\\Windows\\WebCache*")) | eval sigma_attack_tags="attack.collection attack.t1005" | eval sigma_title="Esentutl Steals Browser Information" | eval sigma_description="One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Esentutl Steals Browser Information - sysmon]
description = One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\esentutl.exe" OR OriginalFileName="esentutl.exe") (CommandLine="*/r *" CommandLine="*\\Windows\\WebCache*")) | eval sigma_attack_tags="attack.collection attack.t1005" | eval sigma_title="Esentutl Steals Browser Information" | eval sigma_description="One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Command Line Arguments - winevent]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*COMPlus_ETWEnabled=0*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562" | eval sigma_title="COMPlus_ETWEnabled Command Line Arguments" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Command Line Arguments - sysmon]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*COMPlus_ETWEnabled=0*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562" | eval sigma_title="COMPlus_ETWEnabled Command Line Arguments" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - winevent]
description = Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*cl*" Process_Command_Line="*/Trace*") OR (Process_Command_Line="*clear-log*" Process_Command_Line="*/Trace*") OR (Process_Command_Line="*sl*" Process_Command_Line="*/e:false*") OR (Process_Command_Line="*set-log*" Process_Command_Line="*/e:false*") OR (Process_Command_Line="*logman*" Process_Command_Line="*update*" Process_Command_Line="*trace*" Process_Command_Line="*--p*" Process_Command_Line="*-ets*") OR Process_Command_Line="*Remove-EtwTraceProvider*" OR (Process_Command_Line="*Set-EtwTraceProvider*" Process_Command_Line="*0x11*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562.006 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects a command that clears or disables any ETW trace log which could indicate a logging evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - sysmon]
description = Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*cl*" CommandLine="*/Trace*") OR (CommandLine="*clear-log*" CommandLine="*/Trace*") OR (CommandLine="*sl*" CommandLine="*/e:false*") OR (CommandLine="*set-log*" CommandLine="*/e:false*") OR (CommandLine="*logman*" CommandLine="*update*" CommandLine="*trace*" CommandLine="*--p*" CommandLine="*-ets*") OR CommandLine="*Remove-EtwTraceProvider*" OR (CommandLine="*Set-EtwTraceProvider*" CommandLine="*0x11*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562.006 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects a command that clears or disables any ETW trace log which could indicate a logging evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exfiltration and Tunneling Tools Execution - winevent]
description = Execution of well known tools for data exfiltration and tunneling
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\plink.exe" OR New_Process_Name="*\\socat.exe" OR New_Process_Name="*\\stunnel.exe" OR New_Process_Name="*\\httptunnel.exe")) | eval sigma_attack_tags="attack.exfiltration attack.command_and_control attack.t1041 attack.t1572 attack.t1071.001" | eval sigma_title="Exfiltration and Tunneling Tools Execution" | eval sigma_description="Execution of well known tools for data exfiltration and tunneling"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exfiltration and Tunneling Tools Execution - sysmon]
description = Execution of well known tools for data exfiltration and tunneling
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\plink.exe" OR Image="*\\socat.exe" OR Image="*\\stunnel.exe" OR Image="*\\httptunnel.exe")) | eval sigma_attack_tags="attack.exfiltration attack.command_and_control attack.t1041 attack.t1572 attack.t1071.001" | eval sigma_title="Exfiltration and Tunneling Tools Execution" | eval sigma_description="Execution of well known tools for data exfiltration and tunneling"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cabinet File Expansion - winevent]
description = Adversaries can use the inbuilt expand utility to decompress cab files as seen in recent Iranian MeteorExpress attack
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\expand.exe" (Process_Command_Line="*.cab*" OR Process_Command_Line="*/F:*" OR Process_Command_Line="*-F:*" OR Process_Command_Line="*C:\\ProgramData\\*" OR Process_Command_Line="*C:\\Public\\*" OR Process_Command_Line="*\\AppData\\Local\\Temp\\*" OR Process_Command_Line="*\\AppData\\Roaming\\Temp\\*")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Cabinet File Expansion" | eval sigma_description="Adversaries can use the inbuilt expand utility to decompress cab files as seen in recent Iranian MeteorExpress attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cabinet File Expansion - sysmon]
description = Adversaries can use the inbuilt expand utility to decompress cab files as seen in recent Iranian MeteorExpress attack
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\expand.exe" (CommandLine="*.cab*" OR CommandLine="*/F:*" OR CommandLine="*-F:*" OR CommandLine="*C:\\ProgramData\\*" OR CommandLine="*C:\\Public\\*" OR CommandLine="*\\AppData\\Local\\Temp\\*" OR CommandLine="*\\AppData\\Roaming\\Temp\\*")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Cabinet File Expansion" | eval sigma_description="Adversaries can use the inbuilt expand utility to decompress cab files as seen in recent Iranian MeteorExpress attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2015-1641 - winevent]
description = Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\MicroScMgmt.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Exploit for CVE-2015-1641" | eval sigma_description="Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2015-1641 - sysmon]
description = Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\MicroScMgmt.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Exploit for CVE-2015-1641" | eval sigma_description="Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-0261 - winevent]
description = Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\FLTLDR.exe*") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.initial_access attack.t1566.001" | eval sigma_title="Exploit for CVE-2017-0261" | eval sigma_description="Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-0261 - sysmon]
description = Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\FLTLDR.exe*") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.initial_access attack.t1566.001" | eval sigma_title="Exploit for CVE-2017-0261" | eval sigma_description="Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262"
dispatch.earliest_time = -24h@h
alert.track = 0

[Droppers Exploiting CVE-2017-11882 - winevent]
description = Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\EQNEDT32.EXE") | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.initial_access attack.t1566.001" | eval sigma_title="Droppers Exploiting CVE-2017-11882" | eval sigma_description="Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Droppers Exploiting CVE-2017-11882 - sysmon]
description = Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\EQNEDT32.EXE") | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.initial_access attack.t1566.001" | eval sigma_title="Droppers Exploiting CVE-2017-11882" | eval sigma_description="Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-8759 - winevent]
description = Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\csc.exe") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.initial_access attack.t1566.001" | eval sigma_title="Exploit for CVE-2017-8759" | eval sigma_description="Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-8759 - sysmon]
description = Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\csc.exe") | eval sigma_attack_tags="attack.execution attack.t1203 attack.t1204.002 attack.initial_access attack.t1566.001" | eval sigma_title="Exploit for CVE-2017-8759" | eval sigma_description="Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting SetupComplete.cmd CVE-2019-1378 - winevent]
description = Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (ParentCommandLine="*\\cmd.exe*" ParentCommandLine="*/c*" ParentCommandLine="*C:\\Windows\\Setup\\Scripts\\*" (ParentCommandLine="*SetupComplete.cmd" OR ParentCommandLine="*PartnerSetupComplete.cmd")) NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*" OR New_Process_Name="C:\\Windows\\Setup\\*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068 attack.execution attack.t1059.003 attack.t1574 cve.2019.1378" | eval sigma_title="Exploiting SetupComplete.cmd CVE-2019-1378" | eval sigma_description="Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting SetupComplete.cmd CVE-2019-1378 - sysmon]
description = Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentCommandLine="*\\cmd.exe*" ParentCommandLine="*/c*" ParentCommandLine="*C:\\Windows\\Setup\\Scripts\\*" (ParentCommandLine="*SetupComplete.cmd" OR ParentCommandLine="*PartnerSetupComplete.cmd")) NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*" OR Image="C:\\Windows\\Setup\\*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068 attack.execution attack.t1059.003 attack.t1574 cve.2019.1378" | eval sigma_title="Exploiting SetupComplete.cmd CVE-2019-1378" | eval sigma_description="Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting CVE-2019-1388 - winevent]
description = Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\consent.exe" New_Process_Name="*\\iexplore.exe" Process_Command_Line="* http*") (IntegrityLevel="System" OR (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Exploiting CVE-2019-1388" | eval sigma_description="Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting CVE-2019-1388 - sysmon]
description = Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\consent.exe" Image="*\\iexplore.exe" CommandLine="* http*") (IntegrityLevel="System" OR (User="*AUTHORI*" OR User="*AUTORI*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Exploiting CVE-2019-1388" | eval sigma_description="Detects an exploitation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploited CVE-2020-10189 Zoho ManageEngine - winevent]
description = Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*DesktopCentral_Server\\jre\\bin\\java.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1059.001 attack.t1059.003 attack.s0190 cve.2020.10189" | eval sigma_title="Exploited CVE-2020-10189 Zoho ManageEngine" | eval sigma_description="Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploited CVE-2020-10189 Zoho ManageEngine - sysmon]
description = Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*DesktopCentral_Server\\jre\\bin\\java.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1059.001 attack.t1059.003 attack.s0190 cve.2020.10189" | eval sigma_title="Exploited CVE-2020-10189 Zoho ManageEngine" | eval sigma_description="Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PrinterPorts Creation (CVE-2020-1048) - winevent]
description = Detects new commands that add new printer port which point to suspicious file
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*Add-PrinterPort -Name*" (Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bat*")) OR Process_Command_Line="*Generic / Text Only*")) | eval sigma_attack_tags="attack.persistence attack.execution attack.t1059.001" | eval sigma_title="Suspicious PrinterPorts Creation (CVE-2020-1048)" | eval sigma_description="Detects new commands that add new printer port which point to suspicious file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PrinterPorts Creation (CVE-2020-1048) - sysmon]
description = Detects new commands that add new printer port which point to suspicious file
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*Add-PrinterPort -Name*" (CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bat*")) OR CommandLine="*Generic / Text Only*")) | eval sigma_attack_tags="attack.persistence attack.execution attack.t1059.001" | eval sigma_title="Suspicious PrinterPorts Creation (CVE-2020-1048)" | eval sigma_description="Detects new commands that add new printer port which point to suspicious file"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS RCE CVE-2020-1350 - winevent]
description = Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\System32\\dns.exe" NOT ((New_Process_Name="*\\System32\\werfault.exe" OR New_Process_Name="*\\System32\\conhost.exe" OR New_Process_Name="*\\System32\\dnscmd.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1569.002" | eval sigma_title="DNS RCE CVE-2020-1350" | eval sigma_description="Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS RCE CVE-2020-1350 - sysmon]
description = Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\System32\\dns.exe" NOT ((Image="*\\System32\\werfault.exe" OR Image="*\\System32\\conhost.exe" OR Image="*\\System32\\dnscmd.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1569.002" | eval sigma_title="DNS RCE CVE-2020-1350" | eval sigma_description="Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible InstallerFileTakeOver LPE CVE-2021-41379 - winevent]
description = Detects signs of the exploitation of LPE CVE-2021-41379 to spawn a cmd.exe with LOCAL_SYSTEM rights
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Creator_Process_Name="*\\elevation_service.exe" IntegrityLevel="System") | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Possible InstallerFileTakeOver LPE CVE-2021-41379" | eval sigma_description="Detects signs of the exploitation of LPE CVE-2021-41379 to spawn a cmd.exe with LOCAL_SYSTEM rights"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible InstallerFileTakeOver LPE CVE-2021-41379 - sysmon]
description = Detects signs of the exploitation of LPE CVE-2021-41379 to spawn a cmd.exe with LOCAL_SYSTEM rights
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" ParentImage="*\\elevation_service.exe" IntegrityLevel="System") | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Possible InstallerFileTakeOver LPE CVE-2021-41379" | eval sigma_description="Detects signs of the exploitation of LPE CVE-2021-41379 to spawn a cmd.exe with LOCAL_SYSTEM rights"
dispatch.earliest_time = -24h@h
alert.track = 0

[SystemNightmare Exploitation Script Execution - winevent]
description = Detects the exploitation of PrinterNightmare to get a shell as LOCAL_SYSTEM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*printnightmare.gentilkiwi.com*" OR Process_Command_Line="* /user:gentilguest *" OR Process_Command_Line="*Kiwi Legit Printer*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="SystemNightmare Exploitation Script Execution" | eval sigma_description="Detects the exploitation of PrinterNightmare to get a shell as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[SystemNightmare Exploitation Script Execution - sysmon]
description = Detects the exploitation of PrinterNightmare to get a shell as LOCAL_SYSTEM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*printnightmare.gentilkiwi.com*" OR CommandLine="* /user:gentilguest *" OR CommandLine="*Kiwi Legit Printer*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="SystemNightmare Exploitation Script Execution" | eval sigma_description="Detects the exploitation of PrinterNightmare to get a shell as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[False Sysinternals Suite Tools - winevent]
description = Rename as a legitim Sysinternals Suite tools to evade detection
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\accesschk.exe" OR New_Process_Name="*\\accesschk64.exe" OR New_Process_Name="*\\AccessEnum.exe" OR New_Process_Name="*\\ADExplorer.exe" OR New_Process_Name="*\\ADExplorer64.exe" OR New_Process_Name="*\\ADInsight.exe" OR New_Process_Name="*\\ADInsight64.exe" OR New_Process_Name="*\\adrestore.exe" OR New_Process_Name="*\\adrestore64.exe" OR New_Process_Name="*\\Autologon.exe" OR New_Process_Name="*\\Autologon64.exe" OR New_Process_Name="*\\Autoruns.exe" OR New_Process_Name="*\\Autoruns64.exe" OR New_Process_Name="*\\autorunsc.exe" OR New_Process_Name="*\\autorunsc64.exe" OR New_Process_Name="*\\Bginfo.exe" OR New_Process_Name="*\\Bginfo64.exe" OR New_Process_Name="*\\Cacheset.exe" OR New_Process_Name="*\\Cacheset64.exe" OR New_Process_Name="*\\Clockres.exe" OR New_Process_Name="*\\Clockres64.exe" OR New_Process_Name="*\\Contig.exe" OR New_Process_Name="*\\Contig64.exe" OR New_Process_Name="*\\Coreinfo.exe" OR New_Process_Name="*\\Coreinfo64.exe" OR New_Process_Name="*\\CPUSTRES.EXE" OR New_Process_Name="*\\CPUSTRES64.EXE" OR New_Process_Name="*\\ctrl2cap.exe" OR New_Process_Name="*\\Dbgview.exe" OR New_Process_Name="*\\dbgview64.exe" OR New_Process_Name="*\\Desktops.exe" OR New_Process_Name="*\\Desktops64.exe" OR New_Process_Name="*\\disk2vhd.exe" OR New_Process_Name="*\\disk2vhd64.exe" OR New_Process_Name="*\\diskext.exe" OR New_Process_Name="*\\diskext64.exe" OR New_Process_Name="*\\Diskmon.exe" OR New_Process_Name="*\\Diskmon64.exe" OR New_Process_Name="*\\DiskView.exe" OR New_Process_Name="*\\DiskView64.exe" OR New_Process_Name="*\\du.exe" OR New_Process_Name="*\\du64.exe" OR New_Process_Name="*\\efsdump.exe" OR New_Process_Name="*\\FindLinks.exe" OR New_Process_Name="*\\FindLinks64.exe" OR New_Process_Name="*\\handle.exe" OR New_Process_Name="*\\handle64.exe" OR New_Process_Name="*\\hex2dec.exe" OR New_Process_Name="*\\hex2dec64.exe" OR New_Process_Name="*\\junction.exe" OR New_Process_Name="*\\junction64.exe" OR New_Process_Name="*\\ldmdump.exe" OR New_Process_Name="*\\listdlls.exe" OR New_Process_Name="*\\listdlls64.exe" OR New_Process_Name="*\\livekd.exe" OR New_Process_Name="*\\livekd64.exe" OR New_Process_Name="*\\loadOrd.exe" OR New_Process_Name="*\\loadOrd64.exe" OR New_Process_Name="*\\loadOrdC.exe" OR New_Process_Name="*\\loadOrdC64.exe" OR New_Process_Name="*\\logonsessions.exe" OR New_Process_Name="*\\logonsessions64.exe" OR New_Process_Name="*\\movefile.exe" OR New_Process_Name="*\\movefile64.exe" OR New_Process_Name="*\\notmyfault.exe" OR New_Process_Name="*\\notmyfault64.exe" OR New_Process_Name="*\\notmyfaultc.exe" OR New_Process_Name="*\\notmyfaultc64.exe" OR New_Process_Name="*\\ntfsinfo.exe" OR New_Process_Name="*\\ntfsinfo64.exe" OR New_Process_Name="*\\pendmoves.exe" OR New_Process_Name="*\\pendmoves64.exe" OR New_Process_Name="*\\pipelist.exe" OR New_Process_Name="*\\pipelist64.exe" OR New_Process_Name="*\\portmon.exe" OR New_Process_Name="*\\procdump.exe" OR New_Process_Name="*\\procdump64.exe" OR New_Process_Name="*\\procexp.exe" OR New_Process_Name="*\\procexp64.exe" OR New_Process_Name="*\\Procmon.exe" OR New_Process_Name="*\\Procmon64.exe" OR New_Process_Name="*\\psExec.exe" OR New_Process_Name="*\\psExec64.exe" OR New_Process_Name="*\\psfile.exe" OR New_Process_Name="*\\psfile64.exe" OR New_Process_Name="*\\psGetsid.exe" OR New_Process_Name="*\\psGetsid64.exe" OR New_Process_Name="*\\psInfo.exe" OR New_Process_Name="*\\psInfo64.exe" OR New_Process_Name="*\\pskill.exe" OR New_Process_Name="*\\pskill64.exe" OR New_Process_Name="*\\pslist.exe" OR New_Process_Name="*\\pslist64.exe" OR New_Process_Name="*\\psLoggedon.exe" OR New_Process_Name="*\\psLoggedon64.exe" OR New_Process_Name="*\\psloglist.exe" OR New_Process_Name="*\\psloglist64.exe" OR New_Process_Name="*\\pspasswd.exe" OR New_Process_Name="*\\pspasswd64.exe" OR New_Process_Name="*\\psping.exe" OR New_Process_Name="*\\psping64.exe" OR New_Process_Name="*\\psService.exe" OR New_Process_Name="*\\psService64.exe" OR New_Process_Name="*\\psshutdown.exe" OR New_Process_Name="*\\psshutdown64.exe" OR New_Process_Name="*\\pssuspend.exe" OR New_Process_Name="*\\pssuspend64.exe" OR New_Process_Name="*\\RAMMap.exe" OR New_Process_Name="*\\RDCMan.exe" OR New_Process_Name="*\\RegDelNull.exe" OR New_Process_Name="*\\RegDelNull64.exe" OR New_Process_Name="*\\regjump.exe" OR New_Process_Name="*\\ru.exe" OR New_Process_Name="*\\ru64.exe" OR New_Process_Name="*\\sdelete.exe" OR New_Process_Name="*\\sdelete64.exe" OR New_Process_Name="*\\ShareEnum.exe" OR New_Process_Name="*\\ShareEnum64.exe" OR New_Process_Name="*\\shellRunas.exe" OR New_Process_Name="*\\sigcheck.exe" OR New_Process_Name="*\\sigcheck64.exe" OR New_Process_Name="*\\streams.exe" OR New_Process_Name="*\\streams64.exe" OR New_Process_Name="*\\strings.exe" OR New_Process_Name="*\\strings64.exe" OR New_Process_Name="*\\sync.exe" OR New_Process_Name="*\\sync64.exe" OR New_Process_Name="*\\Sysmon.exe" OR New_Process_Name="*\\Sysmon64.exe" OR New_Process_Name="*\\tcpvcon.exe" OR New_Process_Name="*\\tcpvcon64.exe" OR New_Process_Name="*\\tcpview.exe" OR New_Process_Name="*\\tcpview64.exe" OR New_Process_Name="*\\Testlimit.exe" OR New_Process_Name="*\\Testlimit64.exe" OR New_Process_Name="*\\vmmap.exe" OR New_Process_Name="*\\vmmap64.exe" OR New_Process_Name="*\\Volumeid.exe" OR New_Process_Name="*\\Volumeid64.exe" OR New_Process_Name="*\\whois.exe" OR New_Process_Name="*\\whois64.exe" OR New_Process_Name="*\\Winobj.exe" OR New_Process_Name="*\\Winobj64.exe" OR New_Process_Name="*\\ZoomIt.exe" OR New_Process_Name="*\\ZoomIt64.exe") NOT (((Company="Sysinternals - www.sysinternals.com" OR Company="Sysinternals")) OR (NOT Company="*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="False Sysinternals Suite Tools" | eval sigma_description="Rename as a legitim Sysinternals Suite tools to evade detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[False Sysinternals Suite Tools - sysmon]
description = Rename as a legitim Sysinternals Suite tools to evade detection
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\accesschk.exe" OR Image="*\\accesschk64.exe" OR Image="*\\AccessEnum.exe" OR Image="*\\ADExplorer.exe" OR Image="*\\ADExplorer64.exe" OR Image="*\\ADInsight.exe" OR Image="*\\ADInsight64.exe" OR Image="*\\adrestore.exe" OR Image="*\\adrestore64.exe" OR Image="*\\Autologon.exe" OR Image="*\\Autologon64.exe" OR Image="*\\Autoruns.exe" OR Image="*\\Autoruns64.exe" OR Image="*\\autorunsc.exe" OR Image="*\\autorunsc64.exe" OR Image="*\\Bginfo.exe" OR Image="*\\Bginfo64.exe" OR Image="*\\Cacheset.exe" OR Image="*\\Cacheset64.exe" OR Image="*\\Clockres.exe" OR Image="*\\Clockres64.exe" OR Image="*\\Contig.exe" OR Image="*\\Contig64.exe" OR Image="*\\Coreinfo.exe" OR Image="*\\Coreinfo64.exe" OR Image="*\\CPUSTRES.EXE" OR Image="*\\CPUSTRES64.EXE" OR Image="*\\ctrl2cap.exe" OR Image="*\\Dbgview.exe" OR Image="*\\dbgview64.exe" OR Image="*\\Desktops.exe" OR Image="*\\Desktops64.exe" OR Image="*\\disk2vhd.exe" OR Image="*\\disk2vhd64.exe" OR Image="*\\diskext.exe" OR Image="*\\diskext64.exe" OR Image="*\\Diskmon.exe" OR Image="*\\Diskmon64.exe" OR Image="*\\DiskView.exe" OR Image="*\\DiskView64.exe" OR Image="*\\du.exe" OR Image="*\\du64.exe" OR Image="*\\efsdump.exe" OR Image="*\\FindLinks.exe" OR Image="*\\FindLinks64.exe" OR Image="*\\handle.exe" OR Image="*\\handle64.exe" OR Image="*\\hex2dec.exe" OR Image="*\\hex2dec64.exe" OR Image="*\\junction.exe" OR Image="*\\junction64.exe" OR Image="*\\ldmdump.exe" OR Image="*\\listdlls.exe" OR Image="*\\listdlls64.exe" OR Image="*\\livekd.exe" OR Image="*\\livekd64.exe" OR Image="*\\loadOrd.exe" OR Image="*\\loadOrd64.exe" OR Image="*\\loadOrdC.exe" OR Image="*\\loadOrdC64.exe" OR Image="*\\logonsessions.exe" OR Image="*\\logonsessions64.exe" OR Image="*\\movefile.exe" OR Image="*\\movefile64.exe" OR Image="*\\notmyfault.exe" OR Image="*\\notmyfault64.exe" OR Image="*\\notmyfaultc.exe" OR Image="*\\notmyfaultc64.exe" OR Image="*\\ntfsinfo.exe" OR Image="*\\ntfsinfo64.exe" OR Image="*\\pendmoves.exe" OR Image="*\\pendmoves64.exe" OR Image="*\\pipelist.exe" OR Image="*\\pipelist64.exe" OR Image="*\\portmon.exe" OR Image="*\\procdump.exe" OR Image="*\\procdump64.exe" OR Image="*\\procexp.exe" OR Image="*\\procexp64.exe" OR Image="*\\Procmon.exe" OR Image="*\\Procmon64.exe" OR Image="*\\psExec.exe" OR Image="*\\psExec64.exe" OR Image="*\\psfile.exe" OR Image="*\\psfile64.exe" OR Image="*\\psGetsid.exe" OR Image="*\\psGetsid64.exe" OR Image="*\\psInfo.exe" OR Image="*\\psInfo64.exe" OR Image="*\\pskill.exe" OR Image="*\\pskill64.exe" OR Image="*\\pslist.exe" OR Image="*\\pslist64.exe" OR Image="*\\psLoggedon.exe" OR Image="*\\psLoggedon64.exe" OR Image="*\\psloglist.exe" OR Image="*\\psloglist64.exe" OR Image="*\\pspasswd.exe" OR Image="*\\pspasswd64.exe" OR Image="*\\psping.exe" OR Image="*\\psping64.exe" OR Image="*\\psService.exe" OR Image="*\\psService64.exe" OR Image="*\\psshutdown.exe" OR Image="*\\psshutdown64.exe" OR Image="*\\pssuspend.exe" OR Image="*\\pssuspend64.exe" OR Image="*\\RAMMap.exe" OR Image="*\\RDCMan.exe" OR Image="*\\RegDelNull.exe" OR Image="*\\RegDelNull64.exe" OR Image="*\\regjump.exe" OR Image="*\\ru.exe" OR Image="*\\ru64.exe" OR Image="*\\sdelete.exe" OR Image="*\\sdelete64.exe" OR Image="*\\ShareEnum.exe" OR Image="*\\ShareEnum64.exe" OR Image="*\\shellRunas.exe" OR Image="*\\sigcheck.exe" OR Image="*\\sigcheck64.exe" OR Image="*\\streams.exe" OR Image="*\\streams64.exe" OR Image="*\\strings.exe" OR Image="*\\strings64.exe" OR Image="*\\sync.exe" OR Image="*\\sync64.exe" OR Image="*\\Sysmon.exe" OR Image="*\\Sysmon64.exe" OR Image="*\\tcpvcon.exe" OR Image="*\\tcpvcon64.exe" OR Image="*\\tcpview.exe" OR Image="*\\tcpview64.exe" OR Image="*\\Testlimit.exe" OR Image="*\\Testlimit64.exe" OR Image="*\\vmmap.exe" OR Image="*\\vmmap64.exe" OR Image="*\\Volumeid.exe" OR Image="*\\Volumeid64.exe" OR Image="*\\whois.exe" OR Image="*\\whois64.exe" OR Image="*\\Winobj.exe" OR Image="*\\Winobj64.exe" OR Image="*\\ZoomIt.exe" OR Image="*\\ZoomIt64.exe") NOT (((Company="Sysinternals - www.sysinternals.com" OR Company="Sysinternals")) OR (NOT Company="*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="False Sysinternals Suite Tools" | eval sigma_description="Rename as a legitim Sysinternals Suite tools to evade detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[File or Folder Permissions Modifications - winevent]
description = Detects a file or folder's permissions being modified.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\takeown.exe" OR New_Process_Name="*\\cacls.exe" OR New_Process_Name="*\\icacls.exe") Process_Command_Line="*/grant*") OR ((New_Process_Name="*\\attrib.exe" Process_Command_Line="*-r*") NOT ((Process_Command_Line="*ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\connectivity.history /reset") OR (Process_Command_Line="*ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\config.properties /grant :r *" Process_Command_Line="*S-1-5-19:F*") OR (Process_Command_Line="*\\AppData\\Local\\Programs\\Microsoft VS Code*"))))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1222.001" | eval sigma_title="File or Folder Permissions Modifications" | eval sigma_description="Detects a file or folder's permissions being modified."
dispatch.earliest_time = -24h@h
alert.track = 0

[File or Folder Permissions Modifications - sysmon]
description = Detects a file or folder's permissions being modified.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\takeown.exe" OR Image="*\\cacls.exe" OR Image="*\\icacls.exe") CommandLine="*/grant*") OR ((Image="*\\attrib.exe" CommandLine="*-r*") NOT ((CommandLine="*ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\connectivity.history /reset") OR (CommandLine="*ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\config.properties /grant :r *" CommandLine="*S-1-5-19:F*") OR (CommandLine="*\\AppData\\Local\\Programs\\Microsoft VS Code*"))))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1222.001" | eval sigma_title="File or Folder Permissions Modifications" | eval sigma_description="Detects a file or folder's permissions being modified."
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Drive Enumeration - winevent]
description = Attackers may leverage fsutil to enumerated connected drives.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") Process_Command_Line="*drives*") | eval sigma_attack_tags="attack.peripheral_device_discovery attack.t1120" | eval sigma_title="Fsutil Drive Enumeration" | eval sigma_description="Attackers may leverage fsutil to enumerated connected drives."
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Drive Enumeration - sysmon]
description = Attackers may leverage fsutil to enumerated connected drives.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") CommandLine="*drives*") | eval sigma_attack_tags="attack.peripheral_device_discovery attack.t1120" | eval sigma_title="Fsutil Drive Enumeration" | eval sigma_description="Attackers may leverage fsutil to enumerated connected drives."
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Behavior Set SymlinkEvaluation - winevent]
description = A symbolic link is a type of file that contains a reference to another file.
This is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt

search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\fsutil.exe" Process_Command_Line="*behavior *" Process_Command_Line="*set *" Process_Command_Line="*SymlinkEvaluation*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Fsutil Behavior Set SymlinkEvaluation" | eval sigma_description="A symbolic link is a type of file that contains a reference to another file.
This is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Behavior Set SymlinkEvaluation - sysmon]
description = A symbolic link is a type of file that contains a reference to another file.
This is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt

search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\fsutil.exe" CommandLine="*behavior *" CommandLine="*set *" CommandLine="*SymlinkEvaluation*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Fsutil Behavior Set SymlinkEvaluation" | eval sigma_description="A symbolic link is a type of file that contains a reference to another file.
This is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Grabbing Sensitive Hives via Reg Utility - winevent]
description = Dump sam, system or security hives using REG.exe utility
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*save*" OR Process_Command_Line="*export*" OR Process_Command_Line="*ˢave*" OR Process_Command_Line="*eˣport*") (Process_Command_Line="*hklm*" OR Process_Command_Line="*hk˪m*" OR Process_Command_Line="*hkey_local_machine*" OR Process_Command_Line="*hkey_˪ocal_machine*" OR Process_Command_Line="*hkey_loca˪_machine*" OR Process_Command_Line="*hkey_˪oca˪_machine*") (Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security" OR Process_Command_Line="*\\ˢystem" OR Process_Command_Line="*\\syˢtem" OR Process_Command_Line="*\\ˢyˢtem" OR Process_Command_Line="*\\ˢam" OR Process_Command_Line="*\\ˢecurity")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.004 attack.t1003.005 car.2013-07-001" | eval sigma_title="Grabbing Sensitive Hives via Reg Utility" | eval sigma_description="Dump sam, system or security hives using REG.exe utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Grabbing Sensitive Hives via Reg Utility - sysmon]
description = Dump sam, system or security hives using REG.exe utility
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*save*" OR CommandLine="*export*" OR CommandLine="*ˢave*" OR CommandLine="*eˣport*") (CommandLine="*hklm*" OR CommandLine="*hk˪m*" OR CommandLine="*hkey_local_machine*" OR CommandLine="*hkey_˪ocal_machine*" OR CommandLine="*hkey_loca˪_machine*" OR CommandLine="*hkey_˪oca˪_machine*") (CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security" OR CommandLine="*\\ˢystem" OR CommandLine="*\\syˢtem" OR CommandLine="*\\ˢyˢtem" OR CommandLine="*\\ˢam" OR CommandLine="*\\ˢecurity")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.004 attack.t1003.005 car.2013-07-001" | eval sigma_title="Grabbing Sensitive Hives via Reg Utility" | eval sigma_description="Dump sam, system or security hives using REG.exe utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[ADCSPwn Hack Tool - winevent]
description = Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* --adcs *" Process_Command_Line="* --port *") | eval sigma_attack_tags="attack.credential_access attack.t1557.001" | eval sigma_title="ADCSPwn Hack Tool" | eval sigma_description="Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service"
dispatch.earliest_time = -24h@h
alert.track = 0

[ADCSPwn Hack Tool - sysmon]
description = Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* --adcs *" CommandLine="* --port *") | eval sigma_attack_tags="attack.credential_access attack.t1557.001" | eval sigma_title="ADCSPwn Hack Tool" | eval sigma_description="Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bloodhound and Sharphound Hack Tool - winevent]
description = Detects command line parameters used by Bloodhound and Sharphound hack tools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\Bloodhound.exe*" OR New_Process_Name="*\\SharpHound.exe*") OR (Process_Command_Line="* -CollectionMethod All *" OR Process_Command_Line="*.exe -c All -d *" OR Process_Command_Line="*Invoke-Bloodhound*" OR Process_Command_Line="*Get-BloodHoundData*") OR (Process_Command_Line="* -JsonFolder *" Process_Command_Line="* -ZipFileName *") OR (Process_Command_Line="* DCOnly *" Process_Command_Line="* --NoSaveCache *"))) | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002 attack.t1482 attack.t1069.001 attack.t1069.002 attack.execution attack.t1059.001" | eval sigma_title="Bloodhound and Sharphound Hack Tool" | eval sigma_description="Detects command line parameters used by Bloodhound and Sharphound hack tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bloodhound and Sharphound Hack Tool - sysmon]
description = Detects command line parameters used by Bloodhound and Sharphound hack tools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Bloodhound.exe*" OR Image="*\\SharpHound.exe*") OR (CommandLine="* -CollectionMethod All *" OR CommandLine="*.exe -c All -d *" OR CommandLine="*Invoke-Bloodhound*" OR CommandLine="*Get-BloodHoundData*") OR (CommandLine="* -JsonFolder *" CommandLine="* -ZipFileName *") OR (CommandLine="* DCOnly *" CommandLine="* --NoSaveCache *"))) | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002 attack.t1482 attack.t1069.001 attack.t1069.002 attack.execution attack.t1059.001" | eval sigma_title="Bloodhound and Sharphound Hack Tool" | eval sigma_description="Detects command line parameters used by Bloodhound and Sharphound hack tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hacktool by Cube0x0 - winevent]
description = Detects the use of tools created by a well-known hacktool producer named Cube0x0, which includes his handle in all binaries as company information in the PE headers (SharpPrintNightmare, KrbRelay, SharpMapExec etc.)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Company="Cube0x0") | eval sigma_attack_tags="" | eval sigma_title="Hacktool by Cube0x0" | eval sigma_description="Detects the use of tools created by a well-known hacktool producer named Cube0x0, which includes his handle in all binaries as company information in the PE headers (SharpPrintNightmare, KrbRelay, SharpMapExec etc.)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hacktool by Cube0x0 - sysmon]
description = Detects the use of tools created by a well-known hacktool producer named Cube0x0, which includes his handle in all binaries as company information in the PE headers (SharpPrintNightmare, KrbRelay, SharpMapExec etc.)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Company="Cube0x0") | eval sigma_attack_tags="" | eval sigma_title="Hacktool by Cube0x0" | eval sigma_description="Detects the use of tools created by a well-known hacktool producer named Cube0x0, which includes his handle in all binaries as company information in the PE headers (SharpPrintNightmare, KrbRelay, SharpMapExec etc.)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumpert Process Dumper - winevent]
description = Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Hashes="*09D278F9DE118EF09163C6140255C690*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumpert Process Dumper" | eval sigma_description="Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumpert Process Dumper - sysmon]
description = Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Hashes="*09D278F9DE118EF09163C6140255C690*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumpert Process Dumper" | eval sigma_description="Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hydra Password Guessing Hack Tool - winevent]
description = Detects command line parameters used by Hydra password guessing hack tool
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-u *" Process_Command_Line="*-p *" (Process_Command_Line="*^USER^*" OR Process_Command_Line="*^PASS^*")) | eval sigma_attack_tags="attack.credential_access attack.t1110 attack.t1110.001" | eval sigma_title="Hydra Password Guessing Hack Tool" | eval sigma_description="Detects command line parameters used by Hydra password guessing hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hydra Password Guessing Hack Tool - sysmon]
description = Detects command line parameters used by Hydra password guessing hack tool
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-u *" CommandLine="*-p *" (CommandLine="*^USER^*" OR CommandLine="*^PASS^*")) | eval sigma_attack_tags="attack.credential_access attack.t1110 attack.t1110.001" | eval sigma_title="Hydra Password Guessing Hack Tool" | eval sigma_description="Detects command line parameters used by Hydra password guessing hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Koadic Execution - winevent]
description = Detects command line parameters used by Koadic hack tool
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Process_Command_Line="*/q*" Process_Command_Line="*/c*" Process_Command_Line="*chcp*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.005 attack.t1059.007" | eval sigma_title="Koadic Execution" | eval sigma_description="Detects command line parameters used by Koadic hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Koadic Execution - sysmon]
description = Detects command line parameters used by Koadic hack tool
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" CommandLine="*/q*" CommandLine="*/c*" CommandLine="*chcp*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.005 attack.t1059.007" | eval sigma_title="Koadic Execution" | eval sigma_description="Detects command line parameters used by Koadic hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[KrbRelay Hack Tool - winevent]
description = Detects the use of KrbRelay, a Kerberos relaying tool
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\KrbRelay.exe" OR OriginalFileName="KrbRelay.exe" OR (Process_Command_Line="* -spn *" Process_Command_Line="* -clsid *" Process_Command_Line="* -rbcd *") OR (Process_Command_Line="*shadowcred*" Process_Command_Line="*clsid*" Process_Command_Line="*spn*") OR (Process_Command_Line="*spn *" Process_Command_Line="*session *" Process_Command_Line="*clsid *"))) | eval sigma_attack_tags="attack.credential_access attack.t1558.003" | eval sigma_title="KrbRelay Hack Tool" | eval sigma_description="Detects the use of KrbRelay, a Kerberos relaying tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[KrbRelay Hack Tool - sysmon]
description = Detects the use of KrbRelay, a Kerberos relaying tool
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\KrbRelay.exe" OR OriginalFileName="KrbRelay.exe" OR (CommandLine="* -spn *" CommandLine="* -clsid *" CommandLine="* -rbcd *") OR (CommandLine="*shadowcred*" CommandLine="*clsid*" CommandLine="*spn*") OR (CommandLine="*spn *" CommandLine="*session *" CommandLine="*clsid *"))) | eval sigma_attack_tags="attack.credential_access attack.t1558.003" | eval sigma_title="KrbRelay Hack Tool" | eval sigma_description="Detects the use of KrbRelay, a Kerberos relaying tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[KrbRelayUp Hack Tool - winevent]
description = Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\KrbRelayUp.exe" OR OriginalFileName="KrbRelayUp.exe" OR (Process_Command_Line="* relay *" Process_Command_Line="* -Domain *" Process_Command_Line="* -ComputerName *") OR (Process_Command_Line="* krbscm *" Process_Command_Line="* -sc *") OR (Process_Command_Line="* spawn *" Process_Command_Line="* -d *" Process_Command_Line="* -cn *" Process_Command_Line="* -cp *"))) | eval sigma_attack_tags="attack.credential_access attack.t1558.003 attack.lateral_movement attack.t1550.003" | eval sigma_title="KrbRelayUp Hack Tool" | eval sigma_description="Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced"
dispatch.earliest_time = -24h@h
alert.track = 0

[KrbRelayUp Hack Tool - sysmon]
description = Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\KrbRelayUp.exe" OR OriginalFileName="KrbRelayUp.exe" OR (CommandLine="* relay *" CommandLine="* -Domain *" CommandLine="* -ComputerName *") OR (CommandLine="* krbscm *" CommandLine="* -sc *") OR (CommandLine="* spawn *" CommandLine="* -d *" CommandLine="* -cn *" CommandLine="* -cp *"))) | eval sigma_attack_tags="attack.credential_access attack.t1558.003 attack.lateral_movement attack.t1550.003" | eval sigma_title="KrbRelayUp Hack Tool" | eval sigma_description="Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rubeus Hack Tool - winevent]
description = Detects the execution of the hacktool Rubeus via PE information of command line parameters
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*˚\\Rubeus.exe'" OR OriginalFileName="Rubeus.exe" OR (Process_Command_Line="* asreproast *" OR Process_Command_Line="* dump /service:krbtgt *" OR Process_Command_Line="* kerberoast *" OR Process_Command_Line="* createnetonly /program:*" OR Process_Command_Line="* ptt /ticket:*" OR Process_Command_Line="* /impersonateuser:*" OR Process_Command_Line="* renew /ticket:*" OR Process_Command_Line="* asktgt /user:*" OR Process_Command_Line="* harvest /interval:*" OR Process_Command_Line="* s4u /user:*" OR Process_Command_Line="* s4u /ticket:*" OR Process_Command_Line="* hash /password:*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1558.003 attack.lateral_movement attack.t1550.003" | eval sigma_title="Rubeus Hack Tool" | eval sigma_description="Detects the execution of the hacktool Rubeus via PE information of command line parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rubeus Hack Tool - sysmon]
description = Detects the execution of the hacktool Rubeus via PE information of command line parameters
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*˚\\Rubeus.exe'" OR OriginalFileName="Rubeus.exe" OR (CommandLine="* asreproast *" OR CommandLine="* dump /service:krbtgt *" OR CommandLine="* kerberoast *" OR CommandLine="* createnetonly /program:*" OR CommandLine="* ptt /ticket:*" OR CommandLine="* /impersonateuser:*" OR CommandLine="* renew /ticket:*" OR CommandLine="* asktgt /user:*" OR CommandLine="* harvest /interval:*" OR CommandLine="* s4u /user:*" OR CommandLine="* s4u /ticket:*" OR CommandLine="* hash /password:*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1558.003 attack.lateral_movement attack.t1550.003" | eval sigma_title="Rubeus Hack Tool" | eval sigma_description="Detects the execution of the hacktool Rubeus via PE information of command line parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[SecurityXploded Tool - winevent]
description = Detects the execution of SecurityXploded Tools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Company="SecurityXploded" OR New_Process_Name="*PasswordDump.exe" OR OriginalFileName="*PasswordDump.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1555" | eval sigma_title="SecurityXploded Tool" | eval sigma_description="Detects the execution of SecurityXploded Tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[SecurityXploded Tool - sysmon]
description = Detects the execution of SecurityXploded Tools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Company="SecurityXploded" OR Image="*PasswordDump.exe" OR OriginalFileName="*PasswordDump.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1555" | eval sigma_title="SecurityXploded Tool" | eval sigma_description="Detects the execution of SecurityXploded Tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Credential Editor - winevent]
description = Detects the use of Windows Credential Editor (WCE)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Imphash="a53a02b997935fd8eedcb5f7abab9b9f" OR Imphash="e96a73c7bf33a464c510ede582318bf2") OR (Hashes="*IMPHASH=a53a02b997935fd8eedcb5f7abab9b9f*" OR Hashes="*IMPHASH=e96a73c7bf33a464c510ede582318bf2*")) OR (Process_Command_Line="*.exe -S" Creator_Process_Name="*\\services.exe")) NOT (New_Process_Name="*\\clussvc.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0005" | eval sigma_title="Windows Credential Editor" | eval sigma_description="Detects the use of Windows Credential Editor (WCE)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Credential Editor - sysmon]
description = Detects the use of Windows Credential Editor (WCE)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Imphash="a53a02b997935fd8eedcb5f7abab9b9f" OR Imphash="e96a73c7bf33a464c510ede582318bf2") OR (Hashes="*IMPHASH=a53a02b997935fd8eedcb5f7abab9b9f*" OR Hashes="*IMPHASH=e96a73c7bf33a464c510ede582318bf2*")) OR (CommandLine="*.exe -S" ParentImage="*\\services.exe")) NOT (Image="*\\clussvc.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.s0005" | eval sigma_title="Windows Credential Editor" | eval sigma_description="Detects the use of Windows Credential Editor (WCE)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Hacktool Imphash - winevent]
description = Detects the use of Windows hacktools based on their import hash (imphash) even if the files have been renamed
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Imphash="BCCA3C247B619DCD13C8CDFF5F123932" OR Imphash="3A19059BD7688CB88E70005F18EFC439" OR Imphash="9DA6D5D77BE11712527DCAB86DF449A3" OR Imphash="A6E01BC1AB89F8D91D9EAB72032AAE88" OR Imphash="D21BBC50DCC169D7B4D0F01962793154" OR Imphash="9528A0E91E28FBB88AD433FEABCA2456" OR Imphash="4C1B52A19748428E51B14C278D0F58E3" OR Imphash="725BB81DC24214F6ECACC0CFB36AD30D" OR Imphash="672B13F4A0B6F27D29065123FE882DFC" OR Imphash="0C106686A31BFE2BA931AE1CF6E9DBC6" OR Imphash="23867A89C2B8FC733BE6CF5EF902F2D1" OR Imphash="9FB060C2977A9D9B782440B98D410C3E" OR Imphash="B18A1401FF8F444056D29450FBC0A6CE" OR Imphash="13F08707F759AF6003837A150A371BA1" OR Imphash="749A7BB1F0B4C4455949C0B2BF7F9E9F" OR Imphash="94CB940A1A6B65BED4D5A8F849CE9793" OR Imphash="1781F06048A7E58B323F0B9259BE798B" OR Imphash="CB567F9498452721D77A451374955F5F" OR Imphash="730073214094CD328547BF1F72289752" OR Imphash="6EEFD92BFFBFB27F378B81C09CA96786" OR Imphash="AC615FB1D93576FA3C26077A619C9144" OR Imphash="DC25EE78E2EF4D36FAA0BADF1E7461C9" OR Imphash="17B461A082950FC6332228572138B80C" OR Imphash="C547F2E66061A8DFFB6F5A3FF63C0A74" OR Imphash="0588081AB0E63BA785938467E1B10CCA" OR Imphash="ADA161BF41B8E5E9132858CB54CAB5FB" OR Imphash="2A1BC4913CD5ECB0434DF07CB675B798" OR Imphash="11083E75553BAAE21DC89CE8F9A195E4" OR Imphash="A23D29C9E566F2FA8FFBB79267F5DF80") OR (Hashes="*IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932*" OR Hashes="*IMPHASH=3A19059BD7688CB88E70005F18EFC439*" OR Hashes="*IMPHASH=9DA6D5D77BE11712527DCAB86DF449A3*" OR Hashes="*IMPHASH=A6E01BC1AB89F8D91D9EAB72032AAE88*" OR Hashes="*IMPHASH=D21BBC50DCC169D7B4D0F01962793154*" OR Hashes="*IMPHASH=9528A0E91E28FBB88AD433FEABCA2456*" OR Hashes="*IMPHASH=4C1B52A19748428E51B14C278D0F58E3*" OR Hashes="*IMPHASH=725BB81DC24214F6ECACC0CFB36AD30D*" OR Hashes="*IMPHASH=672B13F4A0B6F27D29065123FE882DFC*" OR Hashes="*IMPHASH=0C106686A31BFE2BA931AE1CF6E9DBC6*" OR Hashes="*IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1*" OR Hashes="*IMPHASH=9FB060C2977A9D9B782440B98D410C3E*" OR Hashes="*IMPHASH=B18A1401FF8F444056D29450FBC0A6CE*" OR Hashes="*IMPHASH=13F08707F759AF6003837A150A371BA1*" OR Hashes="*IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F*" OR Hashes="*IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793*" OR Hashes="*IMPHASH=1781F06048A7E58B323F0B9259BE798B*" OR Hashes="*IMPHASH=CB567F9498452721D77A451374955F5F*" OR Hashes="*IMPHASH=730073214094CD328547BF1F72289752*" OR Hashes="*IMPHASH=6EEFD92BFFBFB27F378B81C09CA96786*" OR Hashes="*IMPHASH=AC615FB1D93576FA3C26077A619C9144*" OR Hashes="*IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9*" OR Hashes="*IMPHASH=17B461A082950FC6332228572138B80C*" OR Hashes="*IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74*" OR Hashes="*IMPHASH=0588081AB0E63BA785938467E1B10CCA*" OR Hashes="*IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB*" OR Hashes="*IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798*" OR Hashes="*IMPHASH=11083E75553BAAE21DC89CE8F9A195E4*" OR Hashes="*IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80*"))) | eval sigma_attack_tags="" | eval sigma_title="Windows Hacktool Imphash" | eval sigma_description="Detects the use of Windows hacktools based on their import hash (imphash) even if the files have been renamed"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Hacktool Imphash - sysmon]
description = Detects the use of Windows hacktools based on their import hash (imphash) even if the files have been renamed
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Imphash="BCCA3C247B619DCD13C8CDFF5F123932" OR Imphash="3A19059BD7688CB88E70005F18EFC439" OR Imphash="9DA6D5D77BE11712527DCAB86DF449A3" OR Imphash="A6E01BC1AB89F8D91D9EAB72032AAE88" OR Imphash="D21BBC50DCC169D7B4D0F01962793154" OR Imphash="9528A0E91E28FBB88AD433FEABCA2456" OR Imphash="4C1B52A19748428E51B14C278D0F58E3" OR Imphash="725BB81DC24214F6ECACC0CFB36AD30D" OR Imphash="672B13F4A0B6F27D29065123FE882DFC" OR Imphash="0C106686A31BFE2BA931AE1CF6E9DBC6" OR Imphash="23867A89C2B8FC733BE6CF5EF902F2D1" OR Imphash="9FB060C2977A9D9B782440B98D410C3E" OR Imphash="B18A1401FF8F444056D29450FBC0A6CE" OR Imphash="13F08707F759AF6003837A150A371BA1" OR Imphash="749A7BB1F0B4C4455949C0B2BF7F9E9F" OR Imphash="94CB940A1A6B65BED4D5A8F849CE9793" OR Imphash="1781F06048A7E58B323F0B9259BE798B" OR Imphash="CB567F9498452721D77A451374955F5F" OR Imphash="730073214094CD328547BF1F72289752" OR Imphash="6EEFD92BFFBFB27F378B81C09CA96786" OR Imphash="AC615FB1D93576FA3C26077A619C9144" OR Imphash="DC25EE78E2EF4D36FAA0BADF1E7461C9" OR Imphash="17B461A082950FC6332228572138B80C" OR Imphash="C547F2E66061A8DFFB6F5A3FF63C0A74" OR Imphash="0588081AB0E63BA785938467E1B10CCA" OR Imphash="ADA161BF41B8E5E9132858CB54CAB5FB" OR Imphash="2A1BC4913CD5ECB0434DF07CB675B798" OR Imphash="11083E75553BAAE21DC89CE8F9A195E4" OR Imphash="A23D29C9E566F2FA8FFBB79267F5DF80") OR (Hashes="*IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932*" OR Hashes="*IMPHASH=3A19059BD7688CB88E70005F18EFC439*" OR Hashes="*IMPHASH=9DA6D5D77BE11712527DCAB86DF449A3*" OR Hashes="*IMPHASH=A6E01BC1AB89F8D91D9EAB72032AAE88*" OR Hashes="*IMPHASH=D21BBC50DCC169D7B4D0F01962793154*" OR Hashes="*IMPHASH=9528A0E91E28FBB88AD433FEABCA2456*" OR Hashes="*IMPHASH=4C1B52A19748428E51B14C278D0F58E3*" OR Hashes="*IMPHASH=725BB81DC24214F6ECACC0CFB36AD30D*" OR Hashes="*IMPHASH=672B13F4A0B6F27D29065123FE882DFC*" OR Hashes="*IMPHASH=0C106686A31BFE2BA931AE1CF6E9DBC6*" OR Hashes="*IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1*" OR Hashes="*IMPHASH=9FB060C2977A9D9B782440B98D410C3E*" OR Hashes="*IMPHASH=B18A1401FF8F444056D29450FBC0A6CE*" OR Hashes="*IMPHASH=13F08707F759AF6003837A150A371BA1*" OR Hashes="*IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F*" OR Hashes="*IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793*" OR Hashes="*IMPHASH=1781F06048A7E58B323F0B9259BE798B*" OR Hashes="*IMPHASH=CB567F9498452721D77A451374955F5F*" OR Hashes="*IMPHASH=730073214094CD328547BF1F72289752*" OR Hashes="*IMPHASH=6EEFD92BFFBFB27F378B81C09CA96786*" OR Hashes="*IMPHASH=AC615FB1D93576FA3C26077A619C9144*" OR Hashes="*IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9*" OR Hashes="*IMPHASH=17B461A082950FC6332228572138B80C*" OR Hashes="*IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74*" OR Hashes="*IMPHASH=0588081AB0E63BA785938467E1B10CCA*" OR Hashes="*IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB*" OR Hashes="*IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798*" OR Hashes="*IMPHASH=11083E75553BAAE21DC89CE8F9A195E4*" OR Hashes="*IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80*"))) | eval sigma_attack_tags="" | eval sigma_title="Windows Hacktool Imphash" | eval sigma_description="Detects the use of Windows hacktools based on their import hash (imphash) even if the files have been renamed"
dispatch.earliest_time = -24h@h
alert.track = 0

[File Download with Headless Browser - winevent]
description = This is an unusual method to download files. It starts a browser headless and downloads a file from a location. This can be used by threat actors to download files.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\msedge.exe" OR New_Process_Name="*\\chrome.exe") Process_Command_Line="*--headless*" Process_Command_Line="*dump-dom*" Process_Command_Line="*http*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="File Download with Headless Browser" | eval sigma_description="This is an unusual method to download files. It starts a browser headless and downloads a file from a location. This can be used by threat actors to download files."
dispatch.earliest_time = -24h@h
alert.track = 0

[File Download with Headless Browser - sysmon]
description = This is an unusual method to download files. It starts a browser headless and downloads a file from a location. This can be used by threat actors to download files.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\msedge.exe" OR Image="*\\chrome.exe") CommandLine="*--headless*" CommandLine="*dump-dom*" CommandLine="*http*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="File Download with Headless Browser" | eval sigma_description="This is an unusual method to download files. It starts a browser headless and downloads a file from a location. This can be used by threat actors to download files."
dispatch.earliest_time = -24h@h
alert.track = 0

[HH.exe Execution - winevent]
description = Identifies usage of hh.exe executing recently modified .chm files.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\hh.exe" Process_Command_Line="*.chm*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001" | eval sigma_title="HH.exe Execution" | eval sigma_description="Identifies usage of hh.exe executing recently modified .chm files."
dispatch.earliest_time = -24h@h
alert.track = 0

[HH.exe Execution - sysmon]
description = Identifies usage of hh.exe executing recently modified .chm files.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\hh.exe" CommandLine="*.chm*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001" | eval sigma_title="HH.exe Execution" | eval sigma_description="Identifies usage of hh.exe executing recently modified .chm files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Writing Of Malicious Files To The Fonts Folder - winevent]
description = Monitors for the hiding possible malicious files in the C:\Windows\Fonts\ location. This folder doesn't require admin privillege to be written and executed from.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*echo*" OR Process_Command_Line="*copy*" OR Process_Command_Line="*type*" OR Process_Command_Line="*file createnew*" OR Process_Command_Line="*cacls*") Process_Command_Line="*C:\\Windows\\Fonts\\*" (Process_Command_Line="*.sh*" OR Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bin*" OR Process_Command_Line="*.bat*" OR Process_Command_Line="*.cmd*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.msh*" OR Process_Command_Line="*.reg*" OR Process_Command_Line="*.scr*" OR Process_Command_Line="*.ps*" OR Process_Command_Line="*.vb*" OR Process_Command_Line="*.jar*" OR Process_Command_Line="*.pl*" OR Process_Command_Line="*.inf*" OR Process_Command_Line="*.cpl*" OR Process_Command_Line="*.hta*" OR Process_Command_Line="*.msi*" OR Process_Command_Line="*.vbs*")) | table Process_Command_Line,ParentProcess,Process_Command_Line | eval sigma_attack_tags="attack.t1211 attack.t1059 attack.defense_evasion attack.persistence" | eval sigma_title="Writing Of Malicious Files To The Fonts Folder" | eval sigma_description="Monitors for the hiding possible malicious files in the C:\Windows\Fonts\ location. This folder doesn't require admin privillege to be written and executed from."
dispatch.earliest_time = -24h@h
alert.track = 0

[Writing Of Malicious Files To The Fonts Folder - sysmon]
description = Monitors for the hiding possible malicious files in the C:\Windows\Fonts\ location. This folder doesn't require admin privillege to be written and executed from.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*echo*" OR CommandLine="*copy*" OR CommandLine="*type*" OR CommandLine="*file createnew*" OR CommandLine="*cacls*") CommandLine="*C:\\Windows\\Fonts\\*" (CommandLine="*.sh*" OR CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bin*" OR CommandLine="*.bat*" OR CommandLine="*.cmd*" OR CommandLine="*.js*" OR CommandLine="*.msh*" OR CommandLine="*.reg*" OR CommandLine="*.scr*" OR CommandLine="*.ps*" OR CommandLine="*.vb*" OR CommandLine="*.jar*" OR CommandLine="*.pl*" OR CommandLine="*.inf*" OR CommandLine="*.cpl*" OR CommandLine="*.hta*" OR CommandLine="*.msi*" OR CommandLine="*.vbs*")) | table CommandLine,ParentProcess,CommandLine | eval sigma_attack_tags="attack.t1211 attack.t1059 attack.defense_evasion attack.persistence" | eval sigma_title="Writing Of Malicious Files To The Fonts Folder" | eval sigma_description="Monitors for the hiding possible malicious files in the C:\Windows\Fonts\ location. This folder doesn't require admin privillege to be written and executed from."
dispatch.earliest_time = -24h@h
alert.track = 0

[High Integrity Sdclt Process - winevent]
description = A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*sdclt.exe" IntegrityLevel="High") | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002" | eval sigma_title="High Integrity Sdclt Process" | eval sigma_description="A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[High Integrity Sdclt Process - sysmon]
description = A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*sdclt.exe" IntegrityLevel="High") | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002" | eval sigma_title="High Integrity Sdclt Process" | eval sigma_description="A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateMiniDump Hacktool - winevent]
description = Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\CreateMiniDump.exe*" OR Imphash="4a07f944a83e8a7c2525efa35dd30e2f" OR Hashes="*IMPHASH=4a07f944a83e8a7c2525efa35dd30e2f*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="CreateMiniDump Hacktool" | eval sigma_description="Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateMiniDump Hacktool - sysmon]
description = Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\CreateMiniDump.exe*" OR Imphash="4a07f944a83e8a7c2525efa35dd30e2f" OR Hashes="*IMPHASH=4a07f944a83e8a7c2525efa35dd30e2f*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="CreateMiniDump Hacktool" | eval sigma_description="Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Tool UACMe - winevent]
description = Detects execution of UACMe (a tool used for UAC bypass) via default PE metadata
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="UACMe" OR Company="REvol Corp" OR OriginalFileName="Akagi.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Tool UACMe" | eval sigma_description="Detects execution of UACMe (a tool used for UAC bypass) via default PE metadata"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Tool UACMe - sysmon]
description = Detects execution of UACMe (a tool used for UAC bypass) via default PE metadata
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="UACMe" OR Company="REvol Corp" OR OriginalFileName="Akagi.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Tool UACMe" | eval sigma_description="Detects execution of UACMe (a tool used for UAC bypass) via default PE metadata"
dispatch.earliest_time = -24h@h
alert.track = 0

[HTML Help Shell Spawn - winevent]
description = Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="C:\\Windows\\hh.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\rundll32.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001 attack.t1218.010 attack.t1218.011 attack.execution attack.t1059.001 attack.t1059.003 attack.t1059.005 attack.t1059.007 attack.t1047" | eval sigma_title="HTML Help Shell Spawn" | eval sigma_description="Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)"
dispatch.earliest_time = -24h@h
alert.track = 0

[HTML Help Shell Spawn - sysmon]
description = Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="C:\\Windows\\hh.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\rundll32.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.001 attack.t1218.010 attack.t1218.011 attack.execution attack.t1059.001 attack.t1059.003 attack.t1059.005 attack.t1059.007 attack.t1047" | eval sigma_title="HTML Help Shell Spawn" | eval sigma_description="Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious HWP Sub Processes - winevent]
description = Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\Hwp.exe" New_Process_Name="*\\gbb.exe") | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.execution attack.t1203 attack.t1059.003 attack.g0032" | eval sigma_title="Suspicious HWP Sub Processes" | eval sigma_description="Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious HWP Sub Processes - sysmon]
description = Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\Hwp.exe" Image="*\\gbb.exe") | eval sigma_attack_tags="attack.initial_access attack.t1566.001 attack.execution attack.t1203 attack.t1059.003 attack.g0032" | eval sigma_title="Suspicious HWP Sub Processes" | eval sigma_description="Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Tool Execution - winevent]
description = Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\goldenPac*" OR New_Process_Name="*\\karmaSMB*" OR New_Process_Name="*\\kintercept*" OR New_Process_Name="*\\ntlmrelayx*" OR New_Process_Name="*\\rpcdump*" OR New_Process_Name="*\\samrdump*" OR New_Process_Name="*\\secretsdump*" OR New_Process_Name="*\\smbexec*" OR New_Process_Name="*\\smbrelayx*" OR New_Process_Name="*\\wmiexec*" OR New_Process_Name="*\\wmipersist*") OR (New_Process_Name="*\\atexec_windows.exe" OR New_Process_Name="*\\dcomexec_windows.exe" OR New_Process_Name="*\\dpapi_windows.exe" OR New_Process_Name="*\\findDelegation_windows.exe" OR New_Process_Name="*\\GetADUsers_windows.exe" OR New_Process_Name="*\\GetNPUsers_windows.exe" OR New_Process_Name="*\\getPac_windows.exe" OR New_Process_Name="*\\getST_windows.exe" OR New_Process_Name="*\\getTGT_windows.exe" OR New_Process_Name="*\\GetUserSPNs_windows.exe" OR New_Process_Name="*\\ifmap_windows.exe" OR New_Process_Name="*\\mimikatz_windows.exe" OR New_Process_Name="*\\netview_windows.exe" OR New_Process_Name="*\\nmapAnswerMachine_windows.exe" OR New_Process_Name="*\\opdump_windows.exe" OR New_Process_Name="*\\psexec_windows.exe" OR New_Process_Name="*\\rdp_check_windows.exe" OR New_Process_Name="*\\sambaPipe_windows.exe" OR New_Process_Name="*\\smbclient_windows.exe" OR New_Process_Name="*\\smbserver_windows.exe" OR New_Process_Name="*\\sniffer_windows.exe" OR New_Process_Name="*\\sniff_windows.exe" OR New_Process_Name="*\\split_windows.exe" OR New_Process_Name="*\\ticketer_windows.exe"))) | eval sigma_attack_tags="attack.execution attack.t1557.001" | eval sigma_title="Impacket Tool Execution" | eval sigma_description="Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Tool Execution - sysmon]
description = Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\goldenPac*" OR Image="*\\karmaSMB*" OR Image="*\\kintercept*" OR Image="*\\ntlmrelayx*" OR Image="*\\rpcdump*" OR Image="*\\samrdump*" OR Image="*\\secretsdump*" OR Image="*\\smbexec*" OR Image="*\\smbrelayx*" OR Image="*\\wmiexec*" OR Image="*\\wmipersist*") OR (Image="*\\atexec_windows.exe" OR Image="*\\dcomexec_windows.exe" OR Image="*\\dpapi_windows.exe" OR Image="*\\findDelegation_windows.exe" OR Image="*\\GetADUsers_windows.exe" OR Image="*\\GetNPUsers_windows.exe" OR Image="*\\getPac_windows.exe" OR Image="*\\getST_windows.exe" OR Image="*\\getTGT_windows.exe" OR Image="*\\GetUserSPNs_windows.exe" OR Image="*\\ifmap_windows.exe" OR Image="*\\mimikatz_windows.exe" OR Image="*\\netview_windows.exe" OR Image="*\\nmapAnswerMachine_windows.exe" OR Image="*\\opdump_windows.exe" OR Image="*\\psexec_windows.exe" OR Image="*\\rdp_check_windows.exe" OR Image="*\\sambaPipe_windows.exe" OR Image="*\\smbclient_windows.exe" OR Image="*\\smbserver_windows.exe" OR Image="*\\sniffer_windows.exe" OR Image="*\\sniff_windows.exe" OR Image="*\\split_windows.exe" OR Image="*\\ticketer_windows.exe"))) | eval sigma_attack_tags="attack.execution attack.t1557.001" | eval sigma_title="Impacket Tool Execution" | eval sigma_description="Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Lateralization Detection - winevent]
description = Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\wmiprvse.exe" OR Creator_Process_Name="*\\mmc.exe" OR Creator_Process_Name="*\\explorer.exe" OR Creator_Process_Name="*\\services.exe") Process_Command_Line="*cmd.exe*" Process_Command_Line="*/Q*" Process_Command_Line="*/c*" Process_Command_Line="*\\\\127.0.0.1\\*" Process_Command_Line="*&1*") OR ((ParentCommandLine="*svchost.exe -k netsvcs*" OR ParentCommandLine="*taskeng.exe*") Process_Command_Line="*cmd.exe*" Process_Command_Line="*/C*" Process_Command_Line="*Windows\\Temp\\*" Process_Command_Line="*&1*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.003" | eval sigma_title="Impacket Lateralization Detection" | eval sigma_description="Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Lateralization Detection - sysmon]
description = Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\wmiprvse.exe" OR ParentImage="*\\mmc.exe" OR ParentImage="*\\explorer.exe" OR ParentImage="*\\services.exe") CommandLine="*cmd.exe*" CommandLine="*/Q*" CommandLine="*/c*" CommandLine="*\\\\127.0.0.1\\*" CommandLine="*&1*") OR ((ParentCommandLine="*svchost.exe -k netsvcs*" OR ParentCommandLine="*taskeng.exe*") CommandLine="*cmd.exe*" CommandLine="*/C*" CommandLine="*Windows\\Temp\\*" CommandLine="*&1*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.lateral_movement attack.t1021.003" | eval sigma_title="Impacket Lateralization Detection" | eval sigma_description="Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution - winevent]
description = Detect indirect command execution via Program Compatibility Assistant (pcalua.exe or forfiles.exe).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\pcalua.exe" OR Creator_Process_Name="*\\forfiles.exe")) | table ComputerName,Account_Name,ParentCommandLine,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Indirect Command Execution" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant (pcalua.exe or forfiles.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution - sysmon]
description = Detect indirect command execution via Program Compatibility Assistant (pcalua.exe or forfiles.exe).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\pcalua.exe" OR ParentImage="*\\forfiles.exe")) | table ComputerName,User,ParentCommandLine,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Indirect Command Execution" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant (pcalua.exe or forfiles.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Debugger Registration Cmdline - winevent]
description = Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\*" (Process_Command_Line="*sethc.exe*" OR Process_Command_Line="*utilman.exe*" OR Process_Command_Line="*osk.exe*" OR Process_Command_Line="*magnify.exe*" OR Process_Command_Line="*narrator.exe*" OR Process_Command_Line="*displayswitch.exe*" OR Process_Command_Line="*atbroker.exe*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.008" | eval sigma_title="Suspicious Debugger Registration Cmdline" | eval sigma_description="Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Debugger Registration Cmdline - sysmon]
description = Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\CurrentVersion\\Image File Execution Options\\*" (CommandLine="*sethc.exe*" OR CommandLine="*utilman.exe*" OR CommandLine="*osk.exe*" OR CommandLine="*magnify.exe*" OR CommandLine="*narrator.exe*" OR CommandLine="*displayswitch.exe*" OR CommandLine="*atbroker.exe*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.008" | eval sigma_title="Suspicious Debugger Registration Cmdline" | eval sigma_description="Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive AT Job - winevent]
description = Detect an interactive AT job, which may be used as a form of privilege escalation.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\at.exe" Process_Command_Line="*interactive*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.002" | eval sigma_title="Interactive AT Job" | eval sigma_description="Detect an interactive AT job, which may be used as a form of privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive AT Job - sysmon]
description = Detect an interactive AT job, which may be used as a form of privilege escalation.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\at.exe" CommandLine="*interactive*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.002" | eval sigma_title="Interactive AT Job" | eval sigma_description="Detect an interactive AT job, which may be used as a form of privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation COMPRESS OBFUSCATION - winevent]
description = Detects Obfuscated Powershell via COMPRESS OBFUSCATION
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*new-object*" Process_Command_Line="*text.encoding]::ascii*" (Process_Command_Line="*system.io.compression.deflatestream*" OR Process_Command_Line="*system.io.streamreader*") Process_Command_Line="*readtoend") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation COMPRESS OBFUSCATION" | eval sigma_description="Detects Obfuscated Powershell via COMPRESS OBFUSCATION"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation COMPRESS OBFUSCATION - sysmon]
description = Detects Obfuscated Powershell via COMPRESS OBFUSCATION
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*new-object*" CommandLine="*text.encoding]::ascii*" (CommandLine="*system.io.compression.deflatestream*" OR CommandLine="*system.io.streamreader*") CommandLine="*readtoend") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation COMPRESS OBFUSCATION" | eval sigma_description="Detects Obfuscated Powershell via COMPRESS OBFUSCATION"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation RUNDLL LAUNCHER - winevent]
description = Detects Obfuscated Powershell via RUNDLL LAUNCHER
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*shell32.dll*" Process_Command_Line="*shellexec_rundll*" Process_Command_Line="*powershell*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation RUNDLL LAUNCHER" | eval sigma_description="Detects Obfuscated Powershell via RUNDLL LAUNCHER"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation RUNDLL LAUNCHER - sysmon]
description = Detects Obfuscated Powershell via RUNDLL LAUNCHER
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*shell32.dll*" CommandLine="*shellexec_rundll*" CommandLine="*powershell*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation RUNDLL LAUNCHER" | eval sigma_description="Detects Obfuscated Powershell via RUNDLL LAUNCHER"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use MSHTA - winevent]
description = Detects Obfuscated Powershell via use MSHTA in Scripts
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*set*" Process_Command_Line="*&&*" Process_Command_Line="*mshta*" Process_Command_Line="*vbscript:createobject*" Process_Command_Line="*.run*" Process_Command_Line="*(window.close)*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use MSHTA" | eval sigma_description="Detects Obfuscated Powershell via use MSHTA in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use MSHTA - sysmon]
description = Detects Obfuscated Powershell via use MSHTA in Scripts
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*set*" CommandLine="*&&*" CommandLine="*mshta*" CommandLine="*vbscript:createobject*" CommandLine="*.run*" CommandLine="*(window.close)*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use MSHTA" | eval sigma_description="Detects Obfuscated Powershell via use MSHTA in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Rundll32 - winevent]
description = Detects Obfuscated Powershell via use Rundll32 in Scripts
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*&&*" Process_Command_Line="*rundll32*" Process_Command_Line="*shell32.dll*" Process_Command_Line="*shellexec_rundll*" (Process_Command_Line="*value*" OR Process_Command_Line="*invoke*" OR Process_Command_Line="*comspec*" OR Process_Command_Line="*iex*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Rundll32" | eval sigma_description="Detects Obfuscated Powershell via use Rundll32 in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invoke-Obfuscation Via Use Rundll32 - sysmon]
description = Detects Obfuscated Powershell via use Rundll32 in Scripts
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*&&*" CommandLine="*rundll32*" CommandLine="*shell32.dll*" CommandLine="*shellexec_rundll*" (CommandLine="*value*" OR CommandLine="*invoke*" OR CommandLine="*comspec*" OR CommandLine="*iex*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Invoke-Obfuscation Via Use Rundll32" | eval sigma_description="Detects Obfuscated Powershell via use Rundll32 in Scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Jlaive Usage For Assembly Execution In-Memory - winevent]
description = Detect the use of Jlaive to execute assemblies in a copied PowerShell
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\cmd.exe" ParentCommandLine="*.bat") ((New_Process_Name="*\\xcopy.exe" Process_Command_Line="*powershell.exe*" Process_Command_Line="*.bat.exe*") OR (New_Process_Name="*\\attrib.exe" Process_Command_Line="*+s*" Process_Command_Line="*+h*" Process_Command_Line="*.bat.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Jlaive Usage For Assembly Execution In-Memory" | eval sigma_description="Detect the use of Jlaive to execute assemblies in a copied PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Jlaive Usage For Assembly Execution In-Memory - sysmon]
description = Detect the use of Jlaive to execute assemblies in a copied PowerShell
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\cmd.exe" ParentCommandLine="*.bat") ((Image="*\\xcopy.exe" CommandLine="*powershell.exe*" CommandLine="*.bat.exe*") OR (Image="*\\attrib.exe" CommandLine="*+s*" CommandLine="*+h*" CommandLine="*.bat.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059.003" | eval sigma_title="Jlaive Usage For Assembly Execution In-Memory" | eval sigma_description="Detect the use of Jlaive to execute assemblies in a copied PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spwaned by SVCHOST - winevent]
description = Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\svchost.exe" New_Process_Name="*\\mshta.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005" | eval sigma_title="MSHTA Spwaned by SVCHOST" | eval sigma_description="Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spwaned by SVCHOST - sysmon]
description = Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\svchost.exe" Image="*\\mshta.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005" | eval sigma_title="MSHTA Spwaned by SVCHOST" | eval sigma_description="Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Local Accounts Discovery - winevent]
description = Local accounts, System Owner/User discovery using operating systems utilities
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\whoami.exe" OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="*useraccount*" Process_Command_Line="*get*") OR (New_Process_Name="*\\quser.exe" OR New_Process_Name="*\\qwinsta.exe") OR (New_Process_Name="*\\cmdkey.exe" Process_Command_Line="* /l*") OR (New_Process_Name="*\\cmd.exe" Process_Command_Line="* /c*" Process_Command_Line="*dir *" Process_Command_Line="*\\Users\\*")) NOT (Process_Command_Line="* rmdir *")) OR (((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*user*") NOT ((Process_Command_Line="*/domain*" OR Process_Command_Line="*/add*" OR Process_Command_Line="*/delete*" OR Process_Command_Line="*/active*" OR Process_Command_Line="*/expires*" OR Process_Command_Line="*/passwordreq*" OR Process_Command_Line="*/scriptpath*" OR Process_Command_Line="*/times*" OR Process_Command_Line="*/workstations*"))))) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1033 attack.t1087.001" | eval sigma_title="Local Accounts Discovery" | eval sigma_description="Local accounts, System Owner/User discovery using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Local Accounts Discovery - sysmon]
description = Local accounts, System Owner/User discovery using operating systems utilities
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\whoami.exe" OR (Image="*\\wmic.exe" CommandLine="*useraccount*" CommandLine="*get*") OR (Image="*\\quser.exe" OR Image="*\\qwinsta.exe") OR (Image="*\\cmdkey.exe" CommandLine="* /l*") OR (Image="*\\cmd.exe" CommandLine="* /c*" CommandLine="*dir *" CommandLine="*\\Users\\*")) NOT (CommandLine="* rmdir *")) OR (((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*user*") NOT ((CommandLine="*/domain*" OR CommandLine="*/add*" OR CommandLine="*/delete*" OR CommandLine="*/active*" OR CommandLine="*/expires*" OR CommandLine="*/passwordreq*" OR CommandLine="*/scriptpath*" OR CommandLine="*/times*" OR CommandLine="*/workstations*"))))) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1033 attack.t1087.001" | eval sigma_title="Local Accounts Discovery" | eval sigma_description="Local accounts, System Owner/User discovery using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Logon Scripts (UserInitMprLogonScript) - winevent]
description = Detects creation or execution of UserInitMprLogonScript persistence method
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\userinit.exe" NOT (((New_Process_Name="*explorer.exe" OR New_Process_Name="*\\proquota.exe")) OR ((Process_Command_Line="*netlogon*.bat*" OR Process_Command_Line="*UsrLogon.cmd*" OR Process_Command_Line="*C:\\WINDOWS\\Explorer.EXE*")) OR (New_Process_Name="*\\Citrix\\System32\\icast.exe"))) OR Process_Command_Line="*UserInitMprLogonScript*")) | eval sigma_attack_tags="attack.t1037.001 attack.persistence" | eval sigma_title="Logon Scripts (UserInitMprLogonScript)" | eval sigma_description="Detects creation or execution of UserInitMprLogonScript persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Logon Scripts (UserInitMprLogonScript) - sysmon]
description = Detects creation or execution of UserInitMprLogonScript persistence method
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\userinit.exe" NOT (((Image="*explorer.exe" OR Image="*\\proquota.exe")) OR ((CommandLine="*netlogon*.bat*" OR CommandLine="*UsrLogon.cmd*" OR CommandLine="*C:\\WINDOWS\\Explorer.EXE*")) OR (Image="*\\Citrix\\System32\\icast.exe"))) OR CommandLine="*UserInitMprLogonScript*")) | eval sigma_attack_tags="attack.t1037.001 attack.persistence" | eval sigma_title="Logon Scripts (UserInitMprLogonScript)" | eval sigma_description="Detects creation or execution of UserInitMprLogonScript persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Adplus.exe - winevent]
description = The 'AdPlus.exe' binary that is part of the Windows SDK can be used as a lolbin to dump process memory and execute arbitrary commands
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\adplus.exe" OR OriginalFileName="Adplus.exe") (Process_Command_Line="* -hang *" OR Process_Command_Line="* -pn *" OR Process_Command_Line="* -pmn *" OR Process_Command_Line="* -p *" OR Process_Command_Line="* -po *" OR Process_Command_Line="* -c *" OR Process_Command_Line="* -sc *")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1003.001" | eval sigma_title="Use of Adplus.exe" | eval sigma_description="The 'AdPlus.exe' binary that is part of the Windows SDK can be used as a lolbin to dump process memory and execute arbitrary commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Adplus.exe - sysmon]
description = The 'AdPlus.exe' binary that is part of the Windows SDK can be used as a lolbin to dump process memory and execute arbitrary commands
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\adplus.exe" OR OriginalFileName="Adplus.exe") (CommandLine="* -hang *" OR CommandLine="* -pn *" OR CommandLine="* -pmn *" OR CommandLine="* -p *" OR CommandLine="* -po *" OR CommandLine="* -c *" OR CommandLine="* -sc *")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1003.001" | eval sigma_title="Use of Adplus.exe" | eval sigma_description="The 'AdPlus.exe' binary that is part of the Windows SDK can be used as a lolbin to dump process memory and execute arbitrary commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious aspnet_compiler.exe Execution - winevent]
description = Execute C# code with the Build Provider and proper folder structure in place.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*C:\\Windows\\Microsoft.NET\\Framework*" New_Process_Name="*aspnet_compiler.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Suspicious aspnet_compiler.exe Execution" | eval sigma_description="Execute C# code with the Build Provider and proper folder structure in place."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious aspnet_compiler.exe Execution - sysmon]
description = Execute C# code with the Build Provider and proper folder structure in place.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*C:\\Windows\\Microsoft.NET\\Framework*" Image="*aspnet_compiler.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Suspicious aspnet_compiler.exe Execution" | eval sigma_description="Execute C# code with the Build Provider and proper folder structure in place."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Subsystem for Linux Bash Execution - winevent]
description = Performs execution of specified file, can be used for defensive evasion.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*bash.exe*" Process_Command_Line="*-c *") NOT (((ParentCommandLine="*C:\\Program Files\\Git\\post-install.bat*" OR ParentCommandLine="*C:\\Program Files (x86)\\Git\\post-install.bat*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Subsystem for Linux Bash Execution" | eval sigma_description="Performs execution of specified file, can be used for defensive evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Subsystem for Linux Bash Execution - sysmon]
description = Performs execution of specified file, can be used for defensive evasion.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*bash.exe*" CommandLine="*-c *") NOT (((ParentCommandLine="*C:\\Program Files\\Git\\post-install.bat*" OR ParentCommandLine="*C:\\Program Files (x86)\\Git\\post-install.bat*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Subsystem for Linux Bash Execution" | eval sigma_description="Performs execution of specified file, can be used for defensive evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Download via CertOC.exe - winevent]
description = Detects when a user downloads file by using CertOC.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\certoc.exe" OR OriginalFileName="CertOC.exe") Process_Command_Line="*-GetCACAPS*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious File Download via CertOC.exe" | eval sigma_description="Detects when a user downloads file by using CertOC.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Download via CertOC.exe - sysmon]
description = Detects when a user downloads file by using CertOC.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\certoc.exe" OR OriginalFileName="CertOC.exe") CommandLine="*-GetCACAPS*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious File Download via CertOC.exe" | eval sigma_description="Detects when a user downloads file by using CertOC.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 - winevent]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*CL_Invocation.ps1*" Process_Command_Line="*SyncInvoke*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via CL_Invocation.ps1 - sysmon]
description = Detects Execution via SyncInvoke in CL_Invocation.ps1 module
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*CL_Invocation.ps1*" CommandLine="*SyncInvoke*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Execution via CL_Invocation.ps1" | eval sigma_description="Detects Execution via SyncInvoke in CL_Invocation.ps1 module"
dispatch.earliest_time = -24h@h
alert.track = 0

[CL_LoadAssembly.ps1 Proxy Execution - winevent]
description = Detects the use of a Micorsoft signed script to execute commands and bypassing AppLocker.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\CL_LoadAssembly.ps1*" OR Process_Command_Line="*LoadAssemblyFromPath *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="CL_LoadAssembly.ps1 Proxy Execution" | eval sigma_description="Detects the use of a Micorsoft signed script to execute commands and bypassing AppLocker."
dispatch.earliest_time = -24h@h
alert.track = 0

[CL_LoadAssembly.ps1 Proxy Execution - sysmon]
description = Detects the use of a Micorsoft signed script to execute commands and bypassing AppLocker.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\CL_LoadAssembly.ps1*" OR CommandLine="*LoadAssemblyFromPath *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="CL_LoadAssembly.ps1 Proxy Execution" | eval sigma_description="Detects the use of a Micorsoft signed script to execute commands and bypassing AppLocker."
dispatch.earliest_time = -24h@h
alert.track = 0

[CL_Mutexverifiers.ps1 Proxy Execution - winevent]
description = Detects the use of a Micorsoft signed script to execute commands
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\CL_Mutexverifiers.ps1*" Process_Command_Line="*runAfterCancelProcess *") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="CL_Mutexverifiers.ps1 Proxy Execution" | eval sigma_description="Detects the use of a Micorsoft signed script to execute commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[CL_Mutexverifiers.ps1 Proxy Execution - sysmon]
description = Detects the use of a Micorsoft signed script to execute commands
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\CL_Mutexverifiers.ps1*" CommandLine="*runAfterCancelProcess *") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="CL_Mutexverifiers.ps1 Proxy Execution" | eval sigma_description="Detects the use of a Micorsoft signed script to execute commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Cmdl32 Execution - winevent]
description = lolbas Cmdl32 is use to download a payload to evade antivirus
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\cmdl32.exe" OR OriginalFileName="CMDL32.EXE") (Process_Command_Line="*/vpn *" Process_Command_Line="*/lan *")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Suspicious Cmdl32 Execution" | eval sigma_description="lolbas Cmdl32 is use to download a payload to evade antivirus"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Cmdl32 Execution - sysmon]
description = lolbas Cmdl32 is use to download a payload to evade antivirus
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\cmdl32.exe" OR OriginalFileName="CMDL32.EXE") (CommandLine="*/vpn *" CommandLine="*/lan *")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Suspicious Cmdl32 Execution" | eval sigma_description="lolbas Cmdl32 is use to download a payload to evade antivirus"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ConfigSecurityPolicy Execution - winevent]
description = Upload file, credentials or data exfiltration with Binary part of Windows Defender
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*ConfigSecurityPolicy.exe*" OR New_Process_Name="*\\ConfigSecurityPolicy.exe" OR OriginalFileName="ConfigSecurityPolicy.exe") (Process_Command_Line="*https://*" OR Process_Command_Line="*http://*" OR Process_Command_Line="*ftp://*")) | eval sigma_attack_tags="attack.exfiltration attack.t1567" | eval sigma_title="Suspicious ConfigSecurityPolicy Execution" | eval sigma_description="Upload file, credentials or data exfiltration with Binary part of Windows Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ConfigSecurityPolicy Execution - sysmon]
description = Upload file, credentials or data exfiltration with Binary part of Windows Defender
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*ConfigSecurityPolicy.exe*" OR Image="*\\ConfigSecurityPolicy.exe" OR OriginalFileName="ConfigSecurityPolicy.exe") (CommandLine="*https://*" OR CommandLine="*http://*" OR CommandLine="*ftp://*")) | eval sigma_attack_tags="attack.exfiltration attack.t1567" | eval sigma_title="Suspicious ConfigSecurityPolicy Execution" | eval sigma_description="Upload file, credentials or data exfiltration with Binary part of Windows Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[GatherNetworkInfo.vbs Script Usage - winevent]
description = Adversaries can abuse of C:\Windows\System32\gatherNetworkInfo.vbs script along with cscript.exe to gather information about the target
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cscript.exe*" Process_Command_Line="*gatherNetworkInfo.vbs*") | table Process_Command_Line,Creator_Process_Name | eval sigma_attack_tags="attack.discovery attack.group_policy_discovery attack.execution attack.command_and_scripting_interpreter attack.visual_basic attack.t1059.005" | eval sigma_title="GatherNetworkInfo.vbs Script Usage" | eval sigma_description="Adversaries can abuse of C:\Windows\System32\gatherNetworkInfo.vbs script along with cscript.exe to gather information about the target"
dispatch.earliest_time = -24h@h
alert.track = 0

[GatherNetworkInfo.vbs Script Usage - sysmon]
description = Adversaries can abuse of C:\Windows\System32\gatherNetworkInfo.vbs script along with cscript.exe to gather information about the target
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cscript.exe*" CommandLine="*gatherNetworkInfo.vbs*") | table CommandLine,ParentImage | eval sigma_attack_tags="attack.discovery attack.group_policy_discovery attack.execution attack.command_and_scripting_interpreter attack.visual_basic attack.t1059.005" | eval sigma_title="GatherNetworkInfo.vbs Script Usage" | eval sigma_description="Adversaries can abuse of C:\Windows\System32\gatherNetworkInfo.vbs script along with cscript.exe to gather information about the target"
dispatch.earliest_time = -24h@h
alert.track = 0

[LOLBAS Data Exfiltration by DataSvcUtil.exe - winevent]
description = Detects when a user performs data exfiltration by using DataSvcUtil.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*/in:*" OR Process_Command_Line="*/out:*" OR Process_Command_Line="*/uri:*") (New_Process_Name="*\\DataSvcUtil.exe" OR OriginalFileName="DataSvcUtil.exe")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1567" | eval sigma_title="LOLBAS Data Exfiltration by DataSvcUtil.exe" | eval sigma_description="Detects when a user performs data exfiltration by using DataSvcUtil.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[LOLBAS Data Exfiltration by DataSvcUtil.exe - sysmon]
description = Detects when a user performs data exfiltration by using DataSvcUtil.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*/in:*" OR CommandLine="*/out:*" OR CommandLine="*/uri:*") (Image="*\\DataSvcUtil.exe" OR OriginalFileName="DataSvcUtil.exe")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1567" | eval sigma_title="LOLBAS Data Exfiltration by DataSvcUtil.exe" | eval sigma_description="Detects when a user performs data exfiltration by using DataSvcUtil.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Diantz Download and Compress Into a CAB File - winevent]
description = Download and compress a remote file and store it in a cab file on local machine.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*diantz.exe*" Process_Command_Line="* \\\*" Process_Command_Line="*.cab*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Diantz Download and Compress Into a CAB File" | eval sigma_description="Download and compress a remote file and store it in a cab file on local machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Diantz Download and Compress Into a CAB File - sysmon]
description = Download and compress a remote file and store it in a cab file on local machine.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*diantz.exe*" CommandLine="* \\\*" CommandLine="*.cab*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Diantz Download and Compress Into a CAB File" | eval sigma_description="Download and compress a remote file and store it in a cab file on local machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Xwizard DLL Sideloading - winevent]
description = Detects the execution of Xwizard tool from the non-default directory which can be used to sideload a custom xwizards.dll
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\xwizard.exe" NOT (New_Process_Name="C:\\Windows\\System32\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Xwizard DLL Sideloading" | eval sigma_description="Detects the execution of Xwizard tool from the non-default directory which can be used to sideload a custom xwizards.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Xwizard DLL Sideloading - sysmon]
description = Detects the execution of Xwizard tool from the non-default directory which can be used to sideload a custom xwizards.dll
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\xwizard.exe" NOT (Image="C:\\Windows\\System32\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Xwizard DLL Sideloading" | eval sigma_description="Detects the execution of Xwizard tool from the non-default directory which can be used to sideload a custom xwizards.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Dump64.exe Execution - winevent]
description = Detects when a user bypasses Defender by renaming a tool to dump64.exe and placing it in a Visual Studio folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\dump64.exe" NOT (New_Process_Name="*\\Installer\\Feedback\\dump64.exe*")) OR (New_Process_Name="*\\dump64.exe" (Process_Command_Line="* -ma *" OR Process_Command_Line="*accpeteula*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Suspicious Dump64.exe Execution" | eval sigma_description="Detects when a user bypasses Defender by renaming a tool to dump64.exe and placing it in a Visual Studio folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Dump64.exe Execution - sysmon]
description = Detects when a user bypasses Defender by renaming a tool to dump64.exe and placing it in a Visual Studio folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\dump64.exe" NOT (Image="*\\Installer\\Feedback\\dump64.exe*")) OR (Image="*\\dump64.exe" (CommandLine="* -ma *" OR CommandLine="*accpeteula*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Suspicious Dump64.exe Execution" | eval sigma_description="Detects when a user bypasses Defender by renaming a tool to dump64.exe and placing it in a Visual Studio folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Monitoring Winget For LOLbin Execution - winevent]
description = Adversaries can abuse winget to download payloads remotely and execute them without touching disk. Winget will be included by default in Windows 10 and is already available in Windows 10 insider programs. The manifest option enables you to install an application by passing in a YAML file directly to the client. Winget can be used to download and install exe's, msi, msix files later.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*winget*" Process_Command_Line="*install*" (Process_Command_Line="*-m *" OR Process_Command_Line="*--manifest*")) | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059" | eval sigma_title="Monitoring Winget For LOLbin Execution" | eval sigma_description="Adversaries can abuse winget to download payloads remotely and execute them without touching disk. Winget will be included by default in Windows 10 and is already available in Windows 10 insider programs. The manifest option enables you to install an application by passing in a YAML file directly to the client. Winget can be used to download and install exe's, msi, msix files later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Monitoring Winget For LOLbin Execution - sysmon]
description = Adversaries can abuse winget to download payloads remotely and execute them without touching disk. Winget will be included by default in Windows 10 and is already available in Windows 10 insider programs. The manifest option enables you to install an application by passing in a YAML file directly to the client. Winget can be used to download and install exe's, msi, msix files later.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*winget*" CommandLine="*install*" (CommandLine="*-m *" OR CommandLine="*--manifest*")) | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059" | eval sigma_title="Monitoring Winget For LOLbin Execution" | eval sigma_description="Adversaries can abuse winget to download payloads remotely and execute them without touching disk. Winget will be included by default in Windows 10 and is already available in Windows 10 insider programs. The manifest option enables you to install an application by passing in a YAML file directly to the client. Winget can be used to download and install exe's, msi, msix files later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Extexport Execution - winevent]
description = Extexport.exe loads dll and is execute from other folder the original path
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*Extexport.exe*" OR New_Process_Name="*\\Extexport.exe" OR OriginalFileName="extexport.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Extexport Execution" | eval sigma_description="Extexport.exe loads dll and is execute from other folder the original path"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Extexport Execution - sysmon]
description = Extexport.exe loads dll and is execute from other folder the original path
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*Extexport.exe*" OR Image="*\\Extexport.exe" OR OriginalFileName="extexport.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Extexport Execution" | eval sigma_description="Extexport.exe loads dll and is execute from other folder the original path"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Extrac32 Execution - winevent]
description = Download or Copy file with Extrac32
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*extrac32.exe*" OR New_Process_Name="*\\extrac32.exe" OR OriginalFileName="extrac32.exe") Process_Command_Line="*.cab*" (Process_Command_Line="*/C*" OR Process_Command_Line="*/Y*" OR Process_Command_Line="* \\\*")) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Extrac32 Execution" | eval sigma_description="Download or Copy file with Extrac32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Extrac32 Execution - sysmon]
description = Download or Copy file with Extrac32
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*extrac32.exe*" OR Image="*\\extrac32.exe" OR OriginalFileName="extrac32.exe") CommandLine="*.cab*" (CommandLine="*/C*" OR CommandLine="*/Y*" OR CommandLine="* \\\*")) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Extrac32 Execution" | eval sigma_description="Download or Copy file with Extrac32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Findstr for Defense Evasion - winevent]
description = Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*findstr*" OR New_Process_Name="*findstr.exe" OR OriginalFileName="FINDSTR.EXE") (((Process_Command_Line="*/v*" OR Process_Command_Line="*-v*") (Process_Command_Line="*/l*" OR Process_Command_Line="*-l*")) OR ((Process_Command_Line="*/s*" OR Process_Command_Line="*-s*") (Process_Command_Line="*/i*" OR Process_Command_Line="*-i*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1564.004 attack.t1552.001 attack.t1105" | eval sigma_title="Abusing Findstr for Defense Evasion" | eval sigma_description="Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Findstr for Defense Evasion - sysmon]
description = Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*findstr*" OR Image="*findstr.exe" OR OriginalFileName="FINDSTR.EXE") (((CommandLine="*/v*" OR CommandLine="*-v*") (CommandLine="*/l*" OR CommandLine="*-l*")) OR ((CommandLine="*/s*" OR CommandLine="*-s*") (CommandLine="*/i*" OR CommandLine="*-i*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1564.004 attack.t1552.001 attack.t1105" | eval sigma_title="Abusing Findstr for Defense Evasion" | eval sigma_description="Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Forfiles For Execution - winevent]
description = Execute commands and binaries from the context of 'forfiles'. This is used as a LOLBIN for example to bypass application whitelisting.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\forfiles.exe" OR OriginalFileName="forfiles.exe") (Process_Command_Line="* /p *" OR Process_Command_Line="* -p *") (Process_Command_Line="* /m *" OR Process_Command_Line="* -m *") (Process_Command_Line="* /c *" OR Process_Command_Line="* -c *")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of Forfiles For Execution" | eval sigma_description="Execute commands and binaries from the context of 'forfiles'. This is used as a LOLBIN for example to bypass application whitelisting."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Forfiles For Execution - sysmon]
description = Execute commands and binaries from the context of 'forfiles'. This is used as a LOLBIN for example to bypass application whitelisting.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\forfiles.exe" OR OriginalFileName="forfiles.exe") (CommandLine="* /p *" OR CommandLine="* -p *") (CommandLine="* /m *" OR CommandLine="* -m *") (CommandLine="* /c *" OR CommandLine="* -c *")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of Forfiles For Execution" | eval sigma_description="Execute commands and binaries from the context of 'forfiles'. This is used as a LOLBIN for example to bypass application whitelisting."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of FSharp Interpreters - winevent]
description = The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\fsianycpu.exe" OR OriginalFileName="fsianycpu.exe" OR New_Process_Name="*\\fsi.exe" OR OriginalFileName="fsi.exe")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of FSharp Interpreters" | eval sigma_description="The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of FSharp Interpreters - sysmon]
description = The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\fsianycpu.exe" OR OriginalFileName="fsianycpu.exe" OR Image="*\\fsi.exe" OR OriginalFileName="fsi.exe")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of FSharp Interpreters" | eval sigma_description="The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules."
dispatch.earliest_time = -24h@h
alert.track = 0

[Gpscript Execution - winevent]
description = Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\gpscript.exe" OR OriginalFileName="GPSCRIPT.EXE") (Process_Command_Line="* /logon*" OR Process_Command_Line="* /startup*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Gpscript Execution" | eval sigma_description="Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Gpscript Execution - sysmon]
description = Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\gpscript.exe" OR OriginalFileName="GPSCRIPT.EXE") (CommandLine="* /logon*" OR CommandLine="* /startup*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Gpscript Execution" | eval sigma_description="Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ie4uinit Lolbin Use From Invalid Path - winevent]
description = Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\ie4uinit.exe" OR OriginalFileName="IE4UINIT.EXE") NOT (((CurrentDirectory="c:\\windows\\system32\\" OR CurrentDirectory="c:\\windows\\sysWOW64\\")) OR (NOT CurrentDirectory="*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Ie4uinit Lolbin Use From Invalid Path" | eval sigma_description="Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ie4uinit Lolbin Use From Invalid Path - sysmon]
description = Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\ie4uinit.exe" OR OriginalFileName="IE4UINIT.EXE") NOT (((CurrentDirectory="c:\\windows\\system32\\" OR CurrentDirectory="c:\\windows\\sysWOW64\\")) OR (NOT CurrentDirectory="*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Ie4uinit Lolbin Use From Invalid Path" | eval sigma_description="Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing IEExec To Download Payloads - winevent]
description = Detects execution of the IEExec utility to download payloads
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\IEExec.exe" OR OriginalFileName="IEExec.exe") (Process_Command_Line="*https://*" OR Process_Command_Line="*http://*")) | eval sigma_attack_tags="" | eval sigma_title="Abusing IEExec To Download Payloads" | eval sigma_description="Detects execution of the IEExec utility to download payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing IEExec To Download Payloads - sysmon]
description = Detects execution of the IEExec utility to download payloads
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\IEExec.exe" OR OriginalFileName="IEExec.exe") (CommandLine="*https://*" OR CommandLine="*http://*")) | eval sigma_attack_tags="" | eval sigma_title="Abusing IEExec To Download Payloads" | eval sigma_description="Detects execution of the IEExec utility to download payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ilasm Lolbin Use Compile C-Sharp - winevent]
description = Detect use of Ilasm.exe to compile c# code into dll or exe.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\ilasm.exe" OR OriginalFileName="ilasm.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Ilasm Lolbin Use Compile C-Sharp" | eval sigma_description="Detect use of Ilasm.exe to compile c# code into dll or exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Ilasm Lolbin Use Compile C-Sharp - sysmon]
description = Detect use of Ilasm.exe to compile c# code into dll or exe.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\ilasm.exe" OR OriginalFileName="ilasm.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Ilasm Lolbin Use Compile C-Sharp" | eval sigma_description="Detect use of Ilasm.exe to compile c# code into dll or exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[JSC Convert Javascript To Executable - winevent]
description = Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\jsc.exe" Process_Command_Line="*.js*") | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="JSC Convert Javascript To Executable" | eval sigma_description="Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format"
dispatch.earliest_time = -24h@h
alert.track = 0

[JSC Convert Javascript To Executable - sysmon]
description = Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\jsc.exe" CommandLine="*.js*") | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="JSC Convert Javascript To Executable" | eval sigma_description="Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Mftrace.exe - winevent]
description = The 'Trace log generation tool for Media Foundation Tools' (Mftrace.exe) can be used to execute arbitrary binaries
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\mftrace.exe" OR OriginalFileName="mftrace.exe") (Process_Command_Line="*.exe *" Process_Command_Line="*.exe")) OR Creator_Process_Name="*\\mftrace.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of Mftrace.exe" | eval sigma_description="The 'Trace log generation tool for Media Foundation Tools' (Mftrace.exe) can be used to execute arbitrary binaries"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Mftrace.exe - sysmon]
description = The 'Trace log generation tool for Media Foundation Tools' (Mftrace.exe) can be used to execute arbitrary binaries
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\mftrace.exe" OR OriginalFileName="mftrace.exe") (CommandLine="*.exe *" CommandLine="*.exe")) OR ParentImage="*\\mftrace.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of Mftrace.exe" | eval sigma_description="The 'Trace log generation tool for Media Foundation Tools' (Mftrace.exe) can be used to execute arbitrary binaries"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute MSDT Via Answer File - winevent]
description = Detects execution of 'msdt.exe' using an answer file which is simulating the legitimate way of calling msdt via 'pcwrun.exe' (For example from the compatibility tab)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msdt.exe" Process_Command_Line="*\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml*" (Process_Command_Line="* -af *" OR Process_Command_Line="* /af *")) NOT (Creator_Process_Name="*\\pcwrun.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Execute MSDT Via Answer File" | eval sigma_description="Detects execution of 'msdt.exe' using an answer file which is simulating the legitimate way of calling msdt via 'pcwrun.exe' (For example from the compatibility tab)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute MSDT Via Answer File - sysmon]
description = Detects execution of 'msdt.exe' using an answer file which is simulating the legitimate way of calling msdt via 'pcwrun.exe' (For example from the compatibility tab)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msdt.exe" CommandLine="*\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml*" (CommandLine="* -af *" OR CommandLine="* /af *")) NOT (ParentImage="*\\pcwrun.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Execute MSDT Via Answer File" | eval sigma_description="Detects execution of 'msdt.exe' using an answer file which is simulating the legitimate way of calling msdt via 'pcwrun.exe' (For example from the compatibility tab)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious OfflineScannerShell.exe Execution From Another Folder - winevent]
description = Use OfflineScannerShell.exe to execute mpclient.dll library in the current working directory
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\OfflineScannerShell.exe" NOT ((CurrentDirectory="C:\\Program Files\\Windows Defender\\Offline\\") OR (NOT CurrentDirectory="*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious OfflineScannerShell.exe Execution From Another Folder" | eval sigma_description="Use OfflineScannerShell.exe to execute mpclient.dll library in the current working directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious OfflineScannerShell.exe Execution From Another Folder - sysmon]
description = Use OfflineScannerShell.exe to execute mpclient.dll library in the current working directory
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\OfflineScannerShell.exe" NOT ((CurrentDirectory="C:\\Program Files\\Windows Defender\\Offline\\") OR (NOT CurrentDirectory="*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious OfflineScannerShell.exe Execution From Another Folder" | eval sigma_description="Use OfflineScannerShell.exe to execute mpclient.dll library in the current working directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of OpenConsole - winevent]
description = Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="OpenConsole.exe" OR New_Process_Name="*\\OpenConsole.exe") NOT (New_Process_Name="C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal*")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of OpenConsole" | eval sigma_description="Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of OpenConsole - sysmon]
description = Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="OpenConsole.exe" OR Image="*\\OpenConsole.exe") NOT (Image="C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal*")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of OpenConsole" | eval sigma_description="Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Pcalua For Execution - winevent]
description = Execute commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This is used as a LOLBIN for example to bypass application whitelisting.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\pcalua.exe" Process_Command_Line="* -a*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of Pcalua For Execution" | eval sigma_description="Execute commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This is used as a LOLBIN for example to bypass application whitelisting."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Pcalua For Execution - sysmon]
description = Execute commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This is used as a LOLBIN for example to bypass application whitelisting.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\pcalua.exe" CommandLine="* -a*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Use of Pcalua For Execution" | eval sigma_description="Execute commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This is used as a LOLBIN for example to bypass application whitelisting."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Pcwrun.EXE To Leverage Follina - winevent]
description = Detects indirect command execution via Program Compatibility Assistant 'pcwrun.exe' leveraging the follina (CVE-2022-30190) vulnerability
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\pcwrun.exe" Process_Command_Line="*../*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Execute Pcwrun.EXE To Leverage Follina" | eval sigma_description="Detects indirect command execution via Program Compatibility Assistant 'pcwrun.exe' leveraging the follina (CVE-2022-30190) vulnerability"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Pcwrun.EXE To Leverage Follina - sysmon]
description = Detects indirect command execution via Program Compatibility Assistant 'pcwrun.exe' leveraging the follina (CVE-2022-30190) vulnerability
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\pcwrun.exe" CommandLine="*../*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Execute Pcwrun.EXE To Leverage Follina" | eval sigma_description="Detects indirect command execution via Program Compatibility Assistant 'pcwrun.exe' leveraging the follina (CVE-2022-30190) vulnerability"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution By Program Compatibility Wizard - winevent]
description = Detect indirect command execution via Program Compatibility Assistant pcwrun.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\pcwrun.exe") | table ComputerName,Account_Name,ParentCommandLine,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Indirect Command Execution By Program Compatibility Wizard" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcwrun.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution By Program Compatibility Wizard - sysmon]
description = Detect indirect command execution via Program Compatibility Assistant pcwrun.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\pcwrun.exe") | table ComputerName,User,ParentCommandLine,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Indirect Command Execution By Program Compatibility Wizard" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcwrun.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of PktMon.exe - winevent]
description = Tools to Capture Network Packets on the windows 10 with October 2018 Update or later.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*PktMon.exe" OR OriginalFileName="PktMon.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1040" | eval sigma_title="Use of PktMon.exe" | eval sigma_description="Tools to Capture Network Packets on the windows 10 with October 2018 Update or later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of PktMon.exe - sysmon]
description = Tools to Capture Network Packets on the windows 10 with October 2018 Update or later.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*PktMon.exe" OR OriginalFileName="PktMon.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1040" | eval sigma_title="Use of PktMon.exe" | eval sigma_description="Tools to Capture Network Packets on the windows 10 with October 2018 Update or later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via PresentationHost.exe - winevent]
description = Detects usage of 'PresentationHost' which is a utility that runs '.xbap' (Browser Applications) files. It can be abused to run malicious '.xbap' files any bypass AWL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\presentationhost.exe" OR OriginalFileName="PresentationHost.exe") Process_Command_Line="*.xbap*") NOT ((Process_Command_Line="*C:\\Windows\\*" OR Process_Command_Line="*C:\\Program Files*"))) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via PresentationHost.exe" | eval sigma_description="Detects usage of 'PresentationHost' which is a utility that runs '.xbap' (Browser Applications) files. It can be abused to run malicious '.xbap' files any bypass AWL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via PresentationHost.exe - sysmon]
description = Detects usage of 'PresentationHost' which is a utility that runs '.xbap' (Browser Applications) files. It can be abused to run malicious '.xbap' files any bypass AWL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\presentationhost.exe" OR OriginalFileName="PresentationHost.exe") CommandLine="*.xbap*") NOT ((CommandLine="*C:\\Windows\\*" OR CommandLine="*C:\\Program Files*"))) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via PresentationHost.exe" | eval sigma_description="Detects usage of 'PresentationHost' which is a utility that runs '.xbap' (Browser Applications) files. It can be abused to run malicious '.xbap' files any bypass AWL"
dispatch.earliest_time = -24h@h
alert.track = 0

[PrintBrm ZIP Creation of Extraction - winevent]
description = Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\PrintBrm.exe" Process_Command_Line="* -f*" Process_Command_Line="*.zip*") | eval sigma_attack_tags="attack.command_and_control attack.t1105 attack.defense_evasion attack.t1564.004" | eval sigma_title="PrintBrm ZIP Creation of Extraction" | eval sigma_description="Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation."
dispatch.earliest_time = -24h@h
alert.track = 0

[PrintBrm ZIP Creation of Extraction - sysmon]
description = Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\PrintBrm.exe" CommandLine="* -f*" CommandLine="*.zip*") | eval sigma_attack_tags="attack.command_and_control attack.t1105 attack.defense_evasion attack.t1564.004" | eval sigma_title="PrintBrm ZIP Creation of Extraction" | eval sigma_description="Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Pubprn.vbs Proxy Execution - winevent]
description = Detects the use of a Microsoft signed script to execute commands.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\pubprn.vbs*" Process_Command_Line="*script:*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216.001" | eval sigma_title="Pubprn.vbs Proxy Execution" | eval sigma_description="Detects the use of a Microsoft signed script to execute commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Pubprn.vbs Proxy Execution - sysmon]
description = Detects the use of a Microsoft signed script to execute commands.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\pubprn.vbs*" CommandLine="*script:*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216.001" | eval sigma_title="Pubprn.vbs Proxy Execution" | eval sigma_description="Detects the use of a Microsoft signed script to execute commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution via Rasautou.exe - winevent]
description = Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rasautou.exe" OR OriginalFileName="rasdlui.exe") (Process_Command_Line="* -d *" Process_Command_Line="* -p *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="DLL Execution via Rasautou.exe" | eval sigma_description="Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p."
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution via Rasautou.exe - sysmon]
description = Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rasautou.exe" OR OriginalFileName="rasdlui.exe") (CommandLine="* -d *" CommandLine="* -p *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="DLL Execution via Rasautou.exe" | eval sigma_description="Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Remote.exe - winevent]
description = Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\remote.exe" OR OriginalFileName="remote.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of Remote.exe" | eval sigma_description="Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Remote.exe - sysmon]
description = Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\remote.exe" OR OriginalFileName="remote.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of Remote.exe" | eval sigma_description="Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Replace.exe Usage - winevent]
description = Detects the use of Replace.exe which can be used to replace file with another file
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\replace.exe" (Process_Command_Line="*/a*" OR Process_Command_Line="*-a*")) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Replace.exe Usage" | eval sigma_description="Detects the use of Replace.exe which can be used to replace file with another file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Replace.exe Usage - sysmon]
description = Detects the use of Replace.exe which can be used to replace file with another file
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\replace.exe" (CommandLine="*/a*" OR CommandLine="*-a*")) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Replace.exe Usage" | eval sigma_description="Detects the use of Replace.exe which can be used to replace file with another file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 InstallScreenSaver Execution - winevent]
description = An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*InstallScreenSaver*") | eval sigma_attack_tags="attack.t1218.011 attack.defense_evasion" | eval sigma_title="Rundll32 InstallScreenSaver Execution" | eval sigma_description="An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 InstallScreenSaver Execution - sysmon]
description = An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*InstallScreenSaver*") | eval sigma_attack_tags="attack.t1218.011 attack.defense_evasion" | eval sigma_title="Rundll32 InstallScreenSaver Execution" | eval sigma_description="An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Scriptrunner.exe - winevent]
description = The 'ScriptRunner.exe' binary can be abused to porxy execution through it and bypass possible whitelisting
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\ScriptRunner.exe" OR OriginalFileName="ScriptRunner.exe") Process_Command_Line="* -appvscript *") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Use of Scriptrunner.exe" | eval sigma_description="The 'ScriptRunner.exe' binary can be abused to porxy execution through it and bypass possible whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Scriptrunner.exe - sysmon]
description = The 'ScriptRunner.exe' binary can be abused to porxy execution through it and bypass possible whitelisting
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\ScriptRunner.exe" OR OriginalFileName="ScriptRunner.exe") CommandLine="* -appvscript *") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Use of Scriptrunner.exe" | eval sigma_description="The 'ScriptRunner.exe' binary can be abused to porxy execution through it and bypass possible whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Squirrel.exe - winevent]
description = The 'Squirrel.exe' binary that is part of multiple softwares (Slack, Teams, Discord...etc) can be used as a LOLBIN
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\squirrel.exe" (Process_Command_Line="* --download *" OR Process_Command_Line="* --update *" OR Process_Command_Line="* --updateRollback=*") Process_Command_Line="*http*") | eval sigma_attack_tags="attack.defense_evasion attack.execution" | eval sigma_title="Use of Squirrel.exe" | eval sigma_description="The 'Squirrel.exe' binary that is part of multiple softwares (Slack, Teams, Discord...etc) can be used as a LOLBIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Squirrel.exe - sysmon]
description = The 'Squirrel.exe' binary that is part of multiple softwares (Slack, Teams, Discord...etc) can be used as a LOLBIN
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\squirrel.exe" (CommandLine="* --download *" OR CommandLine="* --update *" OR CommandLine="* --updateRollback=*") CommandLine="*http*") | eval sigma_attack_tags="attack.defense_evasion attack.execution" | eval sigma_title="Use of Squirrel.exe" | eval sigma_description="The 'Squirrel.exe' binary that is part of multiple softwares (Slack, Teams, Discord...etc) can be used as a LOLBIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LOLBIN AccCheckConsole - winevent]
description = Detects suspicious LOLBIN AccCheckConsole execution with parameters as used to load an arbitrary DLL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\AccCheckConsole.exe" OR OriginalFileName="AccCheckConsole.exe") (Process_Command_Line="* -window *" Process_Command_Line="*.dll*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Suspicious LOLBIN AccCheckConsole" | eval sigma_description="Detects suspicious LOLBIN AccCheckConsole execution with parameters as used to load an arbitrary DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LOLBIN AccCheckConsole - sysmon]
description = Detects suspicious LOLBIN AccCheckConsole execution with parameters as used to load an arbitrary DLL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\AccCheckConsole.exe" OR OriginalFileName="AccCheckConsole.exe") (CommandLine="* -window *" CommandLine="*.dll*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Suspicious LOLBIN AccCheckConsole" | eval sigma_description="Detects suspicious LOLBIN AccCheckConsole execution with parameters as used to load an arbitrary DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Atbroker Execution - winevent]
description = Atbroker executing non-deafualt Assistive Technology applications
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*AtBroker.exe" Process_Command_Line="*start*") NOT ((Process_Command_Line="*animations*" OR Process_Command_Line="*audiodescription*" OR Process_Command_Line="*caretbrowsing*" OR Process_Command_Line="*caretwidth*" OR Process_Command_Line="*colorfiltering*" OR Process_Command_Line="*cursorscheme*" OR Process_Command_Line="*filterkeys*" OR Process_Command_Line="*focusborderheight*" OR Process_Command_Line="*focusborderwidth*" OR Process_Command_Line="*highcontrast*" OR Process_Command_Line="*keyboardcues*" OR Process_Command_Line="*keyboardpref*" OR Process_Command_Line="*magnifierpane*" OR Process_Command_Line="*messageduration*" OR Process_Command_Line="*minimumhitradius*" OR Process_Command_Line="*mousekeys*" OR Process_Command_Line="*Narrator*" OR Process_Command_Line="*osk*" OR Process_Command_Line="*overlappedcontent*" OR Process_Command_Line="*showsounds*" OR Process_Command_Line="*soundsentry*" OR Process_Command_Line="*stickykeys*" OR Process_Command_Line="*togglekeys*" OR Process_Command_Line="*windowarranging*" OR Process_Command_Line="*windowtracking*" OR Process_Command_Line="*windowtrackingtimeout*" OR Process_Command_Line="*windowtrackingzorder*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Atbroker Execution" | eval sigma_description="Atbroker executing non-deafualt Assistive Technology applications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Atbroker Execution - sysmon]
description = Atbroker executing non-deafualt Assistive Technology applications
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*AtBroker.exe" CommandLine="*start*") NOT ((CommandLine="*animations*" OR CommandLine="*audiodescription*" OR CommandLine="*caretbrowsing*" OR CommandLine="*caretwidth*" OR CommandLine="*colorfiltering*" OR CommandLine="*cursorscheme*" OR CommandLine="*filterkeys*" OR CommandLine="*focusborderheight*" OR CommandLine="*focusborderwidth*" OR CommandLine="*highcontrast*" OR CommandLine="*keyboardcues*" OR CommandLine="*keyboardpref*" OR CommandLine="*magnifierpane*" OR CommandLine="*messageduration*" OR CommandLine="*minimumhitradius*" OR CommandLine="*mousekeys*" OR CommandLine="*Narrator*" OR CommandLine="*osk*" OR CommandLine="*overlappedcontent*" OR CommandLine="*showsounds*" OR CommandLine="*soundsentry*" OR CommandLine="*stickykeys*" OR CommandLine="*togglekeys*" OR CommandLine="*windowarranging*" OR CommandLine="*windowtracking*" OR CommandLine="*windowtrackingtimeout*" OR CommandLine="*windowtrackingzorder*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Atbroker Execution" | eval sigma_description="Atbroker executing non-deafualt Assistive Technology applications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certreq Command to Download - winevent]
description = Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\certreq.exe" OR OriginalFileName="CertReq.exe") (Process_Command_Line="* -Post *" Process_Command_Line="* -config *" Process_Command_Line="* http*" Process_Command_Line="* C:\\windows\\win.ini *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Certreq Command to Download" | eval sigma_description="Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certreq Command to Download - sysmon]
description = Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\certreq.exe" OR OriginalFileName="CertReq.exe") (CommandLine="* -Post *" CommandLine="* -config *" CommandLine="* http*" CommandLine="* C:\\windows\\win.ini *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Certreq Command to Download" | eval sigma_description="Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Install by pnputil.exe - winevent]
description = Detects when a possible suspicious driver is being installed via pnputil.exe lolbin
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*-i*" OR Process_Command_Line="*/install*" OR Process_Command_Line="*-a*" OR Process_Command_Line="*/add-driver*" OR Process_Command_Line="*.inf*") New_Process_Name="*\\pnputil.exe") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547" | eval sigma_title="Suspicious Driver Install by pnputil.exe" | eval sigma_description="Detects when a possible suspicious driver is being installed via pnputil.exe lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Install by pnputil.exe - sysmon]
description = Detects when a possible suspicious driver is being installed via pnputil.exe lolbin
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*-i*" OR CommandLine="*/install*" OR CommandLine="*-a*" OR CommandLine="*/add-driver*" OR CommandLine="*.inf*") Image="*\\pnputil.exe") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547" | eval sigma_title="Suspicious Driver Install by pnputil.exe" | eval sigma_description="Detects when a possible suspicious driver is being installed via pnputil.exe lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dxcap.exe - winevent]
description = Detects execution of of Dxcap.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\DXCap.exe" OR OriginalFileName="DXCap.exe") Process_Command_Line="* -c *") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Dxcap.exe" | eval sigma_description="Detects execution of of Dxcap.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dxcap.exe - sysmon]
description = Detects execution of of Dxcap.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\DXCap.exe" OR OriginalFileName="DXCap.exe") CommandLine="* -c *") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Dxcap.exe" | eval sigma_description="Detects execution of of Dxcap.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GrpConv Execution - winevent]
description = Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*grpconv.exe -o*" OR Process_Command_Line="*grpconv -o*")) | eval sigma_attack_tags="attack.persistence attack.t1547" | eval sigma_title="Suspicious GrpConv Execution" | eval sigma_description="Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GrpConv Execution - sysmon]
description = Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*grpconv.exe -o*" OR CommandLine="*grpconv -o*")) | eval sigma_attack_tags="attack.persistence attack.t1547" | eval sigma_title="Suspicious GrpConv Execution" | eval sigma_description="Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Download Activity - winevent]
description = Detect the use of Windows Defender to download payloads
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*MpCmdRun.exe*" OR Description="Microsoft Malware Protection Command Line Utility") (Process_Command_Line="*DownloadFile*" Process_Command_Line="*url*")) | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.command_and_control attack.t1105" | eval sigma_title="Windows Defender Download Activity" | eval sigma_description="Detect the use of Windows Defender to download payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Defender Download Activity - sysmon]
description = Detect the use of Windows Defender to download payloads
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*MpCmdRun.exe*" OR Description="Microsoft Malware Protection Command Line Utility") (CommandLine="*DownloadFile*" CommandLine="*url*")) | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.command_and_control attack.t1105" | eval sigma_title="Windows Defender Download Activity" | eval sigma_description="Detect the use of Windows Defender to download payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumping Process via Sqldumper.exe - winevent]
description = Detects process dump via legitimate sqldumper.exe binary
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sqldumper.exe" (Process_Command_Line="*0x0110*" OR Process_Command_Line="*0x01100:40*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumping Process via Sqldumper.exe" | eval sigma_description="Detects process dump via legitimate sqldumper.exe binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumping Process via Sqldumper.exe - sysmon]
description = Detects process dump via legitimate sqldumper.exe binary
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sqldumper.exe" (CommandLine="*0x0110*" OR CommandLine="*0x01100:40*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Dumping Process via Sqldumper.exe" | eval sigma_description="Detects process dump via legitimate sqldumper.exe binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSL Execution - winevent]
description = Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wsl.exe" OR OriginalFileName="wsl.exe") (Process_Command_Line="* -e *" OR Process_Command_Line="* --exec *" OR Process_Command_Line="* --system *" OR Process_Command_Line="* /mnt/c*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="WSL Execution" | eval sigma_description="Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSL Execution - sysmon]
description = Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wsl.exe" OR OriginalFileName="wsl.exe") (CommandLine="* -e *" OR CommandLine="* --exec *" OR CommandLine="* --system *" OR CommandLine="* /mnt/c*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="WSL Execution" | eval sigma_description="Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer Execute Arbitrary PowerShell Code - winevent]
description = Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\SyncAppvPublishingServer.exe" Process_Command_Line="*\"n; *") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="SyncAppvPublishingServer Execute Arbitrary PowerShell Code" | eval sigma_description="Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer Execute Arbitrary PowerShell Code - sysmon]
description = Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\SyncAppvPublishingServer.exe" CommandLine="*\"n; *") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="SyncAppvPublishingServer Execute Arbitrary PowerShell Code" | eval sigma_description="Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code - winevent]
description = Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\SyncAppvPublishingServer.vbs*" Process_Command_Line="*;*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1216" | eval sigma_title="SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code" | eval sigma_description="Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs"
dispatch.earliest_time = -24h@h
alert.track = 0

[SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code - sysmon]
description = Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\SyncAppvPublishingServer.vbs*" CommandLine="*;*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1216" | eval sigma_title="SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code" | eval sigma_description="Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of TTDInject.exe - winevent]
description = Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*ttdinject.exe" OR OriginalFileName="TTDInject.EXE")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of TTDInject.exe" | eval sigma_description="Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of TTDInject.exe - sysmon]
description = Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*ttdinject.exe" OR OriginalFileName="TTDInject.EXE")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of TTDInject.exe" | eval sigma_description="Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Time Travel Debugging Utility Usage - winevent]
description = Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\tttracer.exe") | eval sigma_attack_tags="attack.defense_evasion attack.credential_access attack.t1218 attack.t1003.001" | eval sigma_title="Time Travel Debugging Utility Usage" | eval sigma_description="Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Time Travel Debugging Utility Usage - sysmon]
description = Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\tttracer.exe") | eval sigma_attack_tags="attack.defense_evasion attack.credential_access attack.t1218 attack.t1003.001" | eval sigma_title="Time Travel Debugging Utility Usage" | eval sigma_description="Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[UtilityFunctions.ps1 Proxy Dll - winevent]
description = Detects the use of a Microsoft signed script executing a managed DLL with PowerShell.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*UtilityFunctions.ps1*" OR Process_Command_Line="*RegSnapin *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="UtilityFunctions.ps1 Proxy Dll" | eval sigma_description="Detects the use of a Microsoft signed script executing a managed DLL with PowerShell."
dispatch.earliest_time = -24h@h
alert.track = 0

[UtilityFunctions.ps1 Proxy Dll - sysmon]
description = Detects the use of a Microsoft signed script executing a managed DLL with PowerShell.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*UtilityFunctions.ps1*" OR CommandLine="*RegSnapin *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="UtilityFunctions.ps1 Proxy Dll" | eval sigma_description="Detects the use of a Microsoft signed script executing a managed DLL with PowerShell."
dispatch.earliest_time = -24h@h
alert.track = 0

[Visual Basic Command Line Compiler Usage - winevent]
description = Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\vbc.exe" New_Process_Name="*\\cvtres.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1027.004" | eval sigma_title="Visual Basic Command Line Compiler Usage" | eval sigma_description="Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter."
dispatch.earliest_time = -24h@h
alert.track = 0

[Visual Basic Command Line Compiler Usage - sysmon]
description = Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\vbc.exe" Image="*\\cvtres.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1027.004" | eval sigma_title="Visual Basic Command Line Compiler Usage" | eval sigma_description="Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of VisualUiaVerifyNative.exe - winevent]
description = VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\VisualUiaVerifyNative.exe" OR OriginalFileName="VisualUiaVerifyNative.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Use of VisualUiaVerifyNative.exe" | eval sigma_description="VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of VisualUiaVerifyNative.exe - sysmon]
description = VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\VisualUiaVerifyNative.exe" OR OriginalFileName="VisualUiaVerifyNative.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Use of VisualUiaVerifyNative.exe" | eval sigma_description="VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of VSIISExeLauncher.exe - winevent]
description = The 'VSIISExeLauncher.exe' binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\VSIISExeLauncher.exe" OR OriginalFileName="VSIISExeLauncher.exe") (Process_Command_Line="* -p *" OR Process_Command_Line="* -a *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of VSIISExeLauncher.exe" | eval sigma_description="The 'VSIISExeLauncher.exe' binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of VSIISExeLauncher.exe - sysmon]
description = The 'VSIISExeLauncher.exe' binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\VSIISExeLauncher.exe" OR OriginalFileName="VSIISExeLauncher.exe") (CommandLine="* -p *" OR CommandLine="* -a *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of VSIISExeLauncher.exe" | eval sigma_description="The 'VSIISExeLauncher.exe' binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Wfc.exe - winevent]
description = The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wfc.exe" OR OriginalFileName="wfc.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of Wfc.exe" | eval sigma_description="The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Wfc.exe - sysmon]
description = The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wfc.exe" OR OriginalFileName="wfc.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1127" | eval sigma_title="Use of Wfc.exe" | eval sigma_description="The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules."
dispatch.earliest_time = -24h@h
alert.track = 0

[Winword LOLBIN Usage - winevent]
description = Winword can be abused as a LOLBIN to download arbitary file or load arbitary DLLs
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\WINWORD.exe" OR OriginalFileName="WinWord.exe") ((Process_Command_Line="*http://*" OR Process_Command_Line="*https://*") OR (Process_Command_Line="*/l *" OR Process_Command_Line="*.dll*"))) | eval sigma_attack_tags="" | eval sigma_title="Winword LOLBIN Usage" | eval sigma_description="Winword can be abused as a LOLBIN to download arbitary file or load arbitary DLLs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winword LOLBIN Usage - sysmon]
description = Winword can be abused as a LOLBIN to download arbitary file or load arbitary DLLs
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\WINWORD.exe" OR OriginalFileName="WinWord.exe") ((CommandLine="*http://*" OR CommandLine="*https://*") OR (CommandLine="*/l *" OR CommandLine="*.dll*"))) | eval sigma_attack_tags="" | eval sigma_title="Winword LOLBIN Usage" | eval sigma_description="Winword can be abused as a LOLBIN to download arbitary file or load arbitary DLLs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wlrmdr Lolbin Use as Laucher - winevent]
description = Detects use of Wlrmdr.exe in which the -u parameter is passed to ShellExecute
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wlrmdr.exe" Process_Command_Line="*-s *" Process_Command_Line="*-f *" Process_Command_Line="*-t *" Process_Command_Line="*-m *" Process_Command_Line="*-a *" Process_Command_Line="*-u *") NOT (Creator_Process_Name="C:\\Windows\\System32\\winlogon.exe")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Wlrmdr Lolbin Use as Laucher" | eval sigma_description="Detects use of Wlrmdr.exe in which the -u parameter is passed to ShellExecute"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wlrmdr Lolbin Use as Laucher - sysmon]
description = Detects use of Wlrmdr.exe in which the -u parameter is passed to ShellExecute
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wlrmdr.exe" CommandLine="*-s *" CommandLine="*-f *" CommandLine="*-t *" CommandLine="*-m *" CommandLine="*-a *" CommandLine="*-u *") NOT (ParentImage="C:\\Windows\\System32\\winlogon.exe")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Wlrmdr Lolbin Use as Laucher" | eval sigma_description="Detects use of Wlrmdr.exe in which the -u parameter is passed to ShellExecute"
dispatch.earliest_time = -24h@h
alert.track = 0

[New Lolbin Process by Office Applications - winevent]
description = This rule will monitor any office apps that spins up a new LOLBin process. This activity is pretty suspicious and should be investigated.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\verclsid.exe" OR New_Process_Name="*\\msdt.exe") (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\powerpnt.exe" OR Creator_Process_Name="*\\msaccess.exe" OR Creator_Process_Name="*\\mspub.exe" OR Creator_Process_Name="*\\eqnedt32.exe")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="New Lolbin Process by Office Applications" | eval sigma_description="This rule will monitor any office apps that spins up a new LOLBin process. This activity is pretty suspicious and should be investigated."
dispatch.earliest_time = -24h@h
alert.track = 0

[New Lolbin Process by Office Applications - sysmon]
description = This rule will monitor any office apps that spins up a new LOLBin process. This activity is pretty suspicious and should be investigated.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\regsvr32.exe" OR Image="*\\rundll32.exe" OR Image="*\\msiexec.exe" OR Image="*\\mshta.exe" OR Image="*\\verclsid.exe" OR Image="*\\msdt.exe") (ParentImage="*\\winword.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\powerpnt.exe" OR ParentImage="*\\msaccess.exe" OR ParentImage="*\\mspub.exe" OR ParentImage="*\\eqnedt32.exe")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="New Lolbin Process by Office Applications" | eval sigma_description="This rule will monitor any office apps that spins up a new LOLBin process. This activity is pretty suspicious and should be investigated."
dispatch.earliest_time = -24h@h
alert.track = 0

[Lolbins Process Creation with WmiPrvse - winevent]
description = This rule will monitor LOLBin process creations by wmiprvse. Add more LOLBins to rule logic if needed.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\regsvr32" OR New_Process_Name="*\\rundll32" OR New_Process_Name="*\\msiexec" OR New_Process_Name="*\\mshta" OR New_Process_Name="*\\verclsid") Creator_Process_Name="*\\wbem\\WmiPrvSE.exe") | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Lolbins Process Creation with WmiPrvse" | eval sigma_description="This rule will monitor LOLBin process creations by wmiprvse. Add more LOLBins to rule logic if needed."
dispatch.earliest_time = -24h@h
alert.track = 0

[Lolbins Process Creation with WmiPrvse - sysmon]
description = This rule will monitor LOLBin process creations by wmiprvse. Add more LOLBins to rule logic if needed.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\regsvr32" OR Image="*\\rundll32" OR Image="*\\msiexec" OR Image="*\\mshta" OR Image="*\\verclsid") ParentImage="*\\wbem\\WmiPrvSE.exe") | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Lolbins Process Creation with WmiPrvse" | eval sigma_description="This rule will monitor LOLBin process creations by wmiprvse. Add more LOLBins to rule logic if needed."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dumping - winevent]
description = Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*lsass*" Process_Command_Line="*.dmp*") NOT (New_Process_Name="*\\werfault.exe")) OR (New_Process_Name="*\\procdump*" New_Process_Name="*.exe" Process_Command_Line="*lsass*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="LSASS Memory Dumping" | eval sigma_description="Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dumping - sysmon]
description = Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*lsass*" CommandLine="*.dmp*") NOT (Image="*\\werfault.exe")) OR (Image="*\\procdump*" Image="*.exe" CommandLine="*lsass*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="LSASS Memory Dumping" | eval sigma_description="Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Mailbox Export to Share - winevent]
description = Detects a PowerShell New-MailboxExportRequest that exports a mailbox to a local share, as used in ProxyShell exploitations
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*New-MailboxExport*" Process_Command_Line="* -Mailbox *" Process_Command_Line="* -FilePath \\\\127.0.0.1\\C$*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.resource_development attack.t1584.006" | eval sigma_title="Suspicious PowerShell Mailbox Export to Share" | eval sigma_description="Detects a PowerShell New-MailboxExportRequest that exports a mailbox to a local share, as used in ProxyShell exploitations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Mailbox Export to Share - sysmon]
description = Detects a PowerShell New-MailboxExportRequest that exports a mailbox to a local share, as used in ProxyShell exploitations
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*New-MailboxExport*" CommandLine="* -Mailbox *" CommandLine="* -FilePath \\\\127.0.0.1\\C$*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.resource_development attack.t1584.006" | eval sigma_title="Suspicious PowerShell Mailbox Export to Share" | eval sigma_description="Detects a PowerShell New-MailboxExportRequest that exports a mailbox to a local share, as used in ProxyShell exploitations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Adwind RAT / JRAT - winevent]
description = Detects javaw.exe in AppData folder as used by Adwind / JRAT
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\AppData\\Roaming\\Oracle*" Process_Command_Line="*\\java*" Process_Command_Line="*.exe *") OR (Process_Command_Line="*cscript.exe*" Process_Command_Line="*Retrive*" Process_Command_Line="*.vbs *"))) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="Adwind RAT / JRAT" | eval sigma_description="Detects javaw.exe in AppData folder as used by Adwind / JRAT"
dispatch.earliest_time = -24h@h
alert.track = 0

[Adwind RAT / JRAT - sysmon]
description = Detects javaw.exe in AppData folder as used by Adwind / JRAT
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\AppData\\Roaming\\Oracle*" CommandLine="*\\java*" CommandLine="*.exe *") OR (CommandLine="*cscript.exe*" CommandLine="*Retrive*" CommandLine="*.vbs *"))) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="Adwind RAT / JRAT" | eval sigma_description="Detects javaw.exe in AppData folder as used by Adwind / JRAT"
dispatch.earliest_time = -24h@h
alert.track = 0

[Blue Mockingbird - winevent]
description = Attempts to detect system changes made by Blue Mockingbird
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\cmd.exe" Process_Command_Line="*sc config*" Process_Command_Line="*wercplsupporte.dll*") OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="*COR_PROFILER"))) | eval sigma_attack_tags="attack.execution attack.t1112 attack.t1047" | eval sigma_title="Blue Mockingbird" | eval sigma_description="Attempts to detect system changes made by Blue Mockingbird"
dispatch.earliest_time = -24h@h
alert.track = 0

[Blue Mockingbird - sysmon]
description = Attempts to detect system changes made by Blue Mockingbird
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\cmd.exe" CommandLine="*sc config*" CommandLine="*wercplsupporte.dll*") OR (Image="*\\wmic.exe" CommandLine="*COR_PROFILER"))) | eval sigma_attack_tags="attack.execution attack.t1112 attack.t1047" | eval sigma_title="Blue Mockingbird" | eval sigma_description="Attempts to detect system changes made by Blue Mockingbird"
dispatch.earliest_time = -24h@h
alert.track = 0

[DarkSide Ransomware Pattern - winevent]
description = Detects DarkSide Ransomware and helpers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*=[char][byte]('0x'+*" OR Process_Command_Line="* -work worker0 -path *") OR (ParentCommandLine="*DllHost.exe /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}*" New_Process_Name="*\\AppData\\Local\\Temp\\*"))) | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="DarkSide Ransomware Pattern" | eval sigma_description="Detects DarkSide Ransomware and helpers"
dispatch.earliest_time = -24h@h
alert.track = 0

[DarkSide Ransomware Pattern - sysmon]
description = Detects DarkSide Ransomware and helpers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*=[char][byte]('0x'+*" OR CommandLine="* -work worker0 -path *") OR (ParentCommandLine="*DllHost.exe /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}*" Image="*\\AppData\\Local\\Temp\\*"))) | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="DarkSide Ransomware Pattern" | eval sigma_description="Detects DarkSide Ransomware and helpers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hermetic Wiper TG Process Patterns - winevent]
description = This rule detects process execution patterns found in intrusions related to the Hermetic Wiper malware attacks against Ukraine in February 2022
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\policydefinitions\\postgresql.exe" OR (Process_Command_Line="*CSIDL_SYSTEM_DRIVE\\temp\\sys.tmp*" OR Process_Command_Line="* 1> \\127.0.0.1\\ADMIN$\\__16*") OR (Process_Command_Line="*powershell -c *" Process_Command_Line="*\\comsvcs.dll MiniDump *" Process_Command_Line="*\\winupd.log full*"))) | eval sigma_attack_tags="" | eval sigma_title="Hermetic Wiper TG Process Patterns" | eval sigma_description="This rule detects process execution patterns found in intrusions related to the Hermetic Wiper malware attacks against Ukraine in February 2022"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hermetic Wiper TG Process Patterns - sysmon]
description = This rule detects process execution patterns found in intrusions related to the Hermetic Wiper malware attacks against Ukraine in February 2022
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\policydefinitions\\postgresql.exe" OR (CommandLine="*CSIDL_SYSTEM_DRIVE\\temp\\sys.tmp*" OR CommandLine="* 1> \\127.0.0.1\\ADMIN$\\__16*") OR (CommandLine="*powershell -c *" CommandLine="*\\comsvcs.dll MiniDump *" CommandLine="*\\winupd.log full*"))) | eval sigma_attack_tags="" | eval sigma_title="Hermetic Wiper TG Process Patterns" | eval sigma_description="This rule detects process execution patterns found in intrusions related to the Hermetic Wiper malware attacks against Ukraine in February 2022"
dispatch.earliest_time = -24h@h
alert.track = 0

[LockerGoga Ransomware - winevent]
description = Detects LockerGoga Ransomware command line.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-i SM-tgytutrc -s*") | eval sigma_attack_tags="attack.impact attack.t1486" | eval sigma_title="LockerGoga Ransomware" | eval sigma_description="Detects LockerGoga Ransomware command line."
dispatch.earliest_time = -24h@h
alert.track = 0

[LockerGoga Ransomware - sysmon]
description = Detects LockerGoga Ransomware command line.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-i SM-tgytutrc -s*") | eval sigma_attack_tags="attack.impact attack.t1486" | eval sigma_title="LockerGoga Ransomware" | eval sigma_description="Detects LockerGoga Ransomware command line."
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - winevent]
description = Detects Ryuk Ransomware command lines
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*stop*" (Process_Command_Line="*samss*" OR Process_Command_Line="*audioendpointbuilder*" OR Process_Command_Line="*unistoresvc_?????*")) | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk Ransomware command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - sysmon]
description = Detects Ryuk Ransomware command lines
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*stop*" (CommandLine="*samss*" OR CommandLine="*audioendpointbuilder*" OR CommandLine="*unistoresvc_?????*")) | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk Ransomware command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti NTDS Exfiltration Command - winevent]
description = Detects a command used by conti to exfiltrate NTDS
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*7za.exe*" Process_Command_Line="*\\C$\\temp\\log.zip*") | eval sigma_attack_tags="attack.collection attack.t1560" | eval sigma_title="Conti NTDS Exfiltration Command" | eval sigma_description="Detects a command used by conti to exfiltrate NTDS"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti NTDS Exfiltration Command - sysmon]
description = Detects a command used by conti to exfiltrate NTDS
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*7za.exe*" CommandLine="*\\C$\\temp\\log.zip*") | eval sigma_attack_tags="attack.collection attack.t1560" | eval sigma_title="Conti NTDS Exfiltration Command" | eval sigma_description="Detects a command used by conti to exfiltrate NTDS"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sensitive Registry Access via Volume Shadow Copy - winevent]
description = Detects a command that accesses password storing registry hives via volume shadow backups
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*" (Process_Command_Line="*\\NTDS.dit*" OR Process_Command_Line="*\\SYSTEM*" OR Process_Command_Line="*\\SECURITY*" OR Process_Command_Line="*C:\\tmp\\log*")) | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Sensitive Registry Access via Volume Shadow Copy" | eval sigma_description="Detects a command that accesses password storing registry hives via volume shadow backups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sensitive Registry Access via Volume Shadow Copy - sysmon]
description = Detects a command that accesses password storing registry hives via volume shadow backups
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*" (CommandLine="*\\NTDS.dit*" OR CommandLine="*\\SYSTEM*" OR CommandLine="*\\SECURITY*" OR CommandLine="*C:\\tmp\\log*")) | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Sensitive Registry Access via Volume Shadow Copy" | eval sigma_description="Detects a command that accesses password storing registry hives via volume shadow backups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti Volume Shadow Listing - winevent]
description = Detects a command used by conti to find volume shadow backups
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*vssadmin list shadows*" Process_Command_Line="*log.txt*") | table Account_Name,Process_Command_Line,Creator_Process_Name | eval sigma_attack_tags="attack.t1587.001 attack.resource_development" | eval sigma_title="Conti Volume Shadow Listing" | eval sigma_description="Detects a command used by conti to find volume shadow backups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Conti Volume Shadow Listing - sysmon]
description = Detects a command used by conti to find volume shadow backups
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*vssadmin list shadows*" CommandLine="*log.txt*") | table User,CommandLine,ParentImage | eval sigma_attack_tags="attack.t1587.001 attack.resource_development" | eval sigma_title="Conti Volume Shadow Listing" | eval sigma_description="Detects a command used by conti to find volume shadow backups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dridex Process Pattern - winevent]
description = Detects typical Dridex process patterns
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\svchost.exe" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\Desktop\\*") OR (Creator_Process_Name="*\\svchost.exe" ((New_Process_Name="*\\whoami.exe" Process_Command_Line="*all*") OR ((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*view*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055 attack.discovery attack.t1135 attack.t1033" | eval sigma_title="Dridex Process Pattern" | eval sigma_description="Detects typical Dridex process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dridex Process Pattern - sysmon]
description = Detects typical Dridex process patterns
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\svchost.exe" CommandLine="*C:\\Users\\*" CommandLine="*\\Desktop\\*") OR (ParentImage="*\\svchost.exe" ((Image="*\\whoami.exe" CommandLine="*all*") OR ((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*view*"))))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055 attack.discovery attack.t1135 attack.t1033" | eval sigma_title="Dridex Process Pattern" | eval sigma_description="Detects typical Dridex process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[DTRACK Process Creation - winevent]
description = Detects specific process parameters as seen in DTRACK infections
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* echo EEEE > *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="DTRACK Process Creation" | eval sigma_description="Detects specific process parameters as seen in DTRACK infections"
dispatch.earliest_time = -24h@h
alert.track = 0

[DTRACK Process Creation - sysmon]
description = Detects specific process parameters as seen in DTRACK infections
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* echo EEEE > *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="DTRACK Process Creation" | eval sigma_description="Detects specific process parameters as seen in DTRACK infections"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet Process Creation - winevent]
description = Detects all Emotet like process executions that are not covered by the more generic rules
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -e* PAA*" OR Process_Command_Line="*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*" OR Process_Command_Line="*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*" OR Process_Command_Line="*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*" OR Process_Command_Line="*IgAoACcAKgAnACkAOwAkA*" OR Process_Command_Line="*IAKAAnACoAJwApADsAJA*" OR Process_Command_Line="*iACgAJwAqACcAKQA7ACQA*" OR Process_Command_Line="*JABGAGwAeAByAGgAYwBmAGQ*" OR Process_Command_Line="*PQAkAGUAbgB2ADoAdABlAG0AcAArACgA*" OR Process_Command_Line="*0AJABlAG4AdgA6AHQAZQBtAHAAKwAoA*" OR Process_Command_Line="*9ACQAZQBuAHYAOgB0AGUAbQBwACsAKA*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Emotet Process Creation" | eval sigma_description="Detects all Emotet like process executions that are not covered by the more generic rules"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet Process Creation - sysmon]
description = Detects all Emotet like process executions that are not covered by the more generic rules
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -e* PAA*" OR CommandLine="*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*" OR CommandLine="*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*" OR CommandLine="*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*" OR CommandLine="*IgAoACcAKgAnACkAOwAkA*" OR CommandLine="*IAKAAnACoAJwApADsAJA*" OR CommandLine="*iACgAJwAqACcAKQA7ACQA*" OR CommandLine="*JABGAGwAeAByAGgAYwBmAGQ*" OR CommandLine="*PQAkAGUAbgB2ADoAdABlAG0AcAArACgA*" OR CommandLine="*0AJABlAG4AdgA6AHQAZQBtAHAAKwAoA*" OR CommandLine="*9ACQAZQBuAHYAOgB0AGUAbQBwACsAKA*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Emotet Process Creation" | eval sigma_description="Detects all Emotet like process executions that are not covered by the more generic rules"
dispatch.earliest_time = -24h@h
alert.track = 0

[Formbook Process Creation - winevent]
description = Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((ParentCommandLine="C:\\Windows\\System32\\*" OR ParentCommandLine="C:\\Windows\\SysWOW64\\*") ParentCommandLine="*.exe") ((Process_Command_Line="*/c*" Process_Command_Line="*del*" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\AppData\\Local\\Temp\\*") OR (Process_Command_Line="*/c*" Process_Command_Line="*del*" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\Desktop\\*") OR (Process_Command_Line="*/C*" Process_Command_Line="*type nul >*" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\Desktop\\*")) Process_Command_Line="*.exe") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.develop_capabilities attack.t1587.001" | eval sigma_title="Formbook Process Creation" | eval sigma_description="Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters."
dispatch.earliest_time = -24h@h
alert.track = 0

[Formbook Process Creation - sysmon]
description = Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((ParentCommandLine="C:\\Windows\\System32\\*" OR ParentCommandLine="C:\\Windows\\SysWOW64\\*") ParentCommandLine="*.exe") ((CommandLine="*/c*" CommandLine="*del*" CommandLine="*C:\\Users\\*" CommandLine="*\\AppData\\Local\\Temp\\*") OR (CommandLine="*/c*" CommandLine="*del*" CommandLine="*C:\\Users\\*" CommandLine="*\\Desktop\\*") OR (CommandLine="*/C*" CommandLine="*type nul >*" CommandLine="*C:\\Users\\*" CommandLine="*\\Desktop\\*")) CommandLine="*.exe") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.develop_capabilities attack.t1587.001" | eval sigma_title="Formbook Process Creation" | eval sigma_description="Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters."
dispatch.earliest_time = -24h@h
alert.track = 0

[NotPetya Ransomware Activity - winevent]
description = Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\AppData\\Local\\Temp\\*" Process_Command_Line="*\\\\.\\pipe\\\*") OR (New_Process_Name="*\\rundll32.exe" (Process_Command_Line="*.dat,#1" OR Process_Command_Line="*.dat #1")) OR "\\perfc.dat")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.t1070.001 attack.credential_access attack.t1003.001 car.2016-04-002" | eval sigma_title="NotPetya Ransomware Activity" | eval sigma_description="Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil"
dispatch.earliest_time = -24h@h
alert.track = 0

[NotPetya Ransomware Activity - sysmon]
description = Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\AppData\\Local\\Temp\\*" CommandLine="*\\\\.\\pipe\\\*") OR (Image="*\\rundll32.exe" (CommandLine="*.dat,#1" OR CommandLine="*.dat #1")) OR "\\perfc.dat")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.t1070.001 attack.credential_access attack.t1003.001 car.2016-04-002" | eval sigma_title="NotPetya Ransomware Activity" | eval sigma_description="Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil"
dispatch.earliest_time = -24h@h
alert.track = 0

[QBot Process Creation - winevent]
description = Detects QBot like process executions
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\WinRAR.exe" New_Process_Name="*\\wscript.exe") OR Process_Command_Line="* /c ping.exe -n 6 127.0.0.1 & type *") OR (Process_Command_Line="*regsvr32.exe*" Process_Command_Line="*C:\\ProgramData*" Process_Command_Line="*.tmp*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005" | eval sigma_title="QBot Process Creation" | eval sigma_description="Detects QBot like process executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[QBot Process Creation - sysmon]
description = Detects QBot like process executions
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\WinRAR.exe" Image="*\\wscript.exe") OR CommandLine="* /c ping.exe -n 6 127.0.0.1 & type *") OR (CommandLine="*regsvr32.exe*" CommandLine="*C:\\ProgramData*" CommandLine="*.tmp*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005" | eval sigma_title="QBot Process Creation" | eval sigma_description="Detects QBot like process executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - winevent]
description = Detects Ryuk ransomware activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Microsoft\\Windows\\CurrentVersion\\Run*" Process_Command_Line="*C:\\users\\Public\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - sysmon]
description = Detects Ryuk ransomware activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Microsoft\\Windows\\CurrentVersion\\Run*" CommandLine="*C:\\users\\Public\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - winevent]
description = Detects wscript/cscript executions of scripts located in user directories
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="*C:\\Users\\*" OR Process_Command_Line="*C:\\ProgramData\\*") (Process_Command_Line="*.jse*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.vba*" OR Process_Command_Line="*.vbs*")) NOT (Creator_Process_Name="*\\winzip*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects wscript/cscript executions of scripts located in user directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - sysmon]
description = Detects wscript/cscript executions of scripts located in user directories
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="*C:\\Users\\*" OR CommandLine="*C:\\ProgramData\\*") (CommandLine="*.jse*" OR CommandLine="*.vbe*" OR CommandLine="*.js*" OR CommandLine="*.vba*" OR CommandLine="*.vbs*")) NOT (ParentImage="*\\winzip*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects wscript/cscript executions of scripts located in user directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Recon Activity - winevent]
description = Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\cmd.exe" New_Process_Name="*\\nltest.exe" Process_Command_Line="*/domain_trusts /all_trusts*") | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Trickbot Malware Recon Activity" | eval sigma_description="Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Recon Activity - sysmon]
description = Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\cmd.exe" Image="*\\nltest.exe" CommandLine="*/domain_trusts /all_trusts*") | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Trickbot Malware Recon Activity" | eval sigma_description="Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Activity - winevent]
description = Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\wermgr.exe" Creator_Process_Name="*\\rundll32.exe" ParentCommandLine="*DllRegisterServer*") | eval sigma_attack_tags="attack.execution attack.t1559" | eval sigma_title="Trickbot Malware Activity" | eval sigma_description="Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Activity - sysmon]
description = Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wermgr.exe" ParentImage="*\\rundll32.exe" ParentCommandLine="*DllRegisterServer*") | eval sigma_attack_tags="attack.execution attack.t1559" | eval sigma_title="Trickbot Malware Activity" | eval sigma_description="Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[WannaCry Ransomware - winevent]
description = Detects WannaCry ransomware activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tasksche.exe" OR New_Process_Name="*\\mssecsvc.exe" OR New_Process_Name="*\\taskdl.exe" OR New_Process_Name="*\\taskhsvc.exe" OR New_Process_Name="*\\taskse.exe" OR New_Process_Name="*\\111.exe" OR New_Process_Name="*\\lhdfrgui.exe" OR New_Process_Name="*\\linuxnew.exe" OR New_Process_Name="*\\wannacry.exe") OR New_Process_Name="*WanaDecryptor*" OR (Process_Command_Line="*icacls*" Process_Command_Line="*/grant*" Process_Command_Line="*Everyone:F*" Process_Command_Line="*/T*" Process_Command_Line="*/C*" Process_Command_Line="*/Q*") OR (Process_Command_Line="*bcdedit*" Process_Command_Line="*/set*" Process_Command_Line="*{default}*" Process_Command_Line="*recoveryenabled*" Process_Command_Line="*no*") OR (Process_Command_Line="*wbadmin*" Process_Command_Line="*delete*" Process_Command_Line="*catalog*" Process_Command_Line="*-quiet*") OR Process_Command_Line="*@Please_Read_Me@.txt*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1210 attack.discovery attack.t1083 attack.defense_evasion attack.t1222.001 attack.impact attack.t1486 attack.t1490" | eval sigma_title="WannaCry Ransomware" | eval sigma_description="Detects WannaCry ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WannaCry Ransomware - sysmon]
description = Detects WannaCry ransomware activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tasksche.exe" OR Image="*\\mssecsvc.exe" OR Image="*\\taskdl.exe" OR Image="*\\taskhsvc.exe" OR Image="*\\taskse.exe" OR Image="*\\111.exe" OR Image="*\\lhdfrgui.exe" OR Image="*\\linuxnew.exe" OR Image="*\\wannacry.exe") OR Image="*WanaDecryptor*" OR (CommandLine="*icacls*" CommandLine="*/grant*" CommandLine="*Everyone:F*" CommandLine="*/T*" CommandLine="*/C*" CommandLine="*/Q*") OR (CommandLine="*bcdedit*" CommandLine="*/set*" CommandLine="*{default}*" CommandLine="*recoveryenabled*" CommandLine="*no*") OR (CommandLine="*wbadmin*" CommandLine="*delete*" CommandLine="*catalog*" CommandLine="*-quiet*") OR CommandLine="*@Please_Read_Me@.txt*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1210 attack.discovery attack.t1083 attack.defense_evasion attack.t1222.001 attack.impact attack.t1486 attack.t1490" | eval sigma_title="WannaCry Ransomware" | eval sigma_description="Detects WannaCry ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Usage of the Manage-bde.wsf Script - winevent]
description = Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cscript*" Process_Command_Line="*manage-bde.wsf*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Suspicious Usage of the Manage-bde.wsf Script" | eval sigma_description="Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Usage of the Manage-bde.wsf Script - sysmon]
description = Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cscript*" CommandLine="*manage-bde.wsf*") | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Suspicious Usage of the Manage-bde.wsf Script" | eval sigma_description="Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script"
dispatch.earliest_time = -24h@h
alert.track = 0

[MavInject Process Injection - winevent]
description = Detects process injection using the signed Windows tool Mavinject32.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /INJECTRUNNING *") | eval sigma_attack_tags="attack.t1055.001 attack.t1218" | eval sigma_title="MavInject Process Injection" | eval sigma_description="Detects process injection using the signed Windows tool Mavinject32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[MavInject Process Injection - sysmon]
description = Detects process injection using the signed Windows tool Mavinject32.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /INJECTRUNNING *") | eval sigma_attack_tags="attack.t1055.001 attack.t1218" | eval sigma_title="MavInject Process Injection" | eval sigma_description="Detects process injection using the signed Windows tool Mavinject32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Start - winevent]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\services.exe" ((Process_Command_Line="*cmd*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*%COMSPEC%*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*cmd.exe*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*rundll32*" Process_Command_Line="*.dll,a*" Process_Command_Line="*/p:*"))) NOT (Process_Command_Line="*MpCmdRun*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Start" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Start - sysmon]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\services.exe" ((CommandLine="*cmd*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*%COMSPEC%*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*cmd.exe*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*rundll32*" CommandLine="*.dll,a*" CommandLine="*/p:*"))) NOT (CommandLine="*MpCmdRun*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.001 attack.t1134.002" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Start" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Command Line - winevent]
description = Detection well-known mimikatz command line arguments
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*DumpCreds*" OR Process_Command_Line="*invoke-mimikatz*") OR ((Process_Command_Line="*rpc*" OR Process_Command_Line="*token*" OR Process_Command_Line="*crypto*" OR Process_Command_Line="*dpapi*" OR Process_Command_Line="*sekurlsa*" OR Process_Command_Line="*kerberos*" OR Process_Command_Line="*lsadump*" OR Process_Command_Line="*privilege*" OR Process_Command_Line="*process*" OR Process_Command_Line="*vault*") Process_Command_Line="*::*")) OR ((Process_Command_Line="*aadcookie*" OR Process_Command_Line="*detours*" OR Process_Command_Line="*memssp*" OR Process_Command_Line="*mflt*" OR Process_Command_Line="*ncroutemon*" OR Process_Command_Line="*ngcsign*" OR Process_Command_Line="*printnightmare*" OR Process_Command_Line="*skeleton*" OR Process_Command_Line="*preshutdown*" OR Process_Command_Line="*mstsc*" OR Process_Command_Line="*multirdp*") Process_Command_Line="*::*")) NOT ((Process_Command_Line="*function Convert-GuidToCompressedGuid*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006" | eval sigma_title="Mimikatz Command Line" | eval sigma_description="Detection well-known mimikatz command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Command Line - sysmon]
description = Detection well-known mimikatz command line arguments
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*DumpCreds*" OR CommandLine="*invoke-mimikatz*") OR ((CommandLine="*rpc*" OR CommandLine="*token*" OR CommandLine="*crypto*" OR CommandLine="*dpapi*" OR CommandLine="*sekurlsa*" OR CommandLine="*kerberos*" OR CommandLine="*lsadump*" OR CommandLine="*privilege*" OR CommandLine="*process*" OR CommandLine="*vault*") CommandLine="*::*")) OR ((CommandLine="*aadcookie*" OR CommandLine="*detours*" OR CommandLine="*memssp*" OR CommandLine="*mflt*" OR CommandLine="*ncroutemon*" OR CommandLine="*ngcsign*" OR CommandLine="*printnightmare*" OR CommandLine="*skeleton*" OR CommandLine="*preshutdown*" OR CommandLine="*mstsc*" OR CommandLine="*multirdp*") CommandLine="*::*")) NOT ((CommandLine="*function Convert-GuidToCompressedGuid*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003.001 attack.t1003.002 attack.t1003.004 attack.t1003.005 attack.t1003.006" | eval sigma_title="Mimikatz Command Line" | eval sigma_description="Detection well-known mimikatz command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from MMC
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\mmc.exe" ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\reg.exe" OR New_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\BITSADMIN*"))) | table Process_Command_Line,New_Process_Name,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1021.003" | eval sigma_title="MMC Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MMC"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from MMC
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\mmc.exe" ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\reg.exe" OR Image="*\\regsvr32.exe") OR (Image="*\\BITSADMIN*"))) | table CommandLine,Image,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1021.003" | eval sigma_title="MMC Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MMC"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC20 Lateral Movement - winevent]
description = Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\svchost.exe" New_Process_Name="*\\mmc.exe" Process_Command_Line="*-Embedding*") | eval sigma_attack_tags="attack.execution attack.t1021.003" | eval sigma_title="MMC20 Lateral Movement" | eval sigma_description="Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC20 Lateral Movement - sysmon]
description = Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\svchost.exe" Image="*\\mmc.exe" CommandLine="*-Embedding*") | eval sigma_attack_tags="attack.execution attack.t1021.003" | eval sigma_title="MMC20 Lateral Movement" | eval sigma_description="Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification Of Existing Services For Persistence - winevent]
description = Detects modification of an existing service on a compromised host in order to execute an arbitrary payload when the service is started or killed as a method of persistence.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*sc *" Process_Command_Line="*config *" Process_Command_Line="*binpath=*") OR (Process_Command_Line="*sc *" Process_Command_Line="*failure*" Process_Command_Line="*command=*") OR (Process_Command_Line="*reg *" Process_Command_Line="*add *" Process_Command_Line="*FailureCommand*" (Process_Command_Line="*.sh*" OR Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bin$*" OR Process_Command_Line="*.bat*" OR Process_Command_Line="*.cmd*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.msh$*" OR Process_Command_Line="*.reg$*" OR Process_Command_Line="*.scr*" OR Process_Command_Line="*.ps*" OR Process_Command_Line="*.vb*" OR Process_Command_Line="*.jar*" OR Process_Command_Line="*.pl*")) OR (Process_Command_Line="*reg *" Process_Command_Line="*add *" Process_Command_Line="*ImagePath*" (Process_Command_Line="*.sh*" OR Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bin$*" OR Process_Command_Line="*.bat*" OR Process_Command_Line="*.cmd*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.msh$*" OR Process_Command_Line="*.reg$*" OR Process_Command_Line="*.scr*" OR Process_Command_Line="*.ps*" OR Process_Command_Line="*.vb*" OR Process_Command_Line="*.jar*" OR Process_Command_Line="*.pl*")))) | eval sigma_attack_tags="attack.persistence attack.t1543.003 attack.t1574.011" | eval sigma_title="Modification Of Existing Services For Persistence" | eval sigma_description="Detects modification of an existing service on a compromised host in order to execute an arbitrary payload when the service is started or killed as a method of persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification Of Existing Services For Persistence - sysmon]
description = Detects modification of an existing service on a compromised host in order to execute an arbitrary payload when the service is started or killed as a method of persistence.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*sc *" CommandLine="*config *" CommandLine="*binpath=*") OR (CommandLine="*sc *" CommandLine="*failure*" CommandLine="*command=*") OR (CommandLine="*reg *" CommandLine="*add *" CommandLine="*FailureCommand*" (CommandLine="*.sh*" OR CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bin$*" OR CommandLine="*.bat*" OR CommandLine="*.cmd*" OR CommandLine="*.js*" OR CommandLine="*.msh$*" OR CommandLine="*.reg$*" OR CommandLine="*.scr*" OR CommandLine="*.ps*" OR CommandLine="*.vb*" OR CommandLine="*.jar*" OR CommandLine="*.pl*")) OR (CommandLine="*reg *" CommandLine="*add *" CommandLine="*ImagePath*" (CommandLine="*.sh*" OR CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bin$*" OR CommandLine="*.bat*" OR CommandLine="*.cmd*" OR CommandLine="*.js*" OR CommandLine="*.msh$*" OR CommandLine="*.reg$*" OR CommandLine="*.scr*" OR CommandLine="*.ps*" OR CommandLine="*.vb*" OR CommandLine="*.jar*" OR CommandLine="*.pl*")))) | eval sigma_attack_tags="attack.persistence attack.t1543.003 attack.t1574.011" | eval sigma_title="Modification Of Existing Services For Persistence" | eval sigma_description="Detects modification of an existing service on a compromised host in order to execute an arbitrary payload when the service is started or killed as a method of persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Monitoring For Persistence Via BITS - winevent]
description = BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished. When the job runs on the system the command specified in the BITS job will be executed. This can be abused by actors to create a backdoor within the system and for persistence. It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*bitsadmin*" Process_Command_Line="*/SetNotifyCmdLine*" (Process_Command_Line="*%COMSPEC%*" OR Process_Command_Line="*cmd.exe*" OR Process_Command_Line="*regsvr32.exe*")) OR (Process_Command_Line="*bitsadmin*" Process_Command_Line="*/Addfile*" (Process_Command_Line="*http:*" OR Process_Command_Line="*https:*" OR Process_Command_Line="*ftp:*" OR Process_Command_Line="*ftps:*")))) | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1197" | eval sigma_title="Monitoring For Persistence Via BITS" | eval sigma_description="BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished. When the job runs on the system the command specified in the BITS job will be executed. This can be abused by actors to create a backdoor within the system and for persistence. It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[Monitoring For Persistence Via BITS - sysmon]
description = BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished. When the job runs on the system the command specified in the BITS job will be executed. This can be abused by actors to create a backdoor within the system and for persistence. It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*bitsadmin*" CommandLine="*/SetNotifyCmdLine*" (CommandLine="*%COMSPEC%*" OR CommandLine="*cmd.exe*" OR CommandLine="*regsvr32.exe*")) OR (CommandLine="*bitsadmin*" CommandLine="*/Addfile*" (CommandLine="*http:*" OR CommandLine="*https:*" OR CommandLine="*ftp:*" OR CommandLine="*ftps:*")))) | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1197" | eval sigma_title="Monitoring For Persistence Via BITS" | eval sigma_description="BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished. When the job runs on the system the command specified in the BITS job will be executed. This can be abused by actors to create a backdoor within the system and for persistence. It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mouse Lock Credential Gathering - winevent]
description = In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="*Mouse Lock*" OR Company="*Misc314*" OR Process_Command_Line="*Mouse Lock_*")) | table Product,Company,Process_Command_Line | eval sigma_attack_tags="attack.credential_access attack.collection attack.t1056.002" | eval sigma_title="Mouse Lock Credential Gathering" | eval sigma_description="In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mouse Lock Credential Gathering - sysmon]
description = In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="*Mouse Lock*" OR Company="*Misc314*" OR CommandLine="*Mouse Lock_*")) | table Product,Company,CommandLine | eval sigma_attack_tags="attack.credential_access attack.collection attack.t1056.002" | eval sigma_title="Mouse Lock Credential Gathering" | eval sigma_description="In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool 'Mouse Lock' as being used for both credential access and collection in security incidents."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Files with Msdeploy.exe - winevent]
description = Detects file execution using the msdeploy.exe lolbin
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*verb:sync*" Process_Command_Line="*-source:RunCommand*" Process_Command_Line="*-dest:runCommand*" New_Process_Name="*\\msdeploy.exe") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execute Files with Msdeploy.exe" | eval sigma_description="Detects file execution using the msdeploy.exe lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Files with Msdeploy.exe - sysmon]
description = Detects file execution using the msdeploy.exe lolbin
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*verb:sync*" CommandLine="*-source:RunCommand*" CommandLine="*-dest:runCommand*" Image="*\\msdeploy.exe") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execute Files with Msdeploy.exe" | eval sigma_description="Detects file execution using the msdeploy.exe lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute MSDT.EXE Using Diagcab File - winevent]
description = Detects diagcab leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in CVE-2022-30190
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msdt.exe" OR OriginalFileName="msdt.exe") (Process_Command_Line="*/cab*" Process_Command_Line="*.diagcab*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Execute MSDT.EXE Using Diagcab File" | eval sigma_description="Detects diagcab leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in CVE-2022-30190"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute MSDT.EXE Using Diagcab File - sysmon]
description = Detects diagcab leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in CVE-2022-30190
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msdt.exe" OR OriginalFileName="msdt.exe") (CommandLine="*/cab*" CommandLine="*.diagcab*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Execute MSDT.EXE Using Diagcab File" | eval sigma_description="Detects diagcab leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in CVE-2022-30190"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSDT.EXE Execution With Suspicious Cab Option - winevent]
description = Detects execution of msdt.exe using the 'cab' flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msdt.exe" OR OriginalFileName="msdt.exe") (Process_Command_Line="* /cab *" OR Process_Command_Line="* -cab *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="MSDT.EXE Execution With Suspicious Cab Option" | eval sigma_description="Detects execution of msdt.exe using the 'cab' flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSDT.EXE Execution With Suspicious Cab Option - sysmon]
description = Detects execution of msdt.exe using the 'cab' flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msdt.exe" OR OriginalFileName="msdt.exe") (CommandLine="* /cab *" OR CommandLine="* -cab *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="MSDT.EXE Execution With Suspicious Cab Option" | eval sigma_description="Detects execution of msdt.exe using the 'cab' flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSDT Executed with Suspicious Parent - winevent]
description = Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\powershell.exe" OR Creator_Process_Name="*\\cmd.exe" OR Creator_Process_Name="*\\mshta.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\wsl.exe" OR Creator_Process_Name="*\\rundll32.exe" OR Creator_Process_Name="*\\regsvr32.exe") (New_Process_Name="*\\msdt.exe" OR OriginalFileName="msdt.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1218" | eval sigma_title="MSDT Executed with Suspicious Parent" | eval sigma_description="Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSDT Executed with Suspicious Parent - sysmon]
description = Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\powershell.exe" OR ParentImage="*\\cmd.exe" OR ParentImage="*\\mshta.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\wscript.exe" OR ParentImage="*\\wsl.exe" OR ParentImage="*\\rundll32.exe" OR ParentImage="*\\regsvr32.exe") (Image="*\\msdt.exe" OR OriginalFileName="msdt.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1218" | eval sigma_title="MSDT Executed with Suspicious Parent" | eval sigma_description="Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Arbitrary Commands Using MSDT.EXE - winevent]
description = Detects processes leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msdt.exe" OR OriginalFileName="msdt.exe") (Process_Command_Line="*IT_BrowseForFile=*" OR (Process_Command_Line="* PCWDiagnostic*" (Process_Command_Line="* /af *" OR Process_Command_Line="* -af *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Execute Arbitrary Commands Using MSDT.EXE" | eval sigma_description="Detects processes leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Arbitrary Commands Using MSDT.EXE - sysmon]
description = Detects processes leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msdt.exe" OR OriginalFileName="msdt.exe") (CommandLine="*IT_BrowseForFile=*" OR (CommandLine="* PCWDiagnostic*" (CommandLine="* /af *" OR CommandLine="* -af *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Execute Arbitrary Commands Using MSDT.EXE" | eval sigma_description="Detects processes leveraging the 'ms-msdt' handler or the 'msdt.exe' binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Minimized MSEdge Start - winevent]
description = Detects the suspicious minimized start of MsEdge browser, which can be used to download files from the Internet
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*start /min msedge*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Minimized MSEdge Start" | eval sigma_description="Detects the suspicious minimized start of MsEdge browser, which can be used to download files from the Internet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Minimized MSEdge Start - sysmon]
description = Detects the suspicious minimized start of MsEdge browser, which can be used to download files from the Internet
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*start /min msedge*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Minimized MSEdge Start" | eval sigma_description="Detects the suspicious minimized start of MsEdge browser, which can be used to download files from the Internet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mshta JavaScript Execution - winevent]
description = Identifies suspicious mshta.exe commands.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" Process_Command_Line="*javascript*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005" | eval sigma_title="Mshta JavaScript Execution" | eval sigma_description="Identifies suspicious mshta.exe commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mshta JavaScript Execution - sysmon]
description = Identifies suspicious mshta.exe commands.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mshta.exe" CommandLine="*javascript*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005" | eval sigma_title="Mshta JavaScript Execution" | eval sigma_description="Identifies suspicious mshta.exe commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from MSHTA
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\mshta.exe" ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\reg.exe" OR New_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\BITSADMIN*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005 car.2013-02-003 car.2013-03-001 car.2014-04-003" | eval sigma_title="MSHTA Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MSHTA"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from MSHTA
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\mshta.exe" ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\reg.exe" OR Image="*\\regsvr32.exe") OR (Image="*\\BITSADMIN*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.005 car.2013-02-003 car.2013-03-001 car.2014-04-003" | eval sigma_title="MSHTA Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MSHTA"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Msiexec Load DLL - winevent]
description = Detects MsiExec loading a DLL and calling its DllUnregisterServer function
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\msiexec.exe" Process_Command_Line="* /z *" Process_Command_Line="*.dll*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Suspicious Msiexec Load DLL" | eval sigma_description="Detects MsiExec loading a DLL and calling its DllUnregisterServer function"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Msiexec Load DLL - sysmon]
description = Detects MsiExec loading a DLL and calling its DllUnregisterServer function
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\msiexec.exe" CommandLine="* /z *" CommandLine="*.dll*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Suspicious Msiexec Load DLL" | eval sigma_description="Detects MsiExec loading a DLL and calling its DllUnregisterServer function"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Embedding Parent - winevent]
description = Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\cmd.exe") ParentCommandLine="*MsiExec.exe*" ParentCommandLine="*-Embedding *") NOT ((New_Process_Name="*:\\Windows\\System32\\cmd.exe" Process_Command_Line="*C:\\Program Files\\SplunkUniversalForwarder\\bin\\*") OR (Process_Command_Line="*\\DismFoDInstall.cmd*" OR ParentCommandLine="*\\MsiExec.exe -Embedding *" ParentCommandLine="*Global\\MSI0000*"))) | eval sigma_attack_tags="attack.t1218.007 attack.defense_evasion" | eval sigma_title="Suspicious MsiExec Embedding Parent" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Embedding Parent - sysmon]
description = Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" OR Image="*\\cmd.exe") ParentCommandLine="*MsiExec.exe*" ParentCommandLine="*-Embedding *") NOT ((Image="*:\\Windows\\System32\\cmd.exe" CommandLine="*C:\\Program Files\\SplunkUniversalForwarder\\bin\\*") OR (CommandLine="*\\DismFoDInstall.cmd*" OR ParentCommandLine="*\\MsiExec.exe -Embedding *" ParentCommandLine="*Global\\MSI0000*"))) | eval sigma_attack_tags="attack.t1218.007 attack.defense_evasion" | eval sigma_title="Suspicious MsiExec Embedding Parent" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Msiexec Execute Arbitrary DLL - winevent]
description = Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\msiexec.exe" Process_Command_Line="* /y*") NOT (((Process_Command_Line="*\\MsiExec.exe\" /Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll*" OR Process_Command_Line="*\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll*" OR Process_Command_Line="*\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll*" OR Process_Command_Line="*\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll*" OR Process_Command_Line="*\\MsiExec.exe\" /Y \"C:\\Windows\\CCM\\*" OR Process_Command_Line="*\\MsiExec.exe\" /Y C:\\Windows\\CCM\\*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Suspicious Msiexec Execute Arbitrary DLL" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Msiexec Execute Arbitrary DLL - sysmon]
description = Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\msiexec.exe" CommandLine="* /y*") NOT (((CommandLine="*\\MsiExec.exe\" /Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll*" OR CommandLine="*\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll*" OR CommandLine="*\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll*" OR CommandLine="*\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll*" OR CommandLine="*\\MsiExec.exe\" /Y \"C:\\Windows\\CCM\\*" OR CommandLine="*\\MsiExec.exe\" /Y C:\\Windows\\CCM\\*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Suspicious Msiexec Execute Arbitrary DLL" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Msiexec Quiet Install - winevent]
description = Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)

search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\msiexec.exe" Process_Command_Line="* /i*" Process_Command_Line="* /q*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Suspicious Msiexec Quiet Install" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Msiexec Quiet Install - sysmon]
description = Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)

search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\msiexec.exe" CommandLine="* /i*" CommandLine="* /q*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007" | eval sigma_title="Suspicious Msiexec Quiet Install" | eval sigma_description="Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Msra.exe Process Injection - winevent]
description = Detects process injection using Microsoft Remote Asssistance (Msra.exe) which has been used for discovery and persistence tactics
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\msra.exe" ParentCommandLine="*msra.exe" (New_Process_Name="*\\arp.exe" OR New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\netstat.exe" OR New_Process_Name="*\\nslookup.exe" OR New_Process_Name="*\\route.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\whoami.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Msra.exe Process Injection" | eval sigma_description="Detects process injection using Microsoft Remote Asssistance (Msra.exe) which has been used for discovery and persistence tactics"
dispatch.earliest_time = -24h@h
alert.track = 0

[Msra.exe Process Injection - sysmon]
description = Detects process injection using Microsoft Remote Asssistance (Msra.exe) which has been used for discovery and persistence tactics
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\msra.exe" ParentCommandLine="*msra.exe" (Image="*\\arp.exe" OR Image="*\\cmd.exe" OR Image="*\\net.exe" OR Image="*\\netstat.exe" OR Image="*\\nslookup.exe" OR Image="*\\route.exe" OR Image="*\\schtasks.exe" OR Image="*\\whoami.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Msra.exe Process Injection" | eval sigma_description="Detects process injection using Microsoft Remote Asssistance (Msra.exe) which has been used for discovery and persistence tactics"
dispatch.earliest_time = -24h@h
alert.track = 0

[Quick Execution of a Series of Suspicious Commands - winevent]
description = Detects multiple suspicious process in a limited timeframe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*arp.exe*" OR Process_Command_Line="*at.exe*" OR Process_Command_Line="*attrib.exe*" OR Process_Command_Line="*cscript.exe*" OR Process_Command_Line="*dsquery.exe*" OR Process_Command_Line="*hostname.exe*" OR Process_Command_Line="*ipconfig.exe*" OR Process_Command_Line="*mimikatz.exe*" OR Process_Command_Line="*nbtstat.exe*" OR Process_Command_Line="*net.exe*" OR Process_Command_Line="*netsh.exe*" OR Process_Command_Line="*nslookup.exe*" OR Process_Command_Line="*ping.exe*" OR Process_Command_Line="*quser.exe*" OR Process_Command_Line="*qwinsta.exe*" OR Process_Command_Line="*reg.exe*" OR Process_Command_Line="*runas.exe*" OR Process_Command_Line="*sc.exe*" OR Process_Command_Line="*schtasks.exe*" OR Process_Command_Line="*ssh.exe*" OR Process_Command_Line="*systeminfo.exe*" OR Process_Command_Line="*taskkill.exe*" OR Process_Command_Line="*telnet.exe*" OR Process_Command_Line="*tracert.exe*" OR Process_Command_Line="*wscript.exe*" OR Process_Command_Line="*xcopy.exe*" OR Process_Command_Line="*pscp.exe*" OR Process_Command_Line="*copy.exe*" OR Process_Command_Line="*robocopy.exe*" OR Process_Command_Line="*certutil.exe*" OR Process_Command_Line="*vssadmin.exe*" OR Process_Command_Line="*powershell.exe*" OR Process_Command_Line="*wevtutil.exe*" OR Process_Command_Line="*psexec.exe*" OR Process_Command_Line="*bcedit.exe*" OR Process_Command_Line="*wbadmin.exe*" OR Process_Command_Line="*icacls.exe*" OR Process_Command_Line="*diskpart.exe*")) | eventstats count as val by MachineName| search val > 5 | eval sigma_attack_tags="car.2013-04-002 attack.execution attack.t1059" | eval sigma_title="Quick Execution of a Series of Suspicious Commands" | eval sigma_description="Detects multiple suspicious process in a limited timeframe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Quick Execution of a Series of Suspicious Commands - sysmon]
description = Detects multiple suspicious process in a limited timeframe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*arp.exe*" OR CommandLine="*at.exe*" OR CommandLine="*attrib.exe*" OR CommandLine="*cscript.exe*" OR CommandLine="*dsquery.exe*" OR CommandLine="*hostname.exe*" OR CommandLine="*ipconfig.exe*" OR CommandLine="*mimikatz.exe*" OR CommandLine="*nbtstat.exe*" OR CommandLine="*net.exe*" OR CommandLine="*netsh.exe*" OR CommandLine="*nslookup.exe*" OR CommandLine="*ping.exe*" OR CommandLine="*quser.exe*" OR CommandLine="*qwinsta.exe*" OR CommandLine="*reg.exe*" OR CommandLine="*runas.exe*" OR CommandLine="*sc.exe*" OR CommandLine="*schtasks.exe*" OR CommandLine="*ssh.exe*" OR CommandLine="*systeminfo.exe*" OR CommandLine="*taskkill.exe*" OR CommandLine="*telnet.exe*" OR CommandLine="*tracert.exe*" OR CommandLine="*wscript.exe*" OR CommandLine="*xcopy.exe*" OR CommandLine="*pscp.exe*" OR CommandLine="*copy.exe*" OR CommandLine="*robocopy.exe*" OR CommandLine="*certutil.exe*" OR CommandLine="*vssadmin.exe*" OR CommandLine="*powershell.exe*" OR CommandLine="*wevtutil.exe*" OR CommandLine="*psexec.exe*" OR CommandLine="*bcedit.exe*" OR CommandLine="*wbadmin.exe*" OR CommandLine="*icacls.exe*" OR CommandLine="*diskpart.exe*")) | eventstats count as val by MachineName| search val > 5 | eval sigma_attack_tags="car.2013-04-002 attack.execution attack.t1059" | eval sigma_title="Quick Execution of a Series of Suspicious Commands" | eval sigma_description="Detects multiple suspicious process in a limited timeframe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Enumeration - winevent]
description = Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*view*") NOT (Process_Command_Line="*\\\\*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Windows Network Enumeration" | eval sigma_description="Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Enumeration - sysmon]
description = Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*view*") NOT (CommandLine="*\\\\*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Windows Network Enumeration" | eval sigma_description="Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Windows Admin Shares with net.exe - winevent]
description = Detects when an admin share is mounted using net.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="* use *" Process_Command_Line="*\\\*\\*$*") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Mounted Windows Admin Shares with net.exe" | eval sigma_description="Detects when an admin share is mounted using net.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Windows Admin Shares with net.exe - sysmon]
description = Detects when an admin share is mounted using net.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="* use *" CommandLine="*\\\*\\*$*") | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002" | eval sigma_title="Mounted Windows Admin Shares with net.exe" | eval sigma_description="Detects when an admin share is mounted using net.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe User Account Creation - winevent]
description = Identifies creation of local users via the net.exe command.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*user*" Process_Command_Line="*add*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.persistence attack.t1136.001" | eval sigma_title="Net.exe User Account Creation" | eval sigma_description="Identifies creation of local users via the net.exe command."
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe User Account Creation - sysmon]
description = Identifies creation of local users via the net.exe command.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*user*" CommandLine="*add*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.persistence attack.t1136.001" | eval sigma_title="Net.exe User Account Creation" | eval sigma_description="Identifies creation of local users via the net.exe command."
dispatch.earliest_time = -24h@h
alert.track = 0

[Ncat Execution - winevent]
description = Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\ncat.exe" OR New_Process_Name="*\\netcat.exe") OR (Process_Command_Line="* -lvp *" OR Process_Command_Line="* -lvnp*" OR Process_Command_Line="* -l -v -p *" OR Process_Command_Line="* -lv -p *" OR Process_Command_Line="* -l --proxy-type http *" OR Process_Command_Line="* --exec cmd.exe *" OR Process_Command_Line="* -vnl --exec *"))) | eval sigma_attack_tags="attack.command_and_control attack.t1095" | eval sigma_title="Ncat Execution" | eval sigma_description="Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ncat Execution - sysmon]
description = Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\ncat.exe" OR Image="*\\netcat.exe") OR (CommandLine="* -lvp *" OR CommandLine="* -lvnp*" OR CommandLine="* -l -v -p *" OR CommandLine="* -lv -p *" OR CommandLine="* -l --proxy-type http *" OR CommandLine="* --exec cmd.exe *" OR CommandLine="* -vnl --exec *"))) | eval sigma_attack_tags="attack.command_and_control attack.t1095" | eval sigma_title="Ncat Execution" | eval sigma_description="Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Opening - winevent]
description = Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*netsh*" Process_Command_Line="*firewall add portopening*" Process_Command_Line="*tcp 3389*") OR (Process_Command_Line="*netsh*" Process_Command_Line="*advfirewall firewall add rule*" Process_Command_Line="*action=allow*" Process_Command_Line="*protocol=TCP*" Process_Command_Line="*localport=3389*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Netsh RDP Port Opening" | eval sigma_description="Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Opening - sysmon]
description = Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*netsh*" CommandLine="*firewall add portopening*" CommandLine="*tcp 3389*") OR (CommandLine="*netsh*" CommandLine="*advfirewall firewall add rule*" CommandLine="*action=allow*" CommandLine="*protocol=TCP*" CommandLine="*localport=3389*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Netsh RDP Port Opening" | eval sigma_description="Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Program Allowed with Suspcious Location - winevent]
description = Detects Netsh commands that allows a suspcious application location on Windows Firewall
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\netsh.exe" Process_Command_Line="*firewall*" Process_Command_Line="*add*" Process_Command_Line="*allowedprogram*") OR (New_Process_Name="*\\netsh.exe" Process_Command_Line="*advfirewall*" Process_Command_Line="*firewall*" Process_Command_Line="*add*" Process_Command_Line="*rule*" Process_Command_Line="*action=allow*" Process_Command_Line="*program=*")) ((Process_Command_Line="*%TEMP%*" OR Process_Command_Line="*:\\RECYCLER\\*" OR Process_Command_Line="*C:\\$Recycle.bin\\*" OR Process_Command_Line="*:\\SystemVolumeInformation\\*" OR Process_Command_Line="*C:\\Windows\\Temp\\*" OR Process_Command_Line="*C:\\Temp\\*" OR Process_Command_Line="*C:\\Users\\Public\\*" OR Process_Command_Line="*C:\\Users\\Default\\*" OR Process_Command_Line="*C:\\Users\\Desktop\\*" OR Process_Command_Line="*\\Downloads\\*" OR Process_Command_Line="*\\Temporary Internet Files\\Content.Outlook\\*" OR Process_Command_Line="*\\Local Settings\\Temporary Internet Files\\*") OR (Process_Command_Line="C:\\Windows\\Tasks\\*" OR Process_Command_Line="C:\\Windows\\debug\\*" OR Process_Command_Line="C:\\Windows\\fonts\\*" OR Process_Command_Line="C:\\Windows\\help\\*" OR Process_Command_Line="C:\\Windows\\drivers\\*" OR Process_Command_Line="C:\\Windows\\addins\\*" OR Process_Command_Line="C:\\Windows\\cursors\\*" OR Process_Command_Line="C:\\Windows\\system32\\tasks\\*" OR Process_Command_Line="%Public%\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Netsh Program Allowed with Suspcious Location" | eval sigma_description="Detects Netsh commands that allows a suspcious application location on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Program Allowed with Suspcious Location - sysmon]
description = Detects Netsh commands that allows a suspcious application location on Windows Firewall
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\netsh.exe" CommandLine="*firewall*" CommandLine="*add*" CommandLine="*allowedprogram*") OR (Image="*\\netsh.exe" CommandLine="*advfirewall*" CommandLine="*firewall*" CommandLine="*add*" CommandLine="*rule*" CommandLine="*action=allow*" CommandLine="*program=*")) ((CommandLine="*%TEMP%*" OR CommandLine="*:\\RECYCLER\\*" OR CommandLine="*C:\\$Recycle.bin\\*" OR CommandLine="*:\\SystemVolumeInformation\\*" OR CommandLine="*C:\\Windows\\Temp\\*" OR CommandLine="*C:\\Temp\\*" OR CommandLine="*C:\\Users\\Public\\*" OR CommandLine="*C:\\Users\\Default\\*" OR CommandLine="*C:\\Users\\Desktop\\*" OR CommandLine="*\\Downloads\\*" OR CommandLine="*\\Temporary Internet Files\\Content.Outlook\\*" OR CommandLine="*\\Local Settings\\Temporary Internet Files\\*") OR (CommandLine="C:\\Windows\\Tasks\\*" OR CommandLine="C:\\Windows\\debug\\*" OR CommandLine="C:\\Windows\\fonts\\*" OR CommandLine="C:\\Windows\\help\\*" OR CommandLine="C:\\Windows\\drivers\\*" OR CommandLine="C:\\Windows\\addins\\*" OR CommandLine="C:\\Windows\\cursors\\*" OR CommandLine="C:\\Windows\\system32\\tasks\\*" OR CommandLine="%Public%\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Netsh Program Allowed with Suspcious Location" | eval sigma_description="Detects Netsh commands that allows a suspcious application location on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port or Application Allowed - winevent]
description = Allow Incoming Connections by Port or Application on Windows Firewall
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\netsh.exe" Process_Command_Line="*firewall*" Process_Command_Line="*add*") NOT (((Process_Command_Line="*\\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program Files (x86)\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any*" OR Process_Command_Line="*\\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program Files\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Netsh Port or Application Allowed" | eval sigma_description="Allow Incoming Connections by Port or Application on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port or Application Allowed - sysmon]
description = Allow Incoming Connections by Port or Application on Windows Firewall
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\netsh.exe" CommandLine="*firewall*" CommandLine="*add*") NOT (((CommandLine="*\\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program Files (x86)\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any*" OR CommandLine="*\\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program Files\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.004" | eval sigma_title="Netsh Port or Application Allowed" | eval sigma_description="Allow Incoming Connections by Port or Application on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture a Network Trace with netsh.exe - winevent]
description = Detects capture a network trace via netsh.exe trace functionality
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*netsh*" Process_Command_Line="*trace*" Process_Command_Line="*start*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Capture a Network Trace with netsh.exe" | eval sigma_description="Detects capture a network trace via netsh.exe trace functionality"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture a Network Trace with netsh.exe - sysmon]
description = Detects capture a network trace via netsh.exe trace functionality
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*netsh*" CommandLine="*trace*" CommandLine="*start*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Capture a Network Trace with netsh.exe" | eval sigma_description="Detects capture a network trace via netsh.exe trace functionality"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Forwarding - winevent]
description = Detects netsh commands that configure a port forwarding of port 3389 used for RDP
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*i*" Process_Command_Line="* p*" Process_Command_Line="*=3389*" Process_Command_Line="* c*") | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh RDP Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding of port 3389 used for RDP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Forwarding - sysmon]
description = Detects netsh commands that configure a port forwarding of port 3389 used for RDP
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*i*" CommandLine="* p*" CommandLine="*=3389*" CommandLine="* c*") | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh RDP Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding of port 3389 used for RDP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port Forwarding - winevent]
description = Detects netsh commands that configure a port forwarding (PortProxy)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\netsh.exe" Process_Command_Line="*interface*" Process_Command_Line="*portproxy*" Process_Command_Line="*add*" Process_Command_Line="*v4tov4*") OR (New_Process_Name="*\\netsh.exe" Process_Command_Line="*connectp*" Process_Command_Line="*listena*" Process_Command_Line="*c=*"))) | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding (PortProxy)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port Forwarding - sysmon]
description = Detects netsh commands that configure a port forwarding (PortProxy)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\netsh.exe" CommandLine="*interface*" CommandLine="*portproxy*" CommandLine="*add*" CommandLine="*v4tov4*") OR (Image="*\\netsh.exe" CommandLine="*connectp*" CommandLine="*listena*" CommandLine="*c=*"))) | eval sigma_attack_tags="attack.lateral_movement attack.defense_evasion attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding (PortProxy)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Harvesting of Wifi Credentials Using netsh.exe - winevent]
description = Detect the harvesting of wifi credentials using netsh.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*wlan*" Process_Command_Line="* s*" Process_Command_Line="* p*" Process_Command_Line="* k*" Process_Command_Line="*=clear*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Harvesting of Wifi Credentials Using netsh.exe" | eval sigma_description="Detect the harvesting of wifi credentials using netsh.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Harvesting of Wifi Credentials Using netsh.exe - sysmon]
description = Detect the harvesting of wifi credentials using netsh.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*wlan*" CommandLine="* s*" CommandLine="* p*" CommandLine="* k*" CommandLine="*=clear*") | eval sigma_attack_tags="attack.discovery attack.credential_access attack.t1040" | eval sigma_title="Harvesting of Wifi Credentials Using netsh.exe" | eval sigma_description="Detect the harvesting of wifi credentials using netsh.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scan Loop Network - winevent]
description = Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*for *" OR Process_Command_Line="*foreach *") (Process_Command_Line="*nslookup*" OR Process_Command_Line="*ping*")) | eval sigma_attack_tags="attack.execution attack.t1059 attack.discovery attack.t1018" | eval sigma_title="Suspicious Scan Loop Network" | eval sigma_description="Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scan Loop Network - sysmon]
description = Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*for *" OR CommandLine="*foreach *") (CommandLine="*nslookup*" OR CommandLine="*ping*")) | eval sigma_attack_tags="attack.execution attack.t1059 attack.discovery attack.t1018" | eval sigma_title="Suspicious Scan Loop Network" | eval sigma_description="Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Sniffing - winevent]
description = Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tshark.exe" Process_Command_Line="*-i*") OR New_Process_Name="*\\windump.exe")) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.discovery attack.t1040" | eval sigma_title="Network Sniffing" | eval sigma_description="Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Sniffing - sysmon]
description = Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tshark.exe" CommandLine="*-i*") OR Image="*\\windump.exe")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.discovery attack.t1040" | eval sigma_title="Network Sniffing" | eval sigma_description="Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Creation - winevent]
description = Detects creation of a new service.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\sc.exe" Process_Command_Line="*create*" Process_Command_Line="*binpath*") OR (New_Process_Name="*\\powershell.exe" Process_Command_Line="*new-service*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="New Service Creation" | eval sigma_description="Detects creation of a new service."
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Creation - sysmon]
description = Detects creation of a new service.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\sc.exe" CommandLine="*create*" CommandLine="*binpath*") OR (Image="*\\powershell.exe" CommandLine="*new-service*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="New Service Creation" | eval sigma_description="Detects creation of a new service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Recon Activity with NLTEST - winevent]
description = Detects nltest commands that can be used for information discovery
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\nltest.exe" ((Process_Command_Line="*/server*" Process_Command_Line="*/query*") OR (Process_Command_Line="*/dclist:*" OR Process_Command_Line="*/parentdomain*" OR Process_Command_Line="*/domain_trusts*" OR Process_Command_Line="*/trusted_domains*" OR Process_Command_Line="*/user*"))) | table New_Process_Name,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1016 attack.t1482" | eval sigma_title="Recon Activity with NLTEST" | eval sigma_description="Detects nltest commands that can be used for information discovery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Recon Activity with NLTEST - sysmon]
description = Detects nltest commands that can be used for information discovery
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\nltest.exe" ((CommandLine="*/server*" CommandLine="*/query*") OR (CommandLine="*/dclist:*" OR CommandLine="*/parentdomain*" OR CommandLine="*/domain_trusts*" OR CommandLine="*/trusted_domains*" OR CommandLine="*/user*"))) | table Image,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1016 attack.t1482" | eval sigma_title="Recon Activity with NLTEST" | eval sigma_description="Detects nltest commands that can be used for information discovery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Non Interactive PowerShell - winevent]
description = Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\powershell.exe" NOT ((Creator_Process_Name="*\\explorer.exe" OR Creator_Process_Name="*\\CompatTelRunner.exe"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Non Interactive PowerShell" | eval sigma_description="Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent."
dispatch.earliest_time = -24h@h
alert.track = 0

[Non Interactive PowerShell - sysmon]
description = Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\powershell.exe" NOT ((ParentImage="*\\explorer.exe" OR ParentImage="*\\CompatTelRunner.exe"))) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Non Interactive PowerShell" | eval sigma_description="Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent."
dispatch.earliest_time = -24h@h
alert.track = 0

[Non-privileged Usage of Reg or Powershell - winevent]
description = Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*reg *" Process_Command_Line="*add*") OR (Process_Command_Line="*powershell*" OR Process_Command_Line="*set-itemproperty*" OR Process_Command_Line="* sp *" OR Process_Command_Line="*new-itemproperty*")) (IntegrityLevel="Medium" Process_Command_Line="*ControlSet*" Process_Command_Line="*Services*" (Process_Command_Line="*ImagePath*" OR Process_Command_Line="*FailureCommand*" OR Process_Command_Line="*ServiceDLL*"))) | table EventCode,IntegrityLevel,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Non-privileged Usage of Reg or Powershell" | eval sigma_description="Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Non-privileged Usage of Reg or Powershell - sysmon]
description = Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*reg *" CommandLine="*add*") OR (CommandLine="*powershell*" OR CommandLine="*set-itemproperty*" OR CommandLine="* sp *" OR CommandLine="*new-itemproperty*")) (IntegrityLevel="Medium" CommandLine="*ControlSet*" CommandLine="*Services*" (CommandLine="*ImagePath*" OR CommandLine="*FailureCommand*" OR CommandLine="*ServiceDLL*"))) | table EventCode,IntegrityLevel,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Non-privileged Usage of Reg or Powershell" | eval sigma_description="Search for usage of reg or Powershell by non-priveleged users to modify service configuration in registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Applications Spawning Wmi Cli - winevent]
description = Initial execution of malicious document calls wmic to execute the file with regsvr32
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wbem\\WMIC.exe" OR OriginalFileName="wmic.exe") (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\powerpnt.exe")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Office Applications Spawning Wmi Cli" | eval sigma_description="Initial execution of malicious document calls wmic to execute the file with regsvr32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Applications Spawning Wmi Cli - sysmon]
description = Initial execution of malicious document calls wmic to execute the file with regsvr32
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wbem\\WMIC.exe" OR OriginalFileName="wmic.exe") (ParentImage="*\\winword.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\powerpnt.exe")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Office Applications Spawning Wmi Cli" | eval sigma_description="Initial execution of malicious document calls wmic to execute the file with regsvr32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Directory Traversal CommandLine - winevent]
description = Detects Office Applications executing a Windows child process including directory traversal patterns
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\powerpnt.exe" OR Creator_Process_Name="*\\msaccess.exe" OR Creator_Process_Name="*\\mspub.exe" OR Creator_Process_Name="*\\eqnedt32.exe" OR Creator_Process_Name="*\\visio.exe") (New_Process_Name="*\\Windows\\System32\\*" OR New_Process_Name="*\\Windows\\SysWOW64\\*") (Process_Command_Line="../../../.." OR Process_Command_Line="..\\..\\..\\.." OR Process_Command_Line="..//..//..//..")) | eval sigma_attack_tags="attack.execution attack.defense_evasion" | eval sigma_title="Office Directory Traversal CommandLine" | eval sigma_description="Detects Office Applications executing a Windows child process including directory traversal patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Directory Traversal CommandLine - sysmon]
description = Detects Office Applications executing a Windows child process including directory traversal patterns
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\winword.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\powerpnt.exe" OR ParentImage="*\\msaccess.exe" OR ParentImage="*\\mspub.exe" OR ParentImage="*\\eqnedt32.exe" OR ParentImage="*\\visio.exe") (Image="*\\Windows\\System32\\*" OR Image="*\\Windows\\SysWOW64\\*") (CommandLine="../../../.." OR CommandLine="..\\..\\..\\.." OR CommandLine="..//..//..//..")) | eval sigma_attack_tags="attack.execution attack.defense_evasion" | eval sigma_title="Office Directory Traversal CommandLine" | eval sigma_description="Detects Office Applications executing a Windows child process including directory traversal patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Excel Proxy Executing Regsvr32 With Payload - winevent]
description = Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wbem\\WMIC.exe" OR OriginalFileName="wmic.exe") ((Process_Command_Line="*regsvr32*" OR Process_Command_Line="*rundll32*" OR Process_Command_Line="*msiexec*" OR Process_Command_Line="*mshta*" OR Process_Command_Line="*verclsid*") (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\powerpnt.exe") Process_Command_Line="*process*" Process_Command_Line="*create*" Process_Command_Line="*call*")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Excel Proxy Executing Regsvr32 With Payload" | eval sigma_description="Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Excel Proxy Executing Regsvr32 With Payload - sysmon]
description = Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wbem\\WMIC.exe" OR OriginalFileName="wmic.exe") ((CommandLine="*regsvr32*" OR CommandLine="*rundll32*" OR CommandLine="*msiexec*" OR CommandLine="*mshta*" OR CommandLine="*verclsid*") (ParentImage="*\\winword.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\powerpnt.exe") CommandLine="*process*" CommandLine="*create*" CommandLine="*call*")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Excel Proxy Executing Regsvr32 With Payload" | eval sigma_description="Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Excel Proxy Executing Regsvr32 With Payload - winevent]
description = Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*regsvr32*" OR Process_Command_Line="*rundll32*" OR Process_Command_Line="*msiexec*" OR Process_Command_Line="*mshta*" OR Process_Command_Line="*verclsid*") (New_Process_Name="*\\wbem\\WMIC.exe" OR Process_Command_Line="*wmic *") (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\powerpnt.exe") (Process_Command_Line="*process*" Process_Command_Line="*create*" Process_Command_Line="*call*")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Excel Proxy Executing Regsvr32 With Payload" | eval sigma_description="Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Excel Proxy Executing Regsvr32 With Payload - sysmon]
description = Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*regsvr32*" OR CommandLine="*rundll32*" OR CommandLine="*msiexec*" OR CommandLine="*mshta*" OR CommandLine="*verclsid*") (Image="*\\wbem\\WMIC.exe" OR CommandLine="*wmic *") (ParentImage="*\\winword.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\powerpnt.exe") (CommandLine="*process*" CommandLine="*create*" CommandLine="*call*")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Excel Proxy Executing Regsvr32 With Payload" | eval sigma_description="Excel called wmic to finally proxy execute regsvr32 with the payload. An attacker wanted to break suspicious parent-child chain (Office app spawns LOLBin).But we have command-line in the event which allow us to 'restore' this suspicious parent-child chain and detect it. Monitor process creation with 'wmic process call create' and LOLBins in command-line with parent Office application processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Product Spawning Windows Shell - winevent]
description = Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\WINWORD.EXE" OR Creator_Process_Name="*\\EXCEL.EXE" OR Creator_Process_Name="*\\POWERPNT.exe" OR Creator_Process_Name="*\\MSPUB.exe" OR Creator_Process_Name="*\\VISIO.exe" OR Creator_Process_Name="*\\MSACCESS.EXE" OR Creator_Process_Name="*\\EQNEDT32.EXE") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe" OR New_Process_Name="*\\mftrace.exe" OR New_Process_Name="*\\AppVLP.exe" OR New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\msbuild.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="Microsoft Office Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Product Spawning Windows Shell - sysmon]
description = Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\WINWORD.EXE" OR ParentImage="*\\EXCEL.EXE" OR ParentImage="*\\POWERPNT.exe" OR ParentImage="*\\MSPUB.exe" OR ParentImage="*\\VISIO.exe" OR ParentImage="*\\MSACCESS.EXE" OR ParentImage="*\\EQNEDT32.EXE") (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\scrcons.exe" OR Image="*\\schtasks.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\msiexec.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\mftrace.exe" OR Image="*\\AppVLP.exe" OR Image="*\\svchost.exe" OR Image="*\\msbuild.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="Microsoft Office Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command and scripting interpreter executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[MS Office Product Spawning Exe in User Dir - winevent]
description = Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\WINWORD.EXE" OR Creator_Process_Name="*\\EXCEL.EXE" OR Creator_Process_Name="*\\POWERPNT.exe" OR Creator_Process_Name="*\\MSPUB.exe" OR Creator_Process_Name="*\\VISIO.exe" OR Creator_Process_Name="*\\MSACCESS.exe" OR Creator_Process_Name="*\\EQNEDT32.exe") New_Process_Name="C:\\users\\*" New_Process_Name="*.exe") NOT (New_Process_Name="*\\Teams.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.g0046 car.2013-05-002" | eval sigma_title="MS Office Product Spawning Exe in User Dir" | eval sigma_description="Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[MS Office Product Spawning Exe in User Dir - sysmon]
description = Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\WINWORD.EXE" OR ParentImage="*\\EXCEL.EXE" OR ParentImage="*\\POWERPNT.exe" OR ParentImage="*\\MSPUB.exe" OR ParentImage="*\\VISIO.exe" OR ParentImage="*\\MSACCESS.exe" OR ParentImage="*\\EQNEDT32.exe") Image="C:\\users\\*" Image="*.exe") NOT (Image="*\\Teams.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204.002 attack.g0046 car.2013-05-002" | eval sigma_title="MS Office Product Spawning Exe in User Dir" | eval sigma_description="Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Applications Spawning Wmi Cli - winevent]
description = Initial execution of malicious document calls wmic to execute the file with regsvr32
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wbem\\WMIC.exe" OR Process_Command_Line="*wmic *") (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\powerpnt.exe" OR Creator_Process_Name="*\\msaccess.exe" OR Creator_Process_Name="*\\mspub.exe" OR Creator_Process_Name="*\\eqnedt32.exe" OR Creator_Process_Name="*\\visio.exe")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Office Applications Spawning Wmi Cli" | eval sigma_description="Initial execution of malicious document calls wmic to execute the file with regsvr32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Applications Spawning Wmi Cli - sysmon]
description = Initial execution of malicious document calls wmic to execute the file with regsvr32
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wbem\\WMIC.exe" OR CommandLine="*wmic *") (ParentImage="*\\winword.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\powerpnt.exe" OR ParentImage="*\\msaccess.exe" OR ParentImage="*\\mspub.exe" OR ParentImage="*\\eqnedt32.exe" OR ParentImage="*\\visio.exe")) | eval sigma_attack_tags="attack.t1204.002 attack.t1047 attack.t1218.010 attack.execution attack.defense_evasion" | eval sigma_title="Office Applications Spawning Wmi Cli" | eval sigma_description="Initial execution of malicious document calls wmic to execute the file with regsvr32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Outlook Product Spawning Windows Shell - winevent]
description = Detects a Windows command and scripting interpreter executable started from Microsoft Outlook
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\OUTLOOK.EXE" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe" OR New_Process_Name="*\\mftrace.exe" OR New_Process_Name="*\\AppVLP.exe" OR New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\msbuild.exe" OR New_Process_Name="*\\msdt.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="Microsoft Outlook Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command and scripting interpreter executable started from Microsoft Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Outlook Product Spawning Windows Shell - sysmon]
description = Detects a Windows command and scripting interpreter executable started from Microsoft Outlook
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\OUTLOOK.EXE" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\scrcons.exe" OR Image="*\\schtasks.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\msiexec.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\mftrace.exe" OR Image="*\\AppVLP.exe" OR Image="*\\svchost.exe" OR Image="*\\msbuild.exe" OR Image="*\\msdt.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1204.002" | eval sigma_title="Microsoft Outlook Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command and scripting interpreter executable started from Microsoft Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pingback Backdoor - winevent]
description = Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*updata.exe" Process_Command_Line="*config*" Process_Command_Line="*msdtc*" Process_Command_Line="*start*" Process_Command_Line="*auto*") | eval sigma_attack_tags="attack.persistence attack.t1574.001" | eval sigma_title="Pingback Backdoor" | eval sigma_description="Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pingback Backdoor - sysmon]
description = Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*updata.exe" CommandLine="*config*" CommandLine="*msdtc*" CommandLine="*start*" CommandLine="*auto*") | eval sigma_attack_tags="attack.persistence attack.t1574.001" | eval sigma_title="Pingback Backdoor" | eval sigma_description="Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable Used by PlugX in Uncommon Location - winevent]
description = Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((((((((((((New_Process_Name="*\\CamMute.exe" NOT ((New_Process_Name="*\\Lenovo\\Communication Utility\\*" OR New_Process_Name="*\\Lenovo\\Communications Utility\\*"))) OR (New_Process_Name="*\\chrome_frame_helper.exe" NOT (New_Process_Name="*\\Google\\Chrome\\application\\*"))) OR (New_Process_Name="*\\dvcemumanager.exe" NOT (New_Process_Name="*\\Microsoft Device Emulator\\*"))) OR (New_Process_Name="*\\Gadget.exe" NOT (New_Process_Name="*\\Windows Media Player\\*"))) OR (New_Process_Name="*\\hcc.exe" NOT (New_Process_Name="*\\HTML Help Workshop\\*"))) OR (New_Process_Name="*\\hkcmd.exe" NOT ((New_Process_Name="*\\System32\\*" OR New_Process_Name="*\\SysNative\\*" OR New_Process_Name="*\\SysWow64\\*")))) OR (New_Process_Name="*\\Mc.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*")))) OR (New_Process_Name="*\\MsMpEng.exe" NOT ((New_Process_Name="*\\Microsoft Security Client\\*" OR New_Process_Name="*\\Windows Defender\\*" OR New_Process_Name="*\\AntiMalware\\*")))) OR (New_Process_Name="*\\msseces.exe" NOT ((New_Process_Name="*\\Microsoft Security Center\\*" OR New_Process_Name="*\\Microsoft Security Client\\*" OR New_Process_Name="*\\Microsoft Security Essentials\\*")))) OR (New_Process_Name="*\\OInfoP11.exe" NOT (New_Process_Name="*\\Common Files\\Microsoft Shared\\*"))) OR (New_Process_Name="*\\OleView.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*" OR New_Process_Name="*\\Windows Resource Kit\\*")))) OR (New_Process_Name="*\\rc.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*" OR New_Process_Name="*\\Windows Resource Kit\\*" OR New_Process_Name="*\\Microsoft.NET\\*"))))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.s0013 attack.defense_evasion attack.t1574.002" | eval sigma_title="Executable Used by PlugX in Uncommon Location" | eval sigma_description="Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable Used by PlugX in Uncommon Location - sysmon]
description = Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((((((((((((Image="*\\CamMute.exe" NOT ((Image="*\\Lenovo\\Communication Utility\\*" OR Image="*\\Lenovo\\Communications Utility\\*"))) OR (Image="*\\chrome_frame_helper.exe" NOT (Image="*\\Google\\Chrome\\application\\*"))) OR (Image="*\\dvcemumanager.exe" NOT (Image="*\\Microsoft Device Emulator\\*"))) OR (Image="*\\Gadget.exe" NOT (Image="*\\Windows Media Player\\*"))) OR (Image="*\\hcc.exe" NOT (Image="*\\HTML Help Workshop\\*"))) OR (Image="*\\hkcmd.exe" NOT ((Image="*\\System32\\*" OR Image="*\\SysNative\\*" OR Image="*\\SysWow64\\*")))) OR (Image="*\\Mc.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*")))) OR (Image="*\\MsMpEng.exe" NOT ((Image="*\\Microsoft Security Client\\*" OR Image="*\\Windows Defender\\*" OR Image="*\\AntiMalware\\*")))) OR (Image="*\\msseces.exe" NOT ((Image="*\\Microsoft Security Center\\*" OR Image="*\\Microsoft Security Client\\*" OR Image="*\\Microsoft Security Essentials\\*")))) OR (Image="*\\OInfoP11.exe" NOT (Image="*\\Common Files\\Microsoft Shared\\*"))) OR (Image="*\\OleView.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*" OR Image="*\\Windows Resource Kit\\*")))) OR (Image="*\\rc.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*" OR Image="*\\Windows Resource Kit\\*" OR Image="*\\Microsoft.NET\\*"))))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.s0013 attack.defense_evasion attack.t1574.002" | eval sigma_title="Executable Used by PlugX in Uncommon Location" | eval sigma_description="Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Applocker Bypass - winevent]
description = Detects execution of executables that can be used to bypass Applocker whitelisting
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\msdt.exe*" OR Process_Command_Line="*\\installutil.exe*" OR Process_Command_Line="*\\regsvcs.exe*" OR Process_Command_Line="*\\regasm.exe*" OR Process_Command_Line="*\\msbuild.exe*" OR Process_Command_Line="*\\ieexec.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.004 attack.t1218.009 attack.t1127.001 attack.t1218.005 attack.t1218" | eval sigma_title="Possible Applocker Bypass" | eval sigma_description="Detects execution of executables that can be used to bypass Applocker whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Applocker Bypass - sysmon]
description = Detects execution of executables that can be used to bypass Applocker whitelisting
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\msdt.exe*" OR CommandLine="*\\installutil.exe*" OR CommandLine="*\\regsvcs.exe*" OR CommandLine="*\\regasm.exe*" OR CommandLine="*\\msbuild.exe*" OR CommandLine="*\\ieexec.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.004 attack.t1218.009 attack.t1127.001 attack.t1218.005 attack.t1218" | eval sigma_title="Possible Applocker Bypass" | eval sigma_description="Detects execution of executables that can be used to bypass Applocker whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Service Permissions Weakness - winevent]
description = Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") IntegrityLevel="Medium" Process_Command_Line="*ControlSet*" Process_Command_Line="*services*" (Process_Command_Line="*\\ImagePath*" OR Process_Command_Line="*\\FailureCommand*" OR Process_Command_Line="*\\ServiceDll*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Service Permissions Weakness" | eval sigma_description="Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Service Permissions Weakness - sysmon]
description = Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") IntegrityLevel="Medium" CommandLine="*ControlSet*" CommandLine="*services*" (CommandLine="*\\ImagePath*" OR CommandLine="*\\FailureCommand*" OR CommandLine="*\\ServiceDll*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Service Permissions Weakness" | eval sigma_description="Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell AMSI Bypass via .NET Reflection - winevent]
description = Detects Request to amsiInitFailed that can be used to disable AMSI Scanning
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*System.Management.Automation.AmsiUtils*" Process_Command_Line="*amsiInitFailed*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell AMSI Bypass via .NET Reflection" | eval sigma_description="Detects Request to amsiInitFailed that can be used to disable AMSI Scanning"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell AMSI Bypass via .NET Reflection - sysmon]
description = Detects Request to amsiInitFailed that can be used to disable AMSI Scanning
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*System.Management.Automation.AmsiUtils*" CommandLine="*amsiInitFailed*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell AMSI Bypass via .NET Reflection" | eval sigma_description="Detects Request to amsiInitFailed that can be used to disable AMSI Scanning"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via PowerShell - winevent]
description = Detects audio capture via PowerShell Cmdlet.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*WindowsAudioDevice-Powershell-Cmdlet*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via PowerShell" | eval sigma_description="Detects audio capture via PowerShell Cmdlet."
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via PowerShell - sysmon]
description = Detects audio capture via PowerShell Cmdlet.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*WindowsAudioDevice-Powershell-Cmdlet*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via PowerShell" | eval sigma_description="Detects audio capture via PowerShell Cmdlet."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Base64 Encoded Shellcode - winevent]
description = Detects Base64 encoded Shellcode
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*AAAAYInlM*" (Process_Command_Line="*OiCAAAAYInlM*" OR Process_Command_Line="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Base64 Encoded Shellcode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Base64 Encoded Shellcode - sysmon]
description = Detects Base64 encoded Shellcode
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*AAAAYInlM*" (CommandLine="*OiCAAAAYInlM*" OR CommandLine="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Base64 Encoded Shellcode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitsadmin Job via PowerShell - winevent]
description = Detect download by BITS jobs via PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*Start-BitsTransfer*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitsadmin Job via PowerShell" | eval sigma_description="Detect download by BITS jobs via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitsadmin Job via PowerShell - sysmon]
description = Detect download by BITS jobs via PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*Start-BitsTransfer*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitsadmin Job via PowerShell" | eval sigma_description="Detect download by BITS jobs via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded PowerShell Command Line Usage of ConvertTo-SecureString - winevent]
description = Detects specific encoding method of cOnvErTTO-SECUreStRIng in the PowerShell command lines
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*ConvertTo-SecureString*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Encoded PowerShell Command Line Usage of ConvertTo-SecureString" | eval sigma_description="Detects specific encoding method of cOnvErTTO-SECUreStRIng in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded PowerShell Command Line Usage of ConvertTo-SecureString - sysmon]
description = Detects specific encoding method of cOnvErTTO-SECUreStRIng in the PowerShell command lines
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*ConvertTo-SecureString*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Encoded PowerShell Command Line Usage of ConvertTo-SecureString" | eval sigma_description="Detects specific encoding method of cOnvErTTO-SECUreStRIng in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Cmdline - winevent]
description = Detects the PowerShell command lines with reversed strings
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\powershell.exe" (Process_Command_Line="*hctac*" OR Process_Command_Line="*kearb*" OR Process_Command_Line="*dnammoc*" OR Process_Command_Line="*ekovn*" OR Process_Command_Line="*eliFd*" OR Process_Command_Line="*rahc*" OR Process_Command_Line="*etirw*" OR Process_Command_Line="*golon*" OR Process_Command_Line="*tninon*" OR Process_Command_Line="*eddih*" OR Process_Command_Line="*tpircS*" OR Process_Command_Line="*ssecorp*" OR Process_Command_Line="*llehsrewop*" OR Process_Command_Line="*esnopser*" OR Process_Command_Line="*daolnwod*" OR Process_Command_Line="*tneilCbeW*" OR Process_Command_Line="*tneilc*" OR Process_Command_Line="*ptth*" OR Process_Command_Line="*elifotevas*" OR Process_Command_Line="*46esab*" OR Process_Command_Line="*htaPpmeTteG*" OR Process_Command_Line="*tcejbO*" OR Process_Command_Line="*maerts*" OR Process_Command_Line="*hcaerof*" OR Process_Command_Line="*ekovni*" OR Process_Command_Line="*retupmoc*")) NOT ((Process_Command_Line="*-EncodedCommand*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Cmdline" | eval sigma_description="Detects the PowerShell command lines with reversed strings"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Cmdline - sysmon]
description = Detects the PowerShell command lines with reversed strings
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\powershell.exe" (CommandLine="*hctac*" OR CommandLine="*kearb*" OR CommandLine="*dnammoc*" OR CommandLine="*ekovn*" OR CommandLine="*eliFd*" OR CommandLine="*rahc*" OR CommandLine="*etirw*" OR CommandLine="*golon*" OR CommandLine="*tninon*" OR CommandLine="*eddih*" OR CommandLine="*tpircS*" OR CommandLine="*ssecorp*" OR CommandLine="*llehsrewop*" OR CommandLine="*esnopser*" OR CommandLine="*daolnwod*" OR CommandLine="*tneilCbeW*" OR CommandLine="*tneilc*" OR CommandLine="*ptth*" OR CommandLine="*elifotevas*" OR CommandLine="*46esab*" OR CommandLine="*htaPpmeTteG*" OR CommandLine="*tcejbO*" OR CommandLine="*maerts*" OR CommandLine="*hcaerof*" OR CommandLine="*ekovni*" OR CommandLine="*retupmoc*")) NOT ((CommandLine="*-EncodedCommand*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Cmdline" | eval sigma_description="Detects the PowerShell command lines with reversed strings"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded PowerShell Command Line - winevent]
description = Detects specific combinations of encoding methods in the PowerShell command lines
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" (Process_Command_Line="*ToInt*" OR Process_Command_Line="*ToDecimal*" OR Process_Command_Line="*ToByte*" OR Process_Command_Line="*ToUint*" OR Process_Command_Line="*ToSingle*" OR Process_Command_Line="*ToSByte*") (Process_Command_Line="*ToChar*" OR Process_Command_Line="*ToString*" OR Process_Command_Line="*String*")) OR ((New_Process_Name="*\\powershell.exe" Process_Command_Line="*char*" Process_Command_Line="*join*") OR (New_Process_Name="*\\powershell.exe" Process_Command_Line="*split*" Process_Command_Line="*join*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Encoded PowerShell Command Line" | eval sigma_description="Detects specific combinations of encoding methods in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded PowerShell Command Line - sysmon]
description = Detects specific combinations of encoding methods in the PowerShell command lines
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" (CommandLine="*ToInt*" OR CommandLine="*ToDecimal*" OR CommandLine="*ToByte*" OR CommandLine="*ToUint*" OR CommandLine="*ToSingle*" OR CommandLine="*ToSByte*") (CommandLine="*ToChar*" OR CommandLine="*ToString*" OR CommandLine="*String*")) OR ((Image="*\\powershell.exe" CommandLine="*char*" CommandLine="*join*") OR (Image="*\\powershell.exe" CommandLine="*split*" CommandLine="*join*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Encoded PowerShell Command Line" | eval sigma_description="Detects specific combinations of encoding methods in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - winevent]
description = Detects specific combinations of encoding methods in the PowerShell command lines
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*ForEach*" Process_Command_Line="*Xor*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects specific combinations of encoding methods in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - sysmon]
description = Detects specific combinations of encoding methods in the PowerShell command lines
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*ForEach*" CommandLine="*Xor*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.execution attack.t1059.001" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects specific combinations of encoding methods in the PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Base64 MpPreference - winevent]
description = Detects base64 encoded PowerShell code that modifies Windows Defender
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*QWRkLU1wUHJlZmVyZW5jZS*" OR Process_Command_Line="*FkZC1NcFByZWZlcmVuY2Ug*" OR Process_Command_Line="*BZGQtTXBQcmVmZXJlbmNlI*" OR Process_Command_Line="*U2V0LU1wUHJlZmVyZW5jZS*" OR Process_Command_Line="*NldC1NcFByZWZlcmVuY2Ug*" OR Process_Command_Line="*TZXQtTXBQcmVmZXJlbmNlI*" OR Process_Command_Line="*YWRkLW1wcHJlZmVyZW5jZS*" OR Process_Command_Line="*FkZC1tcHByZWZlcmVuY2Ug*" OR Process_Command_Line="*hZGQtbXBwcmVmZXJlbmNlI*" OR Process_Command_Line="*c2V0LW1wcHJlZmVyZW5jZS*" OR Process_Command_Line="*NldC1tcHByZWZlcmVuY2Ug*" OR Process_Command_Line="*zZXQtbXBwcmVmZXJlbmNlI*") (Process_Command_Line="*QQBkAGQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR Process_Command_Line="*EAZABkAC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR Process_Command_Line="*BAGQAZAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA*" OR Process_Command_Line="*UwBlAHQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR Process_Command_Line="*MAZQB0AC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR Process_Command_Line="*TAGUAdAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA*" OR Process_Command_Line="*YQBkAGQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR Process_Command_Line="*EAZABkAC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR Process_Command_Line="*hAGQAZAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA*" OR Process_Command_Line="*cwBlAHQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR Process_Command_Line="*MAZQB0AC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR Process_Command_Line="*zAGUAdAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Base64 MpPreference" | eval sigma_description="Detects base64 encoded PowerShell code that modifies Windows Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Base64 MpPreference - sysmon]
description = Detects base64 encoded PowerShell code that modifies Windows Defender
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*QWRkLU1wUHJlZmVyZW5jZS*" OR CommandLine="*FkZC1NcFByZWZlcmVuY2Ug*" OR CommandLine="*BZGQtTXBQcmVmZXJlbmNlI*" OR CommandLine="*U2V0LU1wUHJlZmVyZW5jZS*" OR CommandLine="*NldC1NcFByZWZlcmVuY2Ug*" OR CommandLine="*TZXQtTXBQcmVmZXJlbmNlI*" OR CommandLine="*YWRkLW1wcHJlZmVyZW5jZS*" OR CommandLine="*FkZC1tcHByZWZlcmVuY2Ug*" OR CommandLine="*hZGQtbXBwcmVmZXJlbmNlI*" OR CommandLine="*c2V0LW1wcHJlZmVyZW5jZS*" OR CommandLine="*NldC1tcHByZWZlcmVuY2Ug*" OR CommandLine="*zZXQtbXBwcmVmZXJlbmNlI*") (CommandLine="*QQBkAGQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR CommandLine="*EAZABkAC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR CommandLine="*BAGQAZAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA*" OR CommandLine="*UwBlAHQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR CommandLine="*MAZQB0AC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR CommandLine="*TAGUAdAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA*" OR CommandLine="*YQBkAGQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR CommandLine="*EAZABkAC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR CommandLine="*hAGQAZAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA*" OR CommandLine="*cwBlAHQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA*" OR CommandLine="*MAZQB0AC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA*" OR CommandLine="*zAGUAdAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Base64 MpPreference" | eval sigma_description="Detects base64 encoded PowerShell code that modifies Windows Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Disable Scan Feature - winevent]
description = Detects requests to disable Microsoft Defender features using PowerShell commands
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*Add-MpPreference *" OR Process_Command_Line="*Set-MpPreference *") (Process_Command_Line="*DisableRealtimeMonitoring *" OR Process_Command_Line="*DisableIOAVProtection *" OR Process_Command_Line="*DisableBehaviorMonitoring *" OR Process_Command_Line="*DisableBlockAtFirstSeen *") (Process_Command_Line="*$true*" OR Process_Command_Line="* 1 *")) OR ((Process_Command_Line="*RGlzYWJsZVJlYWx0aW1lTW9uaXRvcmluZy*" OR Process_Command_Line="*Rpc2FibGVSZWFsdGltZU1vbml0b3Jpbmcg*" OR Process_Command_Line="*EaXNhYmxlUmVhbHRpbWVNb25pdG9yaW5nI*" OR Process_Command_Line="*RGlzYWJsZUlPQVZQcm90ZWN0aW9uI*" OR Process_Command_Line="*Rpc2FibGVJT0FWUHJvdGVjdGlvbi*" OR Process_Command_Line="*EaXNhYmxlSU9BVlByb3RlY3Rpb24g*" OR Process_Command_Line="*RGlzYWJsZUJlaGF2aW9yTW9uaXRvcmluZy*" OR Process_Command_Line="*Rpc2FibGVCZWhhdmlvck1vbml0b3Jpbmcg*" OR Process_Command_Line="*EaXNhYmxlQmVoYXZpb3JNb25pdG9yaW5nI*" OR Process_Command_Line="*RGlzYWJsZUJsb2NrQXRGaXJzdFNlZW4g*" OR Process_Command_Line="*Rpc2FibGVCbG9ja0F0Rmlyc3RTZWVuI*" OR Process_Command_Line="*EaXNhYmxlQmxvY2tBdEZpcnN0U2Vlbi*" OR Process_Command_Line="*ZGlzYWJsZXJlYWx0aW1lbW9uaXRvcmluZy*" OR Process_Command_Line="*Rpc2FibGVyZWFsdGltZW1vbml0b3Jpbmcg*" OR Process_Command_Line="*kaXNhYmxlcmVhbHRpbWVtb25pdG9yaW5nI*" OR Process_Command_Line="*ZGlzYWJsZWlvYXZwcm90ZWN0aW9uI*" OR Process_Command_Line="*Rpc2FibGVpb2F2cHJvdGVjdGlvbi*" OR Process_Command_Line="*kaXNhYmxlaW9hdnByb3RlY3Rpb24g*" OR Process_Command_Line="*ZGlzYWJsZWJlaGF2aW9ybW9uaXRvcmluZy*" OR Process_Command_Line="*Rpc2FibGViZWhhdmlvcm1vbml0b3Jpbmcg*" OR Process_Command_Line="*kaXNhYmxlYmVoYXZpb3Jtb25pdG9yaW5nI*" OR Process_Command_Line="*ZGlzYWJsZWJsb2NrYXRmaXJzdHNlZW4g*" OR Process_Command_Line="*Rpc2FibGVibG9ja2F0Zmlyc3RzZWVuI*" OR Process_Command_Line="*kaXNhYmxlYmxvY2thdGZpcnN0c2Vlbi*") (Process_Command_Line="*RABpAHMAYQBiAGwAZQBSAGUAYQBsAHQAaQBtAGUATQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAUgBlAGEAbAB0AGkAbQBlAE0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR Process_Command_Line="*EAGkAcwBhAGIAbABlAFIAZQBhAGwAdABpAG0AZQBNAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR Process_Command_Line="*RABpAHMAYQBiAGwAZQBJAE8AQQBWAFAAcgBvAHQAZQBjAHQAaQBvAG4AIA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUASQBPAEEAVgBQAHIAbwB0AGUAYwB0AGkAbwBuACAA*" OR Process_Command_Line="*EAGkAcwBhAGIAbABlAEkATwBBAFYAUAByAG8AdABlAGMAdABpAG8AbgAgA*" OR Process_Command_Line="*RABpAHMAYQBiAGwAZQBCAGUAaABhAHYAaQBvAHIATQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAQgBlAGgAYQB2AGkAbwByAE0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR Process_Command_Line="*EAGkAcwBhAGIAbABlAEIAZQBoAGEAdgBpAG8AcgBNAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR Process_Command_Line="*RABpAHMAYQBiAGwAZQBCAGwAbwBjAGsAQQB0AEYAaQByAHMAdABTAGUAZQBuACAA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAQgBsAG8AYwBrAEEAdABGAGkAcgBzAHQAUwBlAGUAbgAgA*" OR Process_Command_Line="*EAGkAcwBhAGIAbABlAEIAbABvAGMAawBBAHQARgBpAHIAcwB0AFMAZQBlAG4AIA*" OR Process_Command_Line="*ZABpAHMAYQBiAGwAZQByAGUAYQBsAHQAaQBtAGUAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAcgBlAGEAbAB0AGkAbQBlAG0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR Process_Command_Line="*kAGkAcwBhAGIAbABlAHIAZQBhAGwAdABpAG0AZQBtAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR Process_Command_Line="*ZABpAHMAYQBiAGwAZQBpAG8AYQB2AHAAcgBvAHQAZQBjAHQAaQBvAG4AIA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAaQBvAGEAdgBwAHIAbwB0AGUAYwB0AGkAbwBuACAA*" OR Process_Command_Line="*kAGkAcwBhAGIAbABlAGkAbwBhAHYAcAByAG8AdABlAGMAdABpAG8AbgAgA*" OR Process_Command_Line="*ZABpAHMAYQBiAGwAZQBiAGUAaABhAHYAaQBvAHIAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAYgBlAGgAYQB2AGkAbwByAG0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR Process_Command_Line="*kAGkAcwBhAGIAbABlAGIAZQBoAGEAdgBpAG8AcgBtAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR Process_Command_Line="*ZABpAHMAYQBiAGwAZQBiAGwAbwBjAGsAYQB0AGYAaQByAHMAdABzAGUAZQBuACAA*" OR Process_Command_Line="*QAaQBzAGEAYgBsAGUAYgBsAG8AYwBrAGEAdABmAGkAcgBzAHQAcwBlAGUAbgAgA*" OR Process_Command_Line="*kAGkAcwBhAGIAbABlAGIAbABvAGMAawBhAHQAZgBpAHIAcwB0AHMAZQBlAG4AIA*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Disable Scan Feature" | eval sigma_description="Detects requests to disable Microsoft Defender features using PowerShell commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Disable Scan Feature - sysmon]
description = Detects requests to disable Microsoft Defender features using PowerShell commands
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*Add-MpPreference *" OR CommandLine="*Set-MpPreference *") (CommandLine="*DisableRealtimeMonitoring *" OR CommandLine="*DisableIOAVProtection *" OR CommandLine="*DisableBehaviorMonitoring *" OR CommandLine="*DisableBlockAtFirstSeen *") (CommandLine="*$true*" OR CommandLine="* 1 *")) OR ((CommandLine="*RGlzYWJsZVJlYWx0aW1lTW9uaXRvcmluZy*" OR CommandLine="*Rpc2FibGVSZWFsdGltZU1vbml0b3Jpbmcg*" OR CommandLine="*EaXNhYmxlUmVhbHRpbWVNb25pdG9yaW5nI*" OR CommandLine="*RGlzYWJsZUlPQVZQcm90ZWN0aW9uI*" OR CommandLine="*Rpc2FibGVJT0FWUHJvdGVjdGlvbi*" OR CommandLine="*EaXNhYmxlSU9BVlByb3RlY3Rpb24g*" OR CommandLine="*RGlzYWJsZUJlaGF2aW9yTW9uaXRvcmluZy*" OR CommandLine="*Rpc2FibGVCZWhhdmlvck1vbml0b3Jpbmcg*" OR CommandLine="*EaXNhYmxlQmVoYXZpb3JNb25pdG9yaW5nI*" OR CommandLine="*RGlzYWJsZUJsb2NrQXRGaXJzdFNlZW4g*" OR CommandLine="*Rpc2FibGVCbG9ja0F0Rmlyc3RTZWVuI*" OR CommandLine="*EaXNhYmxlQmxvY2tBdEZpcnN0U2Vlbi*" OR CommandLine="*ZGlzYWJsZXJlYWx0aW1lbW9uaXRvcmluZy*" OR CommandLine="*Rpc2FibGVyZWFsdGltZW1vbml0b3Jpbmcg*" OR CommandLine="*kaXNhYmxlcmVhbHRpbWVtb25pdG9yaW5nI*" OR CommandLine="*ZGlzYWJsZWlvYXZwcm90ZWN0aW9uI*" OR CommandLine="*Rpc2FibGVpb2F2cHJvdGVjdGlvbi*" OR CommandLine="*kaXNhYmxlaW9hdnByb3RlY3Rpb24g*" OR CommandLine="*ZGlzYWJsZWJlaGF2aW9ybW9uaXRvcmluZy*" OR CommandLine="*Rpc2FibGViZWhhdmlvcm1vbml0b3Jpbmcg*" OR CommandLine="*kaXNhYmxlYmVoYXZpb3Jtb25pdG9yaW5nI*" OR CommandLine="*ZGlzYWJsZWJsb2NrYXRmaXJzdHNlZW4g*" OR CommandLine="*Rpc2FibGVibG9ja2F0Zmlyc3RzZWVuI*" OR CommandLine="*kaXNhYmxlYmxvY2thdGZpcnN0c2Vlbi*") (CommandLine="*RABpAHMAYQBiAGwAZQBSAGUAYQBsAHQAaQBtAGUATQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAUgBlAGEAbAB0AGkAbQBlAE0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR CommandLine="*EAGkAcwBhAGIAbABlAFIAZQBhAGwAdABpAG0AZQBNAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR CommandLine="*RABpAHMAYQBiAGwAZQBJAE8AQQBWAFAAcgBvAHQAZQBjAHQAaQBvAG4AIA*" OR CommandLine="*QAaQBzAGEAYgBsAGUASQBPAEEAVgBQAHIAbwB0AGUAYwB0AGkAbwBuACAA*" OR CommandLine="*EAGkAcwBhAGIAbABlAEkATwBBAFYAUAByAG8AdABlAGMAdABpAG8AbgAgA*" OR CommandLine="*RABpAHMAYQBiAGwAZQBCAGUAaABhAHYAaQBvAHIATQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAQgBlAGgAYQB2AGkAbwByAE0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR CommandLine="*EAGkAcwBhAGIAbABlAEIAZQBoAGEAdgBpAG8AcgBNAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR CommandLine="*RABpAHMAYQBiAGwAZQBCAGwAbwBjAGsAQQB0AEYAaQByAHMAdABTAGUAZQBuACAA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAQgBsAG8AYwBrAEEAdABGAGkAcgBzAHQAUwBlAGUAbgAgA*" OR CommandLine="*EAGkAcwBhAGIAbABlAEIAbABvAGMAawBBAHQARgBpAHIAcwB0AFMAZQBlAG4AIA*" OR CommandLine="*ZABpAHMAYQBiAGwAZQByAGUAYQBsAHQAaQBtAGUAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAcgBlAGEAbAB0AGkAbQBlAG0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR CommandLine="*kAGkAcwBhAGIAbABlAHIAZQBhAGwAdABpAG0AZQBtAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR CommandLine="*ZABpAHMAYQBiAGwAZQBpAG8AYQB2AHAAcgBvAHQAZQBjAHQAaQBvAG4AIA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAaQBvAGEAdgBwAHIAbwB0AGUAYwB0AGkAbwBuACAA*" OR CommandLine="*kAGkAcwBhAGIAbABlAGkAbwBhAHYAcAByAG8AdABlAGMAdABpAG8AbgAgA*" OR CommandLine="*ZABpAHMAYQBiAGwAZQBiAGUAaABhAHYAaQBvAHIAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAYgBlAGgAYQB2AGkAbwByAG0AbwBuAGkAdABvAHIAaQBuAGcAIA*" OR CommandLine="*kAGkAcwBhAGIAbABlAGIAZQBoAGEAdgBpAG8AcgBtAG8AbgBpAHQAbwByAGkAbgBnACAA*" OR CommandLine="*ZABpAHMAYQBiAGwAZQBiAGwAbwBjAGsAYQB0AGYAaQByAHMAdABzAGUAZQBuACAA*" OR CommandLine="*QAaQBzAGEAYgBsAGUAYgBsAG8AYwBrAGEAdABmAGkAcgBzAHQAcwBlAGUAbgAgA*" OR CommandLine="*kAGkAcwBhAGIAbABlAGIAbABvAGMAawBhAHQAZgBpAHIAcwB0AHMAZQBlAG4AIA*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Disable Scan Feature" | eval sigma_description="Detects requests to disable Microsoft Defender features using PowerShell commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Exclusion - winevent]
description = Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*Add-MpPreference *" OR Process_Command_Line="*Set-MpPreference *") (Process_Command_Line="* -ExclusionPath *" OR Process_Command_Line="* -ExclusionExtension *" OR Process_Command_Line="* -ExclusionProcess *" OR Process_Command_Line="* -ExclusionIpAddress *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Exclusion" | eval sigma_description="Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Defender Exclusion - sysmon]
description = Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*Add-MpPreference *" OR CommandLine="*Set-MpPreference *") (CommandLine="* -ExclusionPath *" OR CommandLine="* -ExclusionExtension *" OR CommandLine="* -ExclusionProcess *" OR CommandLine="* -ExclusionIpAddress *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Defender Exclusion" | eval sigma_description="Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Used To Disable Windows Defender AV Security Monitoring - winevent]
description = Detects attackers attempting to disable Windows Defender using Powershell
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" (Process_Command_Line="*-DisableBehaviorMonitoring $true*" OR Process_Command_Line="*-DisableRuntimeMonitoring $true*")) OR (Process_Command_Line="*sc*" Process_Command_Line="*stop*" Process_Command_Line="*WinDefend*") OR (Process_Command_Line="*sc*" Process_Command_Line="*config*" Process_Command_Line="*WinDefend*" Process_Command_Line="*start=disabled*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Used To Disable Windows Defender AV Security Monitoring" | eval sigma_description="Detects attackers attempting to disable Windows Defender using Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Used To Disable Windows Defender AV Security Monitoring - sysmon]
description = Detects attackers attempting to disable Windows Defender using Powershell
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" (CommandLine="*-DisableBehaviorMonitoring $true*" OR CommandLine="*-DisableRuntimeMonitoring $true*")) OR (CommandLine="*sc*" CommandLine="*stop*" CommandLine="*WinDefend*") OR (CommandLine="*sc*" CommandLine="*config*" CommandLine="*WinDefend*" CommandLine="*start=disabled*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Powershell Used To Disable Windows Defender AV Security Monitoring" | eval sigma_description="Detects attackers attempting to disable Windows Defender using Powershell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via DLL - winevent]
description = Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" OR Description="*Windows-Hostprozess (Rundll32)*") (Process_Command_Line="*Default.GetString*" OR Process_Command_Line="*FromBase64String*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Detection of PowerShell Execution via DLL" | eval sigma_description="Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via DLL - sysmon]
description = Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" OR Description="*Windows-Hostprozess (Rundll32)*") (CommandLine="*Default.GetString*" OR CommandLine="*FromBase64String*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Detection of PowerShell Execution via DLL" | eval sigma_description="Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - winevent]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -version 2 *" OR Process_Command_Line="* -versio 2 *" OR Process_Command_Line="* -versi 2 *" OR Process_Command_Line="* -vers 2 *" OR Process_Command_Line="* -ver 2 *" OR Process_Command_Line="* -ve 2 *") New_Process_Name="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059.001" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - sysmon]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -version 2 *" OR CommandLine="* -versio 2 *" OR CommandLine="* -versi 2 *" OR CommandLine="* -vers 2 *" OR CommandLine="* -ver 2 *" OR CommandLine="* -ve 2 *") Image="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059.001" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download and Execute Pattern - winevent]
description = Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*IEX ((New-Object Net.WebClient).DownloadString*" OR Process_Command_Line="*IEX (New-Object Net.WebClient).DownloadString*" OR Process_Command_Line="*IEX((New-Object Net.WebClient).DownloadString*" OR Process_Command_Line="*IEX(New-Object Net.WebClient).DownloadString*" OR Process_Command_Line="* -command (New-Object System.Net.WebClient).DownloadFile(*" OR Process_Command_Line="* -c (New-Object System.Net.WebClient).DownloadFile(*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Download and Execute Pattern" | eval sigma_description="Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download and Execute Pattern - sysmon]
description = Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*IEX ((New-Object Net.WebClient).DownloadString*" OR CommandLine="*IEX (New-Object Net.WebClient).DownloadString*" OR CommandLine="*IEX((New-Object Net.WebClient).DownloadString*" OR CommandLine="*IEX(New-Object Net.WebClient).DownloadString*" OR CommandLine="* -command (New-Object System.Net.WebClient).DownloadFile(*" OR CommandLine="* -c (New-Object System.Net.WebClient).DownloadFile(*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Download and Execute Pattern" | eval sigma_description="Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Download from URL - winevent]
description = Detects a Powershell process that contains download commands in its command line string
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*new-object*" Process_Command_Line="*net.webclient).*" Process_Command_Line="*download*" (Process_Command_Line="*string(*" OR Process_Command_Line="*file(*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="PowerShell Download from URL" | eval sigma_description="Detects a Powershell process that contains download commands in its command line string"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Download from URL - sysmon]
description = Detects a Powershell process that contains download commands in its command line string
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*new-object*" CommandLine="*net.webclient).*" CommandLine="*download*" (CommandLine="*string(*" OR CommandLine="*file(*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="PowerShell Download from URL" | eval sigma_description="Detects a Powershell process that contains download commands in its command line string"
dispatch.earliest_time = -24h@h
alert.track = 0

[FromBase64String Command Line - winevent]
description = Detects suspicious FromBase64String expressions in command line arguments
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*::FromBase64String(*") | eval sigma_attack_tags="attack.t1027 attack.defense_evasion attack.t1140 attack.t1059.001" | eval sigma_title="FromBase64String Command Line" | eval sigma_description="Detects suspicious FromBase64String expressions in command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[FromBase64String Command Line - sysmon]
description = Detects suspicious FromBase64String expressions in command line arguments
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*::FromBase64String(*") | eval sigma_attack_tags="attack.t1027 attack.defense_evasion attack.t1140 attack.t1059.001" | eval sigma_title="FromBase64String Command Line" | eval sigma_description="Detects suspicious FromBase64String expressions in command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Clipboard Cmdlet Via CLI - winevent]
description = Detects usage of the 'Get-Clipboard' cmdlet via CLI
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Get-Clipboard*") | eval sigma_attack_tags="attack.collection attack.t1115" | eval sigma_title="PowerShell Get-Clipboard Cmdlet Via CLI" | eval sigma_description="Detects usage of the 'Get-Clipboard' cmdlet via CLI"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Clipboard Cmdlet Via CLI - sysmon]
description = Detects usage of the 'Get-Clipboard' cmdlet via CLI
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Get-Clipboard*") | eval sigma_attack_tags="attack.collection attack.t1115" | eval sigma_title="PowerShell Get-Clipboard Cmdlet Via CLI" | eval sigma_description="Detects usage of the 'Get-Clipboard' cmdlet via CLI"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Powershell Script in Public Folder - winevent]
description = This rule detects execution of PowerShell scripts located in the C:\Users\Public folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" (Process_Command_Line="*-f C:\\Users\\Public*" OR Process_Command_Line="*-f \"C:\\Users\\Public*" OR Process_Command_Line="*-f %Public%*")) | table Process_Command_Line | eval sigma_attack_tags="" | eval sigma_title="Execution of Powershell Script in Public Folder" | eval sigma_description="This rule detects execution of PowerShell scripts located in the C:\Users\Public folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Powershell Script in Public Folder - sysmon]
description = This rule detects execution of PowerShell scripts located in the C:\Users\Public folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" (CommandLine="*-f C:\\Users\\Public*" OR CommandLine="*-f \"C:\\Users\\Public*" OR CommandLine="*-f %Public%*")) | table CommandLine | eval sigma_attack_tags="" | eval sigma_title="Execution of Powershell Script in Public Folder" | eval sigma_description="This rule detects execution of PowerShell scripts located in the C:\Users\Public folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Reverse Shell Connection - winevent]
description = Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*new-object system.net.sockets.tcpclient*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Powershell Reverse Shell Connection" | eval sigma_description="Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Reverse Shell Connection - sysmon]
description = Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*new-object system.net.sockets.tcpclient*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Powershell Reverse Shell Connection" | eval sigma_description="Detects the Nishang Invoke-PowerShellTcpOneLine reverse shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange PowerShell Snap-Ins Used by HAFNIUM - winevent]
description = Detects adding and using Exchange PowerShell snap-ins to export mailbox data by HAFNIUM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*add-pssnapin microsoft.exchange.powershell.snapin*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.collection attack.t1114" | eval sigma_title="Exchange PowerShell Snap-Ins Used by HAFNIUM" | eval sigma_description="Detects adding and using Exchange PowerShell snap-ins to export mailbox data by HAFNIUM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exchange PowerShell Snap-Ins Used by HAFNIUM - sysmon]
description = Detects adding and using Exchange PowerShell snap-ins to export mailbox data by HAFNIUM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*add-pssnapin microsoft.exchange.powershell.snapin*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.collection attack.t1114" | eval sigma_title="Exchange PowerShell Snap-Ins Used by HAFNIUM" | eval sigma_description="Detects adding and using Exchange PowerShell snap-ins to export mailbox data by HAFNIUM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parameter Substring - winevent]
description = Detects suspicious PowerShell invocation with a parameter substring
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Powershell.exe" (Process_Command_Line="* -windowstyle h *" OR Process_Command_Line="* -windowstyl h*" OR Process_Command_Line="* -windowsty h*" OR Process_Command_Line="* -windowst h*" OR Process_Command_Line="* -windows h*" OR Process_Command_Line="* -windo h*" OR Process_Command_Line="* -wind h*" OR Process_Command_Line="* -win h*" OR Process_Command_Line="* -wi h*" OR Process_Command_Line="* -win h *" OR Process_Command_Line="* -win hi *" OR Process_Command_Line="* -win hid *" OR Process_Command_Line="* -win hidd *" OR Process_Command_Line="* -win hidde *" OR Process_Command_Line="* -NoPr *" OR Process_Command_Line="* -NoPro *" OR Process_Command_Line="* -NoProf *" OR Process_Command_Line="* -NoProfi *" OR Process_Command_Line="* -NoProfil *" OR Process_Command_Line="* -nonin *" OR Process_Command_Line="* -nonint *" OR Process_Command_Line="* -noninte *" OR Process_Command_Line="* -noninter *" OR Process_Command_Line="* -nonintera *" OR Process_Command_Line="* -noninterac *" OR Process_Command_Line="* -noninteract *" OR Process_Command_Line="* -noninteracti *" OR Process_Command_Line="* -noninteractiv *" OR Process_Command_Line="* -ec *" OR Process_Command_Line="* -encodedComman *" OR Process_Command_Line="* -encodedComma *" OR Process_Command_Line="* -encodedComm *" OR Process_Command_Line="* -encodedCom *" OR Process_Command_Line="* -encodedCo *" OR Process_Command_Line="* -encodedC *" OR Process_Command_Line="* -encoded *" OR Process_Command_Line="* -encode *" OR Process_Command_Line="* -encod *" OR Process_Command_Line="* -enco *" OR Process_Command_Line="* -en *" OR Process_Command_Line="* -executionpolic *" OR Process_Command_Line="* -executionpoli *" OR Process_Command_Line="* -executionpol *" OR Process_Command_Line="* -executionpo *" OR Process_Command_Line="* -executionp *" OR Process_Command_Line="* -execution bypass*" OR Process_Command_Line="* -executio bypass*" OR Process_Command_Line="* -executi bypass*" OR Process_Command_Line="* -execut bypass*" OR Process_Command_Line="* -execu bypass*" OR Process_Command_Line="* -exec bypass*" OR Process_Command_Line="* -exe bypass*" OR Process_Command_Line="* -ex bypass*" OR Process_Command_Line="* -ep bypass*" OR Process_Command_Line="* /windowstyle h *" OR Process_Command_Line="* /windowstyl h*" OR Process_Command_Line="* /windowsty h*" OR Process_Command_Line="* /windowst h*" OR Process_Command_Line="* /windows h*" OR Process_Command_Line="* /windo h*" OR Process_Command_Line="* /wind h*" OR Process_Command_Line="* /win h*" OR Process_Command_Line="* /wi h*" OR Process_Command_Line="* /win h *" OR Process_Command_Line="* /win hi *" OR Process_Command_Line="* /win hid *" OR Process_Command_Line="* /win hidd *" OR Process_Command_Line="* /win hidde *" OR Process_Command_Line="* /NoPr *" OR Process_Command_Line="* /NoPro *" OR Process_Command_Line="* /NoProf *" OR Process_Command_Line="* /NoProfi *" OR Process_Command_Line="* /NoProfil *" OR Process_Command_Line="* /nonin *" OR Process_Command_Line="* /nonint *" OR Process_Command_Line="* /noninte *" OR Process_Command_Line="* /noninter *" OR Process_Command_Line="* /nonintera *" OR Process_Command_Line="* /noninterac *" OR Process_Command_Line="* /noninteract *" OR Process_Command_Line="* /noninteracti *" OR Process_Command_Line="* /noninteractiv *" OR Process_Command_Line="* /ec *" OR Process_Command_Line="* /encodedComman *" OR Process_Command_Line="* /encodedComma *" OR Process_Command_Line="* /encodedComm *" OR Process_Command_Line="* /encodedCom *" OR Process_Command_Line="* /encodedCo *" OR Process_Command_Line="* /encodedC *" OR Process_Command_Line="* /encoded *" OR Process_Command_Line="* /encode *" OR Process_Command_Line="* /encod *" OR Process_Command_Line="* /enco *" OR Process_Command_Line="* /en *" OR Process_Command_Line="* /executionpolic *" OR Process_Command_Line="* /executionpoli *" OR Process_Command_Line="* /executionpol *" OR Process_Command_Line="* /executionpo *" OR Process_Command_Line="* /executionp *" OR Process_Command_Line="* /execution bypass*" OR Process_Command_Line="* /executio bypass*" OR Process_Command_Line="* /executi bypass*" OR Process_Command_Line="* /execut bypass*" OR Process_Command_Line="* /execu bypass*" OR Process_Command_Line="* /exec bypass*" OR Process_Command_Line="* /exe bypass*" OR Process_Command_Line="* /ex bypass*" OR Process_Command_Line="* /ep bypass*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Parameter Substring" | eval sigma_description="Detects suspicious PowerShell invocation with a parameter substring"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parameter Substring - sysmon]
description = Detects suspicious PowerShell invocation with a parameter substring
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Powershell.exe" (CommandLine="* -windowstyle h *" OR CommandLine="* -windowstyl h*" OR CommandLine="* -windowsty h*" OR CommandLine="* -windowst h*" OR CommandLine="* -windows h*" OR CommandLine="* -windo h*" OR CommandLine="* -wind h*" OR CommandLine="* -win h*" OR CommandLine="* -wi h*" OR CommandLine="* -win h *" OR CommandLine="* -win hi *" OR CommandLine="* -win hid *" OR CommandLine="* -win hidd *" OR CommandLine="* -win hidde *" OR CommandLine="* -NoPr *" OR CommandLine="* -NoPro *" OR CommandLine="* -NoProf *" OR CommandLine="* -NoProfi *" OR CommandLine="* -NoProfil *" OR CommandLine="* -nonin *" OR CommandLine="* -nonint *" OR CommandLine="* -noninte *" OR CommandLine="* -noninter *" OR CommandLine="* -nonintera *" OR CommandLine="* -noninterac *" OR CommandLine="* -noninteract *" OR CommandLine="* -noninteracti *" OR CommandLine="* -noninteractiv *" OR CommandLine="* -ec *" OR CommandLine="* -encodedComman *" OR CommandLine="* -encodedComma *" OR CommandLine="* -encodedComm *" OR CommandLine="* -encodedCom *" OR CommandLine="* -encodedCo *" OR CommandLine="* -encodedC *" OR CommandLine="* -encoded *" OR CommandLine="* -encode *" OR CommandLine="* -encod *" OR CommandLine="* -enco *" OR CommandLine="* -en *" OR CommandLine="* -executionpolic *" OR CommandLine="* -executionpoli *" OR CommandLine="* -executionpol *" OR CommandLine="* -executionpo *" OR CommandLine="* -executionp *" OR CommandLine="* -execution bypass*" OR CommandLine="* -executio bypass*" OR CommandLine="* -executi bypass*" OR CommandLine="* -execut bypass*" OR CommandLine="* -execu bypass*" OR CommandLine="* -exec bypass*" OR CommandLine="* -exe bypass*" OR CommandLine="* -ex bypass*" OR CommandLine="* -ep bypass*" OR CommandLine="* /windowstyle h *" OR CommandLine="* /windowstyl h*" OR CommandLine="* /windowsty h*" OR CommandLine="* /windowst h*" OR CommandLine="* /windows h*" OR CommandLine="* /windo h*" OR CommandLine="* /wind h*" OR CommandLine="* /win h*" OR CommandLine="* /wi h*" OR CommandLine="* /win h *" OR CommandLine="* /win hi *" OR CommandLine="* /win hid *" OR CommandLine="* /win hidd *" OR CommandLine="* /win hidde *" OR CommandLine="* /NoPr *" OR CommandLine="* /NoPro *" OR CommandLine="* /NoProf *" OR CommandLine="* /NoProfi *" OR CommandLine="* /NoProfil *" OR CommandLine="* /nonin *" OR CommandLine="* /nonint *" OR CommandLine="* /noninte *" OR CommandLine="* /noninter *" OR CommandLine="* /nonintera *" OR CommandLine="* /noninterac *" OR CommandLine="* /noninteract *" OR CommandLine="* /noninteracti *" OR CommandLine="* /noninteractiv *" OR CommandLine="* /ec *" OR CommandLine="* /encodedComman *" OR CommandLine="* /encodedComma *" OR CommandLine="* /encodedComm *" OR CommandLine="* /encodedCom *" OR CommandLine="* /encodedCo *" OR CommandLine="* /encodedC *" OR CommandLine="* /encoded *" OR CommandLine="* /encode *" OR CommandLine="* /encod *" OR CommandLine="* /enco *" OR CommandLine="* /en *" OR CommandLine="* /executionpolic *" OR CommandLine="* /executionpoli *" OR CommandLine="* /executionpol *" OR CommandLine="* /executionpo *" OR CommandLine="* /executionp *" OR CommandLine="* /execution bypass*" OR CommandLine="* /executio bypass*" OR CommandLine="* /executi bypass*" OR CommandLine="* /execut bypass*" OR CommandLine="* /execu bypass*" OR CommandLine="* /exec bypass*" OR CommandLine="* /exe bypass*" OR CommandLine="* /ex bypass*" OR CommandLine="* /ep bypass*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Parameter Substring" | eval sigma_description="Detects suspicious PowerShell invocation with a parameter substring"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - winevent]
description = Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Description="Windows PowerShell" OR Product="PowerShell Core 6") (Process_Command_Line="*bxor*" OR Process_Command_Line="*-join *" OR Process_Command_Line="*-join'*" OR Process_Command_Line="*-join\"*" OR Process_Command_Line="*-join`*" OR Process_Command_Line="*char*")) NOT (Creator_Process_Name="C:\\Program Files\\Amazon\\SSM\\ssm-document-worker.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1059.001 attack.t1140 attack.t1027" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - sysmon]
description = Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Description="Windows PowerShell" OR Product="PowerShell Core 6") (CommandLine="*bxor*" OR CommandLine="*-join *" OR CommandLine="*-join'*" OR CommandLine="*-join\"*" OR CommandLine="*-join`*" OR CommandLine="*char*")) NOT (ParentImage="C:\\Program Files\\Amazon\\SSM\\ssm-document-worker.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1059.001 attack.t1140 attack.t1027" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Default PowerSploit and Empire Schtasks Persistence - winevent]
description = Detects the creation of a schtask via PowerSploit or Empire Default Configuration.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create*" Process_Command_Line="*/SC*" (Process_Command_Line="*ONLOGON*" OR Process_Command_Line="*DAILY*" OR Process_Command_Line="*ONIDLE*" OR Process_Command_Line="*Updater*") Process_Command_Line="*/TN*" Process_Command_Line="*Updater*" Process_Command_Line="*/TR*" Process_Command_Line="*powershell*") | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.s0111 attack.g0022 attack.g0060 car.2013-08-001 attack.t1053.005 attack.t1059.001" | eval sigma_title="Default PowerSploit and Empire Schtasks Persistence" | eval sigma_description="Detects the creation of a schtask via PowerSploit or Empire Default Configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[Default PowerSploit and Empire Schtasks Persistence - sysmon]
description = Detects the creation of a schtask via PowerSploit or Empire Default Configuration.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\schtasks.exe" CommandLine="*/Create*" CommandLine="*/SC*" (CommandLine="*ONLOGON*" OR CommandLine="*DAILY*" OR CommandLine="*ONIDLE*" OR CommandLine="*Updater*") CommandLine="*/TN*" CommandLine="*Updater*" CommandLine="*/TR*" CommandLine="*powershell*") | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.s0111 attack.g0022 attack.g0060 car.2013-08-001 attack.t1053.005 attack.t1059.001" | eval sigma_title="Default PowerSploit and Empire Schtasks Persistence" | eval sigma_description="Detects the creation of a schtask via PowerSploit or Empire Default Configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateDump Process Dump - winevent]
description = Detects uses of the createdump.exe LOLOBIN utility to dump process memory
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\createdump.exe" Process_Command_Line="* -u *" Process_Command_Line="* -f *") OR (Process_Command_Line="* -u -f *" Process_Command_Line="*.dmp *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="CreateDump Process Dump" | eval sigma_description="Detects uses of the createdump.exe LOLOBIN utility to dump process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateDump Process Dump - sysmon]
description = Detects uses of the createdump.exe LOLOBIN utility to dump process memory
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\createdump.exe" CommandLine="* -u *" CommandLine="* -f *") OR (CommandLine="* -u -f *" CommandLine="*.dmp *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="CreateDump Process Dump" | eval sigma_description="Detects uses of the createdump.exe LOLOBIN utility to dump process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[DumpMinitool Usage - winevent]
description = Detects the use of a Visual Studio bundled tool named DumpMinitool.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\DumpMinitool.exe" OR OriginalName="DumpMinitool.exe" OR (Process_Command_Line="* --processId *" Process_Command_Line="* --dumpType Full*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="DumpMinitool Usage" | eval sigma_description="Detects the use of a Visual Studio bundled tool named DumpMinitool.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[DumpMinitool Usage - sysmon]
description = Detects the use of a Visual Studio bundled tool named DumpMinitool.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\DumpMinitool.exe" OR OriginalName="DumpMinitool.exe" OR (CommandLine="* --processId *" CommandLine="* --dumpType Full*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="DumpMinitool Usage" | eval sigma_description="Detects the use of a Visual Studio bundled tool named DumpMinitool.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[RdrLeakDiag Process Dump - winevent]
description = Detects uses of the rdrleakdiag.exe LOLOBIN utility to dump process memory
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rdrleakdiag.exe" Process_Command_Line="*/fullmemdmp*") OR (Process_Command_Line="*/fullmemdmp*" Process_Command_Line="* /o *" Process_Command_Line="* /p *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="RdrLeakDiag Process Dump" | eval sigma_description="Detects uses of the rdrleakdiag.exe LOLOBIN utility to dump process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[RdrLeakDiag Process Dump - sysmon]
description = Detects uses of the rdrleakdiag.exe LOLOBIN utility to dump process memory
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rdrleakdiag.exe" CommandLine="*/fullmemdmp*") OR (CommandLine="*/fullmemdmp*" CommandLine="* /o *" CommandLine="* /p *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="RdrLeakDiag Process Dump" | eval sigma_description="Detects uses of the rdrleakdiag.exe LOLOBIN utility to dump process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious DumpMinitool Usage - winevent]
description = Detects suspicious ways to use of a Visual Studio bundled tool named DumpMinitool.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\DumpMinitool.exe" OR OriginalName="DumpMinitool.exe") ((NOT ((New_Process_Name="*\\Microsoft Visual Studio\\*" OR New_Process_Name="*\\Extensions\\*")) OR Process_Command_Line="*.txt*") OR (Process_Command_Line="* Full*" NOT (Process_Command_Line="*--dumpType*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Suspicious DumpMinitool Usage" | eval sigma_description="Detects suspicious ways to use of a Visual Studio bundled tool named DumpMinitool.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious DumpMinitool Usage - sysmon]
description = Detects suspicious ways to use of a Visual Studio bundled tool named DumpMinitool.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\DumpMinitool.exe" OR OriginalName="DumpMinitool.exe") ((NOT ((Image="*\\Microsoft Visual Studio\\*" OR Image="*\\Extensions\\*")) OR CommandLine="*.txt*") OR (CommandLine="* Full*" NOT (CommandLine="*--dumpType*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Suspicious DumpMinitool Usage" | eval sigma_description="Detects suspicious ways to use of a Visual Studio bundled tool named DumpMinitool.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Processes Suspicious Parent Directory - winevent]
description = Detect suspicious parent processes of well-known Windows processes
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\taskhost.exe" OR New_Process_Name="*\\lsm.exe" OR New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\services.exe" OR New_Process_Name="*\\lsaiso.exe" OR New_Process_Name="*\\csrss.exe" OR New_Process_Name="*\\wininit.exe" OR New_Process_Name="*\\winlogon.exe") NOT (((Creator_Process_Name="*\\SavService.exe" OR Creator_Process_Name="*\\ngen.exe") OR (Creator_Process_Name="*\\System32\\*" OR Creator_Process_Name="*\\SysWOW64\\*")) OR ((Creator_Process_Name="*\\Windows Defender\\*" OR Creator_Process_Name="*\\Microsoft Security Client\\*") Creator_Process_Name="*\\MsMpEng.exe") OR (NOT Creator_Process_Name="*" OR Creator_Process_Name="-"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003 attack.t1036.005" | eval sigma_title="Windows Processes Suspicious Parent Directory" | eval sigma_description="Detect suspicious parent processes of well-known Windows processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Processes Suspicious Parent Directory - sysmon]
description = Detect suspicious parent processes of well-known Windows processes
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" OR Image="*\\taskhost.exe" OR Image="*\\lsm.exe" OR Image="*\\lsass.exe" OR Image="*\\services.exe" OR Image="*\\lsaiso.exe" OR Image="*\\csrss.exe" OR Image="*\\wininit.exe" OR Image="*\\winlogon.exe") NOT (((ParentImage="*\\SavService.exe" OR ParentImage="*\\ngen.exe") OR (ParentImage="*\\System32\\*" OR ParentImage="*\\SysWOW64\\*")) OR ((ParentImage="*\\Windows Defender\\*" OR ParentImage="*\\Microsoft Security Client\\*") ParentImage="*\\MsMpEng.exe") OR (NOT ParentImage="*" OR ParentImage="-"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003 attack.t1036.005" | eval sigma_title="Windows Processes Suspicious Parent Directory" | eval sigma_description="Detect suspicious parent processes of well-known Windows processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Procdump Evasion - winevent]
description = Detects uses of the SysInternals Procdump utility in which procdump or its output get renamed or a dump file is moved ot copied to a different name
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*copy procdump*" OR Process_Command_Line="*move procdump*") OR (Process_Command_Line="*copy *" Process_Command_Line="*.dmp *" (Process_Command_Line="*2.dmp*" OR Process_Command_Line="*lsass*" OR Process_Command_Line="*out.dmp*")) OR (Process_Command_Line="*copy lsass.exe_*" OR Process_Command_Line="*move lsass.exe_*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Procdump Evasion" | eval sigma_description="Detects uses of the SysInternals Procdump utility in which procdump or its output get renamed or a dump file is moved ot copied to a different name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Procdump Evasion - sysmon]
description = Detects uses of the SysInternals Procdump utility in which procdump or its output get renamed or a dump file is moved ot copied to a different name
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*copy procdump*" OR CommandLine="*move procdump*") OR (CommandLine="*copy *" CommandLine="*.dmp *" (CommandLine="*2.dmp*" OR CommandLine="*lsass*" OR CommandLine="*out.dmp*")) OR (CommandLine="*copy lsass.exe_*" OR CommandLine="*move lsass.exe_*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Procdump Evasion" | eval sigma_description="Detects uses of the SysInternals Procdump utility in which procdump or its output get renamed or a dump file is moved ot copied to a different name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Procdump Usage - winevent]
description = Detects uses of the SysInternals Procdump utility
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\procdump.exe" OR New_Process_Name="*\\procdump64.exe") OR (Process_Command_Line="* -ma *" Process_Command_Line="*.exe*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Procdump Usage" | eval sigma_description="Detects uses of the SysInternals Procdump utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Procdump Usage - sysmon]
description = Detects uses of the SysInternals Procdump utility
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\procdump.exe" OR Image="*\\procdump64.exe") OR (CommandLine="* -ma *" CommandLine="*.exe*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Procdump Usage" | eval sigma_description="Detects uses of the SysInternals Procdump utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via RdrLeakDiag.exe - winevent]
description = Detects a process memory dump performed by RdrLeakDiag.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") OriginalFileName="RdrLeakDiag.exe" Process_Command_Line="*fullmemdmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Process Dump via RdrLeakDiag.exe" | eval sigma_description="Detects a process memory dump performed by RdrLeakDiag.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via RdrLeakDiag.exe - sysmon]
description = Detects a process memory dump performed by RdrLeakDiag.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") OriginalFileName="RdrLeakDiag.exe" CommandLine="*fullmemdmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003.001" | eval sigma_title="Process Dump via RdrLeakDiag.exe" | eval sigma_description="Detects a process memory dump performed by RdrLeakDiag.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Rundll32 and Comsvcs.dll - winevent]
description = Detects a process memory dump performed via ordinal function 24 in comsvcs.dll
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*comsvcs.dll*" OR Process_Command_Line="*rundll32*" OR Process_Command_Line="*.dmp*") (Commandline="*#24*" OR Commandline="*#+24*" OR Commandline="*MiniDump*") Process_Command_Line="* full*") OR Process_Command_Line="*#-4294967272*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access car.2013-05-009 attack.t1003.001" | eval sigma_title="Process Dump via Rundll32 and Comsvcs.dll" | eval sigma_description="Detects a process memory dump performed via ordinal function 24 in comsvcs.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Rundll32 and Comsvcs.dll - sysmon]
description = Detects a process memory dump performed via ordinal function 24 in comsvcs.dll
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*comsvcs.dll*" OR CommandLine="*rundll32*" OR CommandLine="*.dmp*") (Commandline="*#24*" OR Commandline="*#+24*" OR Commandline="*MiniDump*") CommandLine="* full*") OR CommandLine="*#-4294967272*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access car.2013-05-009 attack.t1003.001" | eval sigma_title="Process Dump via Rundll32 and Comsvcs.dll" | eval sigma_description="Detects a process memory dump performed via ordinal function 24 in comsvcs.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[ProtocolHandler.exe Downloaded Suspicious File - winevent]
description = Emulates attack via documents through protocol handler in Microsoft Office. On successful execution you should see Microsoft Word launch a blank file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\protocolhandler.exe" Process_Command_Line="*\"ms-word*" Process_Command_Line="*.docx\"*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="ProtocolHandler.exe Downloaded Suspicious File" | eval sigma_description="Emulates attack via documents through protocol handler in Microsoft Office. On successful execution you should see Microsoft Word launch a blank file."
dispatch.earliest_time = -24h@h
alert.track = 0

[ProtocolHandler.exe Downloaded Suspicious File - sysmon]
description = Emulates attack via documents through protocol handler in Microsoft Office. On successful execution you should see Microsoft Word launch a blank file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\protocolhandler.exe" CommandLine="*\"ms-word*" CommandLine="*.docx\"*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="ProtocolHandler.exe Downloaded Suspicious File" | eval sigma_description="Emulates attack via documents through protocol handler in Microsoft Office. On successful execution you should see Microsoft Word launch a blank file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution via Wuauclt - winevent]
description = Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*wuauclt*" OR OriginalFileName="wuauclt.exe") (Process_Command_Line="*UpdateDeploymentProvider*" Process_Command_Line="*.dll*" Process_Command_Line="*RunHandlerComServer*")) NOT ((Process_Command_Line="* /UpdateDeploymentProvider UpdateDeploymentProvider.dll *" OR Process_Command_Line="* wuaueng.dll *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Proxy Execution via Wuauclt" | eval sigma_description="Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution via Wuauclt - sysmon]
description = Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*wuauclt*" OR OriginalFileName="wuauclt.exe") (CommandLine="*UpdateDeploymentProvider*" CommandLine="*.dll*" CommandLine="*RunHandlerComServer*")) NOT ((CommandLine="* /UpdateDeploymentProvider UpdateDeploymentProvider.dll *" OR CommandLine="* wuaueng.dll *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.execution" | eval sigma_title="Proxy Execution via Wuauclt" | eval sigma_description="Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code."
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Service Start - winevent]
description = Detects a PsExec service start
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="C:\\Windows\\PSEXESVC.exe") | eval sigma_attack_tags="attack.execution attack.s0029 attack.t1569.002" | eval sigma_title="PsExec Service Start" | eval sigma_description="Detects a PsExec service start"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Service Start - sysmon]
description = Detects a PsExec service start
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="C:\\Windows\\PSEXESVC.exe") | eval sigma_attack_tags="attack.execution attack.s0029 attack.t1569.002" | eval sigma_title="PsExec Service Start" | eval sigma_description="Detects a PsExec service start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Parent in Public Folder Suspicious Process - winevent]
description = This rule detects suspicious processes with parent images located in the C:\Users\Public folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="C:\\Users\\Public\\*" (Process_Command_Line="*powershell*" OR Process_Command_Line="*cmd.exe /c *" OR Process_Command_Line="*cmd /c *" OR Process_Command_Line="*wscript.exe*" OR Process_Command_Line="*cscript.exe*" OR Process_Command_Line="*bitsadmin*" OR Process_Command_Line="*certutil*" OR Process_Command_Line="*mshta.exe*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="" | eval sigma_title="Parent in Public Folder Suspicious Process" | eval sigma_description="This rule detects suspicious processes with parent images located in the C:\Users\Public folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Parent in Public Folder Suspicious Process - sysmon]
description = This rule detects suspicious processes with parent images located in the C:\Users\Public folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="C:\\Users\\Public\\*" (CommandLine="*powershell*" OR CommandLine="*cmd.exe /c *" OR CommandLine="*cmd /c *" OR CommandLine="*wscript.exe*" OR CommandLine="*cscript.exe*" OR CommandLine="*bitsadmin*" OR CommandLine="*certutil*" OR CommandLine="*mshta.exe*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="" | eval sigma_title="Parent in Public Folder Suspicious Process" | eval sigma_description="This rule detects suspicious processes with parent images located in the C:\Users\Public folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PurpleSharp Indicator - winevent]
description = Detects the execution of the PurpleSharp adversary simulation tool
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*xyz123456.exe*" OR Process_Command_Line="*PurpleSharp*") OR OriginalFileName="PurpleSharp.exe")) | eval sigma_attack_tags="attack.t1587 attack.resource_development" | eval sigma_title="PurpleSharp Indicator" | eval sigma_description="Detects the execution of the PurpleSharp adversary simulation tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[PurpleSharp Indicator - sysmon]
description = Detects the execution of the PurpleSharp adversary simulation tool
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*xyz123456.exe*" OR CommandLine="*PurpleSharp*") OR OriginalFileName="PurpleSharp.exe")) | eval sigma_attack_tags="attack.t1587 attack.resource_development" | eval sigma_title="PurpleSharp Indicator" | eval sigma_description="Detects the execution of the PurpleSharp adversary simulation tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Python Spawning Pretty TTY on Windows - winevent]
description = Detects python spawning a pretty tty
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*python.exe" OR New_Process_Name="*python3.exe" OR New_Process_Name="*python2.exe") ((Process_Command_Line="*import pty*" Process_Command_Line="*.spawn(*") OR Process_Command_Line="*from pty import spawn*")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Python Spawning Pretty TTY on Windows" | eval sigma_description="Detects python spawning a pretty tty"
dispatch.earliest_time = -24h@h
alert.track = 0

[Python Spawning Pretty TTY on Windows - sysmon]
description = Detects python spawning a pretty tty
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*python.exe" OR Image="*python3.exe" OR Image="*python2.exe") ((CommandLine="*import pty*" CommandLine="*.spawn(*") OR CommandLine="*from pty import spawn*")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Python Spawning Pretty TTY on Windows" | eval sigma_description="Detects python spawning a pretty tty"
dispatch.earliest_time = -24h@h
alert.track = 0

[Query Registry - winevent]
description = Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*query*" OR Process_Command_Line="*save*" OR Process_Command_Line="*export*") (Process_Command_Line="*currentVersion\\windows*" OR Process_Command_Line="*currentVersion\\runServicesOnce*" OR Process_Command_Line="*currentVersion\\runServices*" OR Process_Command_Line="*winlogon\\*" OR Process_Command_Line="*currentVersion\\shellServiceObjectDelayLoad*" OR Process_Command_Line="*currentVersion\\runOnce*" OR Process_Command_Line="*currentVersion\\runOnceEx*" OR Process_Command_Line="*currentVersion\\run*" OR Process_Command_Line="*currentVersion\\policies\\explorer\\run*" OR Process_Command_Line="*currentcontrolset\\services*")) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1012 attack.t1007" | eval sigma_title="Query Registry" | eval sigma_description="Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
dispatch.earliest_time = -24h@h
alert.track = 0

[Query Registry - sysmon]
description = Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*query*" OR CommandLine="*save*" OR CommandLine="*export*") (CommandLine="*currentVersion\\windows*" OR CommandLine="*currentVersion\\runServicesOnce*" OR CommandLine="*currentVersion\\runServices*" OR CommandLine="*winlogon\\*" OR CommandLine="*currentVersion\\shellServiceObjectDelayLoad*" OR CommandLine="*currentVersion\\runOnce*" OR CommandLine="*currentVersion\\runOnceEx*" OR CommandLine="*currentVersion\\run*" OR CommandLine="*currentVersion\\policies\\explorer\\run*" OR CommandLine="*currentcontrolset\\services*")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1012 attack.t1007" | eval sigma_title="Query Registry" | eval sigma_description="Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
dispatch.earliest_time = -24h@h
alert.track = 0

[BlackByte Ransomware Patterns - winevent]
description = This command line patterns found in BlackByte Ransomware operations
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="C:\\Users\\Public\\*" Process_Command_Line="* -single *") OR (Process_Command_Line="*del C:\\Windows\\System32\\Taskmgr.exe*" OR Process_Command_Line="*;Set-Service -StartupType Disabled $*" OR Process_Command_Line="*powershell -command \"$x =[System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(*" OR Process_Command_Line="* do start wordpad.exe /p *"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="" | eval sigma_title="BlackByte Ransomware Patterns" | eval sigma_description="This command line patterns found in BlackByte Ransomware operations"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlackByte Ransomware Patterns - sysmon]
description = This command line patterns found in BlackByte Ransomware operations
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="C:\\Users\\Public\\*" CommandLine="* -single *") OR (CommandLine="*del C:\\Windows\\System32\\Taskmgr.exe*" OR CommandLine="*;Set-Service -StartupType Disabled $*" OR CommandLine="*powershell -command \"$x =[System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(*" OR CommandLine="* do start wordpad.exe /p *"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="" | eval sigma_title="BlackByte Ransomware Patterns" | eval sigma_description="This command line patterns found in BlackByte Ransomware operations"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSTSC Shadowing - winevent]
description = Detects RDP session hijacking by using MSTSC shadowing
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*noconsentprompt*" Process_Command_Line="*shadow:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002" | eval sigma_title="MSTSC Shadowing" | eval sigma_description="Detects RDP session hijacking by using MSTSC shadowing"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSTSC Shadowing - sysmon]
description = Detects RDP session hijacking by using MSTSC shadowing
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*noconsentprompt*" CommandLine="*shadow:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002" | eval sigma_title="MSTSC Shadowing" | eval sigma_description="Detects RDP session hijacking by using MSTSC shadowing"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Execute - winevent]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*rundll32.exe*" OR New_Process_Name="*cmd.exe*") (Process_Command_Line="*gthread-3.6.dll*" OR Process_Command_Line="*\\Windows\\Temp\\tmp.bat*" OR Process_Command_Line="*sigcmm-2.4.dll*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1106 attack.t1059.003 attack.t1218.011" | eval sigma_title="RedMimicry Winnti Playbook Execute" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[RedMimicry Winnti Playbook Execute - sysmon]
description = Detects actions caused by the RedMimicry Winnti playbook
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*rundll32.exe*" OR Image="*cmd.exe*") (CommandLine="*gthread-3.6.dll*" OR CommandLine="*\\Windows\\Temp\\tmp.bat*" OR CommandLine="*sigcmm-2.4.dll*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1106 attack.t1059.003 attack.t1218.011" | eval sigma_title="RedMimicry Winnti Playbook Execute" | eval sigma_description="Detects actions caused by the RedMimicry Winnti playbook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reg Add RUN Key - winevent]
description = Detects suspicious command line reg.exe tool adding key to RUN key in Registry
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*reg*" Process_Command_Line="* ADD *" Process_Command_Line="*Software\\Microsoft\\Windows\\CurrentVersion\\Run*") | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Reg Add RUN Key" | eval sigma_description="Detects suspicious command line reg.exe tool adding key to RUN key in Registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reg Add RUN Key - sysmon]
description = Detects suspicious command line reg.exe tool adding key to RUN key in Registry
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*reg*" CommandLine="* ADD *" CommandLine="*Software\\Microsoft\\Windows\\CurrentVersion\\Run*") | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Reg Add RUN Key" | eval sigma_description="Detects suspicious command line reg.exe tool adding key to RUN key in Registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Defender Exclusions - winevent]
description = Qbot used reg.exe to add Defender folder exceptions for folders within AppData and ProgramData.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths\\*" OR Process_Command_Line="*HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Paths*") Process_Command_Line="*ADD *" Process_Command_Line="*/t *" Process_Command_Line="*REG_DWORD *" Process_Command_Line="*/v *" Process_Command_Line="*/d *" Process_Command_Line="*0*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Registry Defender Exclusions" | eval sigma_description="Qbot used reg.exe to add Defender folder exceptions for folders within AppData and ProgramData."
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Defender Exclusions - sysmon]
description = Qbot used reg.exe to add Defender folder exceptions for folders within AppData and ProgramData.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths\\*" OR CommandLine="*HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Paths*") CommandLine="*ADD *" CommandLine="*/t *" CommandLine="*REG_DWORD *" CommandLine="*/v *" CommandLine="*/d *" CommandLine="*0*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Registry Defender Exclusions" | eval sigma_description="Qbot used reg.exe to add Defender folder exceptions for folders within AppData and ProgramData."
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Defender Tampering - winevent]
description = Detects reg command lines that disable certain important features of Microsoft Defender
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*SOFTWARE\\Microsoft\\Windows Defender\\*" OR Process_Command_Line="*SOFTWARE\\Policies\\Microsoft\\Windows Defender\\*") Process_Command_Line="* add *" Process_Command_Line="* /d 0*" (Process_Command_Line="*Real-Time Protection*" OR Process_Command_Line="*TamperProtection*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Registry Defender Tampering" | eval sigma_description="Detects reg command lines that disable certain important features of Microsoft Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Defender Tampering - sysmon]
description = Detects reg command lines that disable certain important features of Microsoft Defender
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*SOFTWARE\\Microsoft\\Windows Defender\\*" OR CommandLine="*SOFTWARE\\Policies\\Microsoft\\Windows Defender\\*") CommandLine="* add *" CommandLine="* /d 0*" (CommandLine="*Real-Time Protection*" OR CommandLine="*TamperProtection*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Registry Defender Tampering" | eval sigma_description="Detects reg command lines that disable certain important features of Microsoft Defender"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enabling RDP Service via Reg.exe - winevent]
description = Detects the execution of reg.exe and subsequent command line arguments for enabling RDP service on the host
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\reg.exe" Process_Command_Line="* add *" Process_Command_Line="*\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server*" Process_Command_Line="*REG_DWORD*" Process_Command_Line="* /f*") ((Process_Command_Line="*Licensing Core*" Process_Command_Line="*EnableConcurrentSessions*") OR (Process_Command_Line="*WinStations\\RDP-Tcp*" OR Process_Command_Line="*MaxInstanceCount*" OR Process_Command_Line="*fEnableWinStation*" OR Process_Command_Line="*TSUserEnabled*" OR Process_Command_Line="*TSEnabled*" OR Process_Command_Line="*TSAppCompat*" OR Process_Command_Line="*IdleWinStationPoolCount*" OR Process_Command_Line="*TSAdvertise*" OR Process_Command_Line="*AllowTSConnections*" OR Process_Command_Line="*fSingleSessionPerUser*"))) | eval sigma_attack_tags="attack.defense_evasion attack.lateral_movement attack.t1021.001 attack.t1112" | eval sigma_title="Enabling RDP Service via Reg.exe" | eval sigma_description="Detects the execution of reg.exe and subsequent command line arguments for enabling RDP service on the host"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enabling RDP Service via Reg.exe - sysmon]
description = Detects the execution of reg.exe and subsequent command line arguments for enabling RDP service on the host
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\reg.exe" CommandLine="* add *" CommandLine="*\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server*" CommandLine="*REG_DWORD*" CommandLine="* /f*") ((CommandLine="*Licensing Core*" CommandLine="*EnableConcurrentSessions*") OR (CommandLine="*WinStations\\RDP-Tcp*" OR CommandLine="*MaxInstanceCount*" OR CommandLine="*fEnableWinStation*" OR CommandLine="*TSUserEnabled*" OR CommandLine="*TSEnabled*" OR CommandLine="*TSAppCompat*" OR CommandLine="*IdleWinStationPoolCount*" OR CommandLine="*TSAdvertise*" OR CommandLine="*AllowTSConnections*" OR CommandLine="*fSingleSessionPerUser*"))) | eval sigma_attack_tags="attack.defense_evasion attack.lateral_movement attack.t1021.001 attack.t1112" | eval sigma_title="Enabling RDP Service via Reg.exe" | eval sigma_description="Detects the execution of reg.exe and subsequent command line arguments for enabling RDP service on the host"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Disabling LSASS PPL - winevent]
description = Detects reg command lines that disables PPL on the LSA process
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*SYSTEM\\CurrentControlSet\\Control\\Lsa*" Process_Command_Line="* add *" Process_Command_Line="* /d 0*" Process_Command_Line="* /v RunAsPPL *" (Process_Command_Line="*Real-Time Protection*" OR Process_Command_Line="*TamperProtection*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.010" | eval sigma_title="Registry Disabling LSASS PPL" | eval sigma_description="Detects reg command lines that disables PPL on the LSA process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Disabling LSASS PPL - sysmon]
description = Detects reg command lines that disables PPL on the LSA process
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" CommandLine="*SYSTEM\\CurrentControlSet\\Control\\Lsa*" CommandLine="* add *" CommandLine="* /d 0*" CommandLine="* /v RunAsPPL *" (CommandLine="*Real-Time Protection*" OR CommandLine="*TamperProtection*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.010" | eval sigma_title="Registry Disabling LSASS PPL" | eval sigma_description="Detects reg command lines that disables PPL on the LSA process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Critical Registry Keys To a File - winevent]
description = Detects the export of a crital Registry key to a file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\regedit.exe" (Process_Command_Line="* /E *" OR Process_Command_Line="* -E *") (Process_Command_Line="*hklm*" OR Process_Command_Line="*hkey_local_machine*") (Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security")) | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Critical Registry Keys To a File" | eval sigma_description="Detects the export of a crital Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Critical Registry Keys To a File - sysmon]
description = Detects the export of a crital Registry key to a file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\regedit.exe" (CommandLine="* /E *" OR CommandLine="* -E *") (CommandLine="*hklm*" OR CommandLine="*hkey_local_machine*") (CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security")) | table ParentImage,CommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Critical Registry Keys To a File" | eval sigma_description="Detects the export of a crital Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Registry Key To a File - winevent]
description = Detects the export of the target Registry key to a file.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\regedit.exe" (Process_Command_Line="* /E *" OR Process_Command_Line="* -E *")) NOT (((Process_Command_Line="*hklm*" OR Process_Command_Line="*hkey_local_machine*")) ((Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security")))) | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Registry Key To a File" | eval sigma_description="Detects the export of the target Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exports Registry Key To a File - sysmon]
description = Detects the export of the target Registry key to a file.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\regedit.exe" (CommandLine="* /E *" OR CommandLine="* -E *")) NOT (((CommandLine="*hklm*" OR CommandLine="*hkey_local_machine*")) ((CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security")))) | table ParentImage,CommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1012" | eval sigma_title="Exports Registry Key To a File" | eval sigma_description="Detects the export of the target Registry key to a file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session Host Process (WinRM) - winevent]
description = Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session).
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wsmprovhost.exe" OR Creator_Process_Name="*\\wsmprovhost.exe")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1021.006" | eval sigma_title="Remote PowerShell Session Host Process (WinRM)" | eval sigma_description="Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session Host Process (WinRM) - sysmon]
description = Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session).
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wsmprovhost.exe" OR ParentImage="*\\wsmprovhost.exe")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.t1021.006" | eval sigma_title="Remote PowerShell Session Host Process (WinRM)" | eval sigma_description="Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Discovery of a System Time - winevent]
description = Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*time*") OR (New_Process_Name="*\\w32tm.exe" Process_Command_Line="*tz*"))) | eval sigma_attack_tags="attack.discovery attack.t1124" | eval sigma_title="Discovery of a System Time" | eval sigma_description="Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Discovery of a System Time - sysmon]
description = Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*time*") OR (Image="*\\w32tm.exe" CommandLine="*tz*"))) | eval sigma_attack_tags="attack.discovery attack.t1124" | eval sigma_title="Discovery of a System Time" | eval sigma_description="Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remove Windows Defender Definition Files - winevent]
description = Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") OriginalFileName="MpCmdRun.exe" Process_Command_Line="* -RemoveDefinitions*" Process_Command_Line="* -All*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Remove Windows Defender Definition Files" | eval sigma_description="Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remove Windows Defender Definition Files - sysmon]
description = Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") OriginalFileName="MpCmdRun.exe" CommandLine="* -RemoveDefinitions*" CommandLine="* -All*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Remove Windows Defender Definition Files" | eval sigma_description="Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Highly Relevant Renamed Binary - winevent]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe") NOT ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\psexec.exe" OR New_Process_Name="*\\psexec64.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Highly Relevant Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Highly Relevant Renamed Binary - sysmon]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\psexec.exe" OR Image="*\\psexec64.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\certutil.exe" OR Image="*\\rundll32.exe" OR Image="*\\cmstp.exe" OR Image="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Highly Relevant Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Binary - winevent]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="Cmd.Exe" OR OriginalFileName="CONHOST.EXE" OR OriginalFileName="PowerShell.EXE" OR OriginalFileName="powershell_ise.EXE" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="MSHTA.EXE" OR OriginalFileName="REGSVR32.EXE" OR OriginalFileName="wmic.exe" OR OriginalFileName="CertUtil.exe" OR OriginalFileName="RUNDLL32.EXE" OR OriginalFileName="CMSTP.EXE" OR OriginalFileName="msiexec.exe" OR OriginalFileName="7z.exe" OR OriginalFileName="WinRAR.exe" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe" OR OriginalFileName="netsh.exe") NOT ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\conhost.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\psexec.exe" OR New_Process_Name="*\\psexec64.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\WMIC.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\7z.exe" OR New_Process_Name="*\\WinRAR.exe" OR New_Process_Name="*\\wevtutil.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe" OR New_Process_Name="*\\netsh.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Binary - sysmon]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="Cmd.Exe" OR OriginalFileName="CONHOST.EXE" OR OriginalFileName="PowerShell.EXE" OR OriginalFileName="powershell_ise.EXE" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="MSHTA.EXE" OR OriginalFileName="REGSVR32.EXE" OR OriginalFileName="wmic.exe" OR OriginalFileName="CertUtil.exe" OR OriginalFileName="RUNDLL32.EXE" OR OriginalFileName="CMSTP.EXE" OR OriginalFileName="msiexec.exe" OR OriginalFileName="7z.exe" OR OriginalFileName="WinRAR.exe" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe" OR OriginalFileName="netsh.exe") NOT ((Image="*\\cmd.exe" OR Image="*\\conhost.exe" OR Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\psexec.exe" OR Image="*\\psexec64.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\WMIC.exe" OR Image="*\\certutil.exe" OR Image="*\\rundll32.exe" OR Image="*\\cmstp.exe" OR Image="*\\msiexec.exe" OR Image="*\\7z.exe" OR Image="*\\WinRAR.exe" OR Image="*\\wevtutil.exe" OR Image="*\\net.exe" OR Image="*\\net1.exe" OR Image="*\\netsh.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Creation with Renamed BrowserCore.exe - winevent]
description = Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="BrowserCore.exe" NOT ((New_Process_Name="*\\BrowserCore.exe"))) | eval sigma_attack_tags="attack.t1528 attack.t1036.003" | eval sigma_title="Process Creation with Renamed BrowserCore.exe" | eval sigma_description="Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Creation with Renamed BrowserCore.exe - sysmon]
description = Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="BrowserCore.exe" NOT ((Image="*\\BrowserCore.exe"))) | eval sigma_attack_tags="attack.t1528 attack.t1036.003" | eval sigma_title="Process Creation with Renamed BrowserCore.exe" | eval sigma_description="Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed jusched.exe - winevent]
description = Detects renamed jusched.exe used by cobalt group
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Java Update Scheduler" OR Description="Java(TM) Update Scheduler") NOT (New_Process_Name="*\\jusched.exe")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed jusched.exe" | eval sigma_description="Detects renamed jusched.exe used by cobalt group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed jusched.exe - sysmon]
description = Detects renamed jusched.exe used by cobalt group
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Java Update Scheduler" OR Description="Java(TM) Update Scheduler") NOT (Image="*\\jusched.exe")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed jusched.exe" | eval sigma_description="Detects renamed jusched.exe used by cobalt group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed MegaSync - winevent]
description = Detects the execution of a renamed meg.exe of MegaSync during incident response engagements associated with ransomware families like Nefilim, Sodinokibi, Pysa, and Conti.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\explorer.exe" Process_Command_Line="*C:\\Windows\\Temp\\meg.exe*") OR (OriginalFileName="meg.exe" NOT (New_Process_Name="*\\meg.exe")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Renamed MegaSync" | eval sigma_description="Detects the execution of a renamed meg.exe of MegaSync during incident response engagements associated with ransomware families like Nefilim, Sodinokibi, Pysa, and Conti."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed MegaSync - sysmon]
description = Detects the execution of a renamed meg.exe of MegaSync during incident response engagements associated with ransomware families like Nefilim, Sodinokibi, Pysa, and Conti.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\explorer.exe" CommandLine="*C:\\Windows\\Temp\\meg.exe*") OR (OriginalFileName="meg.exe" NOT (Image="*\\meg.exe")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Renamed MegaSync" | eval sigma_description="Detects the execution of a renamed meg.exe of MegaSync during incident response engagements associated with ransomware families like Nefilim, Sodinokibi, Pysa, and Conti."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Msdt.exe - winevent]
description = Detects process creation with a renamed Msdt.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="msdt.exe" NOT ((New_Process_Name="*\\msdt.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed Msdt.exe" | eval sigma_description="Detects process creation with a renamed Msdt.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Msdt.exe - sysmon]
description = Detects process creation with a renamed Msdt.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="msdt.exe" NOT ((Image="*\\msdt.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed Msdt.exe" | eval sigma_description="Detects process creation with a renamed Msdt.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Renamed PaExec - winevent]
description = Detects execution of renamed paexec via imphash and executable product string
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="*PAExec*" ((Imphash="11D40A7B7876288F919AB819CC2D9802" OR Imphash="6444f8a34e99b8f7d9647de66aabe516" OR Imphash="dfd6aa3f7b2b1035b76b718f1ddc689f" OR Imphash="1a6cca4d5460b1710a12dea39e4a592c") OR (Hashes="*IMPHASH=11D40A7B7876288F919AB819CC2D9802*" OR Hashes="*IMPHASH=6444f8a34e99b8f7d9647de66aabe516*" OR Hashes="*IMPHASH=dfd6aa3f7b2b1035b76b718f1ddc689f*" OR Hashes="*IMPHASH=1a6cca4d5460b1710a12dea39e4a592c*"))) NOT (New_Process_Name="*paexec*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003 attack.g0046 car.2013-05-009" | eval sigma_title="Execution of Renamed PaExec" | eval sigma_description="Detects execution of renamed paexec via imphash and executable product string"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Renamed PaExec - sysmon]
description = Detects execution of renamed paexec via imphash and executable product string
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="*PAExec*" ((Imphash="11D40A7B7876288F919AB819CC2D9802" OR Imphash="6444f8a34e99b8f7d9647de66aabe516" OR Imphash="dfd6aa3f7b2b1035b76b718f1ddc689f" OR Imphash="1a6cca4d5460b1710a12dea39e4a592c") OR (Hashes="*IMPHASH=11D40A7B7876288F919AB819CC2D9802*" OR Hashes="*IMPHASH=6444f8a34e99b8f7d9647de66aabe516*" OR Hashes="*IMPHASH=dfd6aa3f7b2b1035b76b718f1ddc689f*" OR Hashes="*IMPHASH=1a6cca4d5460b1710a12dea39e4a592c*"))) NOT (Image="*paexec*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003 attack.g0046 car.2013-05-009" | eval sigma_title="Execution of Renamed PaExec" | eval sigma_description="Detects execution of renamed paexec via imphash and executable product string"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution Of Renamed Plink Binary - winevent]
description = Execution of a renamed version of the Plink binary
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="Plink" NOT (New_Process_Name="*\\plink.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution Of Renamed Plink Binary" | eval sigma_description="Execution of a renamed version of the Plink binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution Of Renamed Plink Binary - sysmon]
description = Execution of a renamed version of the Plink binary
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="Plink" NOT (Image="*\\plink.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution Of Renamed Plink Binary" | eval sigma_description="Execution of a renamed version of the Plink binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PowerShell - winevent]
description = Detects the execution of a renamed PowerShell often used by attackers or malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Description="Windows PowerShell*" OR Description="pwsh*") Company="Microsoft Corporation") NOT ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\pwsh.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed PowerShell" | eval sigma_description="Detects the execution of a renamed PowerShell often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PowerShell - sysmon]
description = Detects the execution of a renamed PowerShell often used by attackers or malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Description="Windows PowerShell*" OR Description="pwsh*") Company="Microsoft Corporation") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\pwsh.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed PowerShell" | eval sigma_description="Detects the execution of a renamed PowerShell often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ProcDump - winevent]
description = Detects the execution of a renamed ProcDump executable often used by attackers or malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((OriginalFileName="procdump" OR (Process_Command_Line="* -ma *" Process_Command_Line="* -accepteula *")) OR (Process_Command_Line="* -ma *" Process_Command_Line="*.dmp*")) NOT ((New_Process_Name="*\\procdump.exe" OR New_Process_Name="*\\procdump64.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed ProcDump" | eval sigma_description="Detects the execution of a renamed ProcDump executable often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ProcDump - sysmon]
description = Detects the execution of a renamed ProcDump executable often used by attackers or malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((OriginalFileName="procdump" OR (CommandLine="* -ma *" CommandLine="* -accepteula *")) OR (CommandLine="* -ma *" CommandLine="*.dmp*")) NOT ((Image="*\\procdump.exe" OR Image="*\\procdump64.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed ProcDump" | eval sigma_description="Detects the execution of a renamed ProcDump executable often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PsExec - winevent]
description = Detects the execution of a renamed PsExec often used by attackers or malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Execute processes remotely" Product="Sysinternals PsExec") NOT ((New_Process_Name="*\\PsExec.exe" OR New_Process_Name="*\\PsExec64.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed PsExec" | eval sigma_description="Detects the execution of a renamed PsExec often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PsExec - sysmon]
description = Detects the execution of a renamed PsExec often used by attackers or malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Execute processes remotely" Product="Sysinternals PsExec") NOT ((Image="*\\PsExec.exe" OR Image="*\\PsExec64.exe"))) | eval sigma_attack_tags="car.2013-05-009 attack.defense_evasion attack.t1036.003" | eval sigma_title="Renamed PsExec" | eval sigma_description="Detects the execution of a renamed PsExec often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Rundll32.exe Execution - winevent]
description = Detects the execution of rundll32.exe that has been renamed to a different name to avoid detection
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="RUNDLL32.EXE" NOT (New_Process_Name="*\\rundll32.exe")) | eval sigma_attack_tags="" | eval sigma_title="Renamed Rundll32.exe Execution" | eval sigma_description="Detects the execution of rundll32.exe that has been renamed to a different name to avoid detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Rundll32.exe Execution - sysmon]
description = Detects the execution of rundll32.exe that has been renamed to a different name to avoid detection
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="RUNDLL32.EXE" NOT (Image="*\\rundll32.exe")) | eval sigma_attack_tags="" | eval sigma_title="Renamed Rundll32.exe Execution" | eval sigma_description="Detects the execution of rundll32.exe that has been renamed to a different name to avoid detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Whoami Execution - winevent]
description = Detects the execution of whoami that has been renamed to a different name to avoid detection
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="whoami.exe" NOT (New_Process_Name="*\\whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Renamed Whoami Execution" | eval sigma_description="Detects the execution of whoami that has been renamed to a different name to avoid detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Whoami Execution - sysmon]
description = Detects the execution of whoami that has been renamed to a different name to avoid detection
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="whoami.exe" NOT (Image="*\\whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Renamed Whoami Execution" | eval sigma_description="Detects the execution of whoami that has been renamed to a different name to avoid detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Root Certificate Installed - winevent]
description = Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\certutil.exe" Process_Command_Line="*-addstore*" Process_Command_Line="*root*") OR (New_Process_Name="*\\CertMgr.exe" Process_Command_Line="*/add*" Process_Command_Line="*root*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1553.004" | eval sigma_title="Root Certificate Installed" | eval sigma_description="Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers."
dispatch.earliest_time = -24h@h
alert.track = 0

[Root Certificate Installed - sysmon]
description = Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\certutil.exe" CommandLine="*-addstore*" CommandLine="*root*") OR (Image="*\\CertMgr.exe" CommandLine="*/add*" CommandLine="*root*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1553.004" | eval sigma_title="Root Certificate Installed" | eval sigma_description="Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Procedure Call Service Anomaly - winevent]
description = Detects suspicious remote procedure call (RPC) service anomalies based on the spawned sub processes (long shot to detect the exploitation of vulnerabilities like CVE-2022-26809)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="C:\\WINDOWS\\system32\\svchost.exe -k RPCSS*") | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1569.002" | eval sigma_title="Remote Procedure Call Service Anomaly" | eval sigma_description="Detects suspicious remote procedure call (RPC) service anomalies based on the spawned sub processes (long shot to detect the exploitation of vulnerabilities like CVE-2022-26809)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Procedure Call Service Anomaly - sysmon]
description = Detects suspicious remote procedure call (RPC) service anomalies based on the spawned sub processes (long shot to detect the exploitation of vulnerabilities like CVE-2022-26809)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="C:\\WINDOWS\\system32\\svchost.exe -k RPCSS*") | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.execution attack.t1569.002" | eval sigma_title="Remote Procedure Call Service Anomaly" | eval sigma_description="Detects suspicious remote procedure call (RPC) service anomalies based on the spawned sub processes (long shot to detect the exploitation of vulnerabilities like CVE-2022-26809)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Execution Without DLL File - winevent]
description = Detects the execution of rundll32 with a command line that doesn't contain a .dll file
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\rundll32.exe" NOT ((NOT Process_Command_Line="*") OR (Process_Command_Line="*.dll*" OR Process_Command_Line="") OR (Creator_Process_Name="*:\\Program Files\\Internet Explorer\\iexplore.exe" Process_Command_Line="*.cpl*") OR (Creator_Process_Name="*:\\Windows\\SysWOW64\\msiexec.exe" Process_Command_Line="C:\\Windows\\syswow64\\MsiExec.exe -Embedding*") OR (Creator_Process_Name="*:\\Windows\\System32\\msiexec.exe" Process_Command_Line="C:\\Windows\\system32\\MsiExec.exe -Embedding*") OR (Creator_Process_Name="*:\\Windows\\System32\\cmd.exe" ParentCommandLine="* C:\\Program Files\\SplunkUniversalForwarder\\*"))) | table New_Process_Name,Process_Command_Line | eval sigma_attack_tags="" | eval sigma_title="Rundll32 Execution Without DLL File" | eval sigma_description="Detects the execution of rundll32 with a command line that doesn't contain a .dll file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Execution Without DLL File - sysmon]
description = Detects the execution of rundll32 with a command line that doesn't contain a .dll file
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\rundll32.exe" NOT ((NOT CommandLine="*") OR (CommandLine="*.dll*" OR CommandLine="") OR (ParentImage="*:\\Program Files\\Internet Explorer\\iexplore.exe" CommandLine="*.cpl*") OR (ParentImage="*:\\Windows\\SysWOW64\\msiexec.exe" CommandLine="C:\\Windows\\syswow64\\MsiExec.exe -Embedding*") OR (ParentImage="*:\\Windows\\System32\\msiexec.exe" CommandLine="C:\\Windows\\system32\\MsiExec.exe -Embedding*") OR (ParentImage="*:\\Windows\\System32\\cmd.exe" ParentCommandLine="* C:\\Program Files\\SplunkUniversalForwarder\\*"))) | table Image,CommandLine | eval sigma_attack_tags="" | eval sigma_title="Rundll32 Execution Without DLL File" | eval sigma_description="Detects the execution of rundll32 with a command line that doesn't contain a .dll file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run PowerShell Script from ADS - winevent]
description = Detects PowerShell script execution from Alternate Data Stream (ADS)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\powershell.exe" Process_Command_Line="*Get-Content*" Process_Command_Line="*-Stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004" | eval sigma_title="Run PowerShell Script from ADS" | eval sigma_description="Detects PowerShell script execution from Alternate Data Stream (ADS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run PowerShell Script from ADS - sysmon]
description = Detects PowerShell script execution from Alternate Data Stream (ADS)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\powershell.exe" CommandLine="*Get-Content*" CommandLine="*-Stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1564.004" | eval sigma_title="Run PowerShell Script from ADS" | eval sigma_description="Detects PowerShell script execution from Alternate Data Stream (ADS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detect Virtualbox Driver Installation OR Starting Of VMs - winevent]
description = Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*VBoxRT.dll,RTR3Init*" OR Process_Command_Line="*VBoxC.dll*" OR Process_Command_Line="*VBoxDrv.sys*") OR (Process_Command_Line="*startvm*" OR Process_Command_Line="*controlvm*"))) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1564.006 attack.t1564" | eval sigma_title="Detect Virtualbox Driver Installation OR Starting Of VMs" | eval sigma_description="Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detect Virtualbox Driver Installation OR Starting Of VMs - sysmon]
description = Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*VBoxRT.dll,RTR3Init*" OR CommandLine="*VBoxC.dll*" OR CommandLine="*VBoxDrv.sys*") OR (CommandLine="*startvm*" OR CommandLine="*controlvm*"))) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1564.006 attack.t1564" | eval sigma_title="Detect Virtualbox Driver Installation OR Starting Of VMs" | eval sigma_description="Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 From Abnormal Drive - winevent]
description = Detects rundll32.exe executing from an abnormal drive such as a mounted ISO.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\rundll32.exe" NOT ((CurrentDirectory="*C:\\*" OR CurrentDirectory="") OR (NOT CurrentDirectory="*"))) | eval sigma_attack_tags="attack.t1218.001" | eval sigma_title="Rundll32 From Abnormal Drive" | eval sigma_description="Detects rundll32.exe executing from an abnormal drive such as a mounted ISO."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 From Abnormal Drive - sysmon]
description = Detects rundll32.exe executing from an abnormal drive such as a mounted ISO.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\rundll32.exe" NOT ((CurrentDirectory="*C:\\*" OR CurrentDirectory="") OR (NOT CurrentDirectory="*"))) | eval sigma_attack_tags="attack.t1218.001" | eval sigma_title="Rundll32 From Abnormal Drive" | eval sigma_description="Detects rundll32.exe executing from an abnormal drive such as a mounted ISO."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 With Suspicious Parent Process - winevent]
description = Detects suspicious start of rundll32.exe with a parent process of Explorer.exe. Variant of Raspberry Robin, as first reported by Red Canary.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" Creator_Process_Name="*\\explorer.exe") NOT (Process_Command_Line="*\\shell32.dll,OpenAs_RunDLL*")) | table New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Rundll32 With Suspicious Parent Process" | eval sigma_description="Detects suspicious start of rundll32.exe with a parent process of Explorer.exe. Variant of Raspberry Robin, as first reported by Red Canary."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 With Suspicious Parent Process - sysmon]
description = Detects suspicious start of rundll32.exe with a parent process of Explorer.exe. Variant of Raspberry Robin, as first reported by Red Canary.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" ParentImage="*\\explorer.exe") NOT (CommandLine="*\\shell32.dll,OpenAs_RunDLL*")) | table Image,ParentImage | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Rundll32 With Suspicious Parent Process" | eval sigma_description="Detects suspicious start of rundll32.exe with a parent process of Explorer.exe. Variant of Raspberry Robin, as first reported by Red Canary."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Registered COM Objects - winevent]
description = load malicious registered COM objects
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" (Process_Command_Line="*-sta *" OR Process_Command_Line="*–localserver *") Process_Command_Line="*{*" Process_Command_Line="*}*") | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1546.015" | eval sigma_title="Rundll32 Registered COM Objects" | eval sigma_description="load malicious registered COM objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Registered COM Objects - sysmon]
description = load malicious registered COM objects
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" (CommandLine="*-sta *" OR CommandLine="*–localserver *") CommandLine="*{*" CommandLine="*}*") | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1546.015" | eval sigma_title="Rundll32 Registered COM Objects" | eval sigma_description="load malicious registered COM objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Without Parameters - winevent]
description = Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="rundll32.exe") | table ComputerName,SubjectUserName,Process_Command_Line,New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1570 attack.execution attack.t1569.002" | eval sigma_title="Rundll32 Without Parameters" | eval sigma_description="Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Without Parameters - sysmon]
description = Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="rundll32.exe") | table ComputerName,SubjectUserName,CommandLine,Image,ParentImage | eval sigma_attack_tags="attack.lateral_movement attack.t1021.002 attack.t1570 attack.execution attack.t1569.002" | eval sigma_title="Rundll32 Without Parameters" | eval sigma_description="Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Schtasks Execution AppData Folder - winevent]
description = Detects the creation of a schtask that executes a file from C:\Users\<USER>\AppData\Local
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create*" Process_Command_Line="*/RU \"NT AUT*" Process_Command_Line="*/TR*" Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\AppData\\Local\\*") | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005 attack.t1059.001" | eval sigma_title="Suspicious Schtasks Execution AppData Folder" | eval sigma_description="Detects the creation of a schtask that executes a file from C:\Users\<USER>\AppData\Local"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Schtasks Execution AppData Folder - sysmon]
description = Detects the creation of a schtask that executes a file from C:\Users\<USER>\AppData\Local
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="*/Create*" CommandLine="*/RU \"NT AUT*" CommandLine="*/TR*" CommandLine="*C:\\Users\\*" CommandLine="*\\AppData\\Local\\*") | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005 attack.t1059.001" | eval sigma_title="Suspicious Schtasks Execution AppData Folder" | eval sigma_description="Detects the creation of a schtask that executes a file from C:\Users\<USER>\AppData\Local"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Powershell No File or Command - winevent]
description = Detects suspicious powershell execution that ends with a common flag instead of a command or a filename to execute (could be a sign of implicit execution that uses files in WindowsApps directory)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -windowstyle hidden\"" OR Process_Command_Line="* -windowstyle hidden" OR Process_Command_Line="* -windowstyle hidden'" OR Process_Command_Line="* -w hidden\"" OR Process_Command_Line="* -w hidden" OR Process_Command_Line="* -w hidden'" OR Process_Command_Line="* -ep bypass\"" OR Process_Command_Line="* -ep bypass" OR Process_Command_Line="* -ep bypass'" OR Process_Command_Line="* -noni\"" OR Process_Command_Line="* -noni" OR Process_Command_Line="* -noni'")) | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005 attack.t1059.001" | eval sigma_title="Suspicious Powershell No File or Command" | eval sigma_description="Detects suspicious powershell execution that ends with a common flag instead of a command or a filename to execute (could be a sign of implicit execution that uses files in WindowsApps directory)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Powershell No File or Command - sysmon]
description = Detects suspicious powershell execution that ends with a common flag instead of a command or a filename to execute (could be a sign of implicit execution that uses files in WindowsApps directory)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -windowstyle hidden\"" OR CommandLine="* -windowstyle hidden" OR CommandLine="* -windowstyle hidden'" OR CommandLine="* -w hidden\"" OR CommandLine="* -w hidden" OR CommandLine="* -w hidden'" OR CommandLine="* -ep bypass\"" OR CommandLine="* -ep bypass" OR CommandLine="* -ep bypass'" OR CommandLine="* -noni\"" OR CommandLine="* -noni" OR CommandLine="* -noni'")) | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005 attack.t1059.001" | eval sigma_title="Suspicious Powershell No File or Command" | eval sigma_description="Detects suspicious powershell execution that ends with a common flag instead of a command or a filename to execute (could be a sign of implicit execution that uses files in WindowsApps directory)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Executing Powershell Encoded Payload from Registry - winevent]
description = Detects the creation of a schtask that executes a base64 encoded payload stored in the Windows Registry using PowerShell.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create*" Process_Command_Line="*/SC*" Process_Command_Line="*FromBase64String*" Process_Command_Line="*Get-ItemProperty*" (Process_Command_Line="*HKCU:*" OR Process_Command_Line="*HKLM:*" OR Process_Command_Line="*registry::*" OR Process_Command_Line="*HKEY_*")) | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005 attack.t1059.001" | eval sigma_title="Scheduled Task Executing Powershell Encoded Payload from Registry" | eval sigma_description="Detects the creation of a schtask that executes a base64 encoded payload stored in the Windows Registry using PowerShell."
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Executing Powershell Encoded Payload from Registry - sysmon]
description = Detects the creation of a schtask that executes a base64 encoded payload stored in the Windows Registry using PowerShell.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="*/Create*" CommandLine="*/SC*" CommandLine="*FromBase64String*" CommandLine="*Get-ItemProperty*" (CommandLine="*HKCU:*" OR CommandLine="*HKLM:*" OR CommandLine="*registry::*" OR CommandLine="*HKEY_*")) | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005 attack.t1059.001" | eval sigma_title="Scheduled Task Executing Powershell Encoded Payload from Registry" | eval sigma_description="Detects the creation of a schtask that executes a base64 encoded payload stored in the Windows Registry using PowerShell."
dispatch.earliest_time = -24h@h
alert.track = 0

[ScreenConnect Backstage Mode Anomaly - winevent]
description = Detects suspicious sub processes started by the ScreenConnect client service, which indicates the use of the so-called Backstage mode
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*ScreenConnect.ClientService.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe")) | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="ScreenConnect Backstage Mode Anomaly" | eval sigma_description="Detects suspicious sub processes started by the ScreenConnect client service, which indicates the use of the so-called Backstage mode"
dispatch.earliest_time = -24h@h
alert.track = 0

[ScreenConnect Backstage Mode Anomaly - sysmon]
description = Detects suspicious sub processes started by the ScreenConnect client service, which indicates the use of the so-called Backstage mode
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*ScreenConnect.ClientService.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe")) | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="ScreenConnect Backstage Mode Anomaly" | eval sigma_description="Detects suspicious sub processes started by the ScreenConnect client service, which indicates the use of the so-called Backstage mode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Script Event Consumer Spawning Process - winevent]
description = Detects a suspicious child process of Script Event Consumer (scrcons.exe).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\scrcons.exe" (New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\dllhost.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\msbuild.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Script Event Consumer Spawning Process" | eval sigma_description="Detects a suspicious child process of Script Event Consumer (scrcons.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Script Event Consumer Spawning Process - sysmon]
description = Detects a suspicious child process of Script Event Consumer (scrcons.exe).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\scrcons.exe" (Image="*\\svchost.exe" OR Image="*\\dllhost.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\schtasks.exe" OR Image="*\\regsvr32.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\msiexec.exe" OR Image="*\\msbuild.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Script Event Consumer Spawning Process" | eval sigma_description="Detects a suspicious child process of Script Event Consumer (scrcons.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Shim Database Persistence via sdbinst.exe - winevent]
description = Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\sdbinst.exe" Process_Command_Line="*.sdb*") NOT (Process_Command_Line="*iisexpressshim.sdb*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.011" | eval sigma_title="Possible Shim Database Persistence via sdbinst.exe" | eval sigma_description="Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Shim Database Persistence via sdbinst.exe - sysmon]
description = Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\sdbinst.exe" CommandLine="*.sdb*") NOT (CommandLine="*iisexpressshim.sdb*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.011" | eval sigma_title="Possible Shim Database Persistence via sdbinst.exe" | eval sigma_description="Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sdclt Child Processes - winevent]
description = A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sdclt.exe") | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Sdclt Child Processes" | eval sigma_description="A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sdclt Child Processes - sysmon]
description = A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sdclt.exe") | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Sdclt Child Processes" | eval sigma_description="A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysinternals SDelete Delete File - winevent]
description = Use of SDelete to erase a file not the free space
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) OriginalFileName="sdelete.exe" NOT ((Process_Command_Line="* -h*" OR Process_Command_Line="* -c*" OR Process_Command_Line="* -z*" OR Process_Command_Line="* /?*"))) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.impact attack.t1485" | eval sigma_title="Sysinternals SDelete Delete File" | eval sigma_description="Use of SDelete to erase a file not the free space"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysinternals SDelete Delete File - sysmon]
description = Use of SDelete to erase a file not the free space
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) OriginalFileName="sdelete.exe" NOT ((CommandLine="* -h*" OR CommandLine="* -c*" OR CommandLine="* -z*" OR CommandLine="* /?*"))) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.impact attack.t1485" | eval sigma_title="Sysinternals SDelete Delete File" | eval sigma_description="Use of SDelete to erase a file not the free space"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sdiagnhost Calling Suspicious Child Process - winevent]
description = Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sdiagnhost.exe" (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\taskkill.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1218" | eval sigma_title="Sdiagnhost Calling Suspicious Child Process" | eval sigma_description="Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sdiagnhost Calling Suspicious Child Process - sysmon]
description = Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sdiagnhost.exe" (Image="*\\powershell.exe" OR Image="*\\cmd.exe" OR Image="*\\mshta.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\taskkill.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1218" | eval sigma_title="Sdiagnhost Calling Suspicious Child Process" | eval sigma_description="Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Execution - winevent]
description = Detects manual service execution (start) via system utilities.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="* start *") | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="Service Execution" | eval sigma_description="Detects manual service execution (start) via system utilities."
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Execution - sysmon]
description = Detects manual service execution (start) via system utilities.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="* start *") | eval sigma_attack_tags="attack.execution attack.t1569.002" | eval sigma_title="Service Execution" | eval sigma_description="Detects manual service execution (start) via system utilities."
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Windows Service - winevent]
description = Detects a windows service to be stopped
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((OriginalFileName="sc.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe") OR (New_Process_Name="*\\sc.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe")) Process_Command_Line="*stop*") NOT (Process_Command_Line="sc  stop KSCWebConsoleMessageQueue" (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="Stop Windows Service" | eval sigma_description="Detects a windows service to be stopped"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Windows Service - sysmon]
description = Detects a windows service to be stopped
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((OriginalFileName="sc.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe") OR (Image="*\\sc.exe" OR Image="*\\net.exe" OR Image="*\\net1.exe")) CommandLine="*stop*") NOT (CommandLine="sc  stop KSCWebConsoleMessageQueue" (User="*AUTHORI*" OR User="*AUTORI*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="Stop Windows Service" | eval sigma_description="Detects a windows service to be stopped"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change PowerShell Policies to an Unsecure Level - winevent]
description = Detects use of executionpolicy option to set a unsecure policies
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -executionpolicy *" OR Process_Command_Line="* -ep *" OR Process_Command_Line="* -exec *") (Process_Command_Line="*Unrestricted*" OR Process_Command_Line="*bypass*" OR Process_Command_Line="*RemoteSigned*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Change PowerShell Policies to an Unsecure Level" | eval sigma_description="Detects use of executionpolicy option to set a unsecure policies"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change PowerShell Policies to an Unsecure Level - sysmon]
description = Detects use of executionpolicy option to set a unsecure policies
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -executionpolicy *" OR CommandLine="* -ep *" OR CommandLine="* -exec *") (CommandLine="*Unrestricted*" OR CommandLine="*bypass*" OR CommandLine="*RemoteSigned*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Change PowerShell Policies to an Unsecure Level" | eval sigma_description="Detects use of executionpolicy option to set a unsecure policies"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Access via Symlink - winevent]
description = Shadow Copies storage symbolic link creation using operating systems utilities
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*mklink*" Process_Command_Line="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Access via Symlink" | eval sigma_description="Shadow Copies storage symbolic link creation using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Access via Symlink - sysmon]
description = Shadow Copies storage symbolic link creation using operating systems utilities
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*mklink*" CommandLine="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Access via Symlink" | eval sigma_description="Shadow Copies storage symbolic link creation using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Creation Using Operating Systems Utilities - winevent]
description = Shadow Copies creation using operating systems utilities, possible credential access
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\vssadmin.exe") Process_Command_Line="*shadow*" Process_Command_Line="*create*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Creation Using Operating Systems Utilities" | eval sigma_description="Shadow Copies creation using operating systems utilities, possible credential access"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Creation Using Operating Systems Utilities - sysmon]
description = Shadow Copies creation using operating systems utilities, possible credential access
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe" OR Image="*\\wmic.exe" OR Image="*\\vssadmin.exe") CommandLine="*shadow*" CommandLine="*create*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.002 attack.t1003.003" | eval sigma_title="Shadow Copies Creation Using Operating Systems Utilities" | eval sigma_description="Shadow Copies creation using operating systems utilities, possible credential access"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Deletion Using Operating Systems Utilities - winevent]
description = Shadow Copies deletion using operating systems utilities
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\vssadmin.exe" OR New_Process_Name="*\\diskshadow.exe") OR (OriginalFileName="PowerShell.EXE" OR OriginalFileName="wmic.exe" OR OriginalFileName="VSSADMIN.EXE" OR OriginalFileName="diskshadow.exe")) (Process_Command_Line="*shadow*" Process_Command_Line="*delete*")) OR ((New_Process_Name="*\\wbadmin.exe" OR OriginalFileName="WBADMIN.EXE") (Process_Command_Line="*delete*" Process_Command_Line="*catalog*" Process_Command_Line="*quiet*"))) OR ((New_Process_Name="*\\vssadmin.exe" OR OriginalFileName="VSSADMIN.EXE") (Process_Command_Line="*resize*" Process_Command_Line="*shadowstorage*" Process_Command_Line="*unbounded*")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1070 attack.t1490" | eval sigma_title="Shadow Copies Deletion Using Operating Systems Utilities" | eval sigma_description="Shadow Copies deletion using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Deletion Using Operating Systems Utilities - sysmon]
description = Shadow Copies deletion using operating systems utilities
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((((Image="*\\powershell.exe" OR Image="*\\wmic.exe" OR Image="*\\vssadmin.exe" OR Image="*\\diskshadow.exe") OR (OriginalFileName="PowerShell.EXE" OR OriginalFileName="wmic.exe" OR OriginalFileName="VSSADMIN.EXE" OR OriginalFileName="diskshadow.exe")) (CommandLine="*shadow*" CommandLine="*delete*")) OR ((Image="*\\wbadmin.exe" OR OriginalFileName="WBADMIN.EXE") (CommandLine="*delete*" CommandLine="*catalog*" CommandLine="*quiet*"))) OR ((Image="*\\vssadmin.exe" OR OriginalFileName="VSSADMIN.EXE") (CommandLine="*resize*" CommandLine="*shadowstorage*" CommandLine="*unbounded*")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1070 attack.t1490" | eval sigma_title="Shadow Copies Deletion Using Operating Systems Utilities" | eval sigma_description="Shadow Copies deletion using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawn by Java - winevent]
description = Detects shell spawn from Java host process, which could a maintenance task or some kind of exploitation (e.g. log4j exploitation)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\java.exe" New_Process_Name="*\\cmd.exe") NOT (Creator_Process_Name="*build*" Process_Command_Line="*build*")) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Shells Spawn by Java" | eval sigma_description="Detects shell spawn from Java host process, which could a maintenance task or some kind of exploitation (e.g. log4j exploitation)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawn by Java - sysmon]
description = Detects shell spawn from Java host process, which could a maintenance task or some kind of exploitation (e.g. log4j exploitation)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\java.exe" Image="*\\cmd.exe") NOT (ParentImage="*build*" CommandLine="*build*")) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Shells Spawn by Java" | eval sigma_description="Detects shell spawn from Java host process, which could a maintenance task or some kind of exploitation (e.g. log4j exploitation)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell Spawning Suspicious Program - winevent]
description = Detects a suspicious child process of a Windows shell
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\mshta.exe" OR Creator_Process_Name="*\\powershell.exe" OR Creator_Process_Name="*\\rundll32.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\wmiprvse.exe") (New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\nslookup.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\mshta.exe")) NOT ((CurrentDirectory="*\\ccmcache\\*") OR ((ParentCommandLine="*\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\setup-scheduledtask.ps1*" OR ParentCommandLine="*\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\set-selfhealing.ps1*" OR ParentCommandLine="*\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\check-workspacehealth.ps1*" OR ParentCommandLine="*\\nessus_*")) OR (Process_Command_Line="*\\nessus_*"))) | table Process_Command_Line,ParentCommandLine,CurrentDirectory,New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.005 attack.t1059.001 attack.t1218" | eval sigma_title="Windows Shell Spawning Suspicious Program" | eval sigma_description="Detects a suspicious child process of a Windows shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell Spawning Suspicious Program - sysmon]
description = Detects a suspicious child process of a Windows shell
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\mshta.exe" OR ParentImage="*\\powershell.exe" OR ParentImage="*\\rundll32.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\wscript.exe" OR ParentImage="*\\wmiprvse.exe") (Image="*\\schtasks.exe" OR Image="*\\nslookup.exe" OR Image="*\\certutil.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\mshta.exe")) NOT ((CurrentDirectory="*\\ccmcache\\*") OR ((ParentCommandLine="*\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\setup-scheduledtask.ps1*" OR ParentCommandLine="*\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\set-selfhealing.ps1*" OR ParentCommandLine="*\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\check-workspacehealth.ps1*" OR ParentCommandLine="*\\nessus_*")) OR (CommandLine="*\\nessus_*"))) | table CommandLine,ParentCommandLine,CurrentDirectory,Image,ParentImage | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.005 attack.t1059.001 attack.t1218" | eval sigma_title="Windows Shell Spawning Suspicious Program" | eval sigma_description="Detects a suspicious child process of a Windows shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[SILENTTRINITY Stager Execution - winevent]
description = Detects SILENTTRINITY stager use
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Description="*st2stager*") | eval sigma_attack_tags="attack.command_and_control attack.t1071" | eval sigma_title="SILENTTRINITY Stager Execution" | eval sigma_description="Detects SILENTTRINITY stager use"
dispatch.earliest_time = -24h@h
alert.track = 0

[SILENTTRINITY Stager Execution - sysmon]
description = Detects SILENTTRINITY stager use
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="*st2stager*") | eval sigma_attack_tags="attack.command_and_control attack.t1071" | eval sigma_title="SILENTTRINITY Stager Execution" | eval sigma_description="Detects SILENTTRINITY stager use"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detected Windows Software Discovery - winevent]
description = Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*query*" Process_Command_Line="*\\software\\*" Process_Command_Line="*/v*" Process_Command_Line="*svcversion*") | eval sigma_attack_tags="attack.discovery attack.t1518" | eval sigma_title="Detected Windows Software Discovery" | eval sigma_description="Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detected Windows Software Discovery - sysmon]
description = Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" CommandLine="*query*" CommandLine="*\\software\\*" CommandLine="*/v*" CommandLine="*svcversion*") | eval sigma_attack_tags="attack.discovery attack.t1518" | eval sigma_title="Detected Windows Software Discovery" | eval sigma_description="Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via SoundRecorder - winevent]
description = Detect attacker collecting audio via SoundRecorder application.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\SoundRecorder.exe" Process_Command_Line="*/FILE*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via SoundRecorder" | eval sigma_description="Detect attacker collecting audio via SoundRecorder application."
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via SoundRecorder - sysmon]
description = Detect attacker collecting audio via SoundRecorder application.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\SoundRecorder.exe" CommandLine="*/FILE*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via SoundRecorder" | eval sigma_description="Detect attacker collecting audio via SoundRecorder application."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible SPN Enumeration - winevent]
description = Detects Service Principal Name Enumeration used for Kerberoasting
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\setspn.exe" OR (Description="*Query or reset the computer*" Description="*SPN attribute*")) Process_Command_Line="*-q*") | eval sigma_attack_tags="attack.credential_access attack.t1558.003" | eval sigma_title="Possible SPN Enumeration" | eval sigma_description="Detects Service Principal Name Enumeration used for Kerberoasting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible SPN Enumeration - sysmon]
description = Detects Service Principal Name Enumeration used for Kerberoasting
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\setspn.exe" OR (Description="*Query or reset the computer*" Description="*SPN attribute*")) CommandLine="*-q*") | eval sigma_attack_tags="attack.credential_access attack.t1558.003" | eval sigma_title="Possible SPN Enumeration" | eval sigma_description="Detects Service Principal Name Enumeration used for Kerberoasting"
dispatch.earliest_time = -24h@h
alert.track = 0

[VeeamBackup Database Credentials Dump - winevent]
description = Detects dump of credentials in VeeamBackup dbo
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sqlcmd.exe" Process_Command_Line="*SELECT*" Process_Command_Line="*TOP*" Process_Command_Line="*[VeeamBackup].[dbo].[Credentials]*") | eval sigma_attack_tags="attack.collection attack.t1005" | eval sigma_title="VeeamBackup Database Credentials Dump" | eval sigma_description="Detects dump of credentials in VeeamBackup dbo"
dispatch.earliest_time = -24h@h
alert.track = 0

[VeeamBackup Database Credentials Dump - sysmon]
description = Detects dump of credentials in VeeamBackup dbo
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sqlcmd.exe" CommandLine="*SELECT*" CommandLine="*TOP*" CommandLine="*[VeeamBackup].[dbo].[Credentials]*") | eval sigma_attack_tags="attack.collection attack.t1005" | eval sigma_title="VeeamBackup Database Credentials Dump" | eval sigma_description="Detects dump of credentials in VeeamBackup dbo"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sticky-Key Backdoor Copy Cmd.exe - winevent]
description = By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system. When the sticky keys are 'activated' the privilleged shell is launched.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="copy /y C:\\windows\\system32\\cmd.exe C:\\windows\\system32\\sethc.exe") | table Process_Command_Line,ParentProcess | eval sigma_attack_tags="attack.t1546.008 attack.privilege_escalation" | eval sigma_title="Sticky-Key Backdoor Copy Cmd.exe" | eval sigma_description="By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system. When the sticky keys are 'activated' the privilleged shell is launched."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sticky-Key Backdoor Copy Cmd.exe - sysmon]
description = By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system. When the sticky keys are 'activated' the privilleged shell is launched.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="copy /y C:\\windows\\system32\\cmd.exe C:\\windows\\system32\\sethc.exe") | table CommandLine,ParentProcess | eval sigma_attack_tags="attack.t1546.008 attack.privilege_escalation" | eval sigma_title="Sticky-Key Backdoor Copy Cmd.exe" | eval sigma_description="By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system. When the sticky keys are 'activated' the privilleged shell is launched."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sticky Key Like Backdoor Usage - winevent]
description = Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\winlogon.exe" New_Process_Name="*\\cmd.exe" (Process_Command_Line="*sethc.exe*" OR Process_Command_Line="*utilman.exe*" OR Process_Command_Line="*osk.exe*" OR Process_Command_Line="*Magnify.exe*" OR Process_Command_Line="*Narrator.exe*" OR Process_Command_Line="*DisplaySwitch.exe*")) | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1546.008 car.2014-11-003 car.2014-11-008" | eval sigma_title="Sticky Key Like Backdoor Usage" | eval sigma_description="Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sticky Key Like Backdoor Usage - sysmon]
description = Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\winlogon.exe" Image="*\\cmd.exe" (CommandLine="*sethc.exe*" OR CommandLine="*utilman.exe*" OR CommandLine="*osk.exe*" OR CommandLine="*Magnify.exe*" OR CommandLine="*Narrator.exe*" OR CommandLine="*DisplaySwitch.exe*")) | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1546.008 car.2014-11-003 car.2014-11-008" | eval sigma_title="Sticky Key Like Backdoor Usage" | eval sigma_description="Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via stordiag.exe - winevent]
description = Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\stordiag.exe" (New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\systeminfo.exe" OR New_Process_Name="*\\fltmc.exe")) NOT ((Creator_Process_Name="c:\\windows\\system32\\*" OR Creator_Process_Name="c:\\windows\\syswow64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Execution via stordiag.exe" | eval sigma_description="Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via stordiag.exe - sysmon]
description = Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\stordiag.exe" (Image="*\\schtasks.exe" OR Image="*\\systeminfo.exe" OR Image="*\\fltmc.exe")) NOT ((ParentImage="c:\\windows\\system32\\*" OR ParentImage="c:\\windows\\syswow64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Execution via stordiag.exe" | eval sigma_description="Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Auditpol Usage - winevent]
description = Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\auditpol.exe" (Process_Command_Line="*disable*" OR Process_Command_Line="*clear*" OR Process_Command_Line="*remove*" OR Process_Command_Line="*restore*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspicious Auditpol Usage" | eval sigma_description="Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Auditpol Usage - sysmon]
description = Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\auditpol.exe" (CommandLine="*disable*" OR CommandLine="*clear*" OR CommandLine="*remove*" OR CommandLine="*restore*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspicious Auditpol Usage" | eval sigma_description="Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor."
dispatch.earliest_time = -24h@h
alert.track = 0

[Compress Data and Lock With Password for Exfiltration With 7-ZIP - winevent]
description = An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*7z.exe*" OR Process_Command_Line="*7za.exe*") Process_Command_Line="* -p*" (Process_Command_Line="* a *" OR Process_Command_Line="* u *")) | table Process_Command_Line,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Compress Data and Lock With Password for Exfiltration With 7-ZIP" | eval sigma_description="An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Compress Data and Lock With Password for Exfiltration With 7-ZIP - sysmon]
description = An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*7z.exe*" OR CommandLine="*7za.exe*") CommandLine="* -p*" (CommandLine="* a *" OR CommandLine="* u *")) | table CommandLine,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Compress Data and Lock With Password for Exfiltration With 7-ZIP" | eval sigma_description="An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Local Groups Information with WMIC - winevent]
description = Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wmic.exe" OR OriginalFileName="wmic.exe") Process_Command_Line="* group*") | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Local Groups Information with WMIC" | eval sigma_description="Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Get Local Groups Information with WMIC - sysmon]
description = Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wmic.exe" OR OriginalFileName="wmic.exe") CommandLine="* group*") | eval sigma_attack_tags="attack.discovery attack.t1069.001" | eval sigma_title="Suspicious Get Local Groups Information with WMIC" | eval sigma_description="Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add User to Remote Desktop Users Group - winevent]
description = Detects suspicious command line in which a user gets added to the local Remote Desktop Users group
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*net *" Process_Command_Line="*localgroup*" Process_Command_Line="*Remote Desktop Users*" Process_Command_Line="*/add*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1133 attack.t1136.001 attack.lateral_movement attack.t1021.001" | eval sigma_title="Suspicious Add User to Remote Desktop Users Group" | eval sigma_description="Detects suspicious command line in which a user gets added to the local Remote Desktop Users group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add User to Remote Desktop Users Group - sysmon]
description = Detects suspicious command line in which a user gets added to the local Remote Desktop Users group
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*net *" CommandLine="*localgroup*" CommandLine="*Remote Desktop Users*" CommandLine="*/add*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1133 attack.t1136.001 attack.lateral_movement attack.t1021.001" | eval sigma_title="Suspicious Add User to Remote Desktop Users Group" | eval sigma_description="Detects suspicious command line in which a user gets added to the local Remote Desktop Users group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdFind Enumerate - winevent]
description = Detects the execution of a AdFind for enumeration
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\adfind.exe" ((Process_Command_Line="*lockoutduration*" OR Process_Command_Line="*lockoutthreshold*" OR Process_Command_Line="*lockoutobservationwindow*" OR Process_Command_Line="*maxpwdage*" OR Process_Command_Line="*minpwdage*" OR Process_Command_Line="*minpwdlength*" OR Process_Command_Line="*pwdhistorylength*" OR Process_Command_Line="*pwdproperties*") OR Process_Command_Line="*-sc admincountdmp*" OR Process_Command_Line="*-sc exchaddresses*")) | eval sigma_attack_tags="attack.discovery attack.t1087.002" | eval sigma_title="Suspicious AdFind Enumerate" | eval sigma_description="Detects the execution of a AdFind for enumeration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdFind Enumerate - sysmon]
description = Detects the execution of a AdFind for enumeration
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\adfind.exe" ((CommandLine="*lockoutduration*" OR CommandLine="*lockoutthreshold*" OR CommandLine="*lockoutobservationwindow*" OR CommandLine="*maxpwdage*" OR CommandLine="*minpwdage*" OR CommandLine="*minpwdlength*" OR CommandLine="*pwdhistorylength*" OR CommandLine="*pwdproperties*") OR CommandLine="*-sc admincountdmp*" OR CommandLine="*-sc exchaddresses*")) | eval sigma_attack_tags="attack.discovery attack.t1087.002" | eval sigma_title="Suspicious AdFind Enumerate" | eval sigma_description="Detects the execution of a AdFind for enumeration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdFind Execution - winevent]
description = Detects the execution of a AdFind for Active Directory enumeration
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*objectcategory*" OR Process_Command_Line="*trustdmp*" OR Process_Command_Line="*dcmodes*" OR Process_Command_Line="*dclist*" OR Process_Command_Line="*computers_pwdnotreqd*") New_Process_Name="*\\adfind.exe") | eval sigma_attack_tags="attack.discovery attack.t1018 attack.t1087.002 attack.t1482 attack.t1069.002" | eval sigma_title="Suspicious AdFind Execution" | eval sigma_description="Detects the execution of a AdFind for Active Directory enumeration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdFind Execution - sysmon]
description = Detects the execution of a AdFind for Active Directory enumeration
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*objectcategory*" OR CommandLine="*trustdmp*" OR CommandLine="*dcmodes*" OR CommandLine="*dclist*" OR CommandLine="*computers_pwdnotreqd*") Image="*\\adfind.exe") | eval sigma_attack_tags="attack.discovery attack.t1018 attack.t1087.002 attack.t1482 attack.t1069.002" | eval sigma_title="Suspicious AdFind Execution" | eval sigma_description="Detects the execution of a AdFind for Active Directory enumeration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdvancedRun Runas Priv User - winevent]
description = Detects the execution of AdvancedRun utitlity in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*/EXEFilename*" OR Process_Command_Line="*/CommandLine*") ((Process_Command_Line="* /RunAs 8 *" OR Process_Command_Line="* /RunAs 4 *" OR Process_Command_Line="* /RunAs 10 *" OR Process_Command_Line="* /RunAs 11 *") OR (Process_Command_Line="*/RunAs 8" OR Process_Command_Line="*/RunAs 4" OR Process_Command_Line="*/RunAs 10" OR Process_Command_Line="*/RunAs 11"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious AdvancedRun Runas Priv User" | eval sigma_description="Detects the execution of AdvancedRun utitlity in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdvancedRun Runas Priv User - sysmon]
description = Detects the execution of AdvancedRun utitlity in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*/EXEFilename*" OR CommandLine="*/CommandLine*") ((CommandLine="* /RunAs 8 *" OR CommandLine="* /RunAs 4 *" OR CommandLine="* /RunAs 10 *" OR CommandLine="* /RunAs 11 *") OR (CommandLine="*/RunAs 8" OR CommandLine="*/RunAs 4" OR CommandLine="*/RunAs 10" OR CommandLine="*/RunAs 11"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious AdvancedRun Runas Priv User" | eval sigma_description="Detects the execution of AdvancedRun utitlity in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdvancedRun Execution - winevent]
description = Detects the execution of AdvancedRun utitlity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="AdvancedRun.exe" OR (Process_Command_Line="* /EXEFilename *" Process_Command_Line="* /Run*") OR (Process_Command_Line="* /WindowState 0*" Process_Command_Line="* /RunAs *" Process_Command_Line="* /CommandLine *"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious AdvancedRun Execution" | eval sigma_description="Detects the execution of AdvancedRun utitlity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious AdvancedRun Execution - sysmon]
description = Detects the execution of AdvancedRun utitlity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="AdvancedRun.exe" OR (CommandLine="* /EXEFilename *" CommandLine="* /Run*") OR (CommandLine="* /WindowState 0*" CommandLine="* /RunAs *" CommandLine="* /CommandLine *"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious AdvancedRun Execution" | eval sigma_description="Detects the execution of AdvancedRun utitlity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusable Invoke-ATHRemoteFXvGPUDisablementCommand - winevent]
description = RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Invoke-ATHRemoteFXvGPUDisablementCommand *" (Process_Command_Line="*-ModuleName *" OR Process_Command_Line="*-ModulePath *" OR Process_Command_Line="*-ScriptBlock *" OR Process_Command_Line="*-RemoteFXvGPUDisablementFilePath*")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusable Invoke-ATHRemoteFXvGPUDisablementCommand" | eval sigma_description="RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusable Invoke-ATHRemoteFXvGPUDisablementCommand - sysmon]
description = RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Invoke-ATHRemoteFXvGPUDisablementCommand *" (CommandLine="*-ModuleName *" OR CommandLine="*-ModulePath *" OR CommandLine="*-ScriptBlock *" OR CommandLine="*-RemoteFXvGPUDisablementFilePath*")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusable Invoke-ATHRemoteFXvGPUDisablementCommand" | eval sigma_description="RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Base64 Encoded Powershell Invoke - winevent]
description = Detects base64 encoded powershell 'Invoke-' call
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*SQBuAHYAbwBrAGUALQ*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0A*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtA*") NOT (((Process_Command_Line="*SQBuAHYAbwBrAGUALQBCAGwAbwBvAGQASABvAHUAbgBkA*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0AQgBsAG8AbwBkAEgAbwB1AG4AZA*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtAEIAbABvAG8AZABIAG8AdQBuAGQA*" OR Process_Command_Line="*SQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoA*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0ATQBpAG0AaQBrAGEAdAB6A*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAeg*" OR Process_Command_Line="*SQBuAHYAbwBrAGUALQBXAE0ASQBFAHgAZQBjA*" OR Process_Command_Line="*kAbgB2AG8AawBlAC0AVwBNAEkARQB4AGUAYw*" OR Process_Command_Line="*JAG4AdgBvAGsAZQAtAFcATQBJAEUAeABlAGMA*")))) | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Suspicious Base64 Encoded Powershell Invoke" | eval sigma_description="Detects base64 encoded powershell 'Invoke-' call"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Base64 Encoded Powershell Invoke - sysmon]
description = Detects base64 encoded powershell 'Invoke-' call
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*SQBuAHYAbwBrAGUALQ*" OR CommandLine="*kAbgB2AG8AawBlAC0A*" OR CommandLine="*JAG4AdgBvAGsAZQAtA*") NOT (((CommandLine="*SQBuAHYAbwBrAGUALQBCAGwAbwBvAGQASABvAHUAbgBkA*" OR CommandLine="*kAbgB2AG8AawBlAC0AQgBsAG8AbwBkAEgAbwB1AG4AZA*" OR CommandLine="*JAG4AdgBvAGsAZQAtAEIAbABvAG8AZABIAG8AdQBuAGQA*" OR CommandLine="*SQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoA*" OR CommandLine="*kAbgB2AG8AawBlAC0ATQBpAG0AaQBrAGEAdAB6A*" OR CommandLine="*JAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAeg*" OR CommandLine="*SQBuAHYAbwBrAGUALQBXAE0ASQBFAHgAZQBjA*" OR CommandLine="*kAbgB2AG8AawBlAC0AVwBNAEkARQB4AGUAYw*" OR CommandLine="*JAG4AdgBvAGsAZQAtAFcATQBJAEUAeABlAGMA*")))) | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Suspicious Base64 Encoded Powershell Invoke" | eval sigma_description="Detects base64 encoded powershell 'Invoke-' call"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded Obfuscated LOAD String - winevent]
description = Detects suspicious base64 encoded and obbfuscated LOAD string often used for reflection.assembly load
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*OgA6ACgAIgBMACIAKwAiAG8AYQBkACIAKQ*" OR Process_Command_Line="*oAOgAoACIATAAiACsAIgBvAGEAZAAiACkA*" OR Process_Command_Line="*6ADoAKAAiAEwAIgArACIAbwBhAGQAIgApA*" OR Process_Command_Line="*OgA6ACgAIgBMAG8AIgArACIAYQBkACIAKQ*" OR Process_Command_Line="*oAOgAoACIATABvACIAKwAiAGEAZAAiACkA*" OR Process_Command_Line="*6ADoAKAAiAEwAbwAiACsAIgBhAGQAIgApA*" OR Process_Command_Line="*OgA6ACgAIgBMAG8AYQAiACsAIgBkACIAKQ*" OR Process_Command_Line="*oAOgAoACIATABvAGEAIgArACIAZAAiACkA*" OR Process_Command_Line="*6ADoAKAAiAEwAbwBhACIAKwAiAGQAIgApA*" OR Process_Command_Line="*OgA6ACgAJwBMACcAKwAnAG8AYQBkACcAKQ*" OR Process_Command_Line="*oAOgAoACcATAAnACsAJwBvAGEAZAAnACkA*" OR Process_Command_Line="*6ADoAKAAnAEwAJwArACcAbwBhAGQAJwApA*" OR Process_Command_Line="*OgA6ACgAJwBMAG8AJwArACcAYQBkACcAKQ*" OR Process_Command_Line="*oAOgAoACcATABvACcAKwAnAGEAZAAnACkA*" OR Process_Command_Line="*6ADoAKAAnAEwAbwAnACsAJwBhAGQAJwApA*" OR Process_Command_Line="*OgA6ACgAJwBMAG8AYQAnACsAJwBkACcAKQ*" OR Process_Command_Line="*oAOgAoACcATABvAGEAJwArACcAZAAnACkA*" OR Process_Command_Line="*6ADoAKAAnAEwAbwBhACcAKwAnAGQAJwApA*")) | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Suspicious Encoded Obfuscated LOAD String" | eval sigma_description="Detects suspicious base64 encoded and obbfuscated LOAD string often used for reflection.assembly load"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded Obfuscated LOAD String - sysmon]
description = Detects suspicious base64 encoded and obbfuscated LOAD string often used for reflection.assembly load
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*OgA6ACgAIgBMACIAKwAiAG8AYQBkACIAKQ*" OR CommandLine="*oAOgAoACIATAAiACsAIgBvAGEAZAAiACkA*" OR CommandLine="*6ADoAKAAiAEwAIgArACIAbwBhAGQAIgApA*" OR CommandLine="*OgA6ACgAIgBMAG8AIgArACIAYQBkACIAKQ*" OR CommandLine="*oAOgAoACIATABvACIAKwAiAGEAZAAiACkA*" OR CommandLine="*6ADoAKAAiAEwAbwAiACsAIgBhAGQAIgApA*" OR CommandLine="*OgA6ACgAIgBMAG8AYQAiACsAIgBkACIAKQ*" OR CommandLine="*oAOgAoACIATABvAGEAIgArACIAZAAiACkA*" OR CommandLine="*6ADoAKAAiAEwAbwBhACIAKwAiAGQAIgApA*" OR CommandLine="*OgA6ACgAJwBMACcAKwAnAG8AYQBkACcAKQ*" OR CommandLine="*oAOgAoACcATAAnACsAJwBvAGEAZAAnACkA*" OR CommandLine="*6ADoAKAAnAEwAJwArACcAbwBhAGQAJwApA*" OR CommandLine="*OgA6ACgAJwBMAG8AJwArACcAYQBkACcAKQ*" OR CommandLine="*oAOgAoACcATABvACcAKwAnAGEAZAAnACkA*" OR CommandLine="*6ADoAKAAnAEwAbwAnACsAJwBhAGQAJwApA*" OR CommandLine="*OgA6ACgAJwBMAG8AYQAnACsAJwBkACcAKQ*" OR CommandLine="*oAOgAoACcATABvAGEAJwArACcAZAAnACkA*" OR CommandLine="*6ADoAKAAnAEwAbwBhACcAKwAnAGQAJwApA*")) | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="Suspicious Encoded Obfuscated LOAD String" | eval sigma_description="Detects suspicious base64 encoded and obbfuscated LOAD string often used for reflection.assembly load"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Ransomware or Unauthorized MBR Modifications - winevent]
description = Detects, possibly, malicious unauthorized usage of bcdedit.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bcdedit.exe" (Process_Command_Line="*delete*" OR Process_Command_Line="*deletevalue*" OR Process_Command_Line="*import*" OR Process_Command_Line="*safeboot*" OR Process_Command_Line="*network*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.persistence attack.t1542.003" | eval sigma_title="Possible Ransomware or Unauthorized MBR Modifications" | eval sigma_description="Detects, possibly, malicious unauthorized usage of bcdedit.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Ransomware or Unauthorized MBR Modifications - sysmon]
description = Detects, possibly, malicious unauthorized usage of bcdedit.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bcdedit.exe" (CommandLine="*delete*" OR CommandLine="*deletevalue*" OR CommandLine="*import*" OR CommandLine="*safeboot*" OR CommandLine="*network*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.persistence attack.t1542.003" | eval sigma_title="Possible Ransomware or Unauthorized MBR Modifications" | eval sigma_description="Detects, possibly, malicious unauthorized usage of bcdedit.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Bginfo - winevent]
description = Execute VBscript code that is referenced within the *.bgi file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bginfo.exe" Process_Command_Line="*/popup*" Process_Command_Line="*/nolicprompt*") | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Application Whitelisting Bypass via Bginfo" | eval sigma_description="Execute VBscript code that is referenced within the *.bgi file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Bginfo - sysmon]
description = Execute VBscript code that is referenced within the *.bgi file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bginfo.exe" CommandLine="*/popup*" CommandLine="*/nolicprompt*") | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Application Whitelisting Bypass via Bginfo" | eval sigma_description="Execute VBscript code that is referenced within the *.bgi file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitstransfer via PowerShell - winevent]
description = Detects transferring files from system on a server bitstransfer Powershell cmdlets
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\pwsh.exe") (Process_Command_Line="*Get-BitsTransfer*" OR Process_Command_Line="*Add-BitsFile*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.exfiltration attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitstransfer via PowerShell" | eval sigma_description="Detects transferring files from system on a server bitstransfer Powershell cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitstransfer via PowerShell - sysmon]
description = Detects transferring files from system on a server bitstransfer Powershell cmdlets
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\pwsh.exe") (CommandLine="*Get-BitsTransfer*" OR CommandLine="*Add-BitsFile*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.exfiltration attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitstransfer via PowerShell" | eval sigma_description="Detects transferring files from system on a server bitstransfer Powershell cmdlets"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Calculator Usage - winevent]
description = Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\calc.exe *" OR (New_Process_Name="*\\calc.exe" NOT (New_Process_Name="*\\Windows\\Sys*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Calculator Usage" | eval sigma_description="Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Calculator Usage - sysmon]
description = Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\calc.exe *" OR (Image="*\\calc.exe" NOT (Image="*\\Windows\\Sys*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Calculator Usage" | eval sigma_description="Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner - winevent]
description = Launch 64-bit shellcode from a debugger script file using cdb.exe.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\cdb.exe" OR OriginalFileName="CDB.Exe") (Process_Command_Line="* -c *" OR Process_Command_Line="* -cf *")) | eval sigma_attack_tags="attack.execution attack.t1106 attack.defense_evasion attack.t1218 attack.t1127" | eval sigma_title="Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner" | eval sigma_description="Launch 64-bit shellcode from a debugger script file using cdb.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner - sysmon]
description = Launch 64-bit shellcode from a debugger script file using cdb.exe.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\cdb.exe" OR OriginalFileName="CDB.Exe") (CommandLine="* -c *" OR CommandLine="* -cf *")) | eval sigma_attack_tags="attack.execution attack.t1106 attack.defense_evasion attack.t1218 attack.t1127" | eval sigma_title="Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner" | eval sigma_description="Launch 64-bit shellcode from a debugger script file using cdb.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certutil Command - winevent]
description = Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -decode *" OR Process_Command_Line="* -decodehex *" OR Process_Command_Line="* -urlcache *" OR Process_Command_Line="* -verifyctl *" OR Process_Command_Line="* -encode *" OR Process_Command_Line="* /decode *" OR Process_Command_Line="* /decodehex *" OR Process_Command_Line="* /urlcache *" OR Process_Command_Line="* /verifyctl *" OR Process_Command_Line="* /encode *") OR (New_Process_Name="*\\certutil.exe" (Process_Command_Line="*URL*" OR Process_Command_Line="*ping*")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.command_and_control attack.t1105 attack.s0160 attack.g0007 attack.g0010 attack.g0045 attack.g0049 attack.g0075 attack.g0096" | eval sigma_title="Suspicious Certutil Command" | eval sigma_description="Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certutil Command - sysmon]
description = Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -decode *" OR CommandLine="* -decodehex *" OR CommandLine="* -urlcache *" OR CommandLine="* -verifyctl *" OR CommandLine="* -encode *" OR CommandLine="* /decode *" OR CommandLine="* /decodehex *" OR CommandLine="* /urlcache *" OR CommandLine="* /verifyctl *" OR CommandLine="* /encode *") OR (Image="*\\certutil.exe" (CommandLine="*URL*" OR CommandLine="*ping*")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.command_and_control attack.t1105 attack.s0160 attack.g0007 attack.g0010 attack.g0045 attack.g0049 attack.g0075 attack.g0096" | eval sigma_title="Suspicious Certutil Command" | eval sigma_description="Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certutil Encode - winevent]
description = Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\certutil.exe" Process_Command_Line="*-f*" Process_Command_Line="*-encode*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="Certutil Encode" | eval sigma_description="Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certutil Encode - sysmon]
description = Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\certutil.exe" CommandLine="*-f*" CommandLine="*-encode*") | eval sigma_attack_tags="attack.defense_evasion attack.t1027" | eval sigma_title="Certutil Encode" | eval sigma_description="Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Child Process Created as System - winevent]
description = Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((ParentUser="NT AUTHORITY\\NETWORK SERVICE" OR ParentUser="NT AUTHORITY\\LOCAL SERVICE" OR ParentUser="AUTORITE NT\\") (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*") (Account_Name="*\\SYSTEM" OR Account_Name="*\\СИСТЕМА") IntegrityLevel="System") NOT (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*DavSetCookie*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.002" | eval sigma_title="Suspicious Child Process Created as System" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Child Process Created as System - sysmon]
description = Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentUser="NT AUTHORITY\\NETWORK SERVICE" OR ParentUser="NT AUTHORITY\\LOCAL SERVICE" OR ParentUser="AUTORITE NT\\") (User="*AUTHORI*" OR User="*AUTORI*") (User="*\\SYSTEM" OR User="*\\СИСТЕМА") IntegrityLevel="System") NOT (Image="*\\rundll32.exe" CommandLine="*DavSetCookie*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134.002" | eval sigma_title="Suspicious Child Process Created as System" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Commandline Escape - winevent]
description = Detects suspicious process that use escape characters
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*h^t^t^p*" OR Process_Command_Line="*h\"t\"t\"p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="Suspicious Commandline Escape" | eval sigma_description="Detects suspicious process that use escape characters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Commandline Escape - sysmon]
description = Detects suspicious process that use escape characters
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*h^t^t^p*" OR CommandLine="*h\"t\"t\"p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="Suspicious Commandline Escape" | eval sigma_description="Detects suspicious process that use escape characters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Execution with Suspicious URL and AppData Strings - winevent]
description = Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmd.exe" Process_Command_Line="*http*" Process_Command_Line="*://*" Process_Command_Line="*%AppData%*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.001 attack.command_and_control attack.t1105" | eval sigma_title="Command Line Execution with Suspicious URL and AppData Strings" | eval sigma_description="Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Execution with Suspicious URL and AppData Strings - sysmon]
description = Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmd.exe" CommandLine="*http*" CommandLine="*://*" CommandLine="*%AppData%*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.003 attack.t1059.001 attack.command_and_control attack.t1105" | eval sigma_title="Command Line Execution with Suspicious URL and AppData Strings" | eval sigma_description="Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Volume Shadow Copy - winevent]
description = Detects a copy execution that targets a shadow copy (sometimes used to copy registry hives that are in use)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*copy \\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Copy from Volume Shadow Copy" | eval sigma_description="Detects a copy execution that targets a shadow copy (sometimes used to copy registry hives that are in use)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Volume Shadow Copy - sysmon]
description = Detects a copy execution that targets a shadow copy (sometimes used to copy registry hives that are in use)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*copy \\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Copy from Volume Shadow Copy" | eval sigma_description="Detects a copy execution that targets a shadow copy (sometimes used to copy registry hives that are in use)"
dispatch.earliest_time = -24h@h
alert.track = 0

[CHCP CodePage Locale Lookup - winevent]
description = Detects use of chcp to look up the system locale value as part of host discovery
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\cmd.exe" ParentCommandLine="* /c *" New_Process_Name="*\\chcp.com" (Process_Command_Line="*chcp" OR Process_Command_Line="*chcp " OR Process_Command_Line="*chcp  ")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1614.001" | eval sigma_title="CHCP CodePage Locale Lookup" | eval sigma_description="Detects use of chcp to look up the system locale value as part of host discovery"
dispatch.earliest_time = -24h@h
alert.track = 0

[CHCP CodePage Locale Lookup - sysmon]
description = Detects use of chcp to look up the system locale value as part of host discovery
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\cmd.exe" ParentCommandLine="* /c *" Image="*\\chcp.com" (CommandLine="*chcp" OR CommandLine="*chcp " OR CommandLine="*chcp  ")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1614.001" | eval sigma_title="CHCP CodePage Locale Lookup" | eval sigma_description="Detects use of chcp to look up the system locale value as part of host discovery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Code Page Switch - winevent]
description = Detects a code page switch in command line or batch scripts to a rare language
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\chcp.com" (Process_Command_Line="* 936" OR Process_Command_Line="* 1258")) | table ParentCommandLine | eval sigma_attack_tags="attack.t1036 attack.defense_evasion" | eval sigma_title="Suspicious Code Page Switch" | eval sigma_description="Detects a code page switch in command line or batch scripts to a rare language"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Code Page Switch - sysmon]
description = Detects a code page switch in command line or batch scripts to a rare language
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\chcp.com" (CommandLine="* 936" OR CommandLine="* 1258")) | table ParentCommandLine | eval sigma_attack_tags="attack.t1036 attack.defense_evasion" | eval sigma_title="Suspicious Code Page Switch" | eval sigma_description="Detects a code page switch in command line or batch scripts to a rare language"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Characters in CommandLine - winevent]
description = Detects suspicious Unicode characters in the command line, which could be a sign of obfuscation or defense evasion
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*ˣ*" OR Process_Command_Line="*˪*" OR Process_Command_Line="*ˢ*") OR (Process_Command_Line="*∕*" OR Process_Command_Line="*⁄*") OR (Process_Command_Line="*―*" OR Process_Command_Line="*—*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Characters in CommandLine" | eval sigma_description="Detects suspicious Unicode characters in the command line, which could be a sign of obfuscation or defense evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Characters in CommandLine - sysmon]
description = Detects suspicious Unicode characters in the command line, which could be a sign of obfuscation or defense evasion
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*ˣ*" OR CommandLine="*˪*" OR CommandLine="*ˢ*") OR (CommandLine="*∕*" OR CommandLine="*⁄*") OR (CommandLine="*―*" OR CommandLine="*—*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Characters in CommandLine" | eval sigma_description="Detects suspicious Unicode characters in the command line, which could be a sign of obfuscation or defense evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity with Net Command - winevent]
description = Detects a set of commands often used in recon stages by different attack groups
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="tasklist" OR Process_Command_Line="net time" OR Process_Command_Line="systeminfo" OR Process_Command_Line="whoami" OR Process_Command_Line="nbtstat" OR Process_Command_Line="net start" OR Process_Command_Line="qprocess" OR Process_Command_Line="nslookup" OR Process_Command_Line="hostname.exe" OR Process_Command_Line="netstat -an") OR (Process_Command_Line="*\\net1 start" OR Process_Command_Line="*\\net1 user /domain" OR Process_Command_Line="*\\net1 group /domain" OR Process_Command_Line="*\\net1 group \"domain admins\" /domain" OR Process_Command_Line="*\\net1 group \"Exchange Trusted Subsystem\" /domain" OR Process_Command_Line="*\\net1 accounts /domain" OR Process_Command_Line="*\\net1 user net localgroup administrators"))) | eventstats count as val by Process_Command_Line| search val > 4 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Reconnaissance Activity with Net Command" | eval sigma_description="Detects a set of commands often used in recon stages by different attack groups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity with Net Command - sysmon]
description = Detects a set of commands often used in recon stages by different attack groups
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="tasklist" OR CommandLine="net time" OR CommandLine="systeminfo" OR CommandLine="whoami" OR CommandLine="nbtstat" OR CommandLine="net start" OR CommandLine="qprocess" OR CommandLine="nslookup" OR CommandLine="hostname.exe" OR CommandLine="netstat -an") OR (CommandLine="*\\net1 start" OR CommandLine="*\\net1 user /domain" OR CommandLine="*\\net1 group /domain" OR CommandLine="*\\net1 group \"domain admins\" /domain" OR CommandLine="*\\net1 group \"Exchange Trusted Subsystem\" /domain" OR CommandLine="*\\net1 accounts /domain" OR CommandLine="*\\net1 user net localgroup administrators"))) | eventstats count as val by CommandLine| search val > 4 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Reconnaissance Activity with Net Command" | eval sigma_description="Detects a set of commands often used in recon stages by different attack groups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Compression Tool Parameters - winevent]
description = Detects suspicious command line arguments of common data compression tools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((OriginalFileName="7z*.exe" OR OriginalFileName="*rar.exe" OR OriginalFileName="*Command*Line*RAR*") (Process_Command_Line="* -p*" OR Process_Command_Line="* -ta*" OR Process_Command_Line="* -tb*" OR Process_Command_Line="* -sdel*" OR Process_Command_Line="* -dw*" OR Process_Command_Line="* -hp*")) NOT (Creator_Process_Name="C:\\Program*")) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Suspicious Compression Tool Parameters" | eval sigma_description="Detects suspicious command line arguments of common data compression tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Compression Tool Parameters - sysmon]
description = Detects suspicious command line arguments of common data compression tools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((OriginalFileName="7z*.exe" OR OriginalFileName="*rar.exe" OR OriginalFileName="*Command*Line*RAR*") (CommandLine="* -p*" OR CommandLine="* -ta*" OR CommandLine="* -tb*" OR CommandLine="* -sdel*" OR CommandLine="* -dw*" OR CommandLine="* -hp*")) NOT (ParentImage="C:\\Program*")) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Suspicious Compression Tool Parameters" | eval sigma_description="Detects suspicious command line arguments of common data compression tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Comsvcs DLL - winevent]
description = Detects process memory dump via comsvcs.dll and rundll32
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") (Process_Command_Line="*comsvcs*" Process_Command_Line="*MiniDump*" Process_Command_Line="*full*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.credential_access attack.t1003.001" | eval sigma_title="Process Dump via Comsvcs DLL" | eval sigma_description="Detects process memory dump via comsvcs.dll and rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Comsvcs DLL - sysmon]
description = Detects process memory dump via comsvcs.dll and rundll32
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") (CommandLine="*comsvcs*" CommandLine="*MiniDump*" CommandLine="*full*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.credential_access attack.t1003.001" | eval sigma_title="Process Dump via Comsvcs DLL" | eval sigma_description="Detects process memory dump via comsvcs.dll and rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Conhost Legacy Option - winevent]
description = ForceV1 asks for information directly from the kernel space. Conhost connects to the console application
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*conhost.exe*" Process_Command_Line="*0xffffffff*" Process_Command_Line="*-ForceV1*") | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Conhost Legacy Option" | eval sigma_description="ForceV1 asks for information directly from the kernel space. Conhost connects to the console application"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Conhost Legacy Option - sysmon]
description = ForceV1 asks for information directly from the kernel space. Conhost connects to the console application
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*conhost.exe*" CommandLine="*0xffffffff*" CommandLine="*-ForceV1*") | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Conhost Legacy Option" | eval sigma_description="ForceV1 asks for information directly from the kernel space. Conhost connects to the console application"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-40444 Process Pattern - winevent]
description = Detects a suspicious process pattern found in CVE-2021-40444 exploitation
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\control.exe" (Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\powerpnt.exe" OR Creator_Process_Name="*\\excel.exe")) NOT ((Process_Command_Line="*\\control.exe input.dll" OR Process_Command_Line="*\\control.exe\" input.dll"))) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="CVE-2021-40444 Process Pattern" | eval sigma_description="Detects a suspicious process pattern found in CVE-2021-40444 exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2021-40444 Process Pattern - sysmon]
description = Detects a suspicious process pattern found in CVE-2021-40444 exploitation
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\control.exe" (ParentImage="*\\winword.exe" OR ParentImage="*\\powerpnt.exe" OR ParentImage="*\\excel.exe")) NOT ((CommandLine="*\\control.exe input.dll" OR CommandLine="*\\control.exe\" input.dll"))) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="CVE-2021-40444 Process Pattern" | eval sigma_description="Detects a suspicious process pattern found in CVE-2021-40444 exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Control Panel DLL Load - winevent]
description = Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\System32\\control.exe" New_Process_Name="*\\rundll32.exe ") NOT (Process_Command_Line="*Shell32.dll*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Control Panel DLL Load" | eval sigma_description="Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Control Panel DLL Load - sysmon]
description = Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\System32\\control.exe" Image="*\\rundll32.exe ") NOT (CommandLine="*Shell32.dll*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Control Panel DLL Load" | eval sigma_description="Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Admin Share - winevent]
description = Detects a suspicious copy command to or from an Admin share
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\robocopy.exe" OR New_Process_Name="*\\xcopy.exe") OR (New_Process_Name="*\\cmd.exe" Process_Command_Line="*copy*")) OR (New_Process_Name="*\\powershell*" (Process_Command_Line="*copy-item*" OR Process_Command_Line="*copy*" OR Process_Command_Line="*cpi *" OR Process_Command_Line="* cp *"))) (Process_Command_Line="*\\\\\*" Process_Command_Line="*$*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.collection attack.exfiltration attack.t1039 attack.t1048 attack.t1021.002" | eval sigma_title="Copy from Admin Share" | eval sigma_description="Detects a suspicious copy command to or from an Admin share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Admin Share - sysmon]
description = Detects a suspicious copy command to or from an Admin share
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\robocopy.exe" OR Image="*\\xcopy.exe") OR (Image="*\\cmd.exe" CommandLine="*copy*")) OR (Image="*\\powershell*" (CommandLine="*copy-item*" OR CommandLine="*copy*" OR CommandLine="*cpi *" OR CommandLine="* cp *"))) (CommandLine="*\\\\\*" CommandLine="*$*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.collection attack.exfiltration attack.t1039 attack.t1048 attack.t1021.002" | eval sigma_title="Copy from Admin Share" | eval sigma_description="Detects a suspicious copy command to or from an Admin share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Copy From or To System32 - winevent]
description = Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*xcopy*\\System32\\*" OR Process_Command_Line="*cmd.exe*/c*copy*\\System32\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Suspicious Copy From or To System32" | eval sigma_description="Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Copy From or To System32 - sysmon]
description = Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*xcopy*\\System32\\*" OR CommandLine="*cmd.exe*/c*copy*\\System32\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.003" | eval sigma_title="Suspicious Copy From or To System32" | eval sigma_description="Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Covenant Launcher Indicators - winevent]
description = Detects suspicious command lines used in Covenant luanchers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*-Sta*" Process_Command_Line="*-Nop*" Process_Command_Line="*-Window*" Process_Command_Line="*Hidden*" (Process_Command_Line="*-Command*" OR Process_Command_Line="*-EncodedCommand*")) OR (Process_Command_Line="*sv o (New-Object IO.MemorySteam);sv d *" OR Process_Command_Line="*mshta file.hta*" OR Process_Command_Line="*GruntHTTP*" OR Process_Command_Line="*-EncodedCommand cwB2ACAAbwAgA*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.001 attack.t1564.003" | eval sigma_title="Covenant Launcher Indicators" | eval sigma_description="Detects suspicious command lines used in Covenant luanchers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Covenant Launcher Indicators - sysmon]
description = Detects suspicious command lines used in Covenant luanchers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*-Sta*" CommandLine="*-Nop*" CommandLine="*-Window*" CommandLine="*Hidden*" (CommandLine="*-Command*" OR CommandLine="*-EncodedCommand*")) OR (CommandLine="*sv o (New-Object IO.MemorySteam);sv d *" OR CommandLine="*mshta file.hta*" OR CommandLine="*GruntHTTP*" OR CommandLine="*-EncodedCommand cwB2ACAAbwAgA*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059.001 attack.t1564.003" | eval sigma_title="Covenant Launcher Indicators" | eval sigma_description="Detects suspicious command lines used in Covenant luanchers"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Execution - winevent]
description = Detect various execution methods of the CrackMapExec pentesting framework
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1" OR Process_Command_Line="*cmd.exe /C * > \\\\*\\*\\* 2>&1" OR Process_Command_Line="*cmd.exe /C * > *\\Temp\\* 2>&1") (Process_Command_Line="*powershell.exe -exec bypass -noni -nop -w 1 -C \"*" OR Process_Command_Line="*powershell.exe -noni -nop -w 1 -enc *")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1053 attack.t1059.003 attack.t1059.001 attack.s0106" | eval sigma_title="CrackMapExec Command Execution" | eval sigma_description="Detect various execution methods of the CrackMapExec pentesting framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Execution - sysmon]
description = Detect various execution methods of the CrackMapExec pentesting framework
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1" OR CommandLine="*cmd.exe /C * > \\\\*\\*\\* 2>&1" OR CommandLine="*cmd.exe /C * > *\\Temp\\* 2>&1") (CommandLine="*powershell.exe -exec bypass -noni -nop -w 1 -C \"*" OR CommandLine="*powershell.exe -noni -nop -w 1 -enc *")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1053 attack.t1059.003 attack.t1059.001 attack.s0106" | eval sigma_title="CrackMapExec Command Execution" | eval sigma_description="Detect various execution methods of the CrackMapExec pentesting framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Line Flags - winevent]
description = This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -M pe_inject *" OR (Process_Command_Line="* --local-auth*" Process_Command_Line="* -u *" Process_Command_Line="* -x *") OR (Process_Command_Line="* --local-auth*" Process_Command_Line="* -u *" Process_Command_Line="* -p *" Process_Command_Line="* -H 'NTHASH'*") OR (Process_Command_Line="* mssql *" Process_Command_Line="* -u *" Process_Command_Line="* -p *" Process_Command_Line="* -M *" Process_Command_Line="* -d *") OR (Process_Command_Line="* smb *" Process_Command_Line="* -u *" Process_Command_Line="* -H *" Process_Command_Line="* -M *" Process_Command_Line="* -o *") OR (Process_Command_Line="* smb *" Process_Command_Line="* -u *" Process_Command_Line="* -p *" Process_Command_Line="* --local-auth*")) OR (Process_Command_Line="* --local-auth*" Process_Command_Line="* -u *" Process_Command_Line="* -p *" Process_Command_Line="* 10.*" Process_Command_Line="* 192.168.*" Process_Command_Line="*/24 *"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="" | eval sigma_title="CrackMapExec Command Line Flags" | eval sigma_description="This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced."
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Line Flags - sysmon]
description = This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -M pe_inject *" OR (CommandLine="* --local-auth*" CommandLine="* -u *" CommandLine="* -x *") OR (CommandLine="* --local-auth*" CommandLine="* -u *" CommandLine="* -p *" CommandLine="* -H 'NTHASH'*") OR (CommandLine="* mssql *" CommandLine="* -u *" CommandLine="* -p *" CommandLine="* -M *" CommandLine="* -d *") OR (CommandLine="* smb *" CommandLine="* -u *" CommandLine="* -H *" CommandLine="* -M *" CommandLine="* -o *") OR (CommandLine="* smb *" CommandLine="* -u *" CommandLine="* -p *" CommandLine="* --local-auth*")) OR (CommandLine="* --local-auth*" CommandLine="* -u *" CommandLine="* -p *" CommandLine="* 10.*" CommandLine="* 192.168.*" CommandLine="*/24 *"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="" | eval sigma_title="CrackMapExec Command Line Flags" | eval sigma_description="This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced."
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec PowerShell Obfuscation - winevent]
description = The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*powershell.exe*" (Process_Command_Line="*join*split*" OR Process_Command_Line="*( $ShellId[1]+$ShellId[13]+'x')*" OR Process_Command_Line="*( $PSHome[*]+$PSHOME[*]+*" OR Process_Command_Line="*( $env:Public[13]+$env:Public[5]+'x')*" OR Process_Command_Line="*( $env:ComSpec[4,*,25]-Join'')*" OR Process_Command_Line="*[1,3]+'x'-Join'')*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027.005" | eval sigma_title="CrackMapExec PowerShell Obfuscation" | eval sigma_description="The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec PowerShell Obfuscation - sysmon]
description = The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*powershell.exe*" (CommandLine="*join*split*" OR CommandLine="*( $ShellId[1]+$ShellId[13]+'x')*" OR CommandLine="*( $PSHome[*]+$PSHOME[*]+*" OR CommandLine="*( $env:Public[13]+$env:Public[5]+'x')*" OR CommandLine="*( $env:ComSpec[4,*,25]-Join'')*" OR CommandLine="*[1,3]+'x'-Join'')*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027.005" | eval sigma_title="CrackMapExec PowerShell Obfuscation" | eval sigma_description="The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csc.exe Source File Folder - winevent]
description = Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\csc.exe" (Process_Command_Line="*\\AppData\\*" OR Process_Command_Line="*\\Windows\\Temp\\*")) NOT (Creator_Process_Name="C:\\Program Files*" OR (Creator_Process_Name="*\\sdiagnhost.exe" OR Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\choco.exe") OR (ParentCommandLine="*\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027.004" | eval sigma_title="Suspicious Csc.exe Source File Folder" | eval sigma_description="Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csc.exe Source File Folder - sysmon]
description = Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\csc.exe" (CommandLine="*\\AppData\\*" OR CommandLine="*\\Windows\\Temp\\*")) NOT (ParentImage="C:\\Program Files*" OR (ParentImage="*\\sdiagnhost.exe" OR ParentImage="*\\w3wp.exe" OR ParentImage="*\\choco.exe") OR (ParentCommandLine="*\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1027.004" | eval sigma_title="Suspicious Csc.exe Source File Folder" | eval sigma_description="Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Parent of Csc.exe - winevent]
description = Detects a suspicious parent of csc.exe, which could by a sign of payload delivery
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\csc.exe" (Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\mshta.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.defense_evasion attack.t1218.005 attack.t1027.004" | eval sigma_title="Suspicious Parent of Csc.exe" | eval sigma_description="Detects a suspicious parent of csc.exe, which could by a sign of payload delivery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Parent of Csc.exe - sysmon]
description = Detects a suspicious parent of csc.exe, which could by a sign of payload delivery
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\csc.exe" (ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\mshta.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007 attack.defense_evasion attack.t1218.005 attack.t1027.004" | eval sigma_title="Suspicious Parent of Csc.exe" | eval sigma_description="Detects a suspicious parent of csc.exe, which could by a sign of payload delivery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cscript Visual Basic Script Execution - winevent]
description = Adversaries may abuse Visual Basic (VB) for execution
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cscript.exe" Process_Command_Line="*.vbs*") | eval sigma_attack_tags="attack.execution attack.t1059.005" | eval sigma_title="Cscript Visual Basic Script Execution" | eval sigma_description="Adversaries may abuse Visual Basic (VB) for execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cscript Visual Basic Script Execution - sysmon]
description = Adversaries may abuse Visual Basic (VB) for execution
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cscript.exe" CommandLine="*.vbs*") | eval sigma_attack_tags="attack.execution attack.t1059.005" | eval sigma_title="Cscript Visual Basic Script Execution" | eval sigma_description="Adversaries may abuse Visual Basic (VB) for execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csi.exe Usage - winevent]
description = Csi.exe is a signed binary from Microsoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\csi.exe" OR New_Process_Name="*\\rcsi.exe" OR OriginalFileName="csi.exe" OR OriginalFileName="rcsi.exe") Company="Microsoft Corporation") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1072 attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Csi.exe Usage" | eval sigma_description="Csi.exe is a signed binary from Microsoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csi.exe Usage - sysmon]
description = Csi.exe is a signed binary from Microsoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\csi.exe" OR Image="*\\rcsi.exe" OR OriginalFileName="csi.exe" OR OriginalFileName="rcsi.exe") Company="Microsoft Corporation") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1072 attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Csi.exe Usage" | eval sigma_description="Csi.exe is a signed binary from Microsoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Curl Usage on Windows - winevent]
description = Detects a suspicious curl process start on Windows and outputs the requested document to a local file
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\curl.exe" OR Product="The curl executable") ((Process_Command_Line="*\\AppData\\*" OR Process_Command_Line="*\\Users\\Public\\*" OR Process_Command_Line="*\\Temp*" OR Process_Command_Line="*%AppData%*" OR Process_Command_Line="*%Temp%*" OR Process_Command_Line="*%Public%*" OR Process_Command_Line="*\\Desktop*") OR (Process_Command_Line="*.jpg" OR Process_Command_Line="*.jpeg" OR Process_Command_Line="*.png" OR Process_Command_Line="*.gif" OR Process_Command_Line="*.tmp" OR Process_Command_Line="*.temp" OR Process_Command_Line="*.txt") OR (Process_Command_Line="* -O*" OR Process_Command_Line="*--remote-name*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Curl Usage on Windows" | eval sigma_description="Detects a suspicious curl process start on Windows and outputs the requested document to a local file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Curl Usage on Windows - sysmon]
description = Detects a suspicious curl process start on Windows and outputs the requested document to a local file
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\curl.exe" OR Product="The curl executable") ((CommandLine="*\\AppData\\*" OR CommandLine="*\\Users\\Public\\*" OR CommandLine="*\\Temp*" OR CommandLine="*%AppData%*" OR CommandLine="*%Temp%*" OR CommandLine="*%Public%*" OR CommandLine="*\\Desktop*") OR (CommandLine="*.jpg" OR CommandLine="*.jpeg" OR CommandLine="*.png" OR CommandLine="*.gif" OR CommandLine="*.tmp" OR CommandLine="*.temp" OR CommandLine="*.txt") OR (CommandLine="* -O*" OR CommandLine="*--remote-name*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Curl Usage on Windows" | eval sigma_description="Detects a suspicious curl process start on Windows and outputs the requested document to a local file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Start Combination - winevent]
description = Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\curl.exe" OR Product="The curl executable") (Process_Command_Line="* start *" OR Process_Command_Line="*&call *" OR Process_Command_Line="*& call *")) | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1218 attack.command_and_control attack.t1105" | eval sigma_title="Curl Start Combination" | eval sigma_description="Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Start Combination - sysmon]
description = Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\curl.exe" OR Product="The curl executable") (CommandLine="* start *" OR CommandLine="*&call *" OR CommandLine="*& call *")) | table ParentImage,CommandLine | eval sigma_attack_tags="attack.execution attack.t1218 attack.command_and_control attack.t1105" | eval sigma_title="Curl Start Combination" | eval sigma_description="Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later."
dispatch.earliest_time = -24h@h
alert.track = 0

[ZOHO Dctask64 Process Injection - winevent]
description = Detects suspicious process injection using ZOHO's dctask64.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\dctask64.exe" NOT (Process_Command_Line="*DesktopCentral_Agent\\agent*")) | table Process_Command_Line,ParentCommandLine,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001" | eval sigma_title="ZOHO Dctask64 Process Injection" | eval sigma_description="Detects suspicious process injection using ZOHO's dctask64.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZOHO Dctask64 Process Injection - sysmon]
description = Detects suspicious process injection using ZOHO's dctask64.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\dctask64.exe" NOT (CommandLine="*DesktopCentral_Agent\\agent*")) | table CommandLine,ParentCommandLine,ParentImage | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001" | eval sigma_title="ZOHO Dctask64 Process Injection" | eval sigma_description="Detects suspicious process injection using ZOHO's dctask64.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Del in CommandLine - winevent]
description = suspicious command line to remove exe or dll
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*del *.exe*" Process_Command_Line="*/f *" Process_Command_Line="*/q *") OR (Process_Command_Line="*del *.dll*" Process_Command_Line="*C:\\ProgramData\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Suspicious Del in CommandLine" | eval sigma_description="suspicious command line to remove exe or dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Del in CommandLine - sysmon]
description = suspicious command line to remove exe or dll
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*del *.exe*" CommandLine="*/f *" CommandLine="*/q *") OR (CommandLine="*del *.dll*" CommandLine="*C:\\ProgramData\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.004" | eval sigma_title="Suspicious Del in CommandLine" | eval sigma_description="suspicious command line to remove exe or dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Desktopimgdownldr Command - winevent]
description = Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* /lockscreenurl:*" NOT ((Process_Command_Line="*.jpg*" OR Process_Command_Line="*.jpeg*" OR Process_Command_Line="*.png*"))) OR (Process_Command_Line="*reg delete*" Process_Command_Line="*\\PersonalizationCSP*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Desktopimgdownldr Command" | eval sigma_description="Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Desktopimgdownldr Command - sysmon]
description = Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* /lockscreenurl:*" NOT ((CommandLine="*.jpg*" OR CommandLine="*.jpeg*" OR CommandLine="*.png*"))) OR (CommandLine="*reg delete*" CommandLine="*\\PersonalizationCSP*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Suspicious Desktopimgdownldr Command" | eval sigma_description="Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet"
dispatch.earliest_time = -24h@h
alert.track = 0

[DevInit Lolbin Download - winevent]
description = Detects a certain command line flag combination used by devinit.exe lolbin to download arbitrary MSI packages on a Windows system
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -t msi-install *" Process_Command_Line="* -i http*") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="DevInit Lolbin Download" | eval sigma_description="Detects a certain command line flag combination used by devinit.exe lolbin to download arbitrary MSI packages on a Windows system"
dispatch.earliest_time = -24h@h
alert.track = 0

[DevInit Lolbin Download - sysmon]
description = Detects a certain command line flag combination used by devinit.exe lolbin to download arbitrary MSI packages on a Windows system
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -t msi-install *" CommandLine="* -i http*") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="DevInit Lolbin Download" | eval sigma_description="Detects a certain command line flag combination used by devinit.exe lolbin to download arbitrary MSI packages on a Windows system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Devtoolslauncher.exe Executes Specified Binary - winevent]
description = The Devtoolslauncher.exe executes other binary
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\devtoolslauncher.exe" Process_Command_Line="*LaunchForDeploy*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Devtoolslauncher.exe Executes Specified Binary" | eval sigma_description="The Devtoolslauncher.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Devtoolslauncher.exe Executes Specified Binary - sysmon]
description = The Devtoolslauncher.exe executes other binary
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\devtoolslauncher.exe" CommandLine="*LaunchForDeploy*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Devtoolslauncher.exe Executes Specified Binary" | eval sigma_description="The Devtoolslauncher.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious DIR Execution - winevent]
description = Use dir to collect information
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*dir *" Process_Command_Line="* /s*" Process_Command_Line="* /b*") | eval sigma_attack_tags="attack.discovery attack.t1217" | eval sigma_title="Suspicious DIR Execution" | eval sigma_description="Use dir to collect information"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious DIR Execution - sysmon]
description = Use dir to collect information
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*dir *" CommandLine="* /s*" CommandLine="* /b*") | eval sigma_attack_tags="attack.discovery attack.t1217" | eval sigma_title="Suspicious DIR Execution" | eval sigma_description="Use dir to collect information"
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Autorun Keys Modification - winevent]
description = Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*add*" (Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*" OR Process_Command_Line="*\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Direct Autorun Keys Modification" | eval sigma_description="Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Autorun Keys Modification - sysmon]
description = Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" CommandLine="*add*" (CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*" OR CommandLine="*\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Direct Autorun Keys Modification" | eval sigma_description="Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable or Delete Windows Eventlog - winevent]
description = Detects command that is used to disable or delete Windows eventlog via logman Windows utility
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*logman *" (Process_Command_Line="*stop *" OR Process_Command_Line="*delete *") Process_Command_Line="*EventLog-System*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001 attack.t1070.001" | eval sigma_title="Disable or Delete Windows Eventlog" | eval sigma_description="Detects command that is used to disable or delete Windows eventlog via logman Windows utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable or Delete Windows Eventlog - sysmon]
description = Detects command that is used to disable or delete Windows eventlog via logman Windows utility
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*logman *" (CommandLine="*stop *" OR CommandLine="*delete *") CommandLine="*EventLog-System*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001 attack.t1070.001" | eval sigma_title="Disable or Delete Windows Eventlog" | eval sigma_description="Detects command that is used to disable or delete Windows eventlog via logman Windows utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled IE Security Features - winevent]
description = Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -name IEHarden *" Process_Command_Line="* -value 0 *") OR (Process_Command_Line="* -name DEPOff *" Process_Command_Line="* -value 1 *") OR (Process_Command_Line="* -name DisableFirstRunCustomize *" Process_Command_Line="* -value 2 *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disabled IE Security Features" | eval sigma_description="Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled IE Security Features - sysmon]
description = Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -name IEHarden *" CommandLine="* -value 0 *") OR (CommandLine="* -name DEPOff *" CommandLine="* -value 1 *") OR (CommandLine="* -name DisableFirstRunCustomize *" CommandLine="* -value 2 *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disabled IE Security Features" | eval sigma_description="Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features"
dispatch.earliest_time = -24h@h
alert.track = 0

[Raccine Uninstall - winevent]
description = Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*taskkill *" Process_Command_Line="*RaccineSettings.exe*") OR (Process_Command_Line="*reg.exe*" Process_Command_Line="*delete*" Process_Command_Line="*Raccine Tray*") OR (Process_Command_Line="*schtasks*" Process_Command_Line="*/DELETE*" Process_Command_Line="*Raccine Rules Updater*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Raccine Uninstall" | eval sigma_description="Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Raccine Uninstall - sysmon]
description = Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*taskkill *" CommandLine="*RaccineSettings.exe*") OR (CommandLine="*reg.exe*" CommandLine="*delete*" CommandLine="*Raccine Tray*") OR (CommandLine="*schtasks*" CommandLine="*/DELETE*" CommandLine="*Raccine Rules Updater*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Raccine Uninstall" | eval sigma_description="Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via Diskshadow.exe - winevent]
description = Detects using Diskshadow.exe to execute arbitrary code in text file
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\diskshadow.exe" (Process_Command_Line="*/s*" OR Process_Command_Line="*-s*")) | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execution via Diskshadow.exe" | eval sigma_description="Detects using Diskshadow.exe to execute arbitrary code in text file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via Diskshadow.exe - sysmon]
description = Detects using Diskshadow.exe to execute arbitrary code in text file
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\diskshadow.exe" (CommandLine="*/s*" OR CommandLine="*-s*")) | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Execution via Diskshadow.exe" | eval sigma_description="Detects using Diskshadow.exe to execute arbitrary code in text file"
dispatch.earliest_time = -24h@h
alert.track = 0

[DIT Snapshot Viewer Use - winevent]
description = Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\ditsnap.exe" OR Process_Command_Line="*ditsnap.exe*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="DIT Snapshot Viewer Use" | eval sigma_description="Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[DIT Snapshot Viewer Use - sysmon]
description = Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\ditsnap.exe" OR CommandLine="*ditsnap.exe*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="DIT Snapshot Viewer Use" | eval sigma_description="Detects the use of Ditsnap tool. Seems to be a tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Dllhost Process With No CommandLine - winevent]
description = Detects a 'dllhost' spawning with no commandline arguments which is a very rare thing to happen and could indicate process injection activity or malware mimicking similar system processes
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*dllhost.exe" New_Process_Name="*\\dllhost.exe") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Dllhost Process With No CommandLine" | eval sigma_description="Detects a 'dllhost' spawning with no commandline arguments which is a very rare thing to happen and could indicate process injection activity or malware mimicking similar system processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dllhost Process With No CommandLine - sysmon]
description = Detects a 'dllhost' spawning with no commandline arguments which is a very rare thing to happen and could indicate process injection activity or malware mimicking similar system processes
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*dllhost.exe" Image="*\\dllhost.exe") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Dllhost Process With No CommandLine" | eval sigma_description="Detects a 'dllhost' spawning with no commandline arguments which is a very rare thing to happen and could indicate process injection activity or malware mimicking similar system processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dnx.exe - winevent]
description = Execute C# code located in the consoleapp folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\dnx.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1027.004" | eval sigma_title="Application Whitelisting Bypass via Dnx.exe" | eval sigma_description="Execute C# code located in the consoleapp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dnx.exe - sysmon]
description = Execute C# code located in the consoleapp folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\dnx.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218 attack.t1027.004" | eval sigma_title="Application Whitelisting Bypass via Dnx.exe" | eval sigma_description="Execute C# code located in the consoleapp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Double Extension - winevent]
description = Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*.doc.exe" OR New_Process_Name="*.docx.exe" OR New_Process_Name="*.xls.exe" OR New_Process_Name="*.xlsx.exe" OR New_Process_Name="*.ppt.exe" OR New_Process_Name="*.pptx.exe" OR New_Process_Name="*.rtf.exe" OR New_Process_Name="*.pdf.exe" OR New_Process_Name="*.txt.exe" OR New_Process_Name="*      .exe" OR New_Process_Name="*______.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566.001" | eval sigma_title="Suspicious Double Extension" | eval sigma_description="Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Double Extension - sysmon]
description = Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*.doc.exe" OR Image="*.docx.exe" OR Image="*.xls.exe" OR Image="*.xlsx.exe" OR Image="*.ppt.exe" OR Image="*.pptx.exe" OR Image="*.rtf.exe" OR Image="*.pdf.exe" OR Image="*.txt.exe" OR Image="*      .exe" OR Image="*______.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1566.001" | eval sigma_title="Suspicious Double Extension" | eval sigma_description="Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Download from Office Domain - winevent]
description = Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\curl.exe" OR New_Process_Name="*\\wget.exe") OR (Process_Command_Line="*Start-BitsTransfer*" OR Process_Command_Line="*.DownloadFile(*" OR Process_Command_Line="*.DownloadString(*")) (Process_Command_Line="*https://attachment.outlook.live.net/owa/*" OR Process_Command_Line="*https://onenoteonlinesync.onenote.com/onenoteonlinesync/*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Download from Office Domain" | eval sigma_description="Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Download from Office Domain - sysmon]
description = Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\curl.exe" OR Image="*\\wget.exe") OR (CommandLine="*Start-BitsTransfer*" OR CommandLine="*.DownloadFile(*" OR CommandLine="*.DownloadString(*")) (CommandLine="*https://attachment.outlook.live.net/owa/*" OR CommandLine="*https://onenoteonlinesync.onenote.com/onenoteonlinesync/*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Download from Office Domain" | eval sigma_description="Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Kernel Dump Using Dtrace - winevent]
description = Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\dtrace.exe" Process_Command_Line="*lkd(0)*") OR (Process_Command_Line="*syscall:::return*" Process_Command_Line="*lkd(*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Kernel Dump Using Dtrace" | eval sigma_description="Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Kernel Dump Using Dtrace - sysmon]
description = Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\dtrace.exe" CommandLine="*lkd(0)*") OR (CommandLine="*syscall:::return*" CommandLine="*lkd(*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Kernel Dump Using Dtrace" | eval sigma_description="Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet RunDLL32 Process Creation - winevent]
description = Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,Control_RunDLL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe" (Process_Command_Line="*,RunDLL" OR Process_Command_Line="*,Control_RunDLL")) NOT (Creator_Process_Name="*\\tracker.exe")) NOT ((Process_Command_Line="*.dll,Control_RunDLL" OR Process_Command_Line="*.dll\",Control_RunDLL" OR Process_Command_Line="*.dll',Control_RunDLL"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Emotet RunDLL32 Process Creation" | eval sigma_description="Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,Control_RunDLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet RunDLL32 Process Creation - sysmon]
description = Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,Control_RunDLL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe" (CommandLine="*,RunDLL" OR CommandLine="*,Control_RunDLL")) NOT (ParentImage="*\\tracker.exe")) NOT ((CommandLine="*.dll,Control_RunDLL" OR CommandLine="*.dll\",Control_RunDLL" OR CommandLine="*.dll',Control_RunDLL"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Emotet RunDLL32 Process Creation" | eval sigma_description="Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,Control_RunDLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Esentutl Gather Credentials - winevent]
description = Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*esentutl*" Process_Command_Line="* /p*") | table Account_Name,Process_Command_Line,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.003" | eval sigma_title="Esentutl Gather Credentials" | eval sigma_description="Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab."
dispatch.earliest_time = -24h@h
alert.track = 0

[Esentutl Gather Credentials - sysmon]
description = Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*esentutl*" CommandLine="* /p*") | table User,CommandLine,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.003" | eval sigma_title="Esentutl Gather Credentials" | eval sigma_description="Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Eventlog Clear or Configuration Using Wevtutil - winevent]
description = Detects clearing or configuration of eventlogs using wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others).
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\powershell.exe" (Process_Command_Line="*Clear-EventLog*" OR Process_Command_Line="*Remove-EventLog*" OR Process_Command_Line="*Limit-EventLog*")) OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="* ClearEventLog *")) OR (New_Process_Name="*\\wevtutil.exe" (Process_Command_Line="*clear-log*" OR Process_Command_Line="* cl *" OR Process_Command_Line="*set-log*" OR Process_Command_Line="* sl *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 car.2016-04-002" | eval sigma_title="Suspicious Eventlog Clear or Configuration Using Wevtutil" | eval sigma_description="Detects clearing or configuration of eventlogs using wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Eventlog Clear or Configuration Using Wevtutil - sysmon]
description = Detects clearing or configuration of eventlogs using wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others).
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\powershell.exe" (CommandLine="*Clear-EventLog*" OR CommandLine="*Remove-EventLog*" OR CommandLine="*Limit-EventLog*")) OR (Image="*\\wmic.exe" CommandLine="* ClearEventLog *")) OR (Image="*\\wevtutil.exe" (CommandLine="*clear-log*" OR CommandLine="* cl *" OR CommandLine="*set-log*" OR CommandLine="* sl *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070.001 car.2016-04-002" | eval sigma_title="Suspicious Eventlog Clear or Configuration Using Wevtutil" | eval sigma_description="Detects clearing or configuration of eventlogs using wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Webserver Root Folder - winevent]
description = Detects a suspicious program execution in a web service root folder (filter out false positives)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wwwroot\\*" OR New_Process_Name="*\\wmpub\\*" OR New_Process_Name="*\\htdocs\\*") NOT ((New_Process_Name="*bin\\*" OR New_Process_Name="*\\Tools\\*" OR New_Process_Name="*\\SMSComponent\\*") Creator_Process_Name="*\\services.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Execution in Webserver Root Folder" | eval sigma_description="Detects a suspicious program execution in a web service root folder (filter out false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Webserver Root Folder - sysmon]
description = Detects a suspicious program execution in a web service root folder (filter out false positives)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wwwroot\\*" OR Image="*\\wmpub\\*" OR Image="*\\htdocs\\*") NOT ((Image="*bin\\*" OR Image="*\\Tools\\*" OR Image="*\\SMSComponent\\*") ParentImage="*\\services.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Execution in Webserver Root Folder" | eval sigma_description="Detects a suspicious program execution in a web service root folder (filter out false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution from Suspicious Folder - winevent]
description = Detects a suspicious execution from an uncommon folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\$Recycle.bin\\*" OR New_Process_Name="*\\config\\systemprofile\\*" OR New_Process_Name="*\\Intel\\Logs\\*" OR New_Process_Name="*\\RSA\\MachineKeys\\*" OR New_Process_Name="*\\Users\\All Users\\*" OR New_Process_Name="*\\Users\\Default\\*" OR New_Process_Name="*\\Users\\NetworkService\\*" OR New_Process_Name="*\\Users\\Public\\*" OR New_Process_Name="*\\Windows\\addins\\*" OR New_Process_Name="*\\Windows\\debug\\*" OR New_Process_Name="*\\Windows\\Fonts\\*" OR New_Process_Name="*\\Windows\\Help\\*" OR New_Process_Name="*\\Windows\\IME\\*" OR New_Process_Name="*\\Windows\\Media\\*" OR New_Process_Name="*\\Windows\\repair\\*" OR New_Process_Name="*\\Windows\\security\\*" OR New_Process_Name="*\\Windows\\System32\\Tasks\\*" OR New_Process_Name="*\\Windows\\Tasks\\*") OR New_Process_Name="C:\\Perflogs\\*") NOT (New_Process_Name="C:\\Users\\Public\\IBM\\ClientSolutions\\Start_Programs\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution from Suspicious Folder" | eval sigma_description="Detects a suspicious execution from an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution from Suspicious Folder - sysmon]
description = Detects a suspicious execution from an uncommon folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\$Recycle.bin\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Intel\\Logs\\*" OR Image="*\\RSA\\MachineKeys\\*" OR Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\NetworkService\\*" OR Image="*\\Users\\Public\\*" OR Image="*\\Windows\\addins\\*" OR Image="*\\Windows\\debug\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\Help\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\Media\\*" OR Image="*\\Windows\\repair\\*" OR Image="*\\Windows\\security\\*" OR Image="*\\Windows\\System32\\Tasks\\*" OR Image="*\\Windows\\Tasks\\*") OR Image="C:\\Perflogs\\*") NOT (Image="C:\\Users\\Public\\IBM\\ClientSolutions\\Start_Programs\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution from Suspicious Folder" | eval sigma_description="Detects a suspicious execution from an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Explorer Process Tree Break - winevent]
description = Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from 'svchost'
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*/factory,{75dff2b7-6936-4c06-a8bb-676a7b00b24b}*") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Explorer Process Tree Break" | eval sigma_description="Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from 'svchost'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Explorer Process Tree Break - sysmon]
description = Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from 'svchost'
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*/factory,{75dff2b7-6936-4c06-a8bb-676a7b00b24b}*") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Explorer Process Tree Break" | eval sigma_description="Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from 'svchost'"
dispatch.earliest_time = -24h@h
alert.track = 0

[Explorer NOUACCHECK Flag - winevent]
description = Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\explorer.exe" Process_Command_Line="*/NOUACCHECK*") NOT ((ParentCommandLine="C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule" OR Creator_Process_Name="C:\\Windows\\System32\\svchost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1548.002" | eval sigma_title="Explorer NOUACCHECK Flag" | eval sigma_description="Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Explorer NOUACCHECK Flag - sysmon]
description = Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\explorer.exe" CommandLine="*/NOUACCHECK*") NOT ((ParentCommandLine="C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule" OR ParentImage="C:\\Windows\\System32\\svchost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1548.002" | eval sigma_title="Explorer NOUACCHECK Flag" | eval sigma_description="Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution Via Explorer.exe - winevent]
description = Attackers can use explorer.exe for evading defense mechanisms
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\explorer.exe" Creator_Process_Name="*\\cmd.exe" Process_Command_Line="*explorer.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Proxy Execution Via Explorer.exe" | eval sigma_description="Attackers can use explorer.exe for evading defense mechanisms"
dispatch.earliest_time = -24h@h
alert.track = 0

[Proxy Execution Via Explorer.exe - sysmon]
description = Attackers can use explorer.exe for evading defense mechanisms
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\explorer.exe" ParentImage="*\\cmd.exe" CommandLine="*explorer.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Proxy Execution Via Explorer.exe" | eval sigma_description="Attackers can use explorer.exe for evading defense mechanisms"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Characteristics Due to Missing Fields - winevent]
description = Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Description="\?" FileVersion="\?") OR (Description="\?" Product="\?")) OR (Description="\?" Company="\?")) New_Process_Name="*\\Downloads\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.006" | eval sigma_title="Suspicious File Characteristics Due to Missing Fields" | eval sigma_description="Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Characteristics Due to Missing Fields - sysmon]
description = Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Description="\?" FileVersion="\?") OR (Description="\?" Product="\?")) OR (Description="\?" Company="\?")) Image="*\\Downloads\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.006" | eval sigma_title="Suspicious File Characteristics Due to Missing Fields" | eval sigma_description="Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[GfxDownloadWrapper.exe Downloads File from Suspicious URL - winevent]
description = Detects when GfxDownloadWrapper.exe downloads file from non standard URL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\GfxDownloadWrapper.exe" NOT (Process_Command_Line="*gameplayapi.intel.com*")) NOT (Creator_Process_Name="*\\GfxDownloadWrapper.exe")) | table Process_Command_Line | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="GfxDownloadWrapper.exe Downloads File from Suspicious URL" | eval sigma_description="Detects when GfxDownloadWrapper.exe downloads file from non standard URL"
dispatch.earliest_time = -24h@h
alert.track = 0

[GfxDownloadWrapper.exe Downloads File from Suspicious URL - sysmon]
description = Detects when GfxDownloadWrapper.exe downloads file from non standard URL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\GfxDownloadWrapper.exe" NOT (CommandLine="*gameplayapi.intel.com*")) NOT (ParentImage="*\\GfxDownloadWrapper.exe")) | table CommandLine | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="GfxDownloadWrapper.exe Downloads File from Suspicious URL" | eval sigma_description="Detects when GfxDownloadWrapper.exe downloads file from non standard URL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Findstr Launching .lnk File - winevent]
description = Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\findstr.exe" Process_Command_Line="*.lnk") | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1202 attack.t1027.003" | eval sigma_title="Findstr Launching .lnk File" | eval sigma_description="Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Findstr Launching .lnk File - sysmon]
description = Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\findstr.exe" CommandLine="*.lnk") | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1202 attack.t1027.003" | eval sigma_title="Findstr Launching .lnk File" | eval sigma_description="Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Finger.exe Suspicious Invocation - winevent]
description = Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\finger.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Finger.exe Suspicious Invocation" | eval sigma_description="Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays"
dispatch.earliest_time = -24h@h
alert.track = 0

[Finger.exe Suspicious Invocation - sysmon]
description = Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\finger.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Finger.exe Suspicious Invocation" | eval sigma_description="Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays"
dispatch.earliest_time = -24h@h
alert.track = 0

[Format.com FileSystem LOLBIN - winevent]
description = Detects the execution of format.com with a suspicious filesystem selection that could indicate a defense evasion activity in which format.com is used to load malicious DLL files or other programs
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\format.com" Process_Command_Line="*/fs:*") NOT (((Process_Command_Line="*/fs:FAT*" OR Process_Command_Line="*/fs:exFAT*" OR Process_Command_Line="*/fs:NTFS*" OR Process_Command_Line="*/fs:UDF*" OR Process_Command_Line="*/fs:ReFS*")))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Format.com FileSystem LOLBIN" | eval sigma_description="Detects the execution of format.com with a suspicious filesystem selection that could indicate a defense evasion activity in which format.com is used to load malicious DLL files or other programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Format.com FileSystem LOLBIN - sysmon]
description = Detects the execution of format.com with a suspicious filesystem selection that could indicate a defense evasion activity in which format.com is used to load malicious DLL files or other programs
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\format.com" CommandLine="*/fs:*") NOT (((CommandLine="*/fs:FAT*" OR CommandLine="*/fs:exFAT*" OR CommandLine="*/fs:NTFS*" OR CommandLine="*/fs:UDF*" OR CommandLine="*/fs:ReFS*")))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Format.com FileSystem LOLBIN" | eval sigma_description="Detects the execution of format.com with a suspicious filesystem selection that could indicate a defense evasion activity in which format.com is used to load malicious DLL files or other programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Suspicious Invocation - winevent]
description = Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc). Might be used by ransomwares during the attack (seen by NotPetya and others).
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") (Process_Command_Line="*deletejournal*" OR Process_Command_Line="*createjournal*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Fsutil Suspicious Invocation" | eval sigma_description="Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc). Might be used by ransomwares during the attack (seen by NotPetya and others)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Suspicious Invocation - sysmon]
description = Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc). Might be used by ransomwares during the attack (seen by NotPetya and others).
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") (CommandLine="*deletejournal*" OR CommandLine="*createjournal*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Fsutil Suspicious Invocation" | eval sigma_description="Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc). Might be used by ransomwares during the attack (seen by NotPetya and others)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ftp.exe - winevent]
description = Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*ftp.exe" Process_Command_Line="*-s:*") OR (OriginalFileName="ftp.exe" Process_Command_Line="*-s:*")) OR (OriginalFileName="ftp.exe" NOT (New_Process_Name="*ftp.exe")) OR Creator_Process_Name="*ftp.exe")) | table Process_Command_Line,Creator_Process_Name | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious ftp.exe" | eval sigma_description="Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ftp.exe - sysmon]
description = Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*ftp.exe" CommandLine="*-s:*") OR (OriginalFileName="ftp.exe" CommandLine="*-s:*")) OR (OriginalFileName="ftp.exe" NOT (Image="*ftp.exe")) OR ParentImage="*ftp.exe")) | table CommandLine,ParentImage | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious ftp.exe" | eval sigma_description="Detects renamed ftp.exe, ftp.exe script execution and child processes ran by ftp.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Gpresult Display Group Policy Information - winevent]
description = Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\gpresult.exe" (Process_Command_Line="*/z*" OR Process_Command_Line="*/v*")) | eval sigma_attack_tags="attack.discovery attack.t1615" | eval sigma_title="Gpresult Display Group Policy Information" | eval sigma_description="Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information"
dispatch.earliest_time = -24h@h
alert.track = 0

[Gpresult Display Group Policy Information - sysmon]
description = Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\gpresult.exe" (CommandLine="*/z*" OR CommandLine="*/v*")) | eval sigma_attack_tags="attack.discovery attack.t1615" | eval sigma_title="Gpresult Display Group Policy Information" | eval sigma_description="Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information"
dispatch.earliest_time = -24h@h
alert.track = 0

[Download Files Using Notepad++ GUP Utility - winevent]
description = Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\GUP.exe" OR OriginalFileName="gup.exe") (Process_Command_Line="* -unzipTo *" Process_Command_Line="*http*")) NOT (Creator_Process_Name="*\\notepad++.exe")) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Download Files Using Notepad++ GUP Utility" | eval sigma_description="Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Download Files Using Notepad++ GUP Utility - sysmon]
description = Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\GUP.exe" OR OriginalFileName="gup.exe") (CommandLine="* -unzipTo *" CommandLine="*http*")) NOT (ParentImage="*\\notepad++.exe")) | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Download Files Using Notepad++ GUP Utility" | eval sigma_description="Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Arbitrary Binaries Using GUP Utility - winevent]
description = Detects execution of the Notepad++ updater (gup) to launch other commands or executables
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\gup.exe" New_Process_Name="*\\explorer.exe") NOT (New_Process_Name="*\\explorer.exe" Process_Command_Line="*\\Notepad++\\notepad++.exe*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Execute Arbitrary Binaries Using GUP Utility" | eval sigma_description="Detects execution of the Notepad++ updater (gup) to launch other commands or executables"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Arbitrary Binaries Using GUP Utility - sysmon]
description = Detects execution of the Notepad++ updater (gup) to launch other commands or executables
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\gup.exe" Image="*\\explorer.exe") NOT (Image="*\\explorer.exe" CommandLine="*\\Notepad++\\notepad++.exe*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Execute Arbitrary Binaries Using GUP Utility" | eval sigma_description="Detects execution of the Notepad++ updater (gup) to launch other commands or executables"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GUP Usage - winevent]
description = Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\GUP.exe" NOT ((New_Process_Name="*\\Users\\*\\AppData\\Local\\Notepad++\\updater\\GUP.exe" OR New_Process_Name="*\\Users\\*\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe" OR New_Process_Name="*\\Program Files\\Notepad++\\updater\\GUP.exe" OR New_Process_Name="*\\Program Files (x86)\\Notepad++\\updater\\GUP.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Suspicious GUP Usage" | eval sigma_description="Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GUP Usage - sysmon]
description = Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\GUP.exe" NOT ((Image="*\\Users\\*\\AppData\\Local\\Notepad++\\updater\\GUP.exe" OR Image="*\\Users\\*\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe" OR Image="*\\Program Files\\Notepad++\\updater\\GUP.exe" OR Image="*\\Program Files (x86)\\Notepad++\\updater\\GUP.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1574.002" | eval sigma_title="Suspicious GUP Usage" | eval sigma_description="Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution Of Non-Existing File - winevent]
description = Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) NOT (New_Process_Name="*\\*") NOT ((NOT New_Process_Name="*") OR ((New_Process_Name="-" OR New_Process_Name="")) OR ((New_Process_Name="Registry" OR New_Process_Name="MemCompression") OR (Process_Command_Line="Registry" OR Process_Command_Line="MemCompression")))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Execution Of Non-Existing File" | eval sigma_description="Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution Of Non-Existing File - sysmon]
description = Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) NOT (Image="*\\*") NOT ((NOT Image="*") OR ((Image="-" OR Image="")) OR ((Image="Registry" OR Image="MemCompression") OR (CommandLine="Registry" OR CommandLine="MemCompression")))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Execution Of Non-Existing File" | eval sigma_description="Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution of InstallUtil Without Log - winevent]
description = Uses the .NET InstallUtil.exe application in order to execute image without log
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\InstallUtil.exe" New_Process_Name="*Microsoft.NET\\Framework*" Process_Command_Line="*/logfile= *" Process_Command_Line="*/LogToConsole=false*") | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Execution of InstallUtil Without Log" | eval sigma_description="Uses the .NET InstallUtil.exe application in order to execute image without log"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution of InstallUtil Without Log - sysmon]
description = Uses the .NET InstallUtil.exe application in order to execute image without log
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\InstallUtil.exe" Image="*Microsoft.NET\\Framework*" CommandLine="*/logfile= *" CommandLine="*/LogToConsole=false*") | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Execution of InstallUtil Without Log" | eval sigma_description="Uses the .NET InstallUtil.exe application in order to execute image without log"
dispatch.earliest_time = -24h@h
alert.track = 0

[IIS Native-Code Module Command Line Installation - winevent]
description = Detects suspicious IIS native-code module installations via command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\appcmd.exe" Process_Command_Line="*install*" Process_Command_Line="*module*" Process_Command_Line="*/name:*") | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="IIS Native-Code Module Command Line Installation" | eval sigma_description="Detects suspicious IIS native-code module installations via command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[IIS Native-Code Module Command Line Installation - sysmon]
description = Detects suspicious IIS native-code module installations via command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\appcmd.exe" CommandLine="*install*" CommandLine="*module*" CommandLine="*/name:*") | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="IIS Native-Code Module Command Line Installation" | eval sigma_description="Detects suspicious IIS native-code module installations via command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LSASS Process Clone - winevent]
description = Detects a suspicious LSASS process process clone that could be a sign of process dumping activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Windows\\System32\\lsass.exe" Creator_Process_Name="*\\Windows\\System32\\lsass.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="Suspicious LSASS Process Clone" | eval sigma_description="Detects a suspicious LSASS process process clone that could be a sign of process dumping activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LSASS Process Clone - sysmon]
description = Detects a suspicious LSASS process process clone that could be a sign of process dumping activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Windows\\System32\\lsass.exe" ParentImage="*\\Windows\\System32\\lsass.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.t1003.001" | eval sigma_title="Suspicious LSASS Process Clone" | eval sigma_description="Detects a suspicious LSASS process process clone that could be a sign of process dumping activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Share Deleted - winevent]
description = Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\net.exe" New_Process_Name="*\\net1.exe" Process_Command_Line="*share*" Process_Command_Line="*/delete*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.005" | eval sigma_title="Mounted Share Deleted" | eval sigma_description="Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mounted Share Deleted - sysmon]
description = Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\net.exe" Image="*\\net1.exe" CommandLine="*share*" CommandLine="*/delete*") | eval sigma_attack_tags="attack.defense_evasion attack.t1070.005" | eval sigma_title="Mounted Share Deleted" | eval sigma_description="Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation"
dispatch.earliest_time = -24h@h
alert.track = 0

[MpiExec Lolbin - winevent]
description = Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\mpiexec.exe" OR Imphash="d8b52ef6aaa3a81501bdfff9dbb96217" OR Hashes="*IMPHASH=d8b52ef6aaa3a81501bdfff9dbb96217*") (Process_Command_Line="* /n 1 *" OR Process_Command_Line="* -n 1 *")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="MpiExec Lolbin" | eval sigma_description="Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[MpiExec Lolbin - sysmon]
description = Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\mpiexec.exe" OR Imphash="d8b52ef6aaa3a81501bdfff9dbb96217" OR Hashes="*IMPHASH=d8b52ef6aaa3a81501bdfff9dbb96217*") (CommandLine="* /n 1 *" OR CommandLine="* -n 1 *")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="MpiExec Lolbin" | eval sigma_description="Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Suspicious Execution 01 - winevent]
description = Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" (Process_Command_Line="*vbscript*" OR Process_Command_Line="*.jpg*" OR Process_Command_Line="*.png*" OR Process_Command_Line="*.lnk*" OR Process_Command_Line="*.xls*" OR Process_Command_Line="*.doc*" OR Process_Command_Line="*.zip*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1218.005 attack.execution attack.t1059.007 cve.2020.1599" | eval sigma_title="MSHTA Suspicious Execution 01" | eval sigma_description="Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Suspicious Execution 01 - sysmon]
description = Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mshta.exe" (CommandLine="*vbscript*" OR CommandLine="*.jpg*" OR CommandLine="*.png*" OR CommandLine="*.lnk*" OR CommandLine="*.xls*" OR CommandLine="*.doc*" OR CommandLine="*.zip*" OR CommandLine="*.dll*" OR CommandLine="*.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1218.005 attack.execution attack.t1059.007 cve.2020.1599" | eval sigma_title="MSHTA Suspicious Execution 01" | eval sigma_description="Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MSHTA Process Patterns - winevent]
description = Detects suspicious mshta process patterns
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\mshta.exe" ((Creator_Process_Name="*\\cmd.exe" OR Creator_Process_Name="*\\powershell.exe") OR (Process_Command_Line="*\\AppData\\Local*" OR Process_Command_Line="*C:\\Windows\\Temp*" OR Process_Command_Line="*C:\\Users\\Public*"))) OR (New_Process_Name="*\\mshta.exe" NOT ((New_Process_Name="*C:\\Windows\\System32*" OR New_Process_Name="*C:\\Windows\\SysWOW64*")))) OR (New_Process_Name="*\\mshta.exe" NOT ((Process_Command_Line="*.htm*" OR Process_Command_Line="*.hta*") (Process_Command_Line="*mshta.exe" OR Process_Command_Line="*mshta"))))) | eval sigma_attack_tags="attack.execution attack.t1106" | eval sigma_title="Suspicious MSHTA Process Patterns" | eval sigma_description="Detects suspicious mshta process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MSHTA Process Patterns - sysmon]
description = Detects suspicious mshta process patterns
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\mshta.exe" ((ParentImage="*\\cmd.exe" OR ParentImage="*\\powershell.exe") OR (CommandLine="*\\AppData\\Local*" OR CommandLine="*C:\\Windows\\Temp*" OR CommandLine="*C:\\Users\\Public*"))) OR (Image="*\\mshta.exe" NOT ((Image="*C:\\Windows\\System32*" OR Image="*C:\\Windows\\SysWOW64*")))) OR (Image="*\\mshta.exe" NOT ((CommandLine="*.htm*" OR CommandLine="*.hta*") (CommandLine="*mshta.exe" OR CommandLine="*mshta"))))) | eval sigma_attack_tags="attack.execution attack.t1106" | eval sigma_title="Suspicious MSHTA Process Patterns" | eval sigma_description="Detects suspicious mshta process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Directory - winevent]
description = Detects suspicious msiexec process starts in an uncommon directory
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\msiexec.exe" NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Suspicious MsiExec Directory" | eval sigma_description="Detects suspicious msiexec process starts in an uncommon directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Directory - sysmon]
description = Detects suspicious msiexec process starts in an uncommon directory
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\msiexec.exe" NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Suspicious MsiExec Directory" | eval sigma_description="Detects suspicious msiexec process starts in an uncommon directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[MsiExec Web Install - winevent]
description = Detects suspicious msiexec process starts with web addresses as parameter
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* msiexec*" Process_Command_Line="*://*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007 attack.command_and_control attack.t1105" | eval sigma_title="MsiExec Web Install" | eval sigma_description="Detects suspicious msiexec process starts with web addresses as parameter"
dispatch.earliest_time = -24h@h
alert.track = 0

[MsiExec Web Install - sysmon]
description = Detects suspicious msiexec process starts with web addresses as parameter
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* msiexec*" CommandLine="*://*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.007 attack.command_and_control attack.t1105" | eval sigma_title="MsiExec Web Install" | eval sigma_description="Detects suspicious msiexec process starts with web addresses as parameter"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Payload Download via Office Binaries - winevent]
description = Downloads payload from remote server
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powerpnt.exe" OR New_Process_Name="*\\winword.exe" OR New_Process_Name="*\\excel.exe") Process_Command_Line="*http*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Malicious Payload Download via Office Binaries" | eval sigma_description="Downloads payload from remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Payload Download via Office Binaries - sysmon]
description = Downloads payload from remote server
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powerpnt.exe" OR Image="*\\winword.exe" OR Image="*\\excel.exe") CommandLine="*http*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Malicious Payload Download via Office Binaries" | eval sigma_description="Downloads payload from remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Provided In Command Line Of Net.exe - winevent]
description = Detects a when net.exe is called with a password in the command line
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="C:\\Windows\\System32\\net.exe" Process_Command_Line="*net*" Process_Command_Line="* use *" Process_Command_Line="*:*\\\*" Process_Command_Line="*/USER:* *") NOT ((Process_Command_Line="* "))) | eval sigma_attack_tags="" | eval sigma_title="Password Provided In Command Line Of Net.exe" | eval sigma_description="Detects a when net.exe is called with a password in the command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Provided In Command Line Of Net.exe - sysmon]
description = Detects a when net.exe is called with a password in the command line
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="C:\\Windows\\System32\\net.exe" CommandLine="*net*" CommandLine="* use *" CommandLine="*:*\\\*" CommandLine="*/USER:* *") NOT ((CommandLine="* "))) | eval sigma_attack_tags="" | eval sigma_title="Password Provided In Command Line Of Net.exe" | eval sigma_description="Detects a when net.exe is called with a password in the command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Netsh DLL Persistence - winevent]
description = Detects persitence via netsh helper
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*add*" Process_Command_Line="*helper*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1546.007 attack.s0108" | eval sigma_title="Suspicious Netsh DLL Persistence" | eval sigma_description="Detects persitence via netsh helper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Netsh DLL Persistence - sysmon]
description = Detects persitence via netsh helper
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*add*" CommandLine="*helper*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1546.007 attack.s0108" | eval sigma_title="Suspicious Netsh DLL Persistence" | eval sigma_description="Detects persitence via netsh helper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ngrok Usage - winevent]
description = Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available. Involved domains are bin.equinox.io for download and *.ngrok.io for connections.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* tcp 139*" OR Process_Command_Line="* tcp 445*" OR Process_Command_Line="* tcp 3389*" OR Process_Command_Line="* tcp 5985*" OR Process_Command_Line="* tcp 5986*") OR (Process_Command_Line="* start *" Process_Command_Line="*--all*" Process_Command_Line="*--config*" Process_Command_Line="*.yml*") OR (New_Process_Name="*ngrok.exe" (Process_Command_Line="* tcp *" OR Process_Command_Line="* http *" OR Process_Command_Line="* authtoken *")))) | eval sigma_attack_tags="attack.command_and_control attack.t1572" | eval sigma_title="Ngrok Usage" | eval sigma_description="Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available. Involved domains are bin.equinox.io for download and *.ngrok.io for connections."
dispatch.earliest_time = -24h@h
alert.track = 0

[Ngrok Usage - sysmon]
description = Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available. Involved domains are bin.equinox.io for download and *.ngrok.io for connections.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* tcp 139*" OR CommandLine="* tcp 445*" OR CommandLine="* tcp 3389*" OR CommandLine="* tcp 5985*" OR CommandLine="* tcp 5986*") OR (CommandLine="* start *" CommandLine="*--all*" CommandLine="*--config*" CommandLine="*.yml*") OR (Image="*ngrok.exe" (CommandLine="* tcp *" OR CommandLine="* http *" OR CommandLine="* authtoken *")))) | eval sigma_attack_tags="attack.command_and_control attack.t1572" | eval sigma_title="Ngrok Usage" | eval sigma_description="Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available. Involved domains are bin.equinox.io for download and *.ngrok.io for connections."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Suspicious File Type Extension - winevent]
description = Checks whether the image specified in a process creation event doesn't refer to an .exe file (caused by process ghosting or other unorthodox methods to start a process)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) NOT ((New_Process_Name="*.exe" OR New_Process_Name="*.tmp")) NOT ((NOT New_Process_Name="*") OR ((New_Process_Name="Registry" OR New_Process_Name="MemCompression")) OR ((New_Process_Name="-" OR New_Process_Name="")) OR (New_Process_Name="C:\\Windows\\Installer\\MSI*") OR ((Creator_Process_Name="C:\\ProgramData\\Avira\\*" OR Creator_Process_Name="C:\\Windows\\System32\\DriverStore\\FileRepository\\*")) OR (New_Process_Name="*.scr") OR (New_Process_Name="*NVIDIA\\NvBackend\\*" New_Process_Name="*.dat") OR ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*") New_Process_Name="*.com") OR (New_Process_Name="*\\WinSCP.com") OR (New_Process_Name="*C:\\Users\\*" New_Process_Name="*\\AppData\\*" New_Process_Name="*.tmp*" New_Process_Name="*CodeSetup*") OR (New_Process_Name="*\\program\\soffice.bin") OR ((New_Process_Name="C:\\Program Files\\EMC NetWorker\\Management\\GST\\apache\\cgi-bin\\update_jnlp.cgi" OR New_Process_Name="C:\\Program Files (x86)\\EMC NetWorker\\Management\\GST\\apache\\cgi-bin\\update_jnlp.cgi")) OR ((New_Process_Name="C:\\Program Files (x86)\\WINPAKPRO\\*" OR New_Process_Name="C:\\Program Files\\WINPAKPRO\\*") New_Process_Name="*.ngn") OR ((New_Process_Name="C:\\Program Files (x86)\\MyQ\\Server\\pcltool.dll" OR New_Process_Name="C:\\Program Files\\MyQ\\Server\\pcltool.dll")) OR ((New_Process_Name="C:\\Program Files\\Microsoft Visual Studio\\*" OR New_Process_Name="C:\\Program Files (x86)\\Microsoft Visual Studio*") New_Process_Name="*.com") OR (New_Process_Name="C:\\Config.Msi\\*" (New_Process_Name="*.rbf" OR New_Process_Name="*.rbs")) OR (New_Process_Name="*\\AppData\\Local\\Packages\\*" New_Process_Name="*\\LocalState\\rootfs\\*") OR (New_Process_Name="*\\LZMA_EXE"))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Execution of Suspicious File Type Extension" | eval sigma_description="Checks whether the image specified in a process creation event doesn't refer to an .exe file (caused by process ghosting or other unorthodox methods to start a process)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Suspicious File Type Extension - sysmon]
description = Checks whether the image specified in a process creation event doesn't refer to an .exe file (caused by process ghosting or other unorthodox methods to start a process)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) NOT ((Image="*.exe" OR Image="*.tmp")) NOT ((NOT Image="*") OR ((Image="Registry" OR Image="MemCompression")) OR ((Image="-" OR Image="")) OR (Image="C:\\Windows\\Installer\\MSI*") OR ((ParentImage="C:\\ProgramData\\Avira\\*" OR ParentImage="C:\\Windows\\System32\\DriverStore\\FileRepository\\*")) OR (Image="*.scr") OR (Image="*NVIDIA\\NvBackend\\*" Image="*.dat") OR ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*") Image="*.com") OR (Image="*\\WinSCP.com") OR (Image="*C:\\Users\\*" Image="*\\AppData\\*" Image="*.tmp*" Image="*CodeSetup*") OR (Image="*\\program\\soffice.bin") OR ((Image="C:\\Program Files\\EMC NetWorker\\Management\\GST\\apache\\cgi-bin\\update_jnlp.cgi" OR Image="C:\\Program Files (x86)\\EMC NetWorker\\Management\\GST\\apache\\cgi-bin\\update_jnlp.cgi")) OR ((Image="C:\\Program Files (x86)\\WINPAKPRO\\*" OR Image="C:\\Program Files\\WINPAKPRO\\*") Image="*.ngn") OR ((Image="C:\\Program Files (x86)\\MyQ\\Server\\pcltool.dll" OR Image="C:\\Program Files\\MyQ\\Server\\pcltool.dll")) OR ((Image="C:\\Program Files\\Microsoft Visual Studio\\*" OR Image="C:\\Program Files (x86)\\Microsoft Visual Studio*") Image="*.com") OR (Image="C:\\Config.Msi\\*" (Image="*.rbf" OR Image="*.rbs")) OR (Image="*\\AppData\\Local\\Packages\\*" Image="*\\LocalState\\rootfs\\*") OR (Image="*\\LZMA_EXE"))) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Execution of Suspicious File Type Extension" | eval sigma_description="Checks whether the image specified in a process creation event doesn't refer to an .exe file (caused by process ghosting or other unorthodox methods to start a process)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious NT Resource Kit Auditpol Usage - winevent]
description = Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*/logon:none*" OR Process_Command_Line="*/system:none*" OR Process_Command_Line="*/sam:none*" OR Process_Command_Line="*/privilege:none*" OR Process_Command_Line="*/object:none*" OR Process_Command_Line="*/process:none*" OR Process_Command_Line="*/policy:none*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspicious NT Resource Kit Auditpol Usage" | eval sigma_description="Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious NT Resource Kit Auditpol Usage - sysmon]
description = Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*/logon:none*" OR CommandLine="*/system:none*" OR CommandLine="*/sam:none*" OR CommandLine="*/privilege:none*" OR CommandLine="*/object:none*" OR CommandLine="*/process:none*" OR CommandLine="*/policy:none*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.002" | eval sigma_title="Suspicious NT Resource Kit Auditpol Usage" | eval sigma_description="Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Ntdll Pipe Redirection - winevent]
description = Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*type %windir%\\system32\\ntdll.dll*" OR Process_Command_Line="*type %systemroot%\\system32\\ntdll.dll*" OR Process_Command_Line="*type c:\\windows\\system32\\ntdll.dll*" OR Process_Command_Line="*\\ntdll.dll > \\\\.\\pipe\\\*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Ntdll Pipe Redirection" | eval sigma_description="Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Ntdll Pipe Redirection - sysmon]
description = Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*type %windir%\\system32\\ntdll.dll*" OR CommandLine="*type %systemroot%\\system32\\ntdll.dll*" OR CommandLine="*type c:\\windows\\system32\\ntdll.dll*" OR CommandLine="*\\ntdll.dll > \\\\.\\pipe\\\*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Ntdll Pipe Redirection" | eval sigma_description="Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Patterns NTDS.DIT Exfil - winevent]
description = Detects suspicious process patterns used in NTDS.DIT exfiltration
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((((New_Process_Name="*\\NTDSDump.exe" OR New_Process_Name="*\\NTDSDumpEx.exe") OR (Process_Command_Line="*ntds.dit*" Process_Command_Line="*system.hiv*") OR Process_Command_Line="*NTDSgrab.ps1*") OR (Process_Command_Line="*ac i ntds*" Process_Command_Line="*create full*") OR (Process_Command_Line="*/c copy *" Process_Command_Line="*\\windows\\ntds\\ntds.dit*") OR (Process_Command_Line="*powershell*" Process_Command_Line="*ntds.dit*")) OR (Process_Command_Line="*ntds.dit*" ((Creator_Process_Name="*\\apache*" OR Creator_Process_Name="*\\tomcat*" OR Creator_Process_Name="*\\AppData\\*" OR Creator_Process_Name="*\\Temp\\*" OR Creator_Process_Name="*\\Public\\*" OR Creator_Process_Name="*\\PerfLogs\\*") OR (New_Process_Name="*\\apache*" OR New_Process_Name="*\\tomcat*" OR New_Process_Name="*\\AppData\\*" OR New_Process_Name="*\\Temp\\*" OR New_Process_Name="*\\Public\\*" OR New_Process_Name="*\\PerfLogs\\*"))))) | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Suspicious Process Patterns NTDS.DIT Exfil" | eval sigma_description="Detects suspicious process patterns used in NTDS.DIT exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Patterns NTDS.DIT Exfil - sysmon]
description = Detects suspicious process patterns used in NTDS.DIT exfiltration
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((((Image="*\\NTDSDump.exe" OR Image="*\\NTDSDumpEx.exe") OR (CommandLine="*ntds.dit*" CommandLine="*system.hiv*") OR CommandLine="*NTDSgrab.ps1*") OR (CommandLine="*ac i ntds*" CommandLine="*create full*") OR (CommandLine="*/c copy *" CommandLine="*\\windows\\ntds\\ntds.dit*") OR (CommandLine="*powershell*" CommandLine="*ntds.dit*")) OR (CommandLine="*ntds.dit*" ((ParentImage="*\\apache*" OR ParentImage="*\\tomcat*" OR ParentImage="*\\AppData\\*" OR ParentImage="*\\Temp\\*" OR ParentImage="*\\Public\\*" OR ParentImage="*\\PerfLogs\\*") OR (Image="*\\apache*" OR Image="*\\tomcat*" OR Image="*\\AppData\\*" OR Image="*\\Temp\\*" OR Image="*\\Public\\*" OR Image="*\\PerfLogs\\*"))))) | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Suspicious Process Patterns NTDS.DIT Exfil" | eval sigma_description="Detects suspicious process patterns used in NTDS.DIT exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invocation of Active Directory Diagnostic Tool (ntdsutil.exe) - winevent]
description = Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\ntdsutil.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)" | eval sigma_description="Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invocation of Active Directory Diagnostic Tool (ntdsutil.exe) - sysmon]
description = Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\ntdsutil.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003.003" | eval sigma_title="Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)" | eval sigma_description="Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WebDav Client Execution - winevent]
description = Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*C:\\windows\\system32\\davclnt.dll,DavSetCookie*" Process_Command_Line="*http*" (Process_Command_Line="*spoolss*" OR Process_Command_Line="*srvsvc*" OR Process_Command_Line="*/print/pipe/*")) | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access attack.t1212" | eval sigma_title="Suspicious WebDav Client Execution" | eval sigma_description="Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WebDav Client Execution - sysmon]
description = Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*C:\\windows\\system32\\davclnt.dll,DavSetCookie*" CommandLine="*http*" (CommandLine="*spoolss*" OR CommandLine="*srvsvc*" OR CommandLine="*/print/pipe/*")) | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access attack.t1212" | eval sigma_title="Suspicious WebDav Client Execution" | eval sigma_description="Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via DLL Loaded by odbcconf.exe - winevent]
description = Detects defence evasion attempt via odbcconf.exe execution to load DLL
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\odbcconf.exe" (Process_Command_Line="*-f*" OR Process_Command_Line="*regsvr*")) OR (Creator_Process_Name="*\\odbcconf.exe" New_Process_Name="*\\rundll32.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.008" | eval sigma_title="Application Whitelisting Bypass via DLL Loaded by odbcconf.exe" | eval sigma_description="Detects defence evasion attempt via odbcconf.exe execution to load DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via DLL Loaded by odbcconf.exe - sysmon]
description = Detects defence evasion attempt via odbcconf.exe execution to load DLL
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\odbcconf.exe" (CommandLine="*-f*" OR CommandLine="*regsvr*")) OR (ParentImage="*\\odbcconf.exe" Image="*\\rundll32.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.008" | eval sigma_title="Application Whitelisting Bypass via DLL Loaded by odbcconf.exe" | eval sigma_description="Detects defence evasion attempt via odbcconf.exe execution to load DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[OpenWith.exe Executes Specified Binary - winevent]
description = The OpenWith.exe executes other binary
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\OpenWith.exe" Process_Command_Line="*/c*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="OpenWith.exe Executes Specified Binary" | eval sigma_description="The OpenWith.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[OpenWith.exe Executes Specified Binary - sysmon]
description = The OpenWith.exe executes other binary
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\OpenWith.exe" CommandLine="*/c*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="OpenWith.exe Executes Specified Binary" | eval sigma_description="The OpenWith.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Outlook Temp Folder - winevent]
description = Detects a suspicious program execution in Outlook temp folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Temporary Internet Files\\Content.Outlook\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.initial_access attack.t1566.001" | eval sigma_title="Execution in Outlook Temp Folder" | eval sigma_description="Detects a suspicious program execution in Outlook temp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Outlook Temp Folder - sysmon]
description = Detects a suspicious program execution in Outlook temp folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Temporary Internet Files\\Content.Outlook\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.initial_access attack.t1566.001" | eval sigma_title="Execution in Outlook Temp Folder" | eval sigma_description="Detects a suspicious program execution in Outlook temp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution from Outlook - winevent]
description = Detects EnableUnsafeClientMailRules used for Script Execution from Outlook
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*EnableUnsafeClientMailRules*" OR (Creator_Process_Name="*\\outlook.exe" Process_Command_Line="*\\\\\*" Process_Command_Line="*\\\*" Process_Command_Line="*.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1202" | eval sigma_title="Suspicious Execution from Outlook" | eval sigma_description="Detects EnableUnsafeClientMailRules used for Script Execution from Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution from Outlook - sysmon]
description = Detects EnableUnsafeClientMailRules used for Script Execution from Outlook
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*EnableUnsafeClientMailRules*" OR (ParentImage="*\\outlook.exe" CommandLine="*\\\\\*" CommandLine="*\\\*" CommandLine="*.exe*"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1202" | eval sigma_title="Suspicious Execution from Outlook" | eval sigma_description="Detects EnableUnsafeClientMailRules used for Script Execution from Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Parents - winevent]
description = Detects suspicious parent processes that should not have any children or should only have a single possible child program
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\minesweeper.exe" OR Creator_Process_Name="*\\winver.exe" OR Creator_Process_Name="*\\bitsadmin.exe") OR ((Creator_Process_Name="*\\csrss.exe" OR Creator_Process_Name="*\\certutil.exe" OR Creator_Process_Name="*\\schtasks.exe" OR Creator_Process_Name="*\\eventvwr.exe" OR Creator_Process_Name="*\\calc.exe" OR Creator_Process_Name="*\\notepad.exe") NOT (((New_Process_Name="*\\WerFault.exe" OR New_Process_Name="*\\wermgr.exe" OR New_Process_Name="*\\conhost.exe" OR New_Process_Name="*\\mmc.exe" OR New_Process_Name="*\\win32calc.exe" OR New_Process_Name="*\\notepad.exe")) OR (NOT New_Process_Name="*"))))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Process Parents" | eval sigma_description="Detects suspicious parent processes that should not have any children or should only have a single possible child program"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Parents - sysmon]
description = Detects suspicious parent processes that should not have any children or should only have a single possible child program
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\minesweeper.exe" OR ParentImage="*\\winver.exe" OR ParentImage="*\\bitsadmin.exe") OR ((ParentImage="*\\csrss.exe" OR ParentImage="*\\certutil.exe" OR ParentImage="*\\schtasks.exe" OR ParentImage="*\\eventvwr.exe" OR ParentImage="*\\calc.exe" OR ParentImage="*\\notepad.exe") NOT (((Image="*\\WerFault.exe" OR Image="*\\wermgr.exe" OR Image="*\\conhost.exe" OR Image="*\\mmc.exe" OR Image="*\\win32calc.exe" OR Image="*\\notepad.exe")) OR (NOT Image="*"))))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Process Parents" | eval sigma_description="Detects suspicious parent processes that should not have any children or should only have a single possible child program"
dispatch.earliest_time = -24h@h
alert.track = 0

[Code Execution via Pcwutl.dll - winevent]
description = Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*pcwutl*" Process_Command_Line="*LaunchApplication*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Code Execution via Pcwutl.dll" | eval sigma_description="Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library."
dispatch.earliest_time = -24h@h
alert.track = 0

[Code Execution via Pcwutl.dll - sysmon]
description = Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*pcwutl*" CommandLine="*LaunchApplication*") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Code Execution via Pcwutl.dll" | eval sigma_description="Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library."
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Code with Pester.bat - winevent]
description = Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" Process_Command_Line="*Pester*" Process_Command_Line="*Get-Help*") OR (New_Process_Name="*\\cmd.exe" Process_Command_Line="*pester*" Process_Command_Line="*;*" (Process_Command_Line="*help*" OR Process_Command_Line="*?*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1216" | eval sigma_title="Execute Code with Pester.bat" | eval sigma_description="Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execute Code with Pester.bat - sysmon]
description = Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" CommandLine="*Pester*" CommandLine="*Get-Help*") OR (Image="*\\cmd.exe" CommandLine="*pester*" CommandLine="*;*" (CommandLine="*help*" OR CommandLine="*?*")))) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1216" | eval sigma_title="Execute Code with Pester.bat" | eval sigma_description="Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ping Hex IP - winevent]
description = Detects a ping command that uses a hex encoded IP address
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\ping.exe" Process_Command_Line="*0x*") | table ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1027" | eval sigma_title="Ping Hex IP" | eval sigma_description="Detects a ping command that uses a hex encoded IP address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ping Hex IP - sysmon]
description = Detects a ping command that uses a hex encoded IP address
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\ping.exe" CommandLine="*0x*") | table ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1027" | eval sigma_title="Ping Hex IP" | eval sigma_description="Detects a ping command that uses a hex encoded IP address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Plink Remote Forwarding - winevent]
description = Detects suspicious Plink tunnel remote forarding to a local port
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Description="Command-line SSH, Telnet, and Rlogin client" Process_Command_Line="* -R *") | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001" | eval sigma_title="Suspicious Plink Remote Forwarding" | eval sigma_description="Detects suspicious Plink tunnel remote forarding to a local port"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Plink Remote Forwarding - sysmon]
description = Detects suspicious Plink tunnel remote forarding to a local port
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="Command-line SSH, Telnet, and Rlogin client" CommandLine="* -R *") | eval sigma_attack_tags="attack.command_and_control attack.t1572 attack.lateral_movement attack.t1021.001" | eval sigma_title="Suspicious Plink Remote Forwarding" | eval sigma_description="Detects suspicious Plink tunnel remote forarding to a local port"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Encoded Command Patterns - winevent]
description = Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" (Process_Command_Line="* -e *" OR Process_Command_Line="* -en *" OR Process_Command_Line="* -enc *" OR Process_Command_Line="* -enco*") (Process_Command_Line="* JAB*" OR Process_Command_Line="* SUVYI*" OR Process_Command_Line="* SQBFAFgA*" OR Process_Command_Line="* aWV4I*" OR Process_Command_Line="* IAB*" OR Process_Command_Line="* PAA*" OR Process_Command_Line="* aQBlAHgA*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Encoded Command Patterns" | eval sigma_description="Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Encoded Command Patterns - sysmon]
description = Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" (CommandLine="* -e *" OR CommandLine="* -en *" OR CommandLine="* -enc *" OR CommandLine="* -enco*") (CommandLine="* JAB*" OR CommandLine="* SUVYI*" OR CommandLine="* SQBFAFgA*" OR CommandLine="* aWV4I*" OR CommandLine="* IAB*" OR CommandLine="* PAA*" OR CommandLine="* aQBlAHgA*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Encoded Command Patterns" | eval sigma_description="Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Web Download - winevent]
description = Detects suspicious ways to download files or content using PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*.DownloadString(*" OR Process_Command_Line="*.DownloadFile(*")) | eval sigma_attack_tags="" | eval sigma_title="PowerShell Web Download" | eval sigma_description="Detects suspicious ways to download files or content using PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Web Download - sysmon]
description = Detects suspicious ways to download files or content using PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*.DownloadString(*" OR CommandLine="*.DownloadFile(*")) | eval sigma_attack_tags="" | eval sigma_title="PowerShell Web Download" | eval sigma_description="Detects suspicious ways to download files or content using PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Web Download and Execution - winevent]
description = Detects suspicious ways to download files or content using PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*.DownloadString(*" OR Process_Command_Line="*.DownloadFile(*") (Process_Command_Line="*IEX(*" OR Process_Command_Line="*IEX (*" OR Process_Command_Line="*I`EX*" OR Process_Command_Line="*IE`X*" OR Process_Command_Line="*I`E`X*" OR Process_Command_Line="* | IEX*" OR Process_Command_Line="*|IEX *" OR Process_Command_Line="*Invoke-Execution*" OR Process_Command_Line="*;iex $*")) | eval sigma_attack_tags="attack.t1546.013" | eval sigma_title="PowerShell Web Download and Execution" | eval sigma_description="Detects suspicious ways to download files or content using PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Web Download and Execution - sysmon]
description = Detects suspicious ways to download files or content using PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*.DownloadString(*" OR CommandLine="*.DownloadFile(*") (CommandLine="*IEX(*" OR CommandLine="*IEX (*" OR CommandLine="*I`EX*" OR CommandLine="*IE`X*" OR CommandLine="*I`E`X*" OR CommandLine="* | IEX*" OR CommandLine="*|IEX *" OR CommandLine="*Invoke-Execution*" OR CommandLine="*;iex $*")) | eval sigma_attack_tags="attack.t1546.013" | eval sigma_title="PowerShell Web Download and Execution" | eval sigma_description="Detects suspicious ways to download files or content using PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell Launch Parameters - winevent]
description = Detects suspicious powershell command line parameters used in Empire
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -NoP -sta -NonI -W Hidden -Enc *" OR Process_Command_Line="* -noP -sta -w 1 -enc *" OR Process_Command_Line="* -NoP -NonI -W Hidden -enc *" OR Process_Command_Line="* -noP -sta -w 1 -enc*" OR Process_Command_Line="* -enc  SQB*" OR Process_Command_Line="* -nop -exec bypass -EncodedCommand *")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Empire PowerShell Launch Parameters" | eval sigma_description="Detects suspicious powershell command line parameters used in Empire"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell Launch Parameters - sysmon]
description = Detects suspicious powershell command line parameters used in Empire
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -NoP -sta -NonI -W Hidden -Enc *" OR CommandLine="* -noP -sta -w 1 -enc *" OR CommandLine="* -NoP -NonI -W Hidden -enc *" OR CommandLine="* -noP -sta -w 1 -enc*" OR CommandLine="* -enc  SQB*" OR CommandLine="* -nop -exec bypass -EncodedCommand *")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Empire PowerShell Launch Parameters" | eval sigma_description="Detects suspicious powershell command line parameters used in Empire"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell UAC Bypass - winevent]
description = Detects some Empire PowerShell UAC bypass methods
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)*" OR Process_Command_Line="* -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002 car.2019-04-001" | eval sigma_title="Empire PowerShell UAC Bypass" | eval sigma_description="Detects some Empire PowerShell UAC bypass methods"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell UAC Bypass - sysmon]
description = Detects some Empire PowerShell UAC bypass methods
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)*" OR CommandLine="* -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002 car.2019-04-001" | eval sigma_title="Empire PowerShell UAC Bypass" | eval sigma_description="Detects some Empire PowerShell UAC bypass methods"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - winevent]
description = Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="* -e*" Process_Command_Line="* JAB*") OR (Process_Command_Line="* -e*" Process_Command_Line="* JAB*" Process_Command_Line="* -w*" Process_Command_Line="* hidden *")) OR (Process_Command_Line="* -e*" (Process_Command_Line="* BA^J*" OR Process_Command_Line="* SUVYI*" OR Process_Command_Line="* SQBFAFgA*" OR Process_Command_Line="* aQBlAHgA*" OR Process_Command_Line="* aWV4I*" OR Process_Command_Line="* IAA*" OR Process_Command_Line="* IAB*" OR Process_Command_Line="* UwB*" OR Process_Command_Line="* cwB*")) OR Process_Command_Line="*.exe -ENCOD *") NOT (Process_Command_Line="* -ExecutionPolicy*" Process_Command_Line="*remotesigned *")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - sysmon]
description = Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="* -e*" CommandLine="* JAB*") OR (CommandLine="* -e*" CommandLine="* JAB*" CommandLine="* -w*" CommandLine="* hidden *")) OR (CommandLine="* -e*" (CommandLine="* BA^J*" OR CommandLine="* SUVYI*" OR CommandLine="* SQBFAFgA*" OR CommandLine="* aQBlAHgA*" OR CommandLine="* aWV4I*" OR CommandLine="* IAA*" OR CommandLine="* IAB*" OR CommandLine="* UwB*" OR CommandLine="* cwB*")) OR CommandLine="*.exe -ENCOD *") NOT (CommandLine="* -ExecutionPolicy*" CommandLine="*remotesigned *")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Encoded Character Syntax - winevent]
description = Detects suspicious encoded character syntax often used for defense evasion
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*(WCHAR)0x*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Encoded Character Syntax" | eval sigma_description="Detects suspicious encoded character syntax often used for defense evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Encoded Character Syntax - sysmon]
description = Detects suspicious encoded character syntax often used for defense evasion
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*(WCHAR)0x*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1027" | eval sigma_title="PowerShell Encoded Character Syntax" | eval sigma_description="Detects suspicious encoded character syntax often used for defense evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Process LSASS - winevent]
description = Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Get-Process lsass*") | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="PowerShell Get-Process LSASS" | eval sigma_description="Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Get-Process LSASS - sysmon]
description = Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Get-Process lsass*") | eval sigma_attack_tags="attack.credential_access attack.t1552.004" | eval sigma_title="PowerShell Get-Process LSASS" | eval sigma_description="Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded PowerShell Keywords in Command Lines - winevent]
description = Detects base64 encoded strings used in hidden malicious PowerShell command lines
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="* hidden *" (Process_Command_Line="*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*" OR Process_Command_Line="*aXRzYWRtaW4gL3RyYW5zZmVy*" OR Process_Command_Line="*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*" OR Process_Command_Line="*JpdHNhZG1pbiAvdHJhbnNmZX*" OR Process_Command_Line="*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*" OR Process_Command_Line="*Yml0c2FkbWluIC90cmFuc2Zlc*" OR Process_Command_Line="*AGMAaAB1AG4AawBfAHMAaQB6AGUA*" OR Process_Command_Line="*JABjAGgAdQBuAGsAXwBzAGkAegBlA*" OR Process_Command_Line="*JGNodW5rX3Npem*" OR Process_Command_Line="*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*" OR Process_Command_Line="*RjaHVua19zaXpl*" OR Process_Command_Line="*Y2h1bmtfc2l6Z*" OR Process_Command_Line="*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*" OR Process_Command_Line="*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*" OR Process_Command_Line="*lPLkNvbXByZXNzaW9u*" OR Process_Command_Line="*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*" OR Process_Command_Line="*SU8uQ29tcHJlc3Npb2*" OR Process_Command_Line="*Ty5Db21wcmVzc2lvb*" OR Process_Command_Line="*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*" OR Process_Command_Line="*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*" OR Process_Command_Line="*lPLk1lbW9yeVN0cmVhb*" OR Process_Command_Line="*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*" OR Process_Command_Line="*SU8uTWVtb3J5U3RyZWFt*" OR Process_Command_Line="*Ty5NZW1vcnlTdHJlYW*" OR Process_Command_Line="*4ARwBlAHQAQwBoAHUAbgBrA*" OR Process_Command_Line="*5HZXRDaHVua*" OR Process_Command_Line="*AEcAZQB0AEMAaAB1AG4Aaw*" OR Process_Command_Line="*LgBHAGUAdABDAGgAdQBuAGsA*" OR Process_Command_Line="*LkdldENodW5r*" OR Process_Command_Line="*R2V0Q2h1bm*" OR Process_Command_Line="*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*" OR Process_Command_Line="*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*" OR Process_Command_Line="*RIUkVBRF9JTkZPNj*" OR Process_Command_Line="*SFJFQURfSU5GTzY0*" OR Process_Command_Line="*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*" OR Process_Command_Line="*VEhSRUFEX0lORk82N*" OR Process_Command_Line="*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*" OR Process_Command_Line="*cmVhdGVSZW1vdGVUaHJlYW*" OR Process_Command_Line="*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*" OR Process_Command_Line="*NyZWF0ZVJlbW90ZVRocmVhZ*" OR Process_Command_Line="*Q3JlYXRlUmVtb3RlVGhyZWFk*" OR Process_Command_Line="*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*" OR Process_Command_Line="*0AZQBtAG0AbwB2AGUA*" OR Process_Command_Line="*1lbW1vdm*" OR Process_Command_Line="*AGUAbQBtAG8AdgBlA*" OR Process_Command_Line="*bQBlAG0AbQBvAHYAZQ*" OR Process_Command_Line="*bWVtbW92Z*" OR Process_Command_Line="*ZW1tb3Zl*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious Base64 Encoded PowerShell Keywords in Command Lines" | eval sigma_description="Detects base64 encoded strings used in hidden malicious PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded PowerShell Keywords in Command Lines - sysmon]
description = Detects base64 encoded strings used in hidden malicious PowerShell command lines
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="* hidden *" (CommandLine="*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*" OR CommandLine="*aXRzYWRtaW4gL3RyYW5zZmVy*" OR CommandLine="*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*" OR CommandLine="*JpdHNhZG1pbiAvdHJhbnNmZX*" OR CommandLine="*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*" OR CommandLine="*Yml0c2FkbWluIC90cmFuc2Zlc*" OR CommandLine="*AGMAaAB1AG4AawBfAHMAaQB6AGUA*" OR CommandLine="*JABjAGgAdQBuAGsAXwBzAGkAegBlA*" OR CommandLine="*JGNodW5rX3Npem*" OR CommandLine="*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*" OR CommandLine="*RjaHVua19zaXpl*" OR CommandLine="*Y2h1bmtfc2l6Z*" OR CommandLine="*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*" OR CommandLine="*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*" OR CommandLine="*lPLkNvbXByZXNzaW9u*" OR CommandLine="*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*" OR CommandLine="*SU8uQ29tcHJlc3Npb2*" OR CommandLine="*Ty5Db21wcmVzc2lvb*" OR CommandLine="*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*" OR CommandLine="*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*" OR CommandLine="*lPLk1lbW9yeVN0cmVhb*" OR CommandLine="*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*" OR CommandLine="*SU8uTWVtb3J5U3RyZWFt*" OR CommandLine="*Ty5NZW1vcnlTdHJlYW*" OR CommandLine="*4ARwBlAHQAQwBoAHUAbgBrA*" OR CommandLine="*5HZXRDaHVua*" OR CommandLine="*AEcAZQB0AEMAaAB1AG4Aaw*" OR CommandLine="*LgBHAGUAdABDAGgAdQBuAGsA*" OR CommandLine="*LkdldENodW5r*" OR CommandLine="*R2V0Q2h1bm*" OR CommandLine="*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*" OR CommandLine="*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*" OR CommandLine="*RIUkVBRF9JTkZPNj*" OR CommandLine="*SFJFQURfSU5GTzY0*" OR CommandLine="*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*" OR CommandLine="*VEhSRUFEX0lORk82N*" OR CommandLine="*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*" OR CommandLine="*cmVhdGVSZW1vdGVUaHJlYW*" OR CommandLine="*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*" OR CommandLine="*NyZWF0ZVJlbW90ZVRocmVhZ*" OR CommandLine="*Q3JlYXRlUmVtb3RlVGhyZWFk*" OR CommandLine="*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*" OR CommandLine="*0AZQBtAG0AbwB2AGUA*" OR CommandLine="*1lbW1vdm*" OR CommandLine="*AGUAbQBtAG8AdgBlA*" OR CommandLine="*bQBlAG0AbQBvAHYAZQ*" OR CommandLine="*bWVtbW92Z*" OR CommandLine="*ZW1tb3Zl*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Malicious Base64 Encoded PowerShell Keywords in Command Lines" | eval sigma_description="Detects base64 encoded strings used in hidden malicious PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell IEX Execution Patterns - winevent]
description = Detects suspicious ways to run Invoke-Execution using IEX acronym
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" Process_Command_Line="*-' | iex;' -' | iex ' -' | iex}' -' | IEX;' -' | IEX ;' -' | IEX -Error' -' | IEX (new' -' | IEX (New' -');IEX '*" (Process_Command_Line="*::FromBase64String*" OR Process_Command_Line="*.GetString([System.Convert]::*")) OR Process_Command_Line="*-')|iex;$' -')|IEX;$' -');iex($' -');iex $' -' | IEX | '*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious PowerShell IEX Execution Patterns" | eval sigma_description="Detects suspicious ways to run Invoke-Execution using IEX acronym"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell IEX Execution Patterns - sysmon]
description = Detects suspicious ways to run Invoke-Execution using IEX acronym
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" CommandLine="*-' | iex;' -' | iex ' -' | iex}' -' | IEX;' -' | IEX ;' -' | IEX -Error' -' | IEX (new' -' | IEX (New' -');IEX '*" (CommandLine="*::FromBase64String*" OR CommandLine="*.GetString([System.Convert]::*")) OR CommandLine="*-')|iex;$' -')|IEX;$' -');iex($' -');iex $' -' | IEX | '*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious PowerShell IEX Execution Patterns" | eval sigma_description="Detects suspicious ways to run Invoke-Execution using IEX acronym"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocation Based on Parent Process - winevent]
description = Detects suspicious powershell invocations from interpreters or unusual programs
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\cscript.exe") New_Process_Name="*\\powershell.exe") NOT (CurrentDirectory="*\\Health Service State\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Invocation Based on Parent Process" | eval sigma_description="Detects suspicious powershell invocations from interpreters or unusual programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocation Based on Parent Process - sysmon]
description = Detects suspicious powershell invocations from interpreters or unusual programs
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe") Image="*\\powershell.exe") NOT (CurrentDirectory="*\\Health Service State\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Invocation Based on Parent Process" | eval sigma_description="Detects suspicious powershell invocations from interpreters or unusual programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parent Process - winevent]
description = Detects a suspicious parents of powershell.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\mshta.exe" OR Creator_Process_Name="*\\rundll32.exe" OR Creator_Process_Name="*\\regsvr32.exe" OR Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\winword.exe" OR Creator_Process_Name="*\\wmiprvse.exe" OR Creator_Process_Name="*\\powerpnt.exe" OR Creator_Process_Name="*\\excel.exe" OR Creator_Process_Name="*\\msaccess.exe" OR Creator_Process_Name="*\\mspub.exe" OR Creator_Process_Name="*\\visio.exe" OR Creator_Process_Name="*\\outlook.exe" OR Creator_Process_Name="*\\amigo.exe" OR Creator_Process_Name="*\\chrome.exe" OR Creator_Process_Name="*\\firefox.exe" OR Creator_Process_Name="*\\iexplore.exe" OR Creator_Process_Name="*\\microsoftedgecp.exe" OR Creator_Process_Name="*\\microsoftedge.exe" OR Creator_Process_Name="*\\browser.exe" OR Creator_Process_Name="*\\vivaldi.exe" OR Creator_Process_Name="*\\safari.exe" OR Creator_Process_Name="*\\sqlagent.exe" OR Creator_Process_Name="*\\sqlserver.exe" OR Creator_Process_Name="*\\sqlservr.exe" OR Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\jbosssvc.exe" OR Creator_Process_Name="*MicrosoftEdgeSH.exe") OR Creator_Process_Name="*tomcat*") (New_Process_Name="*\\powershell.exe" OR (Process_Command_Line="*powershell*" OR Process_Command_Line="*pwsh*") OR Description="Windows PowerShell" OR Product="PowerShell Core 6")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Parent Process" | eval sigma_description="Detects a suspicious parents of powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parent Process - sysmon]
description = Detects a suspicious parents of powershell.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\mshta.exe" OR ParentImage="*\\rundll32.exe" OR ParentImage="*\\regsvr32.exe" OR ParentImage="*\\services.exe" OR ParentImage="*\\winword.exe" OR ParentImage="*\\wmiprvse.exe" OR ParentImage="*\\powerpnt.exe" OR ParentImage="*\\excel.exe" OR ParentImage="*\\msaccess.exe" OR ParentImage="*\\mspub.exe" OR ParentImage="*\\visio.exe" OR ParentImage="*\\outlook.exe" OR ParentImage="*\\amigo.exe" OR ParentImage="*\\chrome.exe" OR ParentImage="*\\firefox.exe" OR ParentImage="*\\iexplore.exe" OR ParentImage="*\\microsoftedgecp.exe" OR ParentImage="*\\microsoftedge.exe" OR ParentImage="*\\browser.exe" OR ParentImage="*\\vivaldi.exe" OR ParentImage="*\\safari.exe" OR ParentImage="*\\sqlagent.exe" OR ParentImage="*\\sqlserver.exe" OR ParentImage="*\\sqlservr.exe" OR ParentImage="*\\w3wp.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\jbosssvc.exe" OR ParentImage="*MicrosoftEdgeSH.exe") OR ParentImage="*tomcat*") (Image="*\\powershell.exe" OR (CommandLine="*powershell*" OR CommandLine="*pwsh*") OR Description="Windows PowerShell" OR Product="PowerShell Core 6")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Suspicious PowerShell Parent Process" | eval sigma_description="Detects a suspicious parents of powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell SAM Copy - winevent]
description = Detects suspicious PowerShell scripts accessing SAM hives
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\HarddiskVolumeShadowCopy*" Process_Command_Line="*ystem32\\config\\sam*" (Process_Command_Line="*Copy-Item*" OR Process_Command_Line="*cp $_.*" OR Process_Command_Line="*cpi $_.*" OR Process_Command_Line="*copy $_.*" OR Process_Command_Line="*.File]::Copy(*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="PowerShell SAM Copy" | eval sigma_description="Detects suspicious PowerShell scripts accessing SAM hives"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell SAM Copy - sysmon]
description = Detects suspicious PowerShell scripts accessing SAM hives
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\HarddiskVolumeShadowCopy*" CommandLine="*ystem32\\config\\sam*" (CommandLine="*Copy-Item*" OR CommandLine="*cp $_.*" OR CommandLine="*cpi $_.*" OR CommandLine="*copy $_.*" OR CommandLine="*.File]::Copy(*")) | eval sigma_attack_tags="attack.credential_access attack.t1003.002" | eval sigma_title="PowerShell SAM Copy" | eval sigma_description="Detects suspicious PowerShell scripts accessing SAM hives"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Sub Processes - winevent]
description = Detects suspicious sub processes spawned by PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" (New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious PowerShell Sub Processes" | eval sigma_description="Detects suspicious sub processes spawned by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Sub Processes - sysmon]
description = Detects suspicious sub processes spawned by PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" (Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\schtasks.exe" OR Image="*\\certutil.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\scrcons.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious PowerShell Sub Processes" | eval sigma_description="Detects suspicious sub processes spawned by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net WebClient Casing Anomalies - winevent]
description = Detects PowerShell command line contents that include a suspicious anormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" (Process_Command_Line="*TgBlAFQALgB3AEUAQg*" OR Process_Command_Line="*4AZQBUAC4AdwBFAEIA*" OR Process_Command_Line="*OAGUAVAAuAHcARQBCA*" OR Process_Command_Line="*bgBFAHQALgB3AGUAYg*" OR Process_Command_Line="*4ARQB0AC4AdwBlAGIA*" OR Process_Command_Line="*uAEUAdAAuAHcAZQBiA*" OR Process_Command_Line="*TgBFAHQALgB3AGUAYg*" OR Process_Command_Line="*OAEUAdAAuAHcAZQBiA*" OR Process_Command_Line="*bgBlAFQALgB3AGUAYg*" OR Process_Command_Line="*4AZQBUAC4AdwBlAGIA*" OR Process_Command_Line="*uAGUAVAAuAHcAZQBiA*" OR Process_Command_Line="*TgBlAFQALgB3AGUAYg*" OR Process_Command_Line="*OAGUAVAAuAHcAZQBiA*" OR Process_Command_Line="*bgBFAFQALgB3AGUAYg*" OR Process_Command_Line="*4ARQBUAC4AdwBlAGIA*" OR Process_Command_Line="*uAEUAVAAuAHcAZQBiA*" OR Process_Command_Line="*bgBlAHQALgBXAGUAYg*" OR Process_Command_Line="*4AZQB0AC4AVwBlAGIA*" OR Process_Command_Line="*uAGUAdAAuAFcAZQBiA*" OR Process_Command_Line="*bgBFAHQALgBXAGUAYg*" OR Process_Command_Line="*4ARQB0AC4AVwBlAGIA*" OR Process_Command_Line="*uAEUAdAAuAFcAZQBiA*" OR Process_Command_Line="*TgBFAHQALgBXAGUAYg*" OR Process_Command_Line="*OAEUAdAAuAFcAZQBiA*" OR Process_Command_Line="*bgBlAFQALgBXAGUAYg*" OR Process_Command_Line="*4AZQBUAC4AVwBlAGIA*" OR Process_Command_Line="*uAGUAVAAuAFcAZQBiA*" OR Process_Command_Line="*TgBlAFQALgBXAGUAYg*" OR Process_Command_Line="*OAGUAVAAuAFcAZQBiA*" OR Process_Command_Line="*bgBFAFQALgBXAGUAYg*" OR Process_Command_Line="*4ARQBUAC4AVwBlAGIA*" OR Process_Command_Line="*uAEUAVAAuAFcAZQBiA*" OR Process_Command_Line="*bgBlAHQALgB3AEUAYg*" OR Process_Command_Line="*4AZQB0AC4AdwBFAGIA*" OR Process_Command_Line="*uAGUAdAAuAHcARQBiA*" OR Process_Command_Line="*TgBlAHQALgB3AEUAYg*" OR Process_Command_Line="*OAGUAdAAuAHcARQBiA*" OR Process_Command_Line="*bgBFAHQALgB3AEUAYg*" OR Process_Command_Line="*4ARQB0AC4AdwBFAGIA*" OR Process_Command_Line="*uAEUAdAAuAHcARQBiA*" OR Process_Command_Line="*TgBFAHQALgB3AEUAYg*" OR Process_Command_Line="*OAEUAdAAuAHcARQBiA*" OR Process_Command_Line="*bgBlAFQALgB3AEUAYg*" OR Process_Command_Line="*4AZQBUAC4AdwBFAGIA*" OR Process_Command_Line="*uAGUAVAAuAHcARQBiA*" OR Process_Command_Line="*TgBlAFQALgB3AEUAYg*" OR Process_Command_Line="*OAGUAVAAuAHcARQBiA*" OR Process_Command_Line="*bgBFAFQALgB3AEUAYg*" OR Process_Command_Line="*4ARQBUAC4AdwBFAGIA*" OR Process_Command_Line="*uAEUAVAAuAHcARQBiA*" OR Process_Command_Line="*TgBFAFQALgB3AEUAYg*" OR Process_Command_Line="*OAEUAVAAuAHcARQBiA*" OR Process_Command_Line="*bgBlAHQALgBXAEUAYg*" OR Process_Command_Line="*4AZQB0AC4AVwBFAGIA*" OR Process_Command_Line="*uAGUAdAAuAFcARQBiA*" OR Process_Command_Line="*TgBlAHQALgBXAEUAYg*" OR Process_Command_Line="*OAGUAdAAuAFcARQBiA*" OR Process_Command_Line="*bgBFAHQALgBXAEUAYg*" OR Process_Command_Line="*4ARQB0AC4AVwBFAGIA*" OR Process_Command_Line="*uAEUAdAAuAFcARQBiA*" OR Process_Command_Line="*TgBFAHQALgBXAEUAYg*" OR Process_Command_Line="*OAEUAdAAuAFcARQBiA*" OR Process_Command_Line="*bgBlAFQALgBXAEUAYg*" OR Process_Command_Line="*4AZQBUAC4AVwBFAGIA*" OR Process_Command_Line="*uAGUAVAAuAFcARQBiA*" OR Process_Command_Line="*TgBlAFQALgBXAEUAYg*" OR Process_Command_Line="*OAGUAVAAuAFcARQBiA*" OR Process_Command_Line="*bgBFAFQALgBXAEUAYg*" OR Process_Command_Line="*4ARQBUAC4AVwBFAGIA*" OR Process_Command_Line="*uAEUAVAAuAFcARQBiA*" OR Process_Command_Line="*TgBFAFQALgBXAEUAYg*" OR Process_Command_Line="*OAEUAVAAuAFcARQBiA*" OR Process_Command_Line="*bgBlAHQALgB3AGUAQg*" OR Process_Command_Line="*4AZQB0AC4AdwBlAEIA*" OR Process_Command_Line="*uAGUAdAAuAHcAZQBCA*" OR Process_Command_Line="*TgBlAHQALgB3AGUAQg*" OR Process_Command_Line="*OAGUAdAAuAHcAZQBCA*" OR Process_Command_Line="*bgBFAHQALgB3AGUAQg*" OR Process_Command_Line="*4ARQB0AC4AdwBlAEIA*" OR Process_Command_Line="*uAEUAdAAuAHcAZQBCA*" OR Process_Command_Line="*TgBFAHQALgB3AGUAQg*" OR Process_Command_Line="*OAEUAdAAuAHcAZQBCA*" OR Process_Command_Line="*bgBlAFQALgB3AGUAQg*" OR Process_Command_Line="*4AZQBUAC4AdwBlAEIA*" OR Process_Command_Line="*uAGUAVAAuAHcAZQBCA*" OR Process_Command_Line="*TgBlAFQALgB3AGUAQg*" OR Process_Command_Line="*OAGUAVAAuAHcAZQBCA*" OR Process_Command_Line="*bgBFAFQALgB3AGUAQg*" OR Process_Command_Line="*4ARQBUAC4AdwBlAEIA*" OR Process_Command_Line="*uAEUAVAAuAHcAZQBCA*" OR Process_Command_Line="*TgBFAFQALgB3AGUAQg*" OR Process_Command_Line="*OAEUAVAAuAHcAZQBCA*" OR Process_Command_Line="*bgBlAHQALgBXAGUAQg*" OR Process_Command_Line="*4AZQB0AC4AVwBlAEIA*" OR Process_Command_Line="*uAGUAdAAuAFcAZQBCA*" OR Process_Command_Line="*TgBlAHQALgBXAGUAQg*" OR Process_Command_Line="*OAGUAdAAuAFcAZQBCA*" OR Process_Command_Line="*bgBFAHQALgBXAGUAQg*" OR Process_Command_Line="*4ARQB0AC4AVwBlAEIA*" OR Process_Command_Line="*uAEUAdAAuAFcAZQBCA*" OR Process_Command_Line="*TgBFAHQALgBXAGUAQg*" OR Process_Command_Line="*OAEUAdAAuAFcAZQBCA*" OR Process_Command_Line="*bgBlAFQALgBXAGUAQg*" OR Process_Command_Line="*4AZQBUAC4AVwBlAEIA*" OR Process_Command_Line="*uAGUAVAAuAFcAZQBCA*" OR Process_Command_Line="*TgBlAFQALgBXAGUAQg*" OR Process_Command_Line="*OAGUAVAAuAFcAZQBCA*" OR Process_Command_Line="*bgBFAFQALgBXAGUAQg*" OR Process_Command_Line="*4ARQBUAC4AVwBlAEIA*" OR Process_Command_Line="*uAEUAVAAuAFcAZQBCA*" OR Process_Command_Line="*TgBFAFQALgBXAGUAQg*" OR Process_Command_Line="*OAEUAVAAuAFcAZQBCA*" OR Process_Command_Line="*bgBlAHQALgB3AEUAQg*" OR Process_Command_Line="*4AZQB0AC4AdwBFAEIA*" OR Process_Command_Line="*uAGUAdAAuAHcARQBCA*" OR Process_Command_Line="*TgBlAHQALgB3AEUAQg*" OR Process_Command_Line="*OAGUAdAAuAHcARQBCA*" OR Process_Command_Line="*bgBFAHQALgB3AEUAQg*" OR Process_Command_Line="*4ARQB0AC4AdwBFAEIA*" OR Process_Command_Line="*uAEUAdAAuAHcARQBCA*" OR Process_Command_Line="*TgBFAHQALgB3AEUAQg*" OR Process_Command_Line="*OAEUAdAAuAHcARQBCA*" OR Process_Command_Line="*bgBlAFQALgB3AEUAQg*" OR Process_Command_Line="*uAGUAVAAuAHcARQBCA*" OR Process_Command_Line="*bgBFAFQALgB3AEUAQg*" OR Process_Command_Line="*4ARQBUAC4AdwBFAEIA*" OR Process_Command_Line="*uAEUAVAAuAHcARQBCA*" OR Process_Command_Line="*TgBFAFQALgB3AEUAQg*" OR Process_Command_Line="*OAEUAVAAuAHcARQBCA*" OR Process_Command_Line="*TgBlAHQALgBXAEUAQg*" OR Process_Command_Line="*4AZQB0AC4AVwBFAEIA*" OR Process_Command_Line="*OAGUAdAAuAFcARQBCA*" OR Process_Command_Line="*bgBFAHQALgBXAEUAQg*" OR Process_Command_Line="*4ARQB0AC4AVwBFAEIA*" OR Process_Command_Line="*uAEUAdAAuAFcARQBCA*" OR Process_Command_Line="*TgBFAHQALgBXAEUAQg*" OR Process_Command_Line="*OAEUAdAAuAFcARQBCA*" OR Process_Command_Line="*bgBlAFQALgBXAEUAQg*" OR Process_Command_Line="*4AZQBUAC4AVwBFAEIA*" OR Process_Command_Line="*uAGUAVAAuAFcARQBCA*" OR Process_Command_Line="*TgBlAFQALgBXAEUAQg*" OR Process_Command_Line="*OAGUAVAAuAFcARQBCA*" OR Process_Command_Line="*bgBFAFQALgBXAEUAQg*" OR Process_Command_Line="*4ARQBUAC4AVwBFAEIA*" OR Process_Command_Line="*uAEUAVAAuAFcARQBCA*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Net WebClient Casing Anomalies" | eval sigma_description="Detects PowerShell command line contents that include a suspicious anormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net WebClient Casing Anomalies - sysmon]
description = Detects PowerShell command line contents that include a suspicious anormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" (CommandLine="*TgBlAFQALgB3AEUAQg*" OR CommandLine="*4AZQBUAC4AdwBFAEIA*" OR CommandLine="*OAGUAVAAuAHcARQBCA*" OR CommandLine="*bgBFAHQALgB3AGUAYg*" OR CommandLine="*4ARQB0AC4AdwBlAGIA*" OR CommandLine="*uAEUAdAAuAHcAZQBiA*" OR CommandLine="*TgBFAHQALgB3AGUAYg*" OR CommandLine="*OAEUAdAAuAHcAZQBiA*" OR CommandLine="*bgBlAFQALgB3AGUAYg*" OR CommandLine="*4AZQBUAC4AdwBlAGIA*" OR CommandLine="*uAGUAVAAuAHcAZQBiA*" OR CommandLine="*TgBlAFQALgB3AGUAYg*" OR CommandLine="*OAGUAVAAuAHcAZQBiA*" OR CommandLine="*bgBFAFQALgB3AGUAYg*" OR CommandLine="*4ARQBUAC4AdwBlAGIA*" OR CommandLine="*uAEUAVAAuAHcAZQBiA*" OR CommandLine="*bgBlAHQALgBXAGUAYg*" OR CommandLine="*4AZQB0AC4AVwBlAGIA*" OR CommandLine="*uAGUAdAAuAFcAZQBiA*" OR CommandLine="*bgBFAHQALgBXAGUAYg*" OR CommandLine="*4ARQB0AC4AVwBlAGIA*" OR CommandLine="*uAEUAdAAuAFcAZQBiA*" OR CommandLine="*TgBFAHQALgBXAGUAYg*" OR CommandLine="*OAEUAdAAuAFcAZQBiA*" OR CommandLine="*bgBlAFQALgBXAGUAYg*" OR CommandLine="*4AZQBUAC4AVwBlAGIA*" OR CommandLine="*uAGUAVAAuAFcAZQBiA*" OR CommandLine="*TgBlAFQALgBXAGUAYg*" OR CommandLine="*OAGUAVAAuAFcAZQBiA*" OR CommandLine="*bgBFAFQALgBXAGUAYg*" OR CommandLine="*4ARQBUAC4AVwBlAGIA*" OR CommandLine="*uAEUAVAAuAFcAZQBiA*" OR CommandLine="*bgBlAHQALgB3AEUAYg*" OR CommandLine="*4AZQB0AC4AdwBFAGIA*" OR CommandLine="*uAGUAdAAuAHcARQBiA*" OR CommandLine="*TgBlAHQALgB3AEUAYg*" OR CommandLine="*OAGUAdAAuAHcARQBiA*" OR CommandLine="*bgBFAHQALgB3AEUAYg*" OR CommandLine="*4ARQB0AC4AdwBFAGIA*" OR CommandLine="*uAEUAdAAuAHcARQBiA*" OR CommandLine="*TgBFAHQALgB3AEUAYg*" OR CommandLine="*OAEUAdAAuAHcARQBiA*" OR CommandLine="*bgBlAFQALgB3AEUAYg*" OR CommandLine="*4AZQBUAC4AdwBFAGIA*" OR CommandLine="*uAGUAVAAuAHcARQBiA*" OR CommandLine="*TgBlAFQALgB3AEUAYg*" OR CommandLine="*OAGUAVAAuAHcARQBiA*" OR CommandLine="*bgBFAFQALgB3AEUAYg*" OR CommandLine="*4ARQBUAC4AdwBFAGIA*" OR CommandLine="*uAEUAVAAuAHcARQBiA*" OR CommandLine="*TgBFAFQALgB3AEUAYg*" OR CommandLine="*OAEUAVAAuAHcARQBiA*" OR CommandLine="*bgBlAHQALgBXAEUAYg*" OR CommandLine="*4AZQB0AC4AVwBFAGIA*" OR CommandLine="*uAGUAdAAuAFcARQBiA*" OR CommandLine="*TgBlAHQALgBXAEUAYg*" OR CommandLine="*OAGUAdAAuAFcARQBiA*" OR CommandLine="*bgBFAHQALgBXAEUAYg*" OR CommandLine="*4ARQB0AC4AVwBFAGIA*" OR CommandLine="*uAEUAdAAuAFcARQBiA*" OR CommandLine="*TgBFAHQALgBXAEUAYg*" OR CommandLine="*OAEUAdAAuAFcARQBiA*" OR CommandLine="*bgBlAFQALgBXAEUAYg*" OR CommandLine="*4AZQBUAC4AVwBFAGIA*" OR CommandLine="*uAGUAVAAuAFcARQBiA*" OR CommandLine="*TgBlAFQALgBXAEUAYg*" OR CommandLine="*OAGUAVAAuAFcARQBiA*" OR CommandLine="*bgBFAFQALgBXAEUAYg*" OR CommandLine="*4ARQBUAC4AVwBFAGIA*" OR CommandLine="*uAEUAVAAuAFcARQBiA*" OR CommandLine="*TgBFAFQALgBXAEUAYg*" OR CommandLine="*OAEUAVAAuAFcARQBiA*" OR CommandLine="*bgBlAHQALgB3AGUAQg*" OR CommandLine="*4AZQB0AC4AdwBlAEIA*" OR CommandLine="*uAGUAdAAuAHcAZQBCA*" OR CommandLine="*TgBlAHQALgB3AGUAQg*" OR CommandLine="*OAGUAdAAuAHcAZQBCA*" OR CommandLine="*bgBFAHQALgB3AGUAQg*" OR CommandLine="*4ARQB0AC4AdwBlAEIA*" OR CommandLine="*uAEUAdAAuAHcAZQBCA*" OR CommandLine="*TgBFAHQALgB3AGUAQg*" OR CommandLine="*OAEUAdAAuAHcAZQBCA*" OR CommandLine="*bgBlAFQALgB3AGUAQg*" OR CommandLine="*4AZQBUAC4AdwBlAEIA*" OR CommandLine="*uAGUAVAAuAHcAZQBCA*" OR CommandLine="*TgBlAFQALgB3AGUAQg*" OR CommandLine="*OAGUAVAAuAHcAZQBCA*" OR CommandLine="*bgBFAFQALgB3AGUAQg*" OR CommandLine="*4ARQBUAC4AdwBlAEIA*" OR CommandLine="*uAEUAVAAuAHcAZQBCA*" OR CommandLine="*TgBFAFQALgB3AGUAQg*" OR CommandLine="*OAEUAVAAuAHcAZQBCA*" OR CommandLine="*bgBlAHQALgBXAGUAQg*" OR CommandLine="*4AZQB0AC4AVwBlAEIA*" OR CommandLine="*uAGUAdAAuAFcAZQBCA*" OR CommandLine="*TgBlAHQALgBXAGUAQg*" OR CommandLine="*OAGUAdAAuAFcAZQBCA*" OR CommandLine="*bgBFAHQALgBXAGUAQg*" OR CommandLine="*4ARQB0AC4AVwBlAEIA*" OR CommandLine="*uAEUAdAAuAFcAZQBCA*" OR CommandLine="*TgBFAHQALgBXAGUAQg*" OR CommandLine="*OAEUAdAAuAFcAZQBCA*" OR CommandLine="*bgBlAFQALgBXAGUAQg*" OR CommandLine="*4AZQBUAC4AVwBlAEIA*" OR CommandLine="*uAGUAVAAuAFcAZQBCA*" OR CommandLine="*TgBlAFQALgBXAGUAQg*" OR CommandLine="*OAGUAVAAuAFcAZQBCA*" OR CommandLine="*bgBFAFQALgBXAGUAQg*" OR CommandLine="*4ARQBUAC4AVwBlAEIA*" OR CommandLine="*uAEUAVAAuAFcAZQBCA*" OR CommandLine="*TgBFAFQALgBXAGUAQg*" OR CommandLine="*OAEUAVAAuAFcAZQBCA*" OR CommandLine="*bgBlAHQALgB3AEUAQg*" OR CommandLine="*4AZQB0AC4AdwBFAEIA*" OR CommandLine="*uAGUAdAAuAHcARQBCA*" OR CommandLine="*TgBlAHQALgB3AEUAQg*" OR CommandLine="*OAGUAdAAuAHcARQBCA*" OR CommandLine="*bgBFAHQALgB3AEUAQg*" OR CommandLine="*4ARQB0AC4AdwBFAEIA*" OR CommandLine="*uAEUAdAAuAHcARQBCA*" OR CommandLine="*TgBFAHQALgB3AEUAQg*" OR CommandLine="*OAEUAdAAuAHcARQBCA*" OR CommandLine="*bgBlAFQALgB3AEUAQg*" OR CommandLine="*uAGUAVAAuAHcARQBCA*" OR CommandLine="*bgBFAFQALgB3AEUAQg*" OR CommandLine="*4ARQBUAC4AdwBFAEIA*" OR CommandLine="*uAEUAVAAuAHcARQBCA*" OR CommandLine="*TgBFAFQALgB3AEUAQg*" OR CommandLine="*OAEUAVAAuAHcARQBCA*" OR CommandLine="*TgBlAHQALgBXAEUAQg*" OR CommandLine="*4AZQB0AC4AVwBFAEIA*" OR CommandLine="*OAGUAdAAuAFcARQBCA*" OR CommandLine="*bgBFAHQALgBXAEUAQg*" OR CommandLine="*4ARQB0AC4AVwBFAEIA*" OR CommandLine="*uAEUAdAAuAFcARQBCA*" OR CommandLine="*TgBFAHQALgBXAEUAQg*" OR CommandLine="*OAEUAdAAuAFcARQBCA*" OR CommandLine="*bgBlAFQALgBXAEUAQg*" OR CommandLine="*4AZQBUAC4AVwBFAEIA*" OR CommandLine="*uAGUAVAAuAFcARQBCA*" OR CommandLine="*TgBlAFQALgBXAEUAQg*" OR CommandLine="*OAGUAVAAuAFcARQBCA*" OR CommandLine="*bgBFAFQALgBXAEUAQg*" OR CommandLine="*4ARQBUAC4AVwBFAEIA*" OR CommandLine="*uAEUAVAAuAFcARQBCA*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Net WebClient Casing Anomalies" | eval sigma_description="Detects PowerShell command line contents that include a suspicious anormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[NodejsTools PressAnyKey Lolbin - winevent]
description = Detects a certain command line flag combination used by Microsoft.NodejsTools.PressAnyKey.exe that can be used to execute any other binary
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*Microsoft.NodejsTools.PressAnyKey.exe normal *" OR (Process_Command_Line="*.exe normal *" Process_Command_Line="*.exe")) NOT ((New_Process_Name="*\\Microsoft\\NodeJsTools\\NodeJsTools*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="NodejsTools PressAnyKey Lolbin" | eval sigma_description="Detects a certain command line flag combination used by Microsoft.NodejsTools.PressAnyKey.exe that can be used to execute any other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[NodejsTools PressAnyKey Lolbin - sysmon]
description = Detects a certain command line flag combination used by Microsoft.NodejsTools.PressAnyKey.exe that can be used to execute any other binary
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*Microsoft.NodejsTools.PressAnyKey.exe normal *" OR (CommandLine="*.exe normal *" CommandLine="*.exe")) NOT ((Image="*\\Microsoft\\NodeJsTools\\NodeJsTools*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="NodejsTools PressAnyKey Lolbin" | eval sigma_description="Detects a certain command line flag combination used by Microsoft.NodejsTools.PressAnyKey.exe that can be used to execute any other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Print Executable - winevent]
description = Attackers can use print.exe for remote file copy
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\print.exe" Process_Command_Line="print*" Process_Command_Line="*/D*" Process_Command_Line="*.exe*") NOT (Process_Command_Line="*print.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusing Print Executable" | eval sigma_description="Attackers can use print.exe for remote file copy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abusing Print Executable - sysmon]
description = Attackers can use print.exe for remote file copy
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\print.exe" CommandLine="print*" CommandLine="*/D*" CommandLine="*.exe*") NOT (CommandLine="*print.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Abusing Print Executable" | eval sigma_description="Attackers can use print.exe for remote file copy"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump on LSASS - winevent]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -ma *" Process_Command_Line="* lsass*") OR (Process_Command_Line="* -ma *" Process_Command_Line="* ls*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003.001 car.2013-05-009" | eval sigma_title="Suspicious Use of Procdump on LSASS" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump on LSASS - sysmon]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -ma *" CommandLine="* lsass*") OR (CommandLine="* -ma *" CommandLine="* ls*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003.001 car.2013-05-009" | eval sigma_title="Suspicious Use of Procdump on LSASS" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump - winevent]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma ' and ' -accepteula' in a single step. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -ma *" Process_Command_Line="* -accepteula *") | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Suspicious Use of Procdump" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma ' and ' -accepteula' in a single step. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump - sysmon]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma ' and ' -accepteula' in a single step. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -ma *" CommandLine="* -accepteula *") | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="Suspicious Use of Procdump" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter ' -ma ' and ' -accepteula' in a single step. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Names - winevent]
description = Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\CVE-202*" OR (New_Process_Name="*\\poc.exe" OR New_Process_Name="*\\artifact.exe" OR New_Process_Name="*\\artifact64.exe" OR New_Process_Name="*\\artifact_protected.exe" OR New_Process_Name="*\\artifact32.exe" OR New_Process_Name="*\\artifact32big.exe" OR New_Process_Name="*obfuscated.exe" OR New_Process_Name="*obfusc.exe" OR New_Process_Name="*\\meterpreter") OR (Process_Command_Line="*inject.ps1*" OR Process_Command_Line="*Invoke-CVE*" OR Process_Command_Line="*pupy.ps1*" OR Process_Command_Line="*payload.ps1*" OR Process_Command_Line="*beacon.ps1*" OR Process_Command_Line="*PowerView.ps1*" OR Process_Command_Line="*bypass.ps1*" OR Process_Command_Line="*obfuscated.ps1*" OR Process_Command_Line="*obfusc.ps1*" OR Process_Command_Line="*obfus.ps1*" OR Process_Command_Line="*obfs.ps1*" OR Process_Command_Line="*evil.ps1*" OR Process_Command_Line="*MiniDogz.ps1*" OR Process_Command_Line="*_enc.ps1*" OR Process_Command_Line="*\\shell.ps1*" OR Process_Command_Line="*\\rshell.ps1*" OR Process_Command_Line="*revshell.ps1*" OR Process_Command_Line="*\\av.ps1*" OR Process_Command_Line="*\\av_test.ps1*" OR Process_Command_Line="*adrecon.ps1*" OR Process_Command_Line="*mimikatz.ps1*" OR Process_Command_Line="*\\PowerUp_*" OR Process_Command_Line="*powerup.ps1*" OR Process_Command_Line="*\\Temp\\a.ps1*" OR Process_Command_Line="*\\Temp\\p.ps1*" OR Process_Command_Line="*\\Temp\\1.ps1*" OR Process_Command_Line="*Hound.ps1*" OR Process_Command_Line="*encode.ps1*" OR Process_Command_Line="*powercat.ps1*"))) | table Process_Command_Line,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="" | eval sigma_title="Suspicious Program Names" | eval sigma_description="Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Names - sysmon]
description = Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\CVE-202*" OR (Image="*\\poc.exe" OR Image="*\\artifact.exe" OR Image="*\\artifact64.exe" OR Image="*\\artifact_protected.exe" OR Image="*\\artifact32.exe" OR Image="*\\artifact32big.exe" OR Image="*obfuscated.exe" OR Image="*obfusc.exe" OR Image="*\\meterpreter") OR (CommandLine="*inject.ps1*" OR CommandLine="*Invoke-CVE*" OR CommandLine="*pupy.ps1*" OR CommandLine="*payload.ps1*" OR CommandLine="*beacon.ps1*" OR CommandLine="*PowerView.ps1*" OR CommandLine="*bypass.ps1*" OR CommandLine="*obfuscated.ps1*" OR CommandLine="*obfusc.ps1*" OR CommandLine="*obfus.ps1*" OR CommandLine="*obfs.ps1*" OR CommandLine="*evil.ps1*" OR CommandLine="*MiniDogz.ps1*" OR CommandLine="*_enc.ps1*" OR CommandLine="*\\shell.ps1*" OR CommandLine="*\\rshell.ps1*" OR CommandLine="*revshell.ps1*" OR CommandLine="*\\av.ps1*" OR CommandLine="*\\av_test.ps1*" OR CommandLine="*adrecon.ps1*" OR CommandLine="*mimikatz.ps1*" OR CommandLine="*\\PowerUp_*" OR CommandLine="*powerup.ps1*" OR CommandLine="*\\Temp\\a.ps1*" OR CommandLine="*\\Temp\\p.ps1*" OR CommandLine="*\\Temp\\1.ps1*" OR CommandLine="*Hound.ps1*" OR CommandLine="*encode.ps1*" OR CommandLine="*powercat.ps1*"))) | table CommandLine,ParentCommandLine,CurrentDirectory | eval sigma_attack_tags="" | eval sigma_title="Suspicious Program Names" | eval sigma_description="Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Script Run in AppData - winevent]
description = Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*powershell.exe*" OR Process_Command_Line="*\\powershell*") Process_Command_Line="*/c *" Process_Command_Line="*\\AppData\\*" (Process_Command_Line="*Local\\*" OR Process_Command_Line="*Roaming\\*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="PowerShell Script Run in AppData" | eval sigma_description="Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Script Run in AppData - sysmon]
description = Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*powershell.exe*" OR CommandLine="*\\powershell*") CommandLine="*/c *" CommandLine="*\\AppData\\*" (CommandLine="*Local\\*" OR CommandLine="*Roaming\\*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="PowerShell Script Run in AppData" | eval sigma_description="Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell DownloadFile - winevent]
description = Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*powershell*" Process_Command_Line="*.DownloadFile*" Process_Command_Line="*System.Net.WebClient*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.command_and_control attack.t1104 attack.t1105" | eval sigma_title="PowerShell DownloadFile" | eval sigma_description="Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell DownloadFile - sysmon]
description = Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*powershell*" CommandLine="*.DownloadFile*" CommandLine="*System.Net.WebClient*") | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.command_and_control attack.t1104 attack.t1105" | eval sigma_title="PowerShell DownloadFile" | eval sigma_description="Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psexec Accepteula Condition - winevent]
description = Detects user accept agreement execution in psexec commandline
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\psexec.exe" Process_Command_Line="*accepteula*") | table New_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1569 attack.t1021" | eval sigma_title="Psexec Accepteula Condition" | eval sigma_description="Detects user accept agreement execution in psexec commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psexec Accepteula Condition - sysmon]
description = Detects user accept agreement execution in psexec commandline
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\psexec.exe" CommandLine="*accepteula*") | table Image,CommandLine | eval sigma_attack_tags="attack.execution attack.t1569 attack.t1021" | eval sigma_title="Psexec Accepteula Condition" | eval sigma_description="Detects user accept agreement execution in psexec commandline"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec/PAExec Escalation to LOCAL SYSTEM - winevent]
description = Detects suspicious flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*PsExec*" OR Process_Command_Line="*PAExec*" OR Process_Command_Line="*accepteula*" OR Process_Command_Line="*cmd /c *") Process_Command_Line="* -s cmd.exe") | eval sigma_attack_tags="attack.develop_capabilities attack.t1587.001" | eval sigma_title="PsExec/PAExec Escalation to LOCAL SYSTEM" | eval sigma_description="Detects suspicious flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec/PAExec Escalation to LOCAL SYSTEM - sysmon]
description = Detects suspicious flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*PsExec*" OR CommandLine="*PAExec*" OR CommandLine="*accepteula*" OR CommandLine="*cmd /c *") CommandLine="* -s cmd.exe") | eval sigma_attack_tags="attack.develop_capabilities attack.t1587.001" | eval sigma_title="PsExec/PAExec Escalation to LOCAL SYSTEM" | eval sigma_description="Detects suspicious flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec/PAExec Flags - winevent]
description = Detects suspicious flags used by PsExec and PAExec but no usual program name in command line
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="* -s cmd.exe" OR Process_Command_Line="* -s -i cmd.exe") OR (Process_Command_Line="*accepteula*" Process_Command_Line="* -u *" Process_Command_Line="* -p *" Process_Command_Line="* \\\*")) NOT ((Process_Command_Line="*paexec*" OR Process_Command_Line="*PsExec*"))) | eval sigma_attack_tags="attack.develop_capabilities attack.t1587.001" | eval sigma_title="PsExec/PAExec Flags" | eval sigma_description="Detects suspicious flags used by PsExec and PAExec but no usual program name in command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec/PAExec Flags - sysmon]
description = Detects suspicious flags used by PsExec and PAExec but no usual program name in command line
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="* -s cmd.exe" OR CommandLine="* -s -i cmd.exe") OR (CommandLine="*accepteula*" CommandLine="* -u *" CommandLine="* -p *" CommandLine="* \\\*")) NOT ((CommandLine="*paexec*" OR CommandLine="*PsExec*"))) | eval sigma_attack_tags="attack.develop_capabilities attack.t1587.001" | eval sigma_title="PsExec/PAExec Flags" | eval sigma_description="Detects suspicious flags used by PsExec and PAExec but no usual program name in command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of PsLogList - winevent]
description = Threat actors can use the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((OriginalFileName="psloglist.exe" OR (New_Process_Name="*\\psloglist.exe" OR New_Process_Name="*\\psloglist64.exe")) OR (Process_Command_Line="*security*" Process_Command_Line="*accepteula*" (Process_Command_Line="* -d*" OR Process_Command_Line="* /d*" OR Process_Command_Line="* -x*" OR Process_Command_Line="* /x*" OR Process_Command_Line="* -s*" OR Process_Command_Line="* /s*")))) | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1087.001 attack.t1087.002" | eval sigma_title="Suspicious Use of PsLogList" | eval sigma_description="Threat actors can use the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of PsLogList - sysmon]
description = Threat actors can use the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((OriginalFileName="psloglist.exe" OR (Image="*\\psloglist.exe" OR Image="*\\psloglist64.exe")) OR (CommandLine="*security*" CommandLine="*accepteula*" (CommandLine="* -d*" OR CommandLine="* /d*" OR CommandLine="* -x*" OR CommandLine="* /x*" OR CommandLine="* -s*" OR CommandLine="* /s*")))) | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1087.001 attack.t1087.002" | eval sigma_title="Suspicious Use of PsLogList" | eval sigma_description="Threat actors can use the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery."
dispatch.earliest_time = -24h@h
alert.track = 0

[Psr.exe Capture Screenshots - winevent]
description = The psr.exe captures desktop screenshots and saves them on the local machine
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Psr.exe" Process_Command_Line="*/start*") | eval sigma_attack_tags="attack.collection attack.t1113" | eval sigma_title="Psr.exe Capture Screenshots" | eval sigma_description="The psr.exe captures desktop screenshots and saves them on the local machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psr.exe Capture Screenshots - sysmon]
description = The psr.exe captures desktop screenshots and saves them on the local machine
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Psr.exe" CommandLine="*/start*") | eval sigma_attack_tags="attack.collection attack.t1113" | eval sigma_title="Psr.exe Capture Screenshots" | eval sigma_description="The psr.exe captures desktop screenshots and saves them on the local machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rar Usage with Password and Compression Level - winevent]
description = Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -hp*" (Process_Command_Line="* -m*" OR Process_Command_Line="* a *")) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Rar Usage with Password and Compression Level" | eval sigma_description="Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Rar Usage with Password and Compression Level - sysmon]
description = Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -hp*" (CommandLine="* -m*" OR CommandLine="* a *")) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Rar Usage with Password and Compression Level" | eval sigma_description="Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RASdial Activity - winevent]
description = Detects suspicious process related to rasdial.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*rasdial.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059" | eval sigma_title="Suspicious RASdial Activity" | eval sigma_description="Detects suspicious process related to rasdial.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RASdial Activity - sysmon]
description = Detects suspicious process related to rasdial.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*rasdial.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1059" | eval sigma_title="Suspicious RASdial Activity" | eval sigma_description="Detects suspicious process related to rasdial.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RazerInstaller Explorer Subprocess - winevent]
description = Detects a explorer.exe sub process of the RazerInstaller software which can be invoked from the installer to select a different installation folder but can also be exploited to escalate privileges to LOCAL SYSTEM
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\RazerInstaller.exe" IntegrityLevel="System") NOT (New_Process_Name="C:\\Windows\\Installer\\Razer\\Installer\\*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1553" | eval sigma_title="Suspicious RazerInstaller Explorer Subprocess" | eval sigma_description="Detects a explorer.exe sub process of the RazerInstaller software which can be invoked from the installer to select a different installation folder but can also be exploited to escalate privileges to LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RazerInstaller Explorer Subprocess - sysmon]
description = Detects a explorer.exe sub process of the RazerInstaller software which can be invoked from the installer to select a different installation folder but can also be exploited to escalate privileges to LOCAL SYSTEM
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\RazerInstaller.exe" IntegrityLevel="System") NOT (Image="C:\\Windows\\Installer\\Razer\\Installer\\*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1553" | eval sigma_title="Suspicious RazerInstaller Explorer Subprocess" | eval sigma_description="Detects a explorer.exe sub process of the RazerInstaller software which can be invoked from the installer to select a different installation folder but can also be exploited to escalate privileges to LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rclone Execution via Command Line or PowerShell - winevent]
description = Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*--config *" Process_Command_Line="*--no-check-certificate *" Process_Command_Line="* copy *") OR ((Process_Command_Line="*pass*" OR Process_Command_Line="*user*" OR Process_Command_Line="*copy*" OR Process_Command_Line="*sync*" OR Process_Command_Line="*config*" OR Process_Command_Line="*lsd*" OR Process_Command_Line="*remote*" OR Process_Command_Line="*ls*" OR Process_Command_Line="*mega*" OR Process_Command_Line="*pcloud*" OR Process_Command_Line="*ftp*" OR Process_Command_Line="*ignore-existing*" OR Process_Command_Line="*auto-confirm*" OR Process_Command_Line="*transfers*" OR Process_Command_Line="*multi-thread-streams*" OR Process_Command_Line="*no-check-certificate *") (Description="Rsync for cloud storage" OR (New_Process_Name="*\\rclone.exe" (Creator_Process_Name="*\\PowerShell.exe" OR Creator_Process_Name="*\\cmd.exe")))))) | table Process_Command_Line,ParentCommandLine,NewValue | eval sigma_attack_tags="attack.exfiltration attack.t1567.002" | eval sigma_title="Rclone Execution via Command Line or PowerShell" | eval sigma_description="Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rclone Execution via Command Line or PowerShell - sysmon]
description = Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*--config *" CommandLine="*--no-check-certificate *" CommandLine="* copy *") OR ((CommandLine="*pass*" OR CommandLine="*user*" OR CommandLine="*copy*" OR CommandLine="*sync*" OR CommandLine="*config*" OR CommandLine="*lsd*" OR CommandLine="*remote*" OR CommandLine="*ls*" OR CommandLine="*mega*" OR CommandLine="*pcloud*" OR CommandLine="*ftp*" OR CommandLine="*ignore-existing*" OR CommandLine="*auto-confirm*" OR CommandLine="*transfers*" OR CommandLine="*multi-thread-streams*" OR CommandLine="*no-check-certificate *") (Description="Rsync for cloud storage" OR (Image="*\\rclone.exe" (ParentImage="*\\PowerShell.exe" OR ParentImage="*\\cmd.exe")))))) | table CommandLine,ParentCommandLine,Details | eval sigma_attack_tags="attack.exfiltration attack.t1567.002" | eval sigma_title="Rclone Execution via Command Line or PowerShell" | eval sigma_description="Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reconnaissance Activity - winevent]
description = Detects suspicious command line activity on Windows systems
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*net group \"domain admins\"*" OR Process_Command_Line="*net localgroup administrators*" OR Process_Command_Line="*net group \"enterprise admins\"*" OR Process_Command_Line="*net accounts /do*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002" | eval sigma_title="Suspicious Reconnaissance Activity" | eval sigma_description="Detects suspicious command line activity on Windows systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reconnaissance Activity - sysmon]
description = Detects suspicious command line activity on Windows systems
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*net group \"domain admins\"*" OR CommandLine="*net localgroup administrators*" OR CommandLine="*net group \"enterprise admins\"*" OR CommandLine="*net accounts /do*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1087.001 attack.t1087.002" | eval sigma_title="Suspicious Reconnaissance Activity" | eval sigma_description="Detects suspicious command line activity on Windows systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Reconnaissance Activity - winevent]
description = Detects a set of suspicious network related commands often used in recon stages
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*nslookup*" Process_Command_Line="*_ldap._tcp.dc._msdcs.*") | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Network Reconnaissance Activity" | eval sigma_description="Detects a set of suspicious network related commands often used in recon stages"
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Reconnaissance Activity - sysmon]
description = Detects a set of suspicious network related commands often used in recon stages
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*nslookup*" CommandLine="*_ldap._tcp.dc._msdcs.*") | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Network Reconnaissance Activity" | eval sigma_description="Detects a set of suspicious network related commands often used in recon stages"
dispatch.earliest_time = -24h@h
alert.track = 0

[Recon Information for Export with Command Prompt - winevent]
description = Once established within a system or network, an adversary may use automated techniques for collecting internal data.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\tree.com" OR New_Process_Name="*\\WMIC.exe" OR New_Process_Name="*\\doskey.exe" OR New_Process_Name="*\\sc.exe") ParentCommandLine="* > %TEMP%\\*") | eval sigma_attack_tags="attack.collection attack.t1119" | eval sigma_title="Recon Information for Export with Command Prompt" | eval sigma_description="Once established within a system or network, an adversary may use automated techniques for collecting internal data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Recon Information for Export with Command Prompt - sysmon]
description = Once established within a system or network, an adversary may use automated techniques for collecting internal data.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\tree.com" OR Image="*\\WMIC.exe" OR Image="*\\doskey.exe" OR Image="*\\sc.exe") ParentCommandLine="* > %TEMP%\\*") | eval sigma_attack_tags="attack.collection attack.t1119" | eval sigma_title="Recon Information for Export with Command Prompt" | eval sigma_description="Once established within a system or network, an adversary may use automated techniques for collecting internal data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Redirection to Local Admin Share - winevent]
description = Detects a suspicious output redirection to the local admins share as often found in malicious scripts or hacktool stagers
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*> \\\\127.0.0.1\\admin$*" OR Process_Command_Line="*> \\\\localhost\\admin$*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Redirection to Local Admin Share" | eval sigma_description="Detects a suspicious output redirection to the local admins share as often found in malicious scripts or hacktool stagers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Redirection to Local Admin Share - sysmon]
description = Detects a suspicious output redirection to the local admins share as often found in malicious scripts or hacktool stagers
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*> \\\\127.0.0.1\\admin$*" OR CommandLine="*> \\\\localhost\\admin$*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Redirection to Local Admin Share" | eval sigma_description="Detects a suspicious output redirection to the local admins share as often found in malicious scripts or hacktool stagers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reg Add BitLocker - winevent]
description = Suspicious add key for BitLocker
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*REG*" Process_Command_Line="*ADD*" Process_Command_Line="*HKLM\\SOFTWARE\\Policies\\Microsoft\\FVE*" Process_Command_Line="*/v*" Process_Command_Line="*/f*" (Process_Command_Line="*EnableBDEWithNoTPM*" OR Process_Command_Line="*UseAdvancedStartup*" OR Process_Command_Line="*UseTPM*" OR Process_Command_Line="*UseTPMKey*" OR Process_Command_Line="*UseTPMKeyPIN*" OR Process_Command_Line="*RecoveryKeyMessageSource*" OR Process_Command_Line="*UseTPMPIN*" OR Process_Command_Line="*RecoveryKeyMessage*")) | eval sigma_attack_tags="attack.impact attack.t1486" | eval sigma_title="Suspicious Reg Add BitLocker" | eval sigma_description="Suspicious add key for BitLocker"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reg Add BitLocker - sysmon]
description = Suspicious add key for BitLocker
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*REG*" CommandLine="*ADD*" CommandLine="*HKLM\\SOFTWARE\\Policies\\Microsoft\\FVE*" CommandLine="*/v*" CommandLine="*/f*" (CommandLine="*EnableBDEWithNoTPM*" OR CommandLine="*UseAdvancedStartup*" OR CommandLine="*UseTPM*" OR CommandLine="*UseTPMKey*" OR CommandLine="*UseTPMKeyPIN*" OR CommandLine="*RecoveryKeyMessageSource*" OR CommandLine="*UseTPMPIN*" OR CommandLine="*RecoveryKeyMessage*")) | eval sigma_attack_tags="attack.impact attack.t1486" | eval sigma_title="Suspicious Reg Add BitLocker" | eval sigma_description="Suspicious add key for BitLocker"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reg Disable Security Service - winevent]
description = Detects a suspicious reg.exe invocation that looks as if it would disable an important security service
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*reg*" Process_Command_Line="*add*") ((Process_Command_Line="* /d 4*" Process_Command_Line="* /v Start*" (Process_Command_Line="*\\Sense*" OR Process_Command_Line="*\\WinDefend*" OR Process_Command_Line="*\\MsMpSvc*" OR Process_Command_Line="*\\NisSrv*" OR Process_Command_Line="*\\WdBoot*" OR Process_Command_Line="*\\WdNisDrv*" OR Process_Command_Line="*\\WdNisSvc*" OR Process_Command_Line="*\\wscsvc*" OR Process_Command_Line="*\\SecurityHealthService*" OR Process_Command_Line="*\\wuauserv*" OR Process_Command_Line="*\\UsoSvc*" OR Process_Command_Line="*\\WdFilter*" OR Process_Command_Line="*\\AppIDSvc*")) OR (Process_Command_Line="* /d 1*" Process_Command_Line="*Windows Defender*" (Process_Command_Line="*DisableIOAVProtection*" OR Process_Command_Line="*DisableOnAccessProtection*" OR Process_Command_Line="*DisableRoutinelyTakingAction*" OR Process_Command_Line="*DisableScanOnRealtimeEnable*" OR Process_Command_Line="*DisableBlockAtFirstSeen*" OR Process_Command_Line="*DisableBehaviorMonitoring*" OR Process_Command_Line="*DisableEnhancedNotifications*" OR Process_Command_Line="*DisableAntiSpyware*" OR Process_Command_Line="*DisableAntiSpywareRealtimeProtection*" OR Process_Command_Line="*DisableConfig*" OR Process_Command_Line="*DisablePrivacyMode*" OR Process_Command_Line="*SignatureDisableUpdateOnStartupWithoutEngine*" OR Process_Command_Line="*DisableArchiveScanning*" OR Process_Command_Line="*DisableIntrusionPreventionSystem*" OR Process_Command_Line="*DisableScriptScanning*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Reg Disable Security Service" | eval sigma_description="Detects a suspicious reg.exe invocation that looks as if it would disable an important security service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reg Disable Security Service - sysmon]
description = Detects a suspicious reg.exe invocation that looks as if it would disable an important security service
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*reg*" CommandLine="*add*") ((CommandLine="* /d 4*" CommandLine="* /v Start*" (CommandLine="*\\Sense*" OR CommandLine="*\\WinDefend*" OR CommandLine="*\\MsMpSvc*" OR CommandLine="*\\NisSrv*" OR CommandLine="*\\WdBoot*" OR CommandLine="*\\WdNisDrv*" OR CommandLine="*\\WdNisSvc*" OR CommandLine="*\\wscsvc*" OR CommandLine="*\\SecurityHealthService*" OR CommandLine="*\\wuauserv*" OR CommandLine="*\\UsoSvc*" OR CommandLine="*\\WdFilter*" OR CommandLine="*\\AppIDSvc*")) OR (CommandLine="* /d 1*" CommandLine="*Windows Defender*" (CommandLine="*DisableIOAVProtection*" OR CommandLine="*DisableOnAccessProtection*" OR CommandLine="*DisableRoutinelyTakingAction*" OR CommandLine="*DisableScanOnRealtimeEnable*" OR CommandLine="*DisableBlockAtFirstSeen*" OR CommandLine="*DisableBehaviorMonitoring*" OR CommandLine="*DisableEnhancedNotifications*" OR CommandLine="*DisableAntiSpyware*" OR CommandLine="*DisableAntiSpywareRealtimeProtection*" OR CommandLine="*DisableConfig*" OR CommandLine="*DisablePrivacyMode*" OR CommandLine="*SignatureDisableUpdateOnStartupWithoutEngine*" OR CommandLine="*DisableArchiveScanning*" OR CommandLine="*DisableIntrusionPreventionSystem*" OR CommandLine="*DisableScriptScanning*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Reg Disable Security Service" | eval sigma_description="Detects a suspicious reg.exe invocation that looks as if it would disable an important security service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reg Add Open Command - winevent]
description = Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*reg*" Process_Command_Line="*add*" Process_Command_Line="*hkcu\\software\\classes\\ms-settings\\shell\\open\\command*" Process_Command_Line="*/ve *" Process_Command_Line="*/d*") OR (Process_Command_Line="*reg*" Process_Command_Line="*add*" Process_Command_Line="*hkcu\\software\\classes\\ms-settings\\shell\\open\\command*" Process_Command_Line="*/v*" Process_Command_Line="*DelegateExecute*") OR (Process_Command_Line="*reg*" Process_Command_Line="*delete*" Process_Command_Line="*hkcu\\software\\classes\\ms-settings*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Suspicious Reg Add Open Command" | eval sigma_description="Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reg Add Open Command - sysmon]
description = Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*reg*" CommandLine="*add*" CommandLine="*hkcu\\software\\classes\\ms-settings\\shell\\open\\command*" CommandLine="*/ve *" CommandLine="*/d*") OR (CommandLine="*reg*" CommandLine="*add*" CommandLine="*hkcu\\software\\classes\\ms-settings\\shell\\open\\command*" CommandLine="*/v*" CommandLine="*DelegateExecute*") OR (CommandLine="*reg*" CommandLine="*delete*" CommandLine="*hkcu\\software\\classes\\ms-settings*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Suspicious Reg Add Open Command" | eval sigma_description="Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regedit as Trusted Installer - winevent]
description = Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\regedit.exe" (Creator_Process_Name="*\\TrustedInstaller.exe" OR Creator_Process_Name="*\\ProcessHacker.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Regedit as Trusted Installer" | eval sigma_description="Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regedit as Trusted Installer - sysmon]
description = Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\regedit.exe" (ParentImage="*\\TrustedInstaller.exe" OR ParentImage="*\\ProcessHacker.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548" | eval sigma_title="Regedit as Trusted Installer" | eval sigma_description="Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution Via Register-cimprovider.exe - winevent]
description = Detects using register-cimprovider.exe to execute arbitrary dll file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\register-cimprovider.exe" Process_Command_Line="*-path*" Process_Command_Line="*dll*") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1574" | eval sigma_title="DLL Execution Via Register-cimprovider.exe" | eval sigma_description="Detects using register-cimprovider.exe to execute arbitrary dll file."
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Execution Via Register-cimprovider.exe - sysmon]
description = Detects using register-cimprovider.exe to execute arbitrary dll file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\register-cimprovider.exe" CommandLine="*-path*" CommandLine="*dll*") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1574" | eval sigma_title="DLL Execution Via Register-cimprovider.exe" | eval sigma_description="Detects using register-cimprovider.exe to execute arbitrary dll file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Registration via cscript.exe - winevent]
description = Detects when the registration of a VSS/VDS Provider as a COM+ application.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cscript.exe" Process_Command_Line="*-register*" (Process_Command_Line="*\\Windows Kits\\10\\bin\\10.0.22000.0\\x64*" OR Process_Command_Line="*\\Windows Kits\\10\\bin\\10.0.19041.0\\x64*" OR Process_Command_Line="*\\Windows Kits\\10\\bin\\10.0.17763.0\\x64*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Registration via cscript.exe" | eval sigma_description="Detects when the registration of a VSS/VDS Provider as a COM+ application."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Registration via cscript.exe - sysmon]
description = Detects when the registration of a VSS/VDS Provider as a COM+ application.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cscript.exe" CommandLine="*-register*" (CommandLine="*\\Windows Kits\\10\\bin\\10.0.22000.0\\x64*" OR CommandLine="*\\Windows Kits\\10\\bin\\10.0.19041.0\\x64*" OR CommandLine="*\\Windows Kits\\10\\bin\\10.0.17763.0\\x64*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Suspicious Registration via cscript.exe" | eval sigma_description="Detects when the registration of a VSS/VDS Provider as a COM+ application."
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Anomaly - winevent]
description = Detects various anomalies in relation to regsvr32.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*\\Temp\\*") OR (New_Process_Name="*\\regsvr32.exe" Creator_Process_Name="*\\powershell.exe") OR (New_Process_Name="*\\regsvr32.exe" Creator_Process_Name="*\\cmd.exe") OR (New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*/i:*" Process_Command_Line="*http*" Process_Command_Line="*scrobj.dll") OR (New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*/i:*" Process_Command_Line="*ftp*" Process_Command_Line="*scrobj.dll") OR (New_Process_Name="*\\wscript.exe" Creator_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\EXCEL.EXE" Process_Command_Line="*..\\..\\..\\Windows\\System32\\regsvr32.exe *") OR (Creator_Process_Name="*\\mshta.exe" New_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\regsvr32.exe" (Process_Command_Line="*\\AppData\\Local*" OR Process_Command_Line="*C:\\Users\\Public*")) OR (New_Process_Name="*\\regsvr32.exe" (Process_Command_Line="*.jpg" OR Process_Command_Line="*.jpeg" OR Process_Command_Line="*.png" OR Process_Command_Line="*.gif" OR Process_Command_Line="*.bin" OR Process_Command_Line="*.tmp" OR Process_Command_Line="*.temp" OR Process_Command_Line="*.txt"))) NOT ((Process_Command_Line="*\\AppData\\Local\\Microsoft\\Teams*" OR Process_Command_Line="*\\AppData\\Local\\WebEx\\WebEx64\\Meetings\\atucfobj.dll*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 car.2019-04-002 car.2019-04-003" | eval sigma_title="Regsvr32 Anomaly" | eval sigma_description="Detects various anomalies in relation to regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Anomaly - sysmon]
description = Detects various anomalies in relation to regsvr32.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\regsvr32.exe" CommandLine="*\\Temp\\*") OR (Image="*\\regsvr32.exe" ParentImage="*\\powershell.exe") OR (Image="*\\regsvr32.exe" ParentImage="*\\cmd.exe") OR (Image="*\\regsvr32.exe" CommandLine="*/i:*" CommandLine="*http*" CommandLine="*scrobj.dll") OR (Image="*\\regsvr32.exe" CommandLine="*/i:*" CommandLine="*ftp*" CommandLine="*scrobj.dll") OR (Image="*\\wscript.exe" ParentImage="*\\regsvr32.exe") OR (Image="*\\EXCEL.EXE" CommandLine="*..\\..\\..\\Windows\\System32\\regsvr32.exe *") OR (ParentImage="*\\mshta.exe" Image="*\\regsvr32.exe") OR (Image="*\\regsvr32.exe" (CommandLine="*\\AppData\\Local*" OR CommandLine="*C:\\Users\\Public*")) OR (Image="*\\regsvr32.exe" (CommandLine="*.jpg" OR CommandLine="*.jpeg" OR CommandLine="*.png" OR CommandLine="*.gif" OR CommandLine="*.bin" OR CommandLine="*.tmp" OR CommandLine="*.temp" OR CommandLine="*.txt"))) NOT ((CommandLine="*\\AppData\\Local\\Microsoft\\Teams*" OR CommandLine="*\\AppData\\Local\\WebEx\\WebEx64\\Meetings\\atucfobj.dll*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010 car.2019-04-002 car.2019-04-003" | eval sigma_title="Regsvr32 Anomaly" | eval sigma_description="Detects various anomalies in relation to regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Explorer Child Of Regsvr32 - winevent]
description = Suspicious explorer.exe child of regsvr32.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\regsvr32.exe" New_Process_Name="*\\explorer.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Suspicious Explorer Child Of Regsvr32" | eval sigma_description="Suspicious explorer.exe child of regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Explorer Child Of Regsvr32 - sysmon]
description = Suspicious explorer.exe child of regsvr32.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\regsvr32.exe" Image="*\\explorer.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Suspicious Explorer Child Of Regsvr32" | eval sigma_description="Suspicious explorer.exe child of regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Flags Anomaly - winevent]
description = Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\regsvr32.exe" Process_Command_Line="* /i:*") NOT (Process_Command_Line="* /n *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Regsvr32 Flags Anomaly" | eval sigma_description="Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Flags Anomaly - sysmon]
description = Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\regsvr32.exe" CommandLine="* /i:*") NOT (CommandLine="* /n *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Regsvr32 Flags Anomaly" | eval sigma_description="Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Regsvr32 HTTP IP Pattern - winevent]
description = Detects a certain command line flag combination used by regsvr32 when used to download and register a DLL from a remote address which uses HTTP (not HTTPS) and a IP address and not FQDN
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /s*" Process_Command_Line="* /u*" (Process_Command_Line="* /i:http://1*" OR Process_Command_Line="* /i:http://2*" OR Process_Command_Line="* /i:http://3*" OR Process_Command_Line="* /i:http://4*" OR Process_Command_Line="* /i:http://5*" OR Process_Command_Line="* /i:http://6*" OR Process_Command_Line="* /i:http://7*" OR Process_Command_Line="* /i:http://8*" OR Process_Command_Line="* /i:http://9*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Suspicious Regsvr32 HTTP IP Pattern" | eval sigma_description="Detects a certain command line flag combination used by regsvr32 when used to download and register a DLL from a remote address which uses HTTP (not HTTPS) and a IP address and not FQDN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Regsvr32 HTTP IP Pattern - sysmon]
description = Detects a certain command line flag combination used by regsvr32 when used to download and register a DLL from a remote address which uses HTTP (not HTTPS) and a IP address and not FQDN
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /s*" CommandLine="* /u*" (CommandLine="* /i:http://1*" OR CommandLine="* /i:http://2*" OR CommandLine="* /i:http://3*" OR CommandLine="* /i:http://4*" OR CommandLine="* /i:http://5*" OR CommandLine="* /i:http://6*" OR CommandLine="* /i:http://7*" OR CommandLine="* /i:http://8*" OR CommandLine="* /i:http://9*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Suspicious Regsvr32 HTTP IP Pattern" | eval sigma_description="Detects a certain command line flag combination used by regsvr32 when used to download and register a DLL from a remote address which uses HTTP (not HTTPS) and a IP address and not FQDN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Regsvr32 Execution With Image Extension - winevent]
description = utilizes REGSVR32.exe to execute this DLL masquerading as a Image file
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*.jpg") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Suspicious Regsvr32 Execution With Image Extension" | eval sigma_description="utilizes REGSVR32.exe to execute this DLL masquerading as a Image file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Regsvr32 Execution With Image Extension - sysmon]
description = utilizes REGSVR32.exe to execute this DLL masquerading as a Image file
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\regsvr32.exe" CommandLine="*.jpg") | eval sigma_attack_tags="attack.defense_evasion attack.t1218.010" | eval sigma_title="Suspicious Regsvr32 Execution With Image Extension" | eval sigma_description="utilizes REGSVR32.exe to execute this DLL masquerading as a Image file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Command Line Without DLL - winevent]
description = Detects a regsvr.exe execution that doesn't contain a DLL in the command line
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\regsvr32.exe" NOT ((Process_Command_Line="*.dll*" OR Process_Command_Line="*.ocx*" OR Process_Command_Line="*.cpl*" OR Process_Command_Line="*.ax*" OR Process_Command_Line="*.bav*" OR Process_Command_Line="*.ppl*"))) NOT (NOT Process_Command_Line="*")) NOT (Process_Command_Line="")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1574 attack.execution" | eval sigma_title="Regsvr32 Command Line Without DLL" | eval sigma_description="Detects a regsvr.exe execution that doesn't contain a DLL in the command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Command Line Without DLL - sysmon]
description = Detects a regsvr.exe execution that doesn't contain a DLL in the command line
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\regsvr32.exe" NOT ((CommandLine="*.dll*" OR CommandLine="*.ocx*" OR CommandLine="*.cpl*" OR CommandLine="*.ax*" OR CommandLine="*.bav*" OR CommandLine="*.ppl*"))) NOT (NOT CommandLine="*")) NOT (CommandLine="")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1574 attack.execution" | eval sigma_title="Regsvr32 Command Line Without DLL" | eval sigma_description="Detects a regsvr.exe execution that doesn't contain a DLL in the command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ZOHO Dctask64 - winevent]
description = Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Hashes="*6834B1B94E49701D77CCB3C0895E1AFD*" NOT (New_Process_Name="*\\dctask64.exe")) | table Process_Command_Line,ParentCommandLine,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1055.001 attack.t1202 attack.t1218" | eval sigma_title="Renamed ZOHO Dctask64" | eval sigma_description="Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ZOHO Dctask64 - sysmon]
description = Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Hashes="*6834B1B94E49701D77CCB3C0895E1AFD*" NOT (Image="*\\dctask64.exe")) | table CommandLine,ParentCommandLine,ParentImage | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1055.001 attack.t1202 attack.t1218" | eval sigma_title="Renamed ZOHO Dctask64" | eval sigma_description="Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed SysInternals Debug View - winevent]
description = Detects suspicious renamed SysInternals DebugView execution
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Product="Sysinternals DebugView" OR Product="Sysinternals Debugview") NOT (OriginalFileName="Dbgview.exe" New_Process_Name="*\\Dbgview.exe")) | eval sigma_attack_tags="attack.resource_development attack.t1588.002" | eval sigma_title="Renamed SysInternals Debug View" | eval sigma_description="Detects suspicious renamed SysInternals DebugView execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed SysInternals Debug View - sysmon]
description = Detects suspicious renamed SysInternals DebugView execution
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Product="Sysinternals DebugView" OR Product="Sysinternals Debugview") NOT (OriginalFileName="Dbgview.exe" Image="*\\Dbgview.exe")) | eval sigma_attack_tags="attack.resource_development attack.t1588.002" | eval sigma_title="Renamed SysInternals Debug View" | eval sigma_description="Detects suspicious renamed SysInternals DebugView execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PAExec - winevent]
description = Detects suspicious renamed PAExec execution as often used by attackers
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="PAExec Application" OR OriginalFileName="PAExec.exe") NOT ((New_Process_Name="*\\PAexec.exe" OR New_Process_Name="*\\paexec.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Renamed PAExec" | eval sigma_description="Detects suspicious renamed PAExec execution as often used by attackers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PAExec - sysmon]
description = Detects suspicious renamed PAExec execution as often used by attackers
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="PAExec Application" OR OriginalFileName="PAExec.exe") NOT ((Image="*\\PAexec.exe" OR Image="*\\paexec.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Renamed PAExec" | eval sigma_description="Detects suspicious renamed PAExec execution as often used by attackers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture Credentials with Rpcping.exe - winevent]
description = Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rpcping.exe" (Process_Command_Line="*-s*" OR Process_Command_Line="*/s*")) ((Process_Command_Line="*-u*" Process_Command_Line="*NTLM*") OR (Process_Command_Line="*/u*" Process_Command_Line="*NTLM*") OR (Process_Command_Line="*-t*" Process_Command_Line="*ncacn_np*") OR (Process_Command_Line="*/t*" Process_Command_Line="*ncacn_np*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Capture Credentials with Rpcping.exe" | eval sigma_description="Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture Credentials with Rpcping.exe - sysmon]
description = Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rpcping.exe" (CommandLine="*-s*" OR CommandLine="*/s*")) ((CommandLine="*-u*" CommandLine="*NTLM*") OR (CommandLine="*/u*" CommandLine="*NTLM*") OR (CommandLine="*-t*" CommandLine="*ncacn_np*") OR (CommandLine="*/t*" CommandLine="*ncacn_np*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Capture Credentials with Rpcping.exe" | eval sigma_description="Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process."
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Start From Suspicious Folder - winevent]
description = Detects process start from rare or uncommon folders like temporary folder or folders that usually don't contain executable files
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\Desktop\\*" OR New_Process_Name="*\\Temp\\*" OR New_Process_Name="*\\Temporary Internet*") NOT (((Creator_Process_Name="C:\\Windows\\System32\\cleanmgr.exe" OR Creator_Process_Name="C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\ServiceHub\\Services\\Microsoft.VisualStudio.Setup.Service\\BackgroundDownload.exe" OR Creator_Process_Name="C:\\Windows\\System32\\dxgiadaptercache.exe") OR Creator_Process_Name="C:\\Program Files (x86)\\NVIDIA Corporation\\*") OR (New_Process_Name="*setup.exe"))) | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Process Start From Suspicious Folder" | eval sigma_description="Detects process start from rare or uncommon folders like temporary folder or folders that usually don't contain executable files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Start From Suspicious Folder - sysmon]
description = Detects process start from rare or uncommon folders like temporary folder or folders that usually don't contain executable files
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\Desktop\\*" OR Image="*\\Temp\\*" OR Image="*\\Temporary Internet*") NOT (((ParentImage="C:\\Windows\\System32\\cleanmgr.exe" OR ParentImage="C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\ServiceHub\\Services\\Microsoft.VisualStudio.Setup.Service\\BackgroundDownload.exe" OR ParentImage="C:\\Windows\\System32\\dxgiadaptercache.exe") OR ParentImage="C:\\Program Files (x86)\\NVIDIA Corporation\\*") OR (Image="*setup.exe"))) | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Process Start From Suspicious Folder" | eval sigma_description="Detects process start from rare or uncommon folders like temporary folder or folders that usually don't contain executable files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Start Locations - winevent]
description = Detects suspicious process run from unusual locations
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*:\\RECYCLER\\*" OR New_Process_Name="*:\\SystemVolumeInformation\\*") OR (New_Process_Name="C:\\Windows\\Tasks\\*" OR New_Process_Name="C:\\Windows\\debug\\*" OR New_Process_Name="C:\\Windows\\fonts\\*" OR New_Process_Name="C:\\Windows\\help\\*" OR New_Process_Name="C:\\Windows\\drivers\\*" OR New_Process_Name="C:\\Windows\\addins\\*" OR New_Process_Name="C:\\Windows\\cursors\\*" OR New_Process_Name="C:\\Windows\\system32\\tasks\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 car.2013-05-002" | eval sigma_title="Suspicious Process Start Locations" | eval sigma_description="Detects suspicious process run from unusual locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Start Locations - sysmon]
description = Detects suspicious process run from unusual locations
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*:\\RECYCLER\\*" OR Image="*:\\SystemVolumeInformation\\*") OR (Image="C:\\Windows\\Tasks\\*" OR Image="C:\\Windows\\debug\\*" OR Image="C:\\Windows\\fonts\\*" OR Image="C:\\Windows\\help\\*" OR Image="C:\\Windows\\drivers\\*" OR Image="C:\\Windows\\addins\\*" OR Image="C:\\Windows\\cursors\\*" OR Image="C:\\Windows\\system32\\tasks\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 car.2013-05-002" | eval sigma_title="Suspicious Process Start Locations" | eval sigma_description="Detects suspicious process run from unusual locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity - winevent]
description = Detects suspicious process related to rundll32 based on arguments
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*javascript:*" Process_Command_Line="*.RegisterXLL*") OR (Process_Command_Line="*url.dll*" Process_Command_Line="*OpenURL*") OR (Process_Command_Line="*url.dll*" Process_Command_Line="*OpenURLA*") OR (Process_Command_Line="*url.dll*" Process_Command_Line="*FileProtocolHandler*") OR (Process_Command_Line="*zipfldr.dll*" Process_Command_Line="*RouteTheCall*") OR (Process_Command_Line="*shell32.dll*" Process_Command_Line="*Control_RunDLL*") OR (Process_Command_Line="*shell32.dll*" Process_Command_Line="*ShellExec_RunDLL*") OR (Process_Command_Line="*mshtml.dll*" Process_Command_Line="*PrintHTML*") OR (Process_Command_Line="*advpack.dll*" Process_Command_Line="*LaunchINFSection*") OR (Process_Command_Line="*advpack.dll*" Process_Command_Line="*RegisterOCX*") OR (Process_Command_Line="*ieadvpack.dll*" Process_Command_Line="*LaunchINFSection*") OR (Process_Command_Line="*ieadvpack.dll*" Process_Command_Line="*RegisterOCX*") OR (Process_Command_Line="*ieframe.dll*" Process_Command_Line="*OpenURL*") OR (Process_Command_Line="*shdocvw.dll*" Process_Command_Line="*OpenURL*") OR (Process_Command_Line="*syssetup.dll*" Process_Command_Line="*SetupInfObjectInstallAction*") OR (Process_Command_Line="*setupapi.dll*" Process_Command_Line="*InstallHinfSection*") OR (Process_Command_Line="*pcwutl.dll*" Process_Command_Line="*LaunchApplication*") OR (Process_Command_Line="*dfshim.dll*" Process_Command_Line="*ShOpenVerbApplication*") OR (Process_Command_Line="*dfshim.dll*" Process_Command_Line="*ShOpenVerbShortcut*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Activity" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity - sysmon]
description = Detects suspicious process related to rundll32 based on arguments
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*javascript:*" CommandLine="*.RegisterXLL*") OR (CommandLine="*url.dll*" CommandLine="*OpenURL*") OR (CommandLine="*url.dll*" CommandLine="*OpenURLA*") OR (CommandLine="*url.dll*" CommandLine="*FileProtocolHandler*") OR (CommandLine="*zipfldr.dll*" CommandLine="*RouteTheCall*") OR (CommandLine="*shell32.dll*" CommandLine="*Control_RunDLL*") OR (CommandLine="*shell32.dll*" CommandLine="*ShellExec_RunDLL*") OR (CommandLine="*mshtml.dll*" CommandLine="*PrintHTML*") OR (CommandLine="*advpack.dll*" CommandLine="*LaunchINFSection*") OR (CommandLine="*advpack.dll*" CommandLine="*RegisterOCX*") OR (CommandLine="*ieadvpack.dll*" CommandLine="*LaunchINFSection*") OR (CommandLine="*ieadvpack.dll*" CommandLine="*RegisterOCX*") OR (CommandLine="*ieframe.dll*" CommandLine="*OpenURL*") OR (CommandLine="*shdocvw.dll*" CommandLine="*OpenURL*") OR (CommandLine="*syssetup.dll*" CommandLine="*SetupInfObjectInstallAction*") OR (CommandLine="*setupapi.dll*" CommandLine="*InstallHinfSection*") OR (CommandLine="*pcwutl.dll*" CommandLine="*LaunchApplication*") OR (CommandLine="*dfshim.dll*" CommandLine="*ShOpenVerbApplication*") OR (CommandLine="*dfshim.dll*" CommandLine="*ShOpenVerbShortcut*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Activity" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Call by Ordinal - winevent]
description = Detects suspicious calls of DLLs in rundll32.dll exports by ordinal
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" (Process_Command_Line="*,#*" OR Process_Command_Line="*, #*" OR Process_Command_Line="*.dll #*" OR Process_Command_Line="*.ocx #*")) NOT (Process_Command_Line="*EDGEHTML.dll*" Process_Command_Line="*#141*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Call by Ordinal" | eval sigma_description="Detects suspicious calls of DLLs in rundll32.dll exports by ordinal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Call by Ordinal - sysmon]
description = Detects suspicious calls of DLLs in rundll32.dll exports by ordinal
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" (CommandLine="*,#*" OR CommandLine="*, #*" OR CommandLine="*.dll #*" OR CommandLine="*.ocx #*")) NOT (CommandLine="*EDGEHTML.dll*" CommandLine="*#141*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Call by Ordinal" | eval sigma_description="Detects suspicious calls of DLLs in rundll32.dll exports by ordinal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Invoking Inline VBScript - winevent]
description = Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" Process_Command_Line="*Execute*" Process_Command_Line="*RegRead*" Process_Command_Line="*window.close*") | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Suspicious Rundll32 Invoking Inline VBScript" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Invoking Inline VBScript - sysmon]
description = Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" CommandLine="*Execute*" CommandLine="*RegRead*" CommandLine="*window.close*") | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Suspicious Rundll32 Invoking Inline VBScript" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 JS RunHTMLApplication Pattern - winevent]
description = Detects suspicious command line patterns used when rundll32 is used to run JavaScript code
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*rundll32*" Process_Command_Line="*javascript*" Process_Command_Line="*..\\..\\mshtml,RunHTMLApplication*") OR Process_Command_Line="*;document.write();GetObject(\"script*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Rundll32 JS RunHTMLApplication Pattern" | eval sigma_description="Detects suspicious command line patterns used when rundll32 is used to run JavaScript code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 JS RunHTMLApplication Pattern - sysmon]
description = Detects suspicious command line patterns used when rundll32 is used to run JavaScript code
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*rundll32*" CommandLine="*javascript*" CommandLine="*..\\..\\mshtml,RunHTMLApplication*") OR CommandLine="*;document.write();GetObject(\"script*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Rundll32 JS RunHTMLApplication Pattern" | eval sigma_description="Detects suspicious command line patterns used when rundll32 is used to run JavaScript code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Key Manager Access - winevent]
description = Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*keymgr*" Process_Command_Line="*KRShowKeyMgr*") | eval sigma_attack_tags="attack.credential_access attack.t1555.004" | eval sigma_title="Suspicious Key Manager Access" | eval sigma_description="Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Key Manager Access - sysmon]
description = Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*keymgr*" CommandLine="*KRShowKeyMgr*") | eval sigma_attack_tags="attack.credential_access attack.t1555.004" | eval sigma_title="Suspicious Key Manager Access" | eval sigma_description="Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Without Any CommandLine Params - winevent]
description = Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\rundll32.exe" NOT (Creator_Process_Name="*\\svchost.exe")) NOT ((Creator_Process_Name="*\\AppData\\Local\\*" OR Creator_Process_Name="*\\Microsoft\\Edge\\*"))) | table Creator_Process_Name,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Rundll32 Without Any CommandLine Params" | eval sigma_description="Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Without Any CommandLine Params - sysmon]
description = Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\rundll32.exe" NOT (ParentImage="*\\svchost.exe")) NOT ((ParentImage="*\\AppData\\Local\\*" OR ParentImage="*\\Microsoft\\Edge\\*"))) | table ParentImage,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Rundll32 Without Any CommandLine Params" | eval sigma_description="Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Script in CommandLine - winevent]
description = Detects suspicious process related to rundll32 based on arguments
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32*" Process_Command_Line="*mshtml,RunHTMLApplication*" (Process_Command_Line="*javascript:*" OR Process_Command_Line="*vbscript:*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Script in CommandLine" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Script in CommandLine - sysmon]
description = Detects suspicious process related to rundll32 based on arguments
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32*" CommandLine="*mshtml,RunHTMLApplication*" (CommandLine="*javascript:*" OR CommandLine="*vbscript:*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Script in CommandLine" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Setupapi.dll Activity - winevent]
description = setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\runonce.exe" Creator_Process_Name="*\\rundll32.exe" ParentCommandLine="*setupapi.dll*" ParentCommandLine="*InstallHinfSection*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Setupapi.dll Activity" | eval sigma_description="setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Setupapi.dll Activity - sysmon]
description = setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\runonce.exe" ParentImage="*\\rundll32.exe" ParentCommandLine="*setupapi.dll*" ParentCommandLine="*InstallHinfSection*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Setupapi.dll Activity" | eval sigma_description="setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file."
dispatch.earliest_time = -24h@h
alert.track = 0

[RunDLL32 Spawning Explorer - winevent]
description = Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\rundll32.exe" New_Process_Name="*\\explorer.exe") NOT (ParentCommandLine="*\\shell32.dll,Control_RunDLL*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="RunDLL32 Spawning Explorer" | eval sigma_description="Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way"
dispatch.earliest_time = -24h@h
alert.track = 0

[RunDLL32 Spawning Explorer - sysmon]
description = Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\rundll32.exe" Image="*\\explorer.exe") NOT (ParentCommandLine="*\\shell32.dll,Control_RunDLL*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="RunDLL32 Spawning Explorer" | eval sigma_description="Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity Invoking Sys File - winevent]
description = Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*rundll32.exe*" (Process_Command_Line="*.sys,*" OR Process_Command_Line="*.sys *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Activity Invoking Sys File" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity Invoking Sys File - sysmon]
description = Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*rundll32.exe*" (CommandLine="*.sys,*" OR CommandLine="*.sys *")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011" | eval sigma_title="Suspicious Rundll32 Activity Invoking Sys File" | eval sigma_description="Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Workstation Locking via Rundll32 - winevent]
description = Detects a suspicious call to the user32.dll function that locks the user workstation
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Creator_Process_Name="*\\cmd.exe" Process_Command_Line="*user32.dll,*" Process_Command_Line="*LockWorkStation*") | table New_Process_Name,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Workstation Locking via Rundll32" | eval sigma_description="Detects a suspicious call to the user32.dll function that locks the user workstation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Workstation Locking via Rundll32 - sysmon]
description = Detects a suspicious call to the user32.dll function that locks the user workstation
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" ParentImage="*\\cmd.exe" CommandLine="*user32.dll,*" CommandLine="*LockWorkStation*") | table Image,ParentImage | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Suspicious Workstation Locking via Rundll32" | eval sigma_description="Detects a suspicious call to the user32.dll function that locks the user workstation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Once Task Execution as Configured in Registry - winevent]
description = This rule detects the execution of Run Once task as configured in the registry
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\runonce.exe" OR Description="Run Once Wrapper") Process_Command_Line="* /AlternateShellStartup*") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Run Once Task Execution as Configured in Registry" | eval sigma_description="This rule detects the execution of Run Once task as configured in the registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Once Task Execution as Configured in Registry - sysmon]
description = This rule detects the execution of Run Once task as configured in the registry
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\runonce.exe" OR Description="Run Once Wrapper") CommandLine="* /AlternateShellStartup*") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Run Once Task Execution as Configured in Registry" | eval sigma_description="This rule detects the execution of Run Once task as configured in the registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Runscripthelper.exe - winevent]
description = Detects execution of powershell scripts via Runscripthelper.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Runscripthelper.exe" Process_Command_Line="*surfacecheck*") | table Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Runscripthelper.exe" | eval sigma_description="Detects execution of powershell scripts via Runscripthelper.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Runscripthelper.exe - sysmon]
description = Detects execution of powershell scripts via Runscripthelper.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Runscripthelper.exe" CommandLine="*surfacecheck*") | table CommandLine | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Runscripthelper.exe" | eval sigma_description="Detects execution of powershell scripts via Runscripthelper.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scheduled Task Creation Involving Temp Folder - winevent]
description = Detects the creation of scheduled tasks that involves a temporary folder and runs only once
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *" Process_Command_Line="* /sc once *" Process_Command_Line="*\\Temp\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005" | eval sigma_title="Suspicious Scheduled Task Creation Involving Temp Folder" | eval sigma_description="Detects the creation of scheduled tasks that involves a temporary folder and runs only once"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scheduled Task Creation Involving Temp Folder - sysmon]
description = Detects the creation of scheduled tasks that involves a temporary folder and runs only once
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="* /create *" CommandLine="* /sc once *" CommandLine="*\\Temp\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.t1053.005" | eval sigma_title="Suspicious Scheduled Task Creation Involving Temp Folder" | eval sigma_description="Detects the creation of scheduled tasks that involves a temporary folder and runs only once"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Creation - winevent]
description = Detects the creation of scheduled tasks in user session
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *") NOT ((Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053.005 attack.s0111 car.2013-08-001" | eval sigma_title="Scheduled Task Creation" | eval sigma_description="Detects the creation of scheduled tasks in user session"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Creation - sysmon]
description = Detects the creation of scheduled tasks in user session
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\schtasks.exe" CommandLine="* /create *") NOT ((User="*AUTHORI*" OR User="*AUTORI*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053.005 attack.s0111 car.2013-08-001" | eval sigma_title="Scheduled Task Creation" | eval sigma_description="Detects the creation of scheduled tasks in user session"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicius Schtasks From Env Var Folder - winevent]
description = Detects Schtask creations that point to a folder references in environment variables or often used by malware
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *" (Process_Command_Line="*%AppData%*" OR Process_Command_Line="*\\AppData\\Local\\*" OR Process_Command_Line="*\\AppData\\Roaming\\*" OR Process_Command_Line="*%Public%*" OR Process_Command_Line="*\\Users\\Public*" OR Process_Command_Line="*C:\\Windows\\Temp*" OR Process_Command_Line="*C:\\Perflogs*")) OR (ParentCommandLine="*\\svchost.exe -k netsvcs -p -s Schedule" (Process_Command_Line="*%Public%*" OR Process_Command_Line="*\\Users\\Public*" OR Process_Command_Line="*C:\\Windows\\Temp*" OR Process_Command_Line="*C:\\Perflogs*"))) NOT ((Process_Command_Line="*update_task.xml*" OR ParentCommandLine="*unattended.ini*"))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicius Schtasks From Env Var Folder" | eval sigma_description="Detects Schtask creations that point to a folder references in environment variables or often used by malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicius Schtasks From Env Var Folder - sysmon]
description = Detects Schtask creations that point to a folder references in environment variables or often used by malware
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\schtasks.exe" CommandLine="* /create *" (CommandLine="*%AppData%*" OR CommandLine="*\\AppData\\Local\\*" OR CommandLine="*\\AppData\\Roaming\\*" OR CommandLine="*%Public%*" OR CommandLine="*\\Users\\Public*" OR CommandLine="*C:\\Windows\\Temp*" OR CommandLine="*C:\\Perflogs*")) OR (ParentCommandLine="*\\svchost.exe -k netsvcs -p -s Schedule" (CommandLine="*%Public%*" OR CommandLine="*\\Users\\Public*" OR CommandLine="*C:\\Windows\\Temp*" OR CommandLine="*C:\\Perflogs*"))) NOT ((CommandLine="*update_task.xml*" OR ParentCommandLine="*unattended.ini*"))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicius Schtasks From Env Var Folder" | eval sigma_description="Detects Schtask creations that point to a folder references in environment variables or often used by malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Schtasks From Suspicious Folders - winevent]
description = Detects scheduled task creations that have suspicious action command and folder combinations
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *" (Process_Command_Line="*powershell*" OR Process_Command_Line="*cmd /c *" OR Process_Command_Line="*cmd.exe /c *") (Process_Command_Line="*C:\\ProgramData\\*" OR Process_Command_Line="*%ProgramData%*")) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Schtasks From Suspicious Folders" | eval sigma_description="Detects scheduled task creations that have suspicious action command and folder combinations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Schtasks From Suspicious Folders - sysmon]
description = Detects scheduled task creations that have suspicious action command and folder combinations
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="* /create *" (CommandLine="*powershell*" OR CommandLine="*cmd /c *" OR CommandLine="*cmd.exe /c *") (CommandLine="*C:\\ProgramData\\*" OR CommandLine="*%ProgramData%*")) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Schtasks From Suspicious Folders" | eval sigma_description="Detects scheduled task creations that have suspicious action command and folder combinations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add Scheduled Task Parent - winevent]
description = Detects suspicious scheduled task creations from a parent stored in a temporary folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create *" (Creator_Process_Name="*\\AppData\\Local\\*" OR Creator_Process_Name="*\\AppData\\Roaming\\*" OR Creator_Process_Name="*\\Temporary Internet*" OR Creator_Process_Name="*\\Users\\Public\\*")) NOT (((Process_Command_Line="*update_task.xml*" OR Process_Command_Line="*unattended.ini*")))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicious Add Scheduled Task Parent" | eval sigma_description="Detects suspicious scheduled task creations from a parent stored in a temporary folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add Scheduled Task Parent - sysmon]
description = Detects suspicious scheduled task creations from a parent stored in a temporary folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\schtasks.exe" CommandLine="*/Create *" (ParentImage="*\\AppData\\Local\\*" OR ParentImage="*\\AppData\\Roaming\\*" OR ParentImage="*\\Temporary Internet*" OR ParentImage="*\\Users\\Public\\*")) NOT (((CommandLine="*update_task.xml*" OR CommandLine="*unattended.ini*")))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicious Add Scheduled Task Parent" | eval sigma_description="Detects suspicious scheduled task creations from a parent stored in a temporary folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add Scheduled Command Pattern - winevent]
description = Detects suspicious scheduled task creations with commands that are uncommon
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create *") (((Process_Command_Line="*/sc minute *" OR Process_Command_Line="*/ru system *") (Process_Command_Line="*cmd.exe /c *" OR Process_Command_Line="*cmd /c*")) OR (Process_Command_Line="* bypass *" OR Process_Command_Line="*.DownloadString*" OR Process_Command_Line="*.DownloadFile*" OR Process_Command_Line="*FromBase64String*" OR Process_Command_Line="* -w hidden *" OR Process_Command_Line="* IEX*" OR Process_Command_Line="* -enc *" OR Process_Command_Line="* -decode *" OR Process_Command_Line="*/c start /min *" OR Process_Command_Line="* curl *") OR (Process_Command_Line="*/xml C:\\Users\\*" Process_Command_Line="*\\AppData\\Local\\*") OR (Process_Command_Line="*wscript.exe*" Process_Command_Line="*\\AppData\\*"))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicious Add Scheduled Command Pattern" | eval sigma_description="Detects suspicious scheduled task creations with commands that are uncommon"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add Scheduled Command Pattern - sysmon]
description = Detects suspicious scheduled task creations with commands that are uncommon
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\schtasks.exe" CommandLine="*/Create *") (((CommandLine="*/sc minute *" OR CommandLine="*/ru system *") (CommandLine="*cmd.exe /c *" OR CommandLine="*cmd /c*")) OR (CommandLine="* bypass *" OR CommandLine="*.DownloadString*" OR CommandLine="*.DownloadFile*" OR CommandLine="*FromBase64String*" OR CommandLine="* -w hidden *" OR CommandLine="* IEX*" OR CommandLine="* -enc *" OR CommandLine="* -decode *" OR CommandLine="*/c start /min *" OR CommandLine="* curl *") OR (CommandLine="*/xml C:\\Users\\*" CommandLine="*\\AppData\\Local\\*") OR (CommandLine="*wscript.exe*" CommandLine="*\\AppData\\*"))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicious Add Scheduled Command Pattern" | eval sigma_description="Detects suspicious scheduled task creations with commands that are uncommon"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add Scheduled Task From User AppData Temp - winevent]
description = schtasks.exe create task from user AppData\Local\Temp
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/Create *" Process_Command_Line="*\\AppData\\Local\\Temp*") NOT ((Process_Command_Line="*/Create /TN \"klcp_update\" /XML *" Process_Command_Line="*\\klcp_update_task.xml*"))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicious Add Scheduled Task From User AppData Temp" | eval sigma_description="schtasks.exe create task from user AppData\Local\Temp"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Add Scheduled Task From User AppData Temp - sysmon]
description = schtasks.exe create task from user AppData\Local\Temp
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\schtasks.exe" CommandLine="*/Create *" CommandLine="*\\AppData\\Local\\Temp*") NOT ((CommandLine="*/Create /TN \"klcp_update\" /XML *" CommandLine="*\\klcp_update_task.xml*"))) | eval sigma_attack_tags="attack.execution attack.t1053.005" | eval sigma_title="Suspicious Add Scheduled Task From User AppData Temp" | eval sigma_description="schtasks.exe create task from user AppData\Local\Temp"
dispatch.earliest_time = -24h@h
alert.track = 0

[ScreenConnect Remote Access - winevent]
description = Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*e=Access&*" Process_Command_Line="*y=Guest&*" Process_Command_Line="*&p=*" Process_Command_Line="*&c=*" Process_Command_Line="*&k=*") | eval sigma_attack_tags="attack.initial_access attack.t1133" | eval sigma_title="ScreenConnect Remote Access" | eval sigma_description="Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)"
dispatch.earliest_time = -24h@h
alert.track = 0

[ScreenConnect Remote Access - sysmon]
description = Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*e=Access&*" CommandLine="*y=Guest&*" CommandLine="*&p=*" CommandLine="*&c=*" CommandLine="*&k=*") | eval sigma_attack_tags="attack.initial_access attack.t1133" | eval sigma_title="ScreenConnect Remote Access" | eval sigma_description="Detects ScreenConnect program starts that establish a remote access to that system (not meeting, not remote support)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ScreenSave Change by Reg.exe - winevent]
description = Adversaries may establish persistence by executing malicious content triggered by user inactivity.
Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\reg.exe" (Process_Command_Line="*HKEY_CURRENT_USER\\Control Panel\\Desktop*" OR Process_Command_Line="*HKCU\\Control Panel\\Desktop*")) ((Process_Command_Line="*/v ScreenSaveActive*" Process_Command_Line="*/t REG_SZ*" Process_Command_Line="*/d 1*" Process_Command_Line="*/f*") OR (Process_Command_Line="*/v ScreenSaveTimeout*" Process_Command_Line="*/t REG_SZ*" Process_Command_Line="*/d *" Process_Command_Line="*/f*") OR (Process_Command_Line="*/v ScreenSaverIsSecure*" Process_Command_Line="*/t REG_SZ*" Process_Command_Line="*/d 0*" Process_Command_Line="*/f*") OR (Process_Command_Line="*/v SCRNSAVE.EXE*" Process_Command_Line="*/t REG_SZ*" Process_Command_Line="*/d *" Process_Command_Line="*.scr*" Process_Command_Line="*/f*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1546.002" | eval sigma_title="Suspicious ScreenSave Change by Reg.exe" | eval sigma_description="Adversaries may establish persistence by executing malicious content triggered by user inactivity.
Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ScreenSave Change by Reg.exe - sysmon]
description = Adversaries may establish persistence by executing malicious content triggered by user inactivity.
Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\reg.exe" (CommandLine="*HKEY_CURRENT_USER\\Control Panel\\Desktop*" OR CommandLine="*HKCU\\Control Panel\\Desktop*")) ((CommandLine="*/v ScreenSaveActive*" CommandLine="*/t REG_SZ*" CommandLine="*/d 1*" CommandLine="*/f*") OR (CommandLine="*/v ScreenSaveTimeout*" CommandLine="*/t REG_SZ*" CommandLine="*/d *" CommandLine="*/f*") OR (CommandLine="*/v ScreenSaverIsSecure*" CommandLine="*/t REG_SZ*" CommandLine="*/d 0*" CommandLine="*/f*") OR (CommandLine="*/v SCRNSAVE.EXE*" CommandLine="*/t REG_SZ*" CommandLine="*/d *" CommandLine="*.scr*" CommandLine="*/f*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1546.002" | eval sigma_title="Suspicious ScreenSave Change by Reg.exe" | eval sigma_description="Adversaries may establish persistence by executing malicious content triggered by user inactivity.
Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Script Interpreter Execution From Suspicious Folder - winevent]
description = Detects a suspicious script executions in temporary folders or folders accessible by environment variables
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\cmd.exe") OR (Process_Command_Line="* -w hidden *" OR Process_Command_Line="* -ep bypass *" OR Process_Command_Line="*/e:vbscript *" OR Process_Command_Line="*/e:javascript *") OR (OriginalFileName="powershell.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="cscript.exe" OR OriginalFileName="cmd.exe")) (New_Process_Name="*\\Windows\\Temp*" OR New_Process_Name="*\\Temporary Internet*" OR New_Process_Name="*\\AppData\\Local\\Temp*" OR New_Process_Name="*\\AppData\\Roaming\\Temp*" OR New_Process_Name="*C:\\Users\\Public\\*" OR New_Process_Name="*C:\\Perflogs\\*")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Script Interpreter Execution From Suspicious Folder" | eval sigma_description="Detects a suspicious script executions in temporary folders or folders accessible by environment variables"
dispatch.earliest_time = -24h@h
alert.track = 0

[Script Interpreter Execution From Suspicious Folder - sysmon]
description = Detects a suspicious script executions in temporary folders or folders accessible by environment variables
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" OR Image="*\\mshta.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\cmd.exe") OR (CommandLine="* -w hidden *" OR CommandLine="* -ep bypass *" OR CommandLine="*/e:vbscript *" OR CommandLine="*/e:javascript *") OR (OriginalFileName="powershell.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="cscript.exe" OR OriginalFileName="cmd.exe")) (Image="*\\Windows\\Temp*" OR Image="*\\Temporary Internet*" OR Image="*\\AppData\\Local\\Temp*" OR Image="*\\AppData\\Roaming\\Temp*" OR Image="*C:\\Users\\Public\\*" OR Image="*C:\\Perflogs\\*")) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Script Interpreter Execution From Suspicious Folder" | eval sigma_description="Detects a suspicious script executions in temporary folders or folders accessible by environment variables"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Script Execution From Temp Folder - winevent]
description = Detects a suspicious script executions from temporary folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="*\\Windows\\Temp*" OR Process_Command_Line="*\\Temporary Internet*" OR Process_Command_Line="*\\AppData\\Local\\Temp*" OR Process_Command_Line="*\\AppData\\Roaming\\Temp*" OR Process_Command_Line="*%TEMP%*" OR Process_Command_Line="*%TMP%*" OR Process_Command_Line="*%LocalAppData%\\Temp*")) NOT ((Process_Command_Line="* >*" OR Process_Command_Line="*Out-File*" OR Process_Command_Line="*ConvertTo-Json*" OR Process_Command_Line="*-WindowStyle hidden -Verb runAs*"))) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Suspicious Script Execution From Temp Folder" | eval sigma_description="Detects a suspicious script executions from temporary folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Script Execution From Temp Folder - sysmon]
description = Detects a suspicious script executions from temporary folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\powershell.exe" OR Image="*\\mshta.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="*\\Windows\\Temp*" OR CommandLine="*\\Temporary Internet*" OR CommandLine="*\\AppData\\Local\\Temp*" OR CommandLine="*\\AppData\\Roaming\\Temp*" OR CommandLine="*%TEMP%*" OR CommandLine="*%TMP%*" OR CommandLine="*%LocalAppData%\\Temp*")) NOT ((CommandLine="* >*" OR CommandLine="*Out-File*" OR CommandLine="*ConvertTo-Json*" OR CommandLine="*-WindowStyle hidden -Verb runAs*"))) | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Suspicious Script Execution From Temp Folder" | eval sigma_description="Detects a suspicious script executions from temporary folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSF/JSE/JS/VBA/VBE File Execution - winevent]
description = Detects suspicious file execution by wscript and cscript
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="*.jse*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.vba*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="WSF/JSE/JS/VBA/VBE File Execution" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSF/JSE/JS/VBA/VBE File Execution - sysmon]
description = Detects suspicious file execution by wscript and cscript
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="*.jse*" OR CommandLine="*.vbe*" OR CommandLine="*.js*" OR CommandLine="*.vba*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059.005 attack.t1059.007" | eval sigma_title="WSF/JSE/JS/VBA/VBE File Execution" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service DACL Modification - winevent]
description = Detects suspicious DACL modifications that can  be used to hide services or make them unstopable
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sc.exe" Process_Command_Line="*sdset*" Process_Command_Line="*D;;*" (Process_Command_Line="*;;;IU*" OR Process_Command_Line="*;;;SU*" OR Process_Command_Line="*;;;BA*" OR Process_Command_Line="*;;;SY*" OR Process_Command_Line="*;;;WD*")) | eval sigma_attack_tags="attack.persistence attack.t1543.003" | eval sigma_title="Suspicious Service DACL Modification" | eval sigma_description="Detects suspicious DACL modifications that can  be used to hide services or make them unstopable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service DACL Modification - sysmon]
description = Detects suspicious DACL modifications that can  be used to hide services or make them unstopable
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sc.exe" CommandLine="*sdset*" CommandLine="*D;;*" (CommandLine="*;;;IU*" OR CommandLine="*;;;SU*" OR CommandLine="*;;;BA*" OR CommandLine="*;;;SY*" OR CommandLine="*;;;WD*")) | eval sigma_attack_tags="attack.persistence attack.t1543.003" | eval sigma_title="Suspicious Service DACL Modification" | eval sigma_description="Detects suspicious DACL modifications that can  be used to hide services or make them unstopable"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Binary Directory - winevent]
description = Detects a service binary running in a suspicious directory
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\Users\\Public\\*" OR New_Process_Name="*\\$Recycle.bin*" OR New_Process_Name="*\\Users\\All Users\\*" OR New_Process_Name="*\\Users\\Default\\*" OR New_Process_Name="*\\Users\\Contacts\\*" OR New_Process_Name="*\\Users\\Searches\\*" OR New_Process_Name="*C:\\Perflogs\\*" OR New_Process_Name="*\\config\\systemprofile\\*" OR New_Process_Name="*\\Windows\\Fonts\\*" OR New_Process_Name="*\\Windows\\IME\\*" OR New_Process_Name="*\\Windows\\addins\\*") (Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\svchost.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Service Binary Directory" | eval sigma_description="Detects a service binary running in a suspicious directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Binary Directory - sysmon]
description = Detects a service binary running in a suspicious directory
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\Users\\Public\\*" OR Image="*\\$Recycle.bin*" OR Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\Contacts\\*" OR Image="*\\Users\\Searches\\*" OR Image="*C:\\Perflogs\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*") (ParentImage="*\\services.exe" OR ParentImage="*\\svchost.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Service Binary Directory" | eval sigma_description="Detects a service binary running in a suspicious directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Or Remove Antivirus Service - winevent]
description = Adversaries may disable security tools to avoid possible detection of their tools and activities by stopping antivirus service
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*Stop-Service *" OR Process_Command_Line="*Remove-Service *") (Process_Command_Line="* McAfeeDLPAgentService*" OR Process_Command_Line="* Trend Micro Deep Security Manager*" OR Process_Command_Line="* TMBMServer*")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Stop Or Remove Antivirus Service" | eval sigma_description="Adversaries may disable security tools to avoid possible detection of their tools and activities by stopping antivirus service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Or Remove Antivirus Service - sysmon]
description = Adversaries may disable security tools to avoid possible detection of their tools and activities by stopping antivirus service
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*Stop-Service *" OR CommandLine="*Remove-Service *") (CommandLine="* McAfeeDLPAgentService*" OR CommandLine="* Trend Micro Deep Security Manager*" OR CommandLine="* TMBMServer*")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Stop Or Remove Antivirus Service" | eval sigma_description="Adversaries may disable security tools to avoid possible detection of their tools and activities by stopping antivirus service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Path Modification - winevent]
description = Detects service path modification to PowerShell or cmd.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sc.exe" Process_Command_Line="*config*" Process_Command_Line="*binpath*" (Process_Command_Line="*powershell*" OR Process_Command_Line="*cmd*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="Suspicious Service Path Modification" | eval sigma_description="Detects service path modification to PowerShell or cmd."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Path Modification - sysmon]
description = Detects service path modification to PowerShell or cmd.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sc.exe" CommandLine="*config*" CommandLine="*binpath*" (CommandLine="*powershell*" OR CommandLine="*cmd*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1543.003" | eval sigma_title="Suspicious Service Path Modification" | eval sigma_description="Detects service path modification to PowerShell or cmd."
dispatch.earliest_time = -24h@h
alert.track = 0

[Serv-U Exploitation CVE-2021-35211 by DEV-0322 - winevent]
description = Detects patterns as noticed in exploitation of Serv-U CVE-2021-35211 vulnerability by threat group DEV-0322
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*whoami*" (Process_Command_Line="*./Client/Common/*" OR Process_Command_Line="*.\\Client\\Common\\*")) OR Process_Command_Line="*C:\\Windows\\Temp\\Serv-U.bat*")) | eval sigma_attack_tags="attack.persistence attack.t1136.001 cve.2021.35211" | eval sigma_title="Serv-U Exploitation CVE-2021-35211 by DEV-0322" | eval sigma_description="Detects patterns as noticed in exploitation of Serv-U CVE-2021-35211 vulnerability by threat group DEV-0322"
dispatch.earliest_time = -24h@h
alert.track = 0

[Serv-U Exploitation CVE-2021-35211 by DEV-0322 - sysmon]
description = Detects patterns as noticed in exploitation of Serv-U CVE-2021-35211 vulnerability by threat group DEV-0322
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*whoami*" (CommandLine="*./Client/Common/*" OR CommandLine="*.\\Client\\Common\\*")) OR CommandLine="*C:\\Windows\\Temp\\Serv-U.bat*")) | eval sigma_attack_tags="attack.persistence attack.t1136.001 cve.2021.35211" | eval sigma_title="Serv-U Exploitation CVE-2021-35211 by DEV-0322" | eval sigma_description="Detects patterns as noticed in exploitation of Serv-U CVE-2021-35211 vulnerability by threat group DEV-0322"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Serv-U Process Pattern - winevent]
description = Detects a suspicious process pattern which could be a sign of an exploited Serv-U service
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\Serv-U.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1555 cve.2021.35211" | eval sigma_title="Suspicious Serv-U Process Pattern" | eval sigma_description="Detects a suspicious process pattern which could be a sign of an exploited Serv-U service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Serv-U Process Pattern - sysmon]
description = Detects a suspicious process pattern which could be a sign of an exploited Serv-U service
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\Serv-U.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\schtasks.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\msiexec.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1555 cve.2021.35211" | eval sigma_title="Suspicious Serv-U Process Pattern" | eval sigma_description="Detects a suspicious process pattern which could be a sign of an exploited Serv-U service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by Java Utility Keytool - winevent]
description = Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\keytool.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\whoami.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe" OR New_Process_Name="*\\mftrace.exe" OR New_Process_Name="*\\AppVLP.exe")) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by Java Utility Keytool" | eval sigma_description="Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by Java Utility Keytool - sysmon]
description = Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\keytool.exe" (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\schtasks.exe" OR Image="*\\certutil.exe" OR Image="*\\whoami.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\scrcons.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\mftrace.exe" OR Image="*\\AppVLP.exe")) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by Java Utility Keytool" | eval sigma_description="Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by Java - winevent]
description = Detects suspicious shell spawn from Java host process (e.g. log4j exploitation)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\java.exe" (New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\whoami.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe" OR New_Process_Name="*\\mftrace.exe" OR New_Process_Name="*\\AppVLP.exe" OR New_Process_Name="*\\curl.exe")) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by Java" | eval sigma_description="Detects suspicious shell spawn from Java host process (e.g. log4j exploitation)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by Java - sysmon]
description = Detects suspicious shell spawn from Java host process (e.g. log4j exploitation)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\java.exe" (Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\schtasks.exe" OR Image="*\\certutil.exe" OR Image="*\\whoami.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\scrcons.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\mftrace.exe" OR Image="*\\AppVLP.exe" OR Image="*\\curl.exe")) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by Java" | eval sigma_description="Detects suspicious shell spawn from Java host process (e.g. log4j exploitation)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by SQL Server - winevent]
description = Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\sqlservr.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) NOT ((Creator_Process_Name="C:\\Program Files\\Microsoft SQL Server\\*" Creator_Process_Name="*DATEV_DBENGINE\\MSSQL\\Binn\\sqlservr.exe" New_Process_Name="C:\\Windows\\System32\\cmd.exe" Process_Command_Line="\"C:\\Windows\\system32\\cmd.exe\" *"))) | eval sigma_attack_tags="attack.t1505.003 attack.t1190 attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by SQL Server" | eval sigma_description="Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Shells Spawn by SQL Server - sysmon]
description = Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\sqlservr.exe" (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) NOT ((ParentImage="C:\\Program Files\\Microsoft SQL Server\\*" ParentImage="*DATEV_DBENGINE\\MSSQL\\Binn\\sqlservr.exe" Image="C:\\Windows\\System32\\cmd.exe" CommandLine="\"C:\\Windows\\system32\\cmd.exe\" *"))) | eval sigma_attack_tags="attack.t1505.003 attack.t1190 attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Shells Spawn by SQL Server" | eval sigma_description="Detects suspicious shell spawn from MSSQL process, this might be sight of RCE or SQL Injection"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Processes Spawned by WinRM - winevent]
description = Detects suspicious processes including shells spawnd from WinRM host process
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\wsmprovhost.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wsl.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\whoami.exe" OR New_Process_Name="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.t1190 attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Processes Spawned by WinRM" | eval sigma_description="Detects suspicious processes including shells spawnd from WinRM host process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Processes Spawned by WinRM - sysmon]
description = Detects suspicious processes including shells spawnd from WinRM host process
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\wsmprovhost.exe" (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\wsl.exe" OR Image="*\\schtasks.exe" OR Image="*\\certutil.exe" OR Image="*\\whoami.exe" OR Image="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.t1190 attack.initial_access attack.persistence attack.privilege_escalation" | eval sigma_title="Suspicious Processes Spawned by WinRM" | eval sigma_description="Detects suspicious processes including shells spawnd from WinRM host process"
dispatch.earliest_time = -24h@h
alert.track = 0

[ShimCache Flush - winevent]
description = Detects actions that clear the local ShimCache and remove forensic evidence
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*rundll32*" Process_Command_Line="*apphelp.dll*" (Process_Command_Line="*ShimFlushCache*" OR Process_Command_Line="*#250*")) OR (Process_Command_Line="*rundll32*" Process_Command_Line="*kernel32.dll*" (Process_Command_Line="*BaseFlushAppcompatCache*" OR Process_Command_Line="*#46*")))) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="ShimCache Flush" | eval sigma_description="Detects actions that clear the local ShimCache and remove forensic evidence"
dispatch.earliest_time = -24h@h
alert.track = 0

[ShimCache Flush - sysmon]
description = Detects actions that clear the local ShimCache and remove forensic evidence
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*rundll32*" CommandLine="*apphelp.dll*" (CommandLine="*ShimFlushCache*" OR CommandLine="*#250*")) OR (CommandLine="*rundll32*" CommandLine="*kernel32.dll*" (CommandLine="*BaseFlushAppcompatCache*" OR CommandLine="*#46*")))) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="ShimCache Flush" | eval sigma_description="Detects actions that clear the local ShimCache and remove forensic evidence"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution of Shutdown - winevent]
description = Use of the commandline to shutdown or reboot windows
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\shutdown.exe" (Process_Command_Line="*/r *" OR Process_Command_Line="*/s *")) | eval sigma_attack_tags="attack.impact attack.t1529" | eval sigma_title="Suspicious Execution of Shutdown" | eval sigma_description="Use of the commandline to shutdown or reboot windows"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution of Shutdown - sysmon]
description = Use of the commandline to shutdown or reboot windows
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\shutdown.exe" (CommandLine="*/r *" OR CommandLine="*/s *")) | eval sigma_attack_tags="attack.impact attack.t1529" | eval sigma_title="Suspicious Execution of Shutdown" | eval sigma_description="Use of the commandline to shutdown or reboot windows"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Splwow64 Without Params - winevent]
description = Detects suspicious Splwow64.exe process without any command line parameters
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\splwow64.exe" Process_Command_Line="*splwow64.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Splwow64 Without Params" | eval sigma_description="Detects suspicious Splwow64.exe process without any command line parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Splwow64 Without Params - sysmon]
description = Detects suspicious Splwow64.exe process without any command line parameters
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\splwow64.exe" CommandLine="*splwow64.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Suspicious Splwow64 Without Params" | eval sigma_description="Detects suspicious Splwow64.exe process without any command line parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Spool Service Child Process - winevent]
description = Detects suspicious print spool service (spoolsv.exe) child processes.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\spoolsv.exe" IntegrityLevel="System") ((((((New_Process_Name="*\\gpupdate.exe" OR New_Process_Name="*\\whoami.exe" OR New_Process_Name="*\\nltest.exe" OR New_Process_Name="*\\taskkill.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\taskmgr.exe" OR New_Process_Name="*\\sc.exe" OR New_Process_Name="*\\findstr.exe" OR New_Process_Name="*\\curl.exe" OR New_Process_Name="*\\wget.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\accesschk.exe" OR New_Process_Name="*\\wevtutil.exe" OR New_Process_Name="*\\bcdedit.exe" OR New_Process_Name="*\\fsutil.exe" OR New_Process_Name="*\\cipher.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\write.exe" OR New_Process_Name="*\\wuauclt.exe") OR (New_Process_Name="*\\net.exe" NOT (Process_Command_Line="*start*"))) OR (New_Process_Name="*\\cmd.exe" NOT ((Process_Command_Line="*.spl*" OR Process_Command_Line="*route add*" OR Process_Command_Line="*program files*")))) OR (New_Process_Name="*\\netsh.exe" NOT ((Process_Command_Line="*add portopening*" OR Process_Command_Line="*rule name*")))) OR (New_Process_Name="*\\powershell.exe" NOT (Process_Command_Line="*.spl*"))) OR (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*rundll32.exe"))) | table New_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1203 attack.privilege_escalation attack.t1068" | eval sigma_title="Suspicious Spool Service Child Process" | eval sigma_description="Detects suspicious print spool service (spoolsv.exe) child processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Spool Service Child Process - sysmon]
description = Detects suspicious print spool service (spoolsv.exe) child processes.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\spoolsv.exe" IntegrityLevel="System") ((((((Image="*\\gpupdate.exe" OR Image="*\\whoami.exe" OR Image="*\\nltest.exe" OR Image="*\\taskkill.exe" OR Image="*\\wmic.exe" OR Image="*\\taskmgr.exe" OR Image="*\\sc.exe" OR Image="*\\findstr.exe" OR Image="*\\curl.exe" OR Image="*\\wget.exe" OR Image="*\\certutil.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\accesschk.exe" OR Image="*\\wevtutil.exe" OR Image="*\\bcdedit.exe" OR Image="*\\fsutil.exe" OR Image="*\\cipher.exe" OR Image="*\\schtasks.exe" OR Image="*\\write.exe" OR Image="*\\wuauclt.exe") OR (Image="*\\net.exe" NOT (CommandLine="*start*"))) OR (Image="*\\cmd.exe" NOT ((CommandLine="*.spl*" OR CommandLine="*route add*" OR CommandLine="*program files*")))) OR (Image="*\\netsh.exe" NOT ((CommandLine="*add portopening*" OR CommandLine="*rule name*")))) OR (Image="*\\powershell.exe" NOT (CommandLine="*.spl*"))) OR (Image="*\\rundll32.exe" CommandLine="*rundll32.exe"))) | table Image,CommandLine | eval sigma_attack_tags="attack.execution attack.t1203 attack.privilege_escalation attack.t1068" | eval sigma_title="Suspicious Spool Service Child Process" | eval sigma_description="Detects suspicious print spool service (spoolsv.exe) child processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Squirrel Lolbin - winevent]
description = Detects Possible Squirrel Packages Manager as Lolbin
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\update.exe" Process_Command_Line="*.exe*" (Process_Command_Line="*--processStart*" OR Process_Command_Line="*--processStartAndWait*" OR Process_Command_Line="*--createShortcut*")) NOT ((Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\AppData\\Local\\Discord\\Update.exe*" Process_Command_Line="* --processStart Discord.exe*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="Squirrel Lolbin" | eval sigma_description="Detects Possible Squirrel Packages Manager as Lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Squirrel Lolbin - sysmon]
description = Detects Possible Squirrel Packages Manager as Lolbin
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\update.exe" CommandLine="*.exe*" (CommandLine="*--processStart*" OR CommandLine="*--processStartAndWait*" OR CommandLine="*--createShortcut*")) NOT ((CommandLine="*C:\\Users\\*" CommandLine="*\\AppData\\Local\\Discord\\Update.exe*" CommandLine="* --processStart Discord.exe*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218" | eval sigma_title="Squirrel Lolbin" | eval sigma_description="Detects Possible Squirrel Packages Manager as Lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Activity - winevent]
description = It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*svchost.exe" New_Process_Name="*\\svchost.exe") NOT ((Creator_Process_Name="*\\rpcnet.exe" OR Creator_Process_Name="*\\rpcnetp.exe") OR NOT Process_Command_Line="*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Suspect Svchost Activity" | eval sigma_description="It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Activity - sysmon]
description = It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*svchost.exe" Image="*\\svchost.exe") NOT ((ParentImage="*\\rpcnet.exe" OR ParentImage="*\\rpcnetp.exe") OR NOT CommandLine="*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Suspect Svchost Activity" | eval sigma_description="It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Svchost Process - winevent]
description = Detects a suspicious svchost process start
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) New_Process_Name="*\\svchost.exe" NOT (((Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\MsMpEng.exe" OR Creator_Process_Name="*\\Mrt.exe" OR Creator_Process_Name="*\\rpcnet.exe" OR Creator_Process_Name="*\\ngen.exe" OR Creator_Process_Name="*\\TiWorker.exe")) OR (NOT Creator_Process_Name="*") OR (Creator_Process_Name="") OR (Creator_Process_Name="-"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Suspicious Svchost Process" | eval sigma_description="Detects a suspicious svchost process start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Svchost Process - sysmon]
description = Detects a suspicious svchost process start
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) Image="*\\svchost.exe" NOT (((ParentImage="*\\services.exe" OR ParentImage="*\\MsMpEng.exe" OR ParentImage="*\\Mrt.exe" OR ParentImage="*\\rpcnet.exe" OR ParentImage="*\\ngen.exe" OR ParentImage="*\\TiWorker.exe")) OR (NOT ParentImage="*") OR (ParentImage="") OR (ParentImage="-"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036.005" | eval sigma_title="Suspicious Svchost Process" | eval sigma_description="Detects a suspicious svchost process start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysprep on AppData Folder - winevent]
description = Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sysprep.exe" Process_Command_Line="*\\AppData\\*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Sysprep on AppData Folder" | eval sigma_description="Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysprep on AppData Folder - sysmon]
description = Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sysprep.exe" CommandLine="*\\AppData\\*") | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Sysprep on AppData Folder" | eval sigma_description="Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSTEM User Process Creation - winevent]
description = Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((IntegrityLevel="System" (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*")) ((New_Process_Name="*\\calc.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\ping.exe") OR (Process_Command_Line="* -NoP *" OR Process_Command_Line="* -W Hidden *" OR Process_Command_Line="* -decode *" OR Process_Command_Line="* /decode *" OR Process_Command_Line="* /urlcache *" OR Process_Command_Line="* -urlcache *" OR Process_Command_Line="* -e* JAB*" OR Process_Command_Line="* -e* SUVYI*" OR Process_Command_Line="* -e* SQBFAFgA*" OR Process_Command_Line="* -e* aWV4I*" OR Process_Command_Line="* -e* IAB*" OR Process_Command_Line="* -e* PAA*" OR Process_Command_Line="* -e* aQBlAHgA*" OR Process_Command_Line="*vssadmin delete shadows*" OR Process_Command_Line="*reg SAVE HKLM*" OR Process_Command_Line="* -ma *" OR Process_Command_Line="*Microsoft\\Windows\\CurrentVersion\\Run*" OR Process_Command_Line="*.downloadstring(*" OR Process_Command_Line="*.downloadfile(*" OR Process_Command_Line="* /ticket:*" OR Process_Command_Line="*dpapi::*" OR Process_Command_Line="*event::clear*" OR Process_Command_Line="*event::drop*" OR Process_Command_Line="*id::modify*" OR Process_Command_Line="*kerberos::*" OR Process_Command_Line="*lsadump::*" OR Process_Command_Line="*misc::*" OR Process_Command_Line="*privilege::*" OR Process_Command_Line="*rpc::*" OR Process_Command_Line="*sekurlsa::*" OR Process_Command_Line="*sid::*" OR Process_Command_Line="*token::*" OR Process_Command_Line="*vault::cred*" OR Process_Command_Line="*vault::list*" OR Process_Command_Line="* p::d *" OR Process_Command_Line="*;iex(*" OR Process_Command_Line="*MiniDump*" OR Process_Command_Line="*net user *"))) NOT ((Process_Command_Line="ping 127.0.0.1 -n 5") OR (New_Process_Name="*\\PING.EXE" ParentCommandLine="*\\DismFoDInstall.cmd*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious SYSTEM User Process Creation" | eval sigma_description="Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSTEM User Process Creation - sysmon]
description = Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((IntegrityLevel="System" (User="*AUTHORI*" OR User="*AUTORI*")) ((Image="*\\calc.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\hh.exe" OR Image="*\\mshta.exe" OR Image="*\\forfiles.exe" OR Image="*\\ping.exe") OR (CommandLine="* -NoP *" OR CommandLine="* -W Hidden *" OR CommandLine="* -decode *" OR CommandLine="* /decode *" OR CommandLine="* /urlcache *" OR CommandLine="* -urlcache *" OR CommandLine="* -e* JAB*" OR CommandLine="* -e* SUVYI*" OR CommandLine="* -e* SQBFAFgA*" OR CommandLine="* -e* aWV4I*" OR CommandLine="* -e* IAB*" OR CommandLine="* -e* PAA*" OR CommandLine="* -e* aQBlAHgA*" OR CommandLine="*vssadmin delete shadows*" OR CommandLine="*reg SAVE HKLM*" OR CommandLine="* -ma *" OR CommandLine="*Microsoft\\Windows\\CurrentVersion\\Run*" OR CommandLine="*.downloadstring(*" OR CommandLine="*.downloadfile(*" OR CommandLine="* /ticket:*" OR CommandLine="*dpapi::*" OR CommandLine="*event::clear*" OR CommandLine="*event::drop*" OR CommandLine="*id::modify*" OR CommandLine="*kerberos::*" OR CommandLine="*lsadump::*" OR CommandLine="*misc::*" OR CommandLine="*privilege::*" OR CommandLine="*rpc::*" OR CommandLine="*sekurlsa::*" OR CommandLine="*sid::*" OR CommandLine="*token::*" OR CommandLine="*vault::cred*" OR CommandLine="*vault::list*" OR CommandLine="* p::d *" OR CommandLine="*;iex(*" OR CommandLine="*MiniDump*" OR CommandLine="*net user *"))) NOT ((CommandLine="ping 127.0.0.1 -n 5") OR (Image="*\\PING.EXE" ParentCommandLine="*\\DismFoDInstall.cmd*"))) | eval sigma_attack_tags="" | eval sigma_title="Suspicious SYSTEM User Process Creation" | eval sigma_description="Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSVOL Domain Group Policy Access - winevent]
description = Detects Access to Domain Group Policies stored in SYSVOL
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\SYSVOL\\*" Process_Command_Line="*\\policies\\*") | eval sigma_attack_tags="attack.credential_access attack.t1552.006" | eval sigma_title="Suspicious SYSVOL Domain Group Policy Access" | eval sigma_description="Detects Access to Domain Group Policies stored in SYSVOL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSVOL Domain Group Policy Access - sysmon]
description = Detects Access to Domain Group Policies stored in SYSVOL
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\SYSVOL\\*" CommandLine="*\\policies\\*") | eval sigma_attack_tags="attack.credential_access attack.t1552.006" | eval sigma_title="Suspicious SYSVOL Domain Group Policy Access" | eval sigma_description="Detects Access to Domain Group Policies stored in SYSVOL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shell32 DLL Execution in Suspicious Directory - winevent]
description = Detects shell32.dll executing a DLL in a suspicious directory
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rundll32.exe" Process_Command_Line="*shell32.dll*" Process_Command_Line="*Control_RunDLL*" (Process_Command_Line="*%AppData%*" OR Process_Command_Line="*%LocalAppData%*" OR Process_Command_Line="*%Temp%*" OR Process_Command_Line="*\\AppData\\*" OR Process_Command_Line="*\\Temp\\*" OR Process_Command_Line="*\\Users\\Public\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.011" | eval sigma_title="Shell32 DLL Execution in Suspicious Directory" | eval sigma_description="Detects shell32.dll executing a DLL in a suspicious directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shell32 DLL Execution in Suspicious Directory - sysmon]
description = Detects shell32.dll executing a DLL in a suspicious directory
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rundll32.exe" CommandLine="*shell32.dll*" CommandLine="*Control_RunDLL*" (CommandLine="*%AppData%*" OR CommandLine="*%LocalAppData%*" OR CommandLine="*%Temp%*" OR CommandLine="*\\AppData\\*" OR CommandLine="*\\Temp\\*" OR CommandLine="*\\Users\\Public\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218.011" | eval sigma_title="Shell32 DLL Execution in Suspicious Directory" | eval sigma_description="Detects shell32.dll executing a DLL in a suspicious directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as LOCAL_SYSTEM - winevent]
description = Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*") New_Process_Name="*\\taskmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as LOCAL_SYSTEM" | eval sigma_description="Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as LOCAL_SYSTEM - sysmon]
description = Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (User="*AUTHORI*" OR User="*AUTORI*") Image="*\\taskmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as LOCAL_SYSTEM" | eval sigma_description="Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as Parent - winevent]
description = Detects the creation of a process from Windows task manager
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\taskmgr.exe" NOT ((New_Process_Name="*\\resmon.exe" OR New_Process_Name="*\\mmc.exe" OR New_Process_Name="*\\taskmgr.exe"))) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as Parent" | eval sigma_description="Detects the creation of a process from Windows task manager"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as Parent - sysmon]
description = Detects the creation of a process from Windows task manager
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\taskmgr.exe" NOT ((Image="*\\resmon.exe" OR Image="*\\mmc.exe" OR Image="*\\taskmgr.exe"))) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as Parent" | eval sigma_description="Detects the creation of a process from Windows task manager"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Injection with Tracker.exe - winevent]
description = This rule detects DLL injection and execution via LOLBAS - Tracker.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\tracker.exe" OR Description="Tracker") Process_Command_Line="* /d *" Process_Command_Line="* /c *") | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001" | eval sigma_title="DLL Injection with Tracker.exe" | eval sigma_description="This rule detects DLL injection and execution via LOLBAS - Tracker.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Injection with Tracker.exe - sysmon]
description = This rule detects DLL injection and execution via LOLBAS - Tracker.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\tracker.exe" OR Description="Tracker") CommandLine="* /d *" CommandLine="* /c *") | eval sigma_attack_tags="attack.defense_evasion attack.t1055.001" | eval sigma_title="DLL Injection with Tracker.exe" | eval sigma_description="This rule detects DLL injection and execution via LOLBAS - Tracker.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Access via TrolleyExpress Exclusion - winevent]
description = Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\TrolleyExpress 7*" OR Process_Command_Line="*\\TrolleyExpress 8*" OR Process_Command_Line="*\\TrolleyExpress 9*" OR Process_Command_Line="*\\TrolleyExpress.exe 7*" OR Process_Command_Line="*\\TrolleyExpress.exe 8*" OR Process_Command_Line="*\\TrolleyExpress.exe 9*" OR Process_Command_Line="*\\TrolleyExpress.exe -ma *") OR (New_Process_Name="*\\TrolleyExpress.exe" NOT ((OriginalFileName="*CtxInstall*") OR (NOT OriginalFileName="*"))))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.credential_access attack.t1003.001" | eval sigma_title="Process Access via TrolleyExpress Exclusion" | eval sigma_description="Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Access via TrolleyExpress Exclusion - sysmon]
description = Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\TrolleyExpress 7*" OR CommandLine="*\\TrolleyExpress 8*" OR CommandLine="*\\TrolleyExpress 9*" OR CommandLine="*\\TrolleyExpress.exe 7*" OR CommandLine="*\\TrolleyExpress.exe 8*" OR CommandLine="*\\TrolleyExpress.exe 9*" OR CommandLine="*\\TrolleyExpress.exe -ma *") OR (Image="*\\TrolleyExpress.exe" NOT ((OriginalFileName="*CtxInstall*") OR (NOT OriginalFileName="*"))))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218.011 attack.credential_access attack.t1003.001" | eval sigma_title="Process Access via TrolleyExpress Exclusion" | eval sigma_description="Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious TSCON Start as SYSTEM - winevent]
description = Detects a tscon.exe start as LOCAL SYSTEM
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*") New_Process_Name="*\\tscon.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Suspicious TSCON Start as SYSTEM" | eval sigma_description="Detects a tscon.exe start as LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious TSCON Start as SYSTEM - sysmon]
description = Detects a tscon.exe start as LOCAL SYSTEM
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (User="*AUTHORI*" OR User="*AUTORI*") Image="*\\tscon.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Suspicious TSCON Start as SYSTEM" | eval sigma_description="Detects a tscon.exe start as LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RDP Redirect Using TSCON - winevent]
description = Detects a suspicious RDP session redirect using tscon.exe
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /dest:rdp-tcp:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002 attack.t1021.001 car.2013-07-002" | eval sigma_title="Suspicious RDP Redirect Using TSCON" | eval sigma_description="Detects a suspicious RDP session redirect using tscon.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RDP Redirect Using TSCON - sysmon]
description = Detects a suspicious RDP session redirect using tscon.exe
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /dest:rdp-tcp:*") | eval sigma_attack_tags="attack.lateral_movement attack.t1563.002 attack.t1021.001 car.2013-07-002" | eval sigma_title="Suspicious RDP Redirect Using TSCON" | eval sigma_description="Detects a suspicious RDP session redirect using tscon.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[TrustedPath UAC Bypass Pattern - winevent]
description = Detects indicators of a UAC bypass method by mocking directories
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*C:\\Windows \\System32\\*") | eval sigma_attack_tags="attack.defense_evasion attack.t1548.002" | eval sigma_title="TrustedPath UAC Bypass Pattern" | eval sigma_description="Detects indicators of a UAC bypass method by mocking directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[TrustedPath UAC Bypass Pattern - sysmon]
description = Detects indicators of a UAC bypass method by mocking directories
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*C:\\Windows \\System32\\*") | eval sigma_attack_tags="attack.defense_evasion attack.t1548.002" | eval sigma_title="TrustedPath UAC Bypass Pattern" | eval sigma_description="Detects indicators of a UAC bypass method by mocking directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of CSharp Interactive Console - winevent]
description = Detects the execution of CSharp interactive console by PowerShell
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\csi.exe" Creator_Process_Name="*\\powershell.exe" OriginalFileName="csi.exe") | eval sigma_attack_tags="attack.execution attack.t1127" | eval sigma_title="Suspicious Use of CSharp Interactive Console" | eval sigma_description="Detects the execution of CSharp interactive console by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of CSharp Interactive Console - sysmon]
description = Detects the execution of CSharp interactive console by PowerShell
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\csi.exe" ParentImage="*\\powershell.exe" OriginalFileName="csi.exe") | eval sigma_attack_tags="attack.execution attack.t1127" | eval sigma_title="Suspicious Use of CSharp Interactive Console" | eval sigma_description="Detects the execution of CSharp interactive console by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via Sqlps.exe - winevent]
description = This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\sqlps.exe" OR Creator_Process_Name="*\\sqlps.exe" OR OriginalFileName="\\sqlps.exe") NOT (Creator_Process_Name="*\\sqlagent.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="Detection of PowerShell Execution via Sqlps.exe" | eval sigma_description="This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via Sqlps.exe - sysmon]
description = This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\sqlps.exe" OR ParentImage="*\\sqlps.exe" OR OriginalFileName="\\sqlps.exe") NOT (ParentImage="*\\sqlagent.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="Detection of PowerShell Execution via Sqlps.exe" | eval sigma_description="This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[SQL Client Tools PowerShell Session Detection - winevent]
description = This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\sqltoolsps.exe" OR Creator_Process_Name="*\\sqltoolsps.exe" OR OriginalFileName="\\sqltoolsps.exe") NOT (Creator_Process_Name="*\\smss.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="SQL Client Tools PowerShell Session Detection" | eval sigma_description="This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[SQL Client Tools PowerShell Session Detection - sysmon]
description = This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\sqltoolsps.exe" OR ParentImage="*\\sqltoolsps.exe" OR OriginalFileName="\\sqltoolsps.exe") NOT (ParentImage="*\\smss.exe")) | eval sigma_attack_tags="attack.execution attack.t1059.001 attack.defense_evasion attack.t1127" | eval sigma_title="SQL Client Tools PowerShell Session Detection" | eval sigma_description="This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio. Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Windows Script Components File Execution by TAEF Detection - winevent]
description = Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\te.exe" OR Creator_Process_Name="*\\te.exe" OR OriginalFileName="\\te.exe")) | eval sigma_attack_tags="attack.t1218" | eval sigma_title="Malicious Windows Script Components File Execution by TAEF Detection" | eval sigma_description="Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Windows Script Components File Execution by TAEF Detection - sysmon]
description = Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\te.exe" OR ParentImage="*\\te.exe" OR OriginalFileName="\\te.exe")) | eval sigma_attack_tags="attack.t1218" | eval sigma_title="Malicious Windows Script Components File Execution by TAEF Detection" | eval sigma_description="Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces). Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PE Execution by Microsoft Visual Studio Debugger - winevent]
description = There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\vsjitdebugger.exe" NOT ((New_Process_Name="*\\vsimmersiveactivatehelper*.exe" OR New_Process_Name="*\\devenv.exe"))) | eval sigma_attack_tags="attack.t1218 attack.defense_evasion" | eval sigma_title="Malicious PE Execution by Microsoft Visual Studio Debugger" | eval sigma_description="There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package."
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PE Execution by Microsoft Visual Studio Debugger - sysmon]
description = There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\vsjitdebugger.exe" NOT ((Image="*\\vsimmersiveactivatehelper*.exe" OR Image="*\\devenv.exe"))) | eval sigma_attack_tags="attack.t1218 attack.defense_evasion" | eval sigma_title="Malicious PE Execution by Microsoft Visual Studio Debugger" | eval sigma_description="There is an option for a MS VS Just-In-Time Debugger 'vsjitdebugger.exe' to launch specified executable and attach a debugger. This option may be used adversaries to execute malicious code by signed verified binary. The debugger is installed alongside with Microsoft Visual Studio package."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Userinit Child Process - winevent]
description = Detects a suspicious child process of userinit
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\userinit.exe" NOT (Process_Command_Line="*\\netlogon\\*")) NOT (New_Process_Name="*\\explorer.exe" OR ImageFileName="explorer.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Suspicious Userinit Child Process" | eval sigma_description="Detects a suspicious child process of userinit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Userinit Child Process - sysmon]
description = Detects a suspicious child process of userinit
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\userinit.exe" NOT (CommandLine="*\\netlogon\\*")) NOT (Image="*\\explorer.exe" OR ImageFileName="explorer.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Suspicious Userinit Child Process" | eval sigma_description="Detects a suspicious child process of userinit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBoxDrvInst.exe Parameters - winevent]
description = Detect VBoxDrvInst.exe run with parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\VBoxDrvInst.exe" Process_Command_Line="*driver*" Process_Command_Line="*executeinf*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Suspicious VBoxDrvInst.exe Parameters" | eval sigma_description="Detect VBoxDrvInst.exe run with parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBoxDrvInst.exe Parameters - sysmon]
description = Detect VBoxDrvInst.exe run with parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\VBoxDrvInst.exe" CommandLine="*driver*" CommandLine="*executeinf*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Suspicious VBoxDrvInst.exe Parameters" | eval sigma_description="Detect VBoxDrvInst.exe run with parameters allowing processing INF file. This allows to create values in the registry and install drivers. For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBScript UN2452 Pattern - winevent]
description = Detects suspicious inline VBScript keywords as used by UNC2452
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*Execute*" Process_Command_Line="*CreateObject*" Process_Command_Line="*RegRead*" Process_Command_Line="*window.close*" Process_Command_Line="*\\Microsoft\\Windows\\CurrentVersion*") NOT (Process_Command_Line="*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run*")) | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Suspicious VBScript UN2452 Pattern" | eval sigma_description="Detects suspicious inline VBScript keywords as used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious VBScript UN2452 Pattern - sysmon]
description = Detects suspicious inline VBScript keywords as used by UNC2452
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*Execute*" CommandLine="*CreateObject*" CommandLine="*RegRead*" CommandLine="*window.close*" CommandLine="*\\Microsoft\\Windows\\CurrentVersion*") NOT (CommandLine="*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run*")) | eval sigma_attack_tags="attack.persistence attack.t1547.001" | eval sigma_title="Suspicious VBScript UN2452 Pattern" | eval sigma_description="Detects suspicious inline VBScript keywords as used by UNC2452"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled Volume Snapshots - winevent]
description = Detects commands that temporarily turn off Volume Snapshots
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*reg*" Process_Command_Line="* add *" Process_Command_Line="*\\Services\\VSS\\Diag*" Process_Command_Line="*/d Disabled*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disabled Volume Snapshots" | eval sigma_description="Detects commands that temporarily turn off Volume Snapshots"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabled Volume Snapshots - sysmon]
description = Detects commands that temporarily turn off Volume Snapshots
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*reg*" CommandLine="* add *" CommandLine="*\\Services\\VSS\\Diag*" CommandLine="*/d Disabled*") | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Disabled Volume Snapshots" | eval sigma_description="Detects commands that temporarily turn off Volume Snapshots"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Suspicious Use Of Web Request in CommandLine - winevent]
description = Detects the use of various web request with commandline tools or Windows PowerShell command,methods (including aliases)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*Invoke-WebRequest*" OR Process_Command_Line="*iwr *" OR Process_Command_Line="*wget *" OR Process_Command_Line="*curl *" OR Process_Command_Line="*Net.WebClient*" OR Process_Command_Line="*Start-BitsTransfer*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Windows Suspicious Use Of Web Request in CommandLine" | eval sigma_description="Detects the use of various web request with commandline tools or Windows PowerShell command,methods (including aliases)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Suspicious Use Of Web Request in CommandLine - sysmon]
description = Detects the use of various web request with commandline tools or Windows PowerShell command,methods (including aliases)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*Invoke-WebRequest*" OR CommandLine="*iwr *" OR CommandLine="*wget *" OR CommandLine="*curl *" OR CommandLine="*Net.WebClient*" OR CommandLine="*Start-BitsTransfer*")) | eval sigma_attack_tags="attack.execution attack.t1059.001" | eval sigma_title="Windows Suspicious Use Of Web Request in CommandLine" | eval sigma_description="Detects the use of various web request with commandline tools or Windows PowerShell command,methods (including aliases)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WebDav Client Execution - winevent]
description = A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server).
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") Process_Command_Line="*C:\\windows\\system32\\davclnt.dll,DavSetCookie*") | eval sigma_attack_tags="attack.exfiltration attack.t1048.003" | eval sigma_title="Suspicious WebDav Client Execution" | eval sigma_description="A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WebDav Client Execution - sysmon]
description = A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server).
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") CommandLine="*C:\\windows\\system32\\davclnt.dll,DavSetCookie*") | eval sigma_attack_tags="attack.exfiltration attack.t1048.003" | eval sigma_title="Suspicious WebDav Client Execution" | eval sigma_description="A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Where Execution - winevent]
description = Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\where.exe" OR OriginalFileName="where.exe") (Process_Command_Line="*places.sqlite*" OR Process_Command_Line="*cookies.sqlite*" OR Process_Command_Line="*formhistory.sqlite*" OR Process_Command_Line="*logins.json*" OR Process_Command_Line="*key4.db*" OR Process_Command_Line="*key3.db*" OR Process_Command_Line="*sessionstore.jsonlz4*" OR Process_Command_Line="*History*" OR Process_Command_Line="*Bookmarks*" OR Process_Command_Line="*Cookies*" OR Process_Command_Line="*Login Data*")) | eval sigma_attack_tags="attack.discovery attack.t1217" | eval sigma_title="Suspicious Where Execution" | eval sigma_description="Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Where Execution - sysmon]
description = Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\where.exe" OR OriginalFileName="where.exe") (CommandLine="*places.sqlite*" OR CommandLine="*cookies.sqlite*" OR CommandLine="*formhistory.sqlite*" OR CommandLine="*logins.json*" OR CommandLine="*key4.db*" OR CommandLine="*key3.db*" OR CommandLine="*sessionstore.jsonlz4*" OR CommandLine="*History*" OR CommandLine="*Bookmarks*" OR CommandLine="*Cookies*" OR CommandLine="*Login Data*")) | eval sigma_attack_tags="attack.discovery attack.t1217" | eval sigma_title="Suspicious Where Execution" | eval sigma_description="Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.
"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution Anomaly - winevent]
description = Detects the execution of whoami with suspicious parents or parameters
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((((New_Process_Name="*\\whoami.exe" OR OriginalFileName="whoami.exe") NOT ((Creator_Process_Name="*\\cmd.exe" OR Creator_Process_Name="*\\powershell.exe"))) NOT ((Creator_Process_Name="C:\\Program Files\\Microsoft Monitoring Agent\\Agent\\MonitoringHost.exe" OR Creator_Process_Name=""))) NOT (NOT Creator_Process_Name="*")) OR (Process_Command_Line="*whoami -all*" OR Process_Command_Line="*whoami /all*" OR Process_Command_Line="*whoami.exe -all*" OR Process_Command_Line="*whoami.exe /all*"))) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution Anomaly" | eval sigma_description="Detects the execution of whoami with suspicious parents or parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution Anomaly - sysmon]
description = Detects the execution of whoami with suspicious parents or parameters
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((((Image="*\\whoami.exe" OR OriginalFileName="whoami.exe") NOT ((ParentImage="*\\cmd.exe" OR ParentImage="*\\powershell.exe"))) NOT ((ParentImage="C:\\Program Files\\Microsoft Monitoring Agent\\Agent\\MonitoringHost.exe" OR ParentImage=""))) NOT (NOT ParentImage="*")) OR (CommandLine="*whoami -all*" OR CommandLine="*whoami /all*" OR CommandLine="*whoami.exe -all*" OR CommandLine="*whoami.exe /all*"))) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution Anomaly" | eval sigma_description="Detects the execution of whoami with suspicious parents or parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WhoAmI as Parameter - winevent]
description = Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*.exe whoami*") | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="WhoAmI as Parameter" | eval sigma_description="Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)"
dispatch.earliest_time = -24h@h
alert.track = 0

[WhoAmI as Parameter - sysmon]
description = Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*.exe whoami*") | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="WhoAmI as Parameter" | eval sigma_description="Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution - winevent]
description = Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation but rarely used by administrators
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\whoami.exe" OR OriginalFileName="whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution" | eval sigma_description="Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation but rarely used by administrators"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution - sysmon]
description = Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation but rarely used by administrators
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\whoami.exe" OR OriginalFileName="whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution" | eval sigma_description="Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation but rarely used by administrators"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winrar Compressing Dump Files - winevent]
description = Detects a suspicious winrar execution that involves a file with a .dmp extension, which could be a step in a process of dump file exfiltration
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rar.exe" OR New_Process_Name="*\\winrar.exe") OR Description="Command line RAR") Process_Command_Line="*.dmp*") | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Winrar Compressing Dump Files" | eval sigma_description="Detects a suspicious winrar execution that involves a file with a .dmp extension, which could be a step in a process of dump file exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winrar Compressing Dump Files - sysmon]
description = Detects a suspicious winrar execution that involves a file with a .dmp extension, which could be a step in a process of dump file exfiltration
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rar.exe" OR Image="*\\winrar.exe") OR Description="Command line RAR") CommandLine="*.dmp*") | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Winrar Compressing Dump Files" | eval sigma_description="Detects a suspicious winrar execution that involves a file with a .dmp extension, which could be a step in a process of dump file exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winrar Execution in Non-Standard Folder - winevent]
description = Detects a suspicious winrar execution in a folder which is not the default installation folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rar.exe" OR New_Process_Name="*\\winrar.exe") OR Description="Command line RAR") NOT ((New_Process_Name="*\\WinRAR*" OR New_Process_Name="*C:\\Windows\\Temp*" OR New_Process_Name="*\\UnRAR.exe*"))) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Winrar Execution in Non-Standard Folder" | eval sigma_description="Detects a suspicious winrar execution in a folder which is not the default installation folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winrar Execution in Non-Standard Folder - sysmon]
description = Detects a suspicious winrar execution in a folder which is not the default installation folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rar.exe" OR Image="*\\winrar.exe") OR Description="Command line RAR") NOT ((Image="*\\WinRAR*" OR Image="*C:\\Windows\\Temp*" OR Image="*\\UnRAR.exe*"))) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Winrar Execution in Non-Standard Folder" | eval sigma_description="Detects a suspicious winrar execution in a folder which is not the default installation folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - winevent]
description = Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*winrm*" (Process_Command_Line="*format:pretty*" OR Process_Command_Line="*format:\"pretty\"*" OR Process_Command_Line="*format:\"text\"*" OR Process_Command_Line="*format:text*") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl" | eval sigma_description="Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)"
dispatch.earliest_time = -24h@h
alert.track = 0

[AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - sysmon]
description = Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*winrm*" (CommandLine="*format:pretty*" OR CommandLine="*format:\"pretty\"*" OR CommandLine="*format:\"text\"*" OR CommandLine="*format:text*") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl" | eval sigma_description="Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Code Execute via Winrm.vbs - winevent]
description = Detects an attempt to execute code or create service on remote host via winrm.vbs.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\cscript.exe" OR OriginalFileName="cscript.exe") (Process_Command_Line="*winrm*" Process_Command_Line="*invoke Create wmicimv2/Win32_*" Process_Command_Line="*-r:http*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Remote Code Execute via Winrm.vbs" | eval sigma_description="Detects an attempt to execute code or create service on remote host via winrm.vbs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Code Execute via Winrm.vbs - sysmon]
description = Detects an attempt to execute code or create service on remote host via winrm.vbs.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\cscript.exe" OR OriginalFileName="cscript.exe") (CommandLine="*winrm*" CommandLine="*invoke Create wmicimv2/Win32_*" CommandLine="*-r:http*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1216" | eval sigma_title="Remote Code Execute via Winrm.vbs" | eval sigma_description="Detects an attempt to execute code or create service on remote host via winrm.vbs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Compress Data and Lock With Password for Exfiltration With WINZIP - winevent]
description = An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*winzip.exe*" OR Process_Command_Line="*winzip64.exe*") Process_Command_Line="*-s\"*" (Process_Command_Line="* -min *" OR Process_Command_Line="* -a *")) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Compress Data and Lock With Password for Exfiltration With WINZIP" | eval sigma_description="An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Compress Data and Lock With Password for Exfiltration With WINZIP - sysmon]
description = An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*winzip.exe*" OR CommandLine="*winzip64.exe*") CommandLine="*-s\"*" (CommandLine="* -min *" OR CommandLine="* -a *")) | eval sigma_attack_tags="attack.collection attack.t1560.001" | eval sigma_title="Compress Data and Lock With Password for Exfiltration With WINZIP" | eval sigma_description="An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution - winevent]
description = Detects WMI executing suspicious commands
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\wmic.exe" OR OriginalFileName="wmic.exe") (Process_Command_Line="*process*" Process_Command_Line="*call*" Process_Command_Line="*create *")) OR ((New_Process_Name="*\\wmic.exe" OR OriginalFileName="wmic.exe") Process_Command_Line="* path *" (Process_Command_Line="*AntiVirus*" OR Process_Command_Line="*Firewall*") (Process_Command_Line="*Product*" Process_Command_Line="* get *")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 car.2016-03-002" | eval sigma_title="Suspicious WMI Execution" | eval sigma_description="Detects WMI executing suspicious commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution - sysmon]
description = Detects WMI executing suspicious commands
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\wmic.exe" OR OriginalFileName="wmic.exe") (CommandLine="*process*" CommandLine="*call*" CommandLine="*create *")) OR ((Image="*\\wmic.exe" OR OriginalFileName="wmic.exe") CommandLine="* path *" (CommandLine="*AntiVirus*" OR CommandLine="*Firewall*") (CommandLine="*Product*" CommandLine="* get *")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 car.2016-03-002" | eval sigma_title="Suspicious WMI Execution" | eval sigma_description="Detects WMI executing suspicious commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMIC ActiveScriptEventConsumer Creation - winevent]
description = Detects WMIC executions in which a event consumer gets created in order to establish persistence
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*ActiveScriptEventConsumer*" Process_Command_Line="* CREATE *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.003" | eval sigma_title="Suspicious WMIC ActiveScriptEventConsumer Creation" | eval sigma_description="Detects WMIC executions in which a event consumer gets created in order to establish persistence"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMIC ActiveScriptEventConsumer Creation - sysmon]
description = Detects WMIC executions in which a event consumer gets created in order to establish persistence
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*ActiveScriptEventConsumer*" CommandLine="* CREATE *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1546.003" | eval sigma_title="Suspicious WMIC ActiveScriptEventConsumer Creation" | eval sigma_description="Detects WMIC executions in which a event consumer gets created in order to establish persistence"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution Using Rundll32 - winevent]
description = Detects WMI executing rundll32
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*process call create*" Process_Command_Line="*rundll32*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Suspicious WMI Execution Using Rundll32" | eval sigma_description="Detects WMI executing rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution Using Rundll32 - sysmon]
description = Detects WMI executing rundll32
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*process call create*" CommandLine="*rundll32*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Suspicious WMI Execution Using Rundll32" | eval sigma_description="Detects WMI executing rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmic Uninstall Security Product - winevent]
description = Detects deinstallation of security products using WMIC utility
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*wmic*" Process_Command_Line="*product where *" Process_Command_Line="*call uninstall*" Process_Command_Line="*/nointeractive*" (Process_Command_Line="* name=*" OR Process_Command_Line="*caption like *") (Process_Command_Line="*Antivirus*" OR Process_Command_Line="*AVG *" OR Process_Command_Line="*Crowdstrike Sensor*" OR Process_Command_Line="*DLP Endpoint*" OR Process_Command_Line="*Endpoint Detection*" OR Process_Command_Line="*Endpoint Protection*" OR Process_Command_Line="*Endpoint Security*" OR Process_Command_Line="*Endpoint Sensor*" OR Process_Command_Line="*ESET File Security*" OR Process_Command_Line="*Malwarebytes*" OR Process_Command_Line="*McAfee Agent*" OR Process_Command_Line="*Microsoft Security Client*" OR Process_Command_Line="*Threat Protection*" OR Process_Command_Line="*VirusScan*" OR Process_Command_Line="*Webroot SecureAnywhere*" OR Process_Command_Line="*Windows Defender*" OR Process_Command_Line="*CarbonBlack*" OR Process_Command_Line="*Carbon Black*" OR Process_Command_Line="*Cb Defense Sensor 64-bit*" OR Process_Command_Line="*Dell Threat Defense*" OR Process_Command_Line="*Cylance *" OR Process_Command_Line="*LogRhythm System Monitor Service*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Wmic Uninstall Security Product" | eval sigma_description="Detects deinstallation of security products using WMIC utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmic Uninstall Security Product - sysmon]
description = Detects deinstallation of security products using WMIC utility
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*wmic*" CommandLine="*product where *" CommandLine="*call uninstall*" CommandLine="*/nointeractive*" (CommandLine="* name=*" OR CommandLine="*caption like *") (CommandLine="*Antivirus*" OR CommandLine="*AVG *" OR CommandLine="*Crowdstrike Sensor*" OR CommandLine="*DLP Endpoint*" OR CommandLine="*Endpoint Detection*" OR CommandLine="*Endpoint Protection*" OR CommandLine="*Endpoint Security*" OR CommandLine="*Endpoint Sensor*" OR CommandLine="*ESET File Security*" OR CommandLine="*Malwarebytes*" OR CommandLine="*McAfee Agent*" OR CommandLine="*Microsoft Security Client*" OR CommandLine="*Threat Protection*" OR CommandLine="*VirusScan*" OR CommandLine="*Webroot SecureAnywhere*" OR CommandLine="*Windows Defender*" OR CommandLine="*CarbonBlack*" OR CommandLine="*Carbon Black*" OR CommandLine="*Cb Defense Sensor 64-bit*" OR CommandLine="*Dell Threat Defense*" OR CommandLine="*Cylance *" OR CommandLine="*LogRhythm System Monitor Service*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Wmic Uninstall Security Product" | eval sigma_description="Detects deinstallation of security products using WMIC utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via WorkFolders.exe - winevent]
description = Detects using WorkFolders.exe to execute an arbitrary control.exe
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\control.exe" Creator_Process_Name="*\\WorkFolders.exe") NOT (New_Process_Name="C:\\Windows\\System32\\control.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Execution via WorkFolders.exe" | eval sigma_description="Detects using WorkFolders.exe to execute an arbitrary control.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution via WorkFolders.exe - sysmon]
description = Detects using WorkFolders.exe to execute an arbitrary control.exe
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\control.exe" ParentImage="*\\WorkFolders.exe") NOT (Image="C:\\Windows\\System32\\control.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Execution via WorkFolders.exe" | eval sigma_description="Detects using WorkFolders.exe to execute an arbitrary control.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Windows Update Agent Empty Cmdline - winevent]
description = Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\Wuauclt.exe" OR OriginalFileName="Wuauclt.exe") Process_Command_Line="*\\Wuauclt.exe") | eval sigma_attack_tags="" | eval sigma_title="Suspicious Windows Update Agent Empty Cmdline" | eval sigma_description="Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Windows Update Agent Empty Cmdline - sysmon]
description = Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\Wuauclt.exe" OR OriginalFileName="Wuauclt.exe") CommandLine="*\\Wuauclt.exe") | eval sigma_attack_tags="" | eval sigma_title="Suspicious Windows Update Agent Empty Cmdline" | eval sigma_description="Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Update Client LOLBIN - winevent]
description = Detects code execution via the Windows Update client (wuauclt)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*/UpdateDeploymentProvider*" Process_Command_Line="*/RunHandlerComServer*" Process_Command_Line="*.dll*") (New_Process_Name="*\\wuauclt.exe" OR OriginalFileName="wuauclt.exe")) NOT ((Process_Command_Line="* /ClassId *" OR Process_Command_Line="* wuaueng.dll *"))) | eval sigma_attack_tags="attack.command_and_control attack.execution attack.t1105 attack.t1218" | eval sigma_title="Windows Update Client LOLBIN" | eval sigma_description="Detects code execution via the Windows Update client (wuauclt)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Update Client LOLBIN - sysmon]
description = Detects code execution via the Windows Update client (wuauclt)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*/UpdateDeploymentProvider*" CommandLine="*/RunHandlerComServer*" CommandLine="*.dll*") (Image="*\\wuauclt.exe" OR OriginalFileName="wuauclt.exe")) NOT ((CommandLine="* /ClassId *" OR CommandLine="* wuaueng.dll *"))) | eval sigma_attack_tags="attack.command_and_control attack.execution attack.t1105 attack.t1218" | eval sigma_title="Windows Update Client LOLBIN" | eval sigma_description="Detects code execution via the Windows Update client (wuauclt)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Zip A Folder With PowerShell For Staging In Temp - winevent]
description = Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Compress-Archive *" Process_Command_Line="* -Path *" Process_Command_Line="* -DestinationPath *" Process_Command_Line="*$env:TEMP\\*") | eval sigma_attack_tags="attack.collection attack.t1074.001" | eval sigma_title="Zip A Folder With PowerShell For Staging In Temp" | eval sigma_description="Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Zip A Folder With PowerShell For Staging In Temp - sysmon]
description = Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Compress-Archive *" CommandLine="* -Path *" CommandLine="* -DestinationPath *" CommandLine="*$env:TEMP\\*") | eval sigma_attack_tags="attack.collection attack.t1074.001" | eval sigma_title="Zip A Folder With PowerShell For Staging In Temp" | eval sigma_description="Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ZipExec Execution - winevent]
description = ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*/generic:Microsoft_Windows_Shell_ZipFolder:filename=*" Process_Command_Line="*.zip*" Process_Command_Line="*/pass:*" Process_Command_Line="*/user:*") OR (Process_Command_Line="*/delete*" Process_Command_Line="*Microsoft_Windows_Shell_ZipFolder:filename=*" Process_Command_Line="*.zip*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Suspicious ZipExec Execution" | eval sigma_description="ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ZipExec Execution - sysmon]
description = ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*/generic:Microsoft_Windows_Shell_ZipFolder:filename=*" CommandLine="*.zip*" CommandLine="*/pass:*" CommandLine="*/user:*") OR (CommandLine="*/delete*" CommandLine="*Microsoft_Windows_Shell_ZipFolder:filename=*" CommandLine="*.zip*"))) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1218 attack.t1202" | eval sigma_title="Suspicious ZipExec Execution" | eval sigma_description="ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Usage of Sysinternals Tools - winevent]
description = Detects the usage of Sysinternals Tools due to accepteula option being seen in the command line.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* -accepteula*") | eval sigma_attack_tags="attack.resource_development attack.t1588.002" | eval sigma_title="Usage of Sysinternals Tools" | eval sigma_description="Detects the usage of Sysinternals Tools due to accepteula option being seen in the command line."
dispatch.earliest_time = -24h@h
alert.track = 0

[Usage of Sysinternals Tools - sysmon]
description = Detects the usage of Sysinternals Tools due to accepteula option being seen in the command line.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -accepteula*") | eval sigma_attack_tags="attack.resource_development attack.t1588.002" | eval sigma_title="Usage of Sysinternals Tools" | eval sigma_description="Detects the usage of Sysinternals Tools due to accepteula option being seen in the command line."
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Sysinternals PsService - winevent]
description = Detects usage of Sysinternals PsService for service reconnaissance or tamper
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="psservice.exe" OR (New_Process_Name="*\\PsService.exe" OR New_Process_Name="*\\PsService64.exe"))) | eval sigma_attack_tags="attack.discovery attack.persistence attack.t1543.003" | eval sigma_title="Use of Sysinternals PsService" | eval sigma_description="Detects usage of Sysinternals PsService for service reconnaissance or tamper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Use of Sysinternals PsService - sysmon]
description = Detects usage of Sysinternals PsService for service reconnaissance or tamper
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="psservice.exe" OR (Image="*\\PsService.exe" OR Image="*\\PsService64.exe"))) | eval sigma_attack_tags="attack.discovery attack.persistence attack.t1543.003" | eval sigma_title="Use of Sysinternals PsService" | eval sigma_description="Detects usage of Sysinternals PsService for service reconnaissance or tamper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Driver Unload - winevent]
description = Detect possible Sysmon driver unload
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\fltmc.exe" Process_Command_Line="*unload*" Process_Command_Line="*sys*") | table Process_Command_Line,NewValue | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562 attack.t1562.002" | eval sigma_title="Sysmon Driver Unload" | eval sigma_description="Detect possible Sysmon driver unload"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Driver Unload - sysmon]
description = Detect possible Sysmon driver unload
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\fltmc.exe" CommandLine="*unload*" CommandLine="*sys*") | table CommandLine,Details | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.t1562 attack.t1562.002" | eval sigma_title="Sysmon Driver Unload" | eval sigma_description="Detect possible Sysmon driver unload"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass via Event Viewer - winevent]
description = Detects UAC bypass method using Windows event viewer
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\eventvwr.exe" NOT (New_Process_Name="*\\mmc.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002 car.2019-04-001" | eval sigma_title="UAC Bypass via Event Viewer" | eval sigma_description="Detects UAC bypass method using Windows event viewer"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass via Event Viewer - sysmon]
description = Detects UAC bypass method using Windows event viewer
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\eventvwr.exe" NOT (Image="*\\mmc.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002 car.2019-04-001" | eval sigma_title="UAC Bypass via Event Viewer" | eval sigma_description="Detects UAC bypass method using Windows event viewer"
dispatch.earliest_time = -24h@h
alert.track = 0

[System File Execution Location Anomaly - winevent]
description = Detects a Windows program executable started in a suspicious folder
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\services.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\spoolsv.exe" OR New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\smss.exe" OR New_Process_Name="*\\csrss.exe" OR New_Process_Name="*\\conhost.exe" OR New_Process_Name="*\\wininit.exe" OR New_Process_Name="*\\lsm.exe" OR New_Process_Name="*\\winlogon.exe" OR New_Process_Name="*\\explorer.exe" OR New_Process_Name="*\\taskhost.exe" OR New_Process_Name="*\\Taskmgr.exe" OR New_Process_Name="*\\sihost.exe" OR New_Process_Name="*\\RuntimeBroker.exe" OR New_Process_Name="*\\smartscreen.exe" OR New_Process_Name="*\\dllhost.exe" OR New_Process_Name="*\\audiodg.exe" OR New_Process_Name="*\\wlanext.exe" OR New_Process_Name="*\\dashost.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\wsl.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\atbroker.exe" OR New_Process_Name="*\\bcdedit.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\certreq.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\consent.exe" OR New_Process_Name="*\\defrag.exe" OR New_Process_Name="*\\dism.exe" OR New_Process_Name="*\\dllhst3g.exe" OR New_Process_Name="*\\eventvwr.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\runonce.exe" OR New_Process_Name="*\\winver.exe" OR New_Process_Name="*\\logonui.exe" OR New_Process_Name="*\\userinit.exe" OR New_Process_Name="*\\dwm.exe" OR New_Process_Name="*\\LsaIso.exe" OR New_Process_Name="*\\ntoskrnl.exe") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*" OR New_Process_Name="C:\\avast! sandbox*") OR New_Process_Name="*\\SystemRoot\\System32\\*" OR New_Process_Name="C:\\Windows\\explorer.exe")) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="System File Execution Location Anomaly" | eval sigma_description="Detects a Windows program executable started in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[System File Execution Location Anomaly - sysmon]
description = Detects a Windows program executable started in a suspicious folder
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\svchost.exe" OR Image="*\\rundll32.exe" OR Image="*\\services.exe" OR Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\regsvr32.exe" OR Image="*\\spoolsv.exe" OR Image="*\\lsass.exe" OR Image="*\\smss.exe" OR Image="*\\csrss.exe" OR Image="*\\conhost.exe" OR Image="*\\wininit.exe" OR Image="*\\lsm.exe" OR Image="*\\winlogon.exe" OR Image="*\\explorer.exe" OR Image="*\\taskhost.exe" OR Image="*\\Taskmgr.exe" OR Image="*\\sihost.exe" OR Image="*\\RuntimeBroker.exe" OR Image="*\\smartscreen.exe" OR Image="*\\dllhost.exe" OR Image="*\\audiodg.exe" OR Image="*\\wlanext.exe" OR Image="*\\dashost.exe" OR Image="*\\schtasks.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\wsl.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\atbroker.exe" OR Image="*\\bcdedit.exe" OR Image="*\\certutil.exe" OR Image="*\\certreq.exe" OR Image="*\\cmstp.exe" OR Image="*\\consent.exe" OR Image="*\\defrag.exe" OR Image="*\\dism.exe" OR Image="*\\dllhst3g.exe" OR Image="*\\eventvwr.exe" OR Image="*\\msiexec.exe" OR Image="*\\runonce.exe" OR Image="*\\winver.exe" OR Image="*\\logonui.exe" OR Image="*\\userinit.exe" OR Image="*\\dwm.exe" OR Image="*\\LsaIso.exe" OR Image="*\\ntoskrnl.exe") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*" OR Image="C:\\avast! sandbox*") OR Image="*\\SystemRoot\\System32\\*" OR Image="C:\\Windows\\explorer.exe")) | table ComputerName,User,Image | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="System File Execution Location Anomaly" | eval sigma_description="Detects a Windows program executable started in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Installer Execution - winevent]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\tapinstall.exe") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Installer Execution" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Installer Execution - sysmon]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\tapinstall.exe") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Installer Execution" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tasks Folder Evasion - winevent]
description = The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*echo *" OR Process_Command_Line="*copy *" OR Process_Command_Line="*type *" OR Process_Command_Line="*file createnew*") (Process_Command_Line="* C:\\Windows\\System32\\Tasks\\*" OR Process_Command_Line="* C:\\Windows\\SysWow64\\Tasks\\*")) | table Process_Command_Line,ParentProcess | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.execution attack.t1574.002" | eval sigma_title="Tasks Folder Evasion" | eval sigma_description="The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tasks Folder Evasion - sysmon]
description = The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*echo *" OR CommandLine="*copy *" OR CommandLine="*type *" OR CommandLine="*file createnew*") (CommandLine="* C:\\Windows\\System32\\Tasks\\*" OR CommandLine="* C:\\Windows\\SysWow64\\Tasks\\*")) | table CommandLine,ParentProcess | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.execution attack.t1574.002" | eval sigma_title="Tasks Folder Evasion" | eval sigma_description="The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr"
dispatch.earliest_time = -24h@h
alert.track = 0

[Terminal Service Process Spawn - winevent]
description = Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (ParentCommandLine="*\\svchost.exe*" ParentCommandLine="*termsvcs*") NOT ((New_Process_Name="*\\rdpclip.exe" OR New_Process_Name="*:\\Windows\\System32\\csrss.exe" OR New_Process_Name="*:\\Windows\\System32\\wininit.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Terminal Service Process Spawn" | eval sigma_description="Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Terminal Service Process Spawn - sysmon]
description = Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentCommandLine="*\\svchost.exe*" ParentCommandLine="*termsvcs*") NOT ((Image="*\\rdpclip.exe" OR Image="*:\\Windows\\System32\\csrss.exe" OR Image="*:\\Windows\\System32\\wininit.exe"))) | eval sigma_attack_tags="attack.initial_access attack.t1190 attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Terminal Service Process Spawn" | eval sigma_description="Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)"
dispatch.earliest_time = -24h@h
alert.track = 0

[NirCmd Tool Execution As LOCAL SYSTEM - winevent]
description = Detects the use of NirCmd tool for command execution as SYSTEM user
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* runassystem *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="NirCmd Tool Execution As LOCAL SYSTEM" | eval sigma_description="Detects the use of NirCmd tool for command execution as SYSTEM user"
dispatch.earliest_time = -24h@h
alert.track = 0

[NirCmd Tool Execution As LOCAL SYSTEM - sysmon]
description = Detects the use of NirCmd tool for command execution as SYSTEM user
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* runassystem *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="NirCmd Tool Execution As LOCAL SYSTEM" | eval sigma_description="Detects the use of NirCmd tool for command execution as SYSTEM user"
dispatch.earliest_time = -24h@h
alert.track = 0

[NirCmd Tool Execution - winevent]
description = Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((OriginalFileName="NirCmd.exe" OR (Process_Command_Line="* execmd *" OR Process_Command_Line="*.exe script *" OR Process_Command_Line="*.exe shexec *" OR Process_Command_Line="* runinteractive *")) OR ((Process_Command_Line="* exec *" OR Process_Command_Line="* exec2 *") (Process_Command_Line="* show *" OR Process_Command_Line="* hide *")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="NirCmd Tool Execution" | eval sigma_description="Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[NirCmd Tool Execution - sysmon]
description = Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((OriginalFileName="NirCmd.exe" OR (CommandLine="* execmd *" OR CommandLine="*.exe script *" OR CommandLine="*.exe shexec *" OR CommandLine="* runinteractive *")) OR ((CommandLine="* exec *" OR CommandLine="* exec2 *") (CommandLine="* show *" OR CommandLine="* hide *")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="NirCmd Tool Execution" | eval sigma_description="Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[NSudo Tool Execution - winevent]
description = Detects the use of NSudo tool for command execution
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\NSudo.exe" OR New_Process_Name="*\\NSudoLC.exe" OR New_Process_Name="*\\NSudoLG.exe") OR (OriginalFileName="NSudo.exe" OR OriginalFileName="NSudoLC.exe" OR OriginalFileName="NSudoLG.exe")) (Process_Command_Line="*-U:S *" OR Process_Command_Line="*-U:T *" OR Process_Command_Line="*-U:E *" OR Process_Command_Line="*-P:E *" OR Process_Command_Line="*-M:S *" OR Process_Command_Line="*-M:H *" OR Process_Command_Line="*-U=S *" OR Process_Command_Line="*-U=T *" OR Process_Command_Line="*-U=E *" OR Process_Command_Line="*-P=E *" OR Process_Command_Line="*-M=S *" OR Process_Command_Line="*-M=H *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="NSudo Tool Execution" | eval sigma_description="Detects the use of NSudo tool for command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[NSudo Tool Execution - sysmon]
description = Detects the use of NSudo tool for command execution
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\NSudo.exe" OR Image="*\\NSudoLC.exe" OR Image="*\\NSudoLG.exe") OR (OriginalFileName="NSudo.exe" OR OriginalFileName="NSudoLC.exe" OR OriginalFileName="NSudoLG.exe")) (CommandLine="*-U:S *" OR CommandLine="*-U:T *" OR CommandLine="*-U:E *" OR CommandLine="*-P:E *" OR CommandLine="*-M:S *" OR CommandLine="*-M:H *" OR CommandLine="*-U=S *" OR CommandLine="*-U=T *" OR CommandLine="*-U=E *" OR CommandLine="*-P=E *" OR CommandLine="*-M=S *" OR CommandLine="*-M=H *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="NSudo Tool Execution" | eval sigma_description="Detects the use of NSudo tool for command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Tool Execution - winevent]
description = Detects PsExec service installation and execution events (service and Sysmon)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\PSEXESVC.exe" (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*")) | table EventCode,Process_Command_Line,ParentCommandLine,ServiceName,ServiceFileName,TargetFilename,PipeName | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="PsExec Tool Execution" | eval sigma_description="Detects PsExec service installation and execution events (service and Sysmon)"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Tool Execution - sysmon]
description = Detects PsExec service installation and execution events (service and Sysmon)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\PSEXESVC.exe" (User="*AUTHORI*" OR User="*AUTORI*")) | table EventCode,CommandLine,ParentCommandLine,ServiceName,ServiceFileName,TargetFilename,PipeName | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="PsExec Tool Execution" | eval sigma_description="Detects PsExec service installation and execution events (service and Sysmon)"
dispatch.earliest_time = -24h@h
alert.track = 0

[RunXCmd Tool Execution As System - winevent]
description = Detects the use of RunXCmd tool for command execution
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /account=system *" Process_Command_Line="*/exec=*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="RunXCmd Tool Execution As System" | eval sigma_description="Detects the use of RunXCmd tool for command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[RunXCmd Tool Execution As System - sysmon]
description = Detects the use of RunXCmd tool for command execution
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /account=system *" CommandLine="*/exec=*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1569.002 attack.s0029" | eval sigma_title="RunXCmd Tool Execution As System" | eval sigma_description="Detects the use of RunXCmd tool for command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[SMB Relay Attack Tools - winevent]
description = Detects different hacktools used for relay attacks on Windows for privilege escalation
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*PetitPotam*" OR New_Process_Name="*RottenPotato*" OR New_Process_Name="*HotPotato*" OR New_Process_Name="*JuicyPotato*" OR New_Process_Name="*\\just_dce_*" OR New_Process_Name="*Juicy Potato*" OR New_Process_Name="*\\temp\\rot.exe*" OR New_Process_Name="*\\Potato.exe*" OR New_Process_Name="*\\SpoolSample.exe*" OR New_Process_Name="*\\Responder.exe*" OR New_Process_Name="*\\smbrelayx*" OR New_Process_Name="*\\ntlmrelayx*") OR (Process_Command_Line="*Invoke-Tater*" OR Process_Command_Line="* smbrelay*" OR Process_Command_Line="* ntlmrelay*" OR Process_Command_Line="*cme smb *" OR Process_Command_Line="* /ntlm:NTLMhash *" OR Process_Command_Line="*Invoke-PetitPotam*")) NOT (((New_Process_Name="*HotPotatoes6*" OR New_Process_Name="*HotPotatoes 6*" OR New_Process_Name="*HotPotatoes7*" OR New_Process_Name="*HotPotatoes 7*" OR New_Process_Name="*HotPotatoes Help*" OR New_Process_Name="*HotPotatoes Tutorial*")))) | eval sigma_attack_tags="attack.execution attack.t1557.001" | eval sigma_title="SMB Relay Attack Tools" | eval sigma_description="Detects different hacktools used for relay attacks on Windows for privilege escalation"
dispatch.earliest_time = -24h@h
alert.track = 0

[SMB Relay Attack Tools - sysmon]
description = Detects different hacktools used for relay attacks on Windows for privilege escalation
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*PetitPotam*" OR Image="*RottenPotato*" OR Image="*HotPotato*" OR Image="*JuicyPotato*" OR Image="*\\just_dce_*" OR Image="*Juicy Potato*" OR Image="*\\temp\\rot.exe*" OR Image="*\\Potato.exe*" OR Image="*\\SpoolSample.exe*" OR Image="*\\Responder.exe*" OR Image="*\\smbrelayx*" OR Image="*\\ntlmrelayx*") OR (CommandLine="*Invoke-Tater*" OR CommandLine="* smbrelay*" OR CommandLine="* ntlmrelay*" OR CommandLine="*cme smb *" OR CommandLine="* /ntlm:NTLMhash *" OR CommandLine="*Invoke-PetitPotam*")) NOT (((Image="*HotPotatoes6*" OR Image="*HotPotatoes 6*" OR Image="*HotPotatoes7*" OR Image="*HotPotatoes 7*" OR Image="*HotPotatoes Help*" OR Image="*HotPotatoes Tutorial*")))) | eval sigma_attack_tags="attack.execution attack.t1557.001" | eval sigma_title="SMB Relay Attack Tools" | eval sigma_description="Detects different hacktools used for relay attacks on Windows for privilege escalation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tor Client or Tor Browser Use - winevent]
description = Detects the use of Tor or Tor-Browser to connect to onion routing networks
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\tor.exe" OR New_Process_Name="*\\Tor Browser\\Browser\\firefox.exe")) | eval sigma_attack_tags="attack.command_and_control attack.t1090.003" | eval sigma_title="Tor Client or Tor Browser Use" | eval sigma_description="Detects the use of Tor or Tor-Browser to connect to onion routing networks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tor Client or Tor Browser Use - sysmon]
description = Detects the use of Tor or Tor-Browser to connect to onion routing networks
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\tor.exe" OR Image="*\\Tor Browser\\Browser\\firefox.exe")) | eval sigma_attack_tags="attack.command_and_control attack.t1090.003" | eval sigma_title="Tor Client or Tor Browser Use" | eval sigma_description="Detects the use of Tor or Tor-Browser to connect to onion routing networks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - winevent]
description = Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\nltest.exe" (Process_Command_Line="*domain_trusts*" OR Process_Command_Line="*all_trusts*" OR Process_Command_Line="*/trusted_domains*" OR Process_Command_Line="*/dclist*")) OR (New_Process_Name="*\\dsquery.exe" Process_Command_Line="*trustedDomain*") OR (New_Process_Name="*\\dsquery.exe" Process_Command_Line="*-filter*" Process_Command_Line="*trustedDomain*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - sysmon]
description = Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\nltest.exe" (CommandLine="*domain_trusts*" OR CommandLine="*all_trusts*" OR CommandLine="*/trusted_domains*" OR CommandLine="*/dclist*")) OR (Image="*\\dsquery.exe" CommandLine="*trustedDomain*") OR (Image="*\\dsquery.exe" CommandLine="*-filter*" CommandLine="*trustedDomain*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts."
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using ChangePK and SLUI - winevent]
description = Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\changepk.exe" Creator_Process_Name="*\\slui.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using ChangePK and SLUI" | eval sigma_description="Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using ChangePK and SLUI - sysmon]
description = Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\changepk.exe" ParentImage="*\\slui.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using ChangePK and SLUI" | eval sigma_description="Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Disk Cleanup - winevent]
description = Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\"\\system32\\cleanmgr.exe /autoclean /d C:" ParentCommandLine="C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Disk Cleanup" | eval sigma_description="Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Disk Cleanup - sysmon]
description = Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\"\\system32\\cleanmgr.exe /autoclean /d C:" ParentCommandLine="C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Disk Cleanup" | eval sigma_description="Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via CMSTP - winevent]
description = Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\cmstp.exe" OR OriginalFileName="CMSTP.EXE") (Process_Command_Line="*/s*" OR Process_Command_Line="*/au*" OR Process_Command_Line="*/ni*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002 attack.t1218.003" | eval sigma_title="Bypass UAC via CMSTP" | eval sigma_description="Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via CMSTP - sysmon]
description = Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\cmstp.exe" OR OriginalFileName="CMSTP.EXE") (CommandLine="*/s*" OR CommandLine="*/au*" OR CommandLine="*/ni*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002 attack.t1218.003" | eval sigma_title="Bypass UAC via CMSTP" | eval sigma_description="Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using ComputerDefaults - winevent]
description = Detects the pattern of UAC Bypass using computerdefaults.exe (UACMe 59)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((IntegrityLevel="High" OR IntegrityLevel="System") New_Process_Name="C:\\Windows\\System32\\ComputerDefaults.exe") NOT ((Creator_Process_Name="*:\\Windows\\System32*" OR Creator_Process_Name="*:\\Program Files*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using ComputerDefaults" | eval sigma_description="Detects the pattern of UAC Bypass using computerdefaults.exe (UACMe 59)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using ComputerDefaults - sysmon]
description = Detects the pattern of UAC Bypass using computerdefaults.exe (UACMe 59)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((IntegrityLevel="High" OR IntegrityLevel="System") Image="C:\\Windows\\System32\\ComputerDefaults.exe") NOT ((ParentImage="*:\\Windows\\System32*" OR ParentImage="*:\\Program Files*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using ComputerDefaults" | eval sigma_description="Detects the pattern of UAC Bypass using computerdefaults.exe (UACMe 59)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Consent and Comctl32 - Process - winevent]
description = Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\consent.exe" New_Process_Name="*\\werfault.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Consent and Comctl32 - Process" | eval sigma_description="Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Consent and Comctl32 - Process - sysmon]
description = Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\consent.exe" Image="*\\werfault.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Consent and Comctl32 - Process" | eval sigma_description="Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using DismHost - winevent]
description = Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*C:\\Users\\*" Creator_Process_Name="*\\AppData\\Local\\Temp\\*" Creator_Process_Name="*\\DismHost.exe*" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using DismHost" | eval sigma_description="Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using DismHost - sysmon]
description = Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*C:\\Users\\*" ParentImage="*\\AppData\\Local\\Temp\\*" ParentImage="*\\DismHost.exe*" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using DismHost" | eval sigma_description="Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via Fodhelper.exe - winevent]
description = Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\fodhelper.exe") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Bypass UAC via Fodhelper.exe" | eval sigma_description="Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via Fodhelper.exe - sysmon]
description = Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\fodhelper.exe") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Bypass UAC via Fodhelper.exe" | eval sigma_description="Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using IDiagnostic Profile - winevent]
description = Detects the 'IDiagnosticProfileUAC' UAC bypass technique
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\DllHost.exe" ParentCommandLine="* /Processid:{12C21EA7-2EB8-4B55-9249-AC243DA8C666}*" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using IDiagnostic Profile" | eval sigma_description="Detects the 'IDiagnosticProfileUAC' UAC bypass technique"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using IDiagnostic Profile - sysmon]
description = Detects the 'IDiagnosticProfileUAC' UAC bypass technique
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\DllHost.exe" ParentCommandLine="* /Processid:{12C21EA7-2EB8-4B55-9249-AC243DA8C666}*" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using IDiagnostic Profile" | eval sigma_description="Detects the 'IDiagnosticProfileUAC' UAC bypass technique"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using IEInstal - Process - winevent]
description = Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (IntegrityLevel="High" OR IntegrityLevel="System") Creator_Process_Name="*\\ieinstal.exe" New_Process_Name="*\\AppData\\Local\\Temp\\*" New_Process_Name="*consent.exe") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using IEInstal - Process" | eval sigma_description="Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using IEInstal - Process - sysmon]
description = Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (IntegrityLevel="High" OR IntegrityLevel="System") ParentImage="*\\ieinstal.exe" Image="*\\AppData\\Local\\Temp\\*" Image="*consent.exe") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using IEInstal - Process" | eval sigma_description="Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using MSConfig Token Modification - Process - winevent]
description = Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (IntegrityLevel="High" OR IntegrityLevel="System") Creator_Process_Name="*\\AppData\\Local\\Temp\\pkgmgr.exe" Process_Command_Line="\"C:\\Windows\\system32\\msconfig.exe\" -5") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using MSConfig Token Modification - Process" | eval sigma_description="Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using MSConfig Token Modification - Process - sysmon]
description = Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (IntegrityLevel="High" OR IntegrityLevel="System") ParentImage="*\\AppData\\Local\\Temp\\pkgmgr.exe" CommandLine="\"C:\\Windows\\system32\\msconfig.exe\" -5") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using MSConfig Token Modification - Process" | eval sigma_description="Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using NTFS Reparse Point - Process - winevent]
description = Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="\"C:\\Windows\\system32\\wusa.exe\"  /quiet C:\\Users\\*" Process_Command_Line="*\\AppData\\Local\\Temp\\update.msu" (IntegrityLevel="High" OR IntegrityLevel="System")) OR (ParentCommandLine="\"C:\\Windows\\system32\\dism.exe\" /online /quiet /norestart /add-package /packagepath:\"C:\\Windows\\system32\\pe386\" /ignorecheck" (IntegrityLevel="High" OR IntegrityLevel="System") Process_Command_Line="*C:\\Users\\*" Process_Command_Line="*\\AppData\\Local\\Temp\\*" Process_Command_Line="*\\dismhost.exe {*" New_Process_Name="*\\DismHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using NTFS Reparse Point - Process" | eval sigma_description="Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using NTFS Reparse Point - Process - sysmon]
description = Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="\"C:\\Windows\\system32\\wusa.exe\"  /quiet C:\\Users\\*" CommandLine="*\\AppData\\Local\\Temp\\update.msu" (IntegrityLevel="High" OR IntegrityLevel="System")) OR (ParentCommandLine="\"C:\\Windows\\system32\\dism.exe\" /online /quiet /norestart /add-package /packagepath:\"C:\\Windows\\system32\\pe386\" /ignorecheck" (IntegrityLevel="High" OR IntegrityLevel="System") CommandLine="*C:\\Users\\*" CommandLine="*\\AppData\\Local\\Temp\\*" CommandLine="*\\dismhost.exe {*" Image="*\\DismHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using NTFS Reparse Point - Process" | eval sigma_description="Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using PkgMgr and DISM - winevent]
description = Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\pkgmgr.exe" New_Process_Name="*\\dism.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using PkgMgr and DISM" | eval sigma_description="Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using PkgMgr and DISM - sysmon]
description = Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\pkgmgr.exe" Image="*\\dism.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using PkgMgr and DISM" | eval sigma_description="Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Abusing Winsat Path Parsing - Process - winevent]
description = Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (IntegrityLevel="High" OR IntegrityLevel="System") Creator_Process_Name="*\\AppData\\Local\\Temp\\system32\\winsat.exe" ParentCommandLine="*C:\\Windows \\system32\\winsat.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Abusing Winsat Path Parsing - Process" | eval sigma_description="Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Abusing Winsat Path Parsing - Process - sysmon]
description = Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (IntegrityLevel="High" OR IntegrityLevel="System") ParentImage="*\\AppData\\Local\\Temp\\system32\\winsat.exe" ParentCommandLine="*C:\\Windows \\system32\\winsat.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Abusing Winsat Path Parsing - Process" | eval sigma_description="Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Windows Media Player - Process - winevent]
description = Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="C:\\Program Files\\Windows Media Player\\osk.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) OR (New_Process_Name="C:\\Windows\\System32\\cmd.exe" ParentCommandLine="\"C:\\Windows\\system32\\mmc.exe\" \"C:\\Windows\\system32\\eventvwr.msc\" /s" (IntegrityLevel="High" OR IntegrityLevel="System")))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Windows Media Player - Process" | eval sigma_description="Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass Using Windows Media Player - Process - sysmon]
description = Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="C:\\Program Files\\Windows Media Player\\osk.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) OR (Image="C:\\Windows\\System32\\cmd.exe" ParentCommandLine="\"C:\\Windows\\system32\\mmc.exe\" \"C:\\Windows\\system32\\eventvwr.msc\" /s" (IntegrityLevel="High" OR IntegrityLevel="System")))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass Using Windows Media Player - Process" | eval sigma_description="Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass WSReset - winevent]
description = Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\wsreset.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass WSReset" | eval sigma_description="Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass WSReset - sysmon]
description = Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wsreset.exe" (IntegrityLevel="High" OR IntegrityLevel="System")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1548.002" | eval sigma_title="UAC Bypass WSReset" | eval sigma_description="Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via WSReset.exe - winevent]
description = Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\wsreset.exe" NOT (New_Process_Name="*\\conhost.exe" OR OriginalFileName="CONHOST.EXE")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Bypass UAC via WSReset.exe" | eval sigma_description="Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via WSReset.exe - sysmon]
description = Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\wsreset.exe" NOT (Image="*\\conhost.exe" OR OriginalFileName="CONHOST.EXE")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1548.002" | eval sigma_title="Bypass UAC via WSReset.exe" | eval sigma_description="Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Uninstall Crowdstrike Falcon - winevent]
description = Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\WindowsSensor.exe*" Process_Command_Line="* /uninstall*" Process_Command_Line="* /quiet*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Uninstall Crowdstrike Falcon" | eval sigma_description="Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon"
dispatch.earliest_time = -24h@h
alert.track = 0

[Uninstall Crowdstrike Falcon - sysmon]
description = Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\WindowsSensor.exe*" CommandLine="* /uninstall*" CommandLine="* /quiet*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1562.001" | eval sigma_title="Uninstall Crowdstrike Falcon" | eval sigma_description="Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Weak Service Permissions - winevent]
description = Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\sc.exe" IntegrityLevel="Medium") ((Process_Command_Line="*config*" Process_Command_Line="*binPath*") OR (Process_Command_Line="*failure*" Process_Command_Line="*command*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Weak Service Permissions" | eval sigma_description="Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Weak Service Permissions - sysmon]
description = Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\sc.exe" IntegrityLevel="Medium") ((CommandLine="*config*" CommandLine="*binPath*") OR (CommandLine="*failure*" CommandLine="*command*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574.011" | eval sigma_title="Possible Privilege Escalation via Weak Service Permissions" | eval sigma_description="Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Abuse of Service Permissions to Hide Services in Tools - winevent]
description = Detection of sc.exe utility adding a new service with special permission which hides that service.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\sc.exe" OR OriginalFileName="sc.exe") (Process_Command_Line="*sdset*" Process_Command_Line="*DCLCWPDTSD*")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574.011" | eval sigma_title="Abuse of Service Permissions to Hide Services in Tools" | eval sigma_description="Detection of sc.exe utility adding a new service with special permission which hides that service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Abuse of Service Permissions to Hide Services in Tools - sysmon]
description = Detection of sc.exe utility adding a new service with special permission which hides that service.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\sc.exe" OR OriginalFileName="sc.exe") (CommandLine="*sdset*" CommandLine="*DCLCWPDTSD*")) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.privilege_escalation attack.t1574.011" | eval sigma_title="Abuse of Service Permissions to Hide Services in Tools" | eval sigma_description="Detection of sc.exe utility adding a new service with special permission which hides that service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Using SettingSyncHost.exe as LOLBin - winevent]
description = Detects using SettingSyncHost.exe to run hijacked binary
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*")) (ParentCommandLine="*cmd.exe /c*" ParentCommandLine="*RoamDiag.cmd*" ParentCommandLine="*-outputpath*")) | table TargetFilename,New_Process_Name | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1574.008" | eval sigma_title="Using SettingSyncHost.exe as LOLBin" | eval sigma_description="Detects using SettingSyncHost.exe to run hijacked binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Using SettingSyncHost.exe as LOLBin - sysmon]
description = Detects using SettingSyncHost.exe to run hijacked binary
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*")) (ParentCommandLine="*cmd.exe /c*" ParentCommandLine="*RoamDiag.cmd*" ParentCommandLine="*-outputpath*")) | table TargetFilename,Image | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1574.008" | eval sigma_title="Using SettingSyncHost.exe as LOLBin" | eval sigma_description="Detects using SettingSyncHost.exe to run hijacked binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Verclsid.exe Runs COM Object - winevent]
description = Detects when verclsid.exe is used to run COM object via GUID
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\verclsid.exe" Process_Command_Line="*/C*" Process_Command_Line="*/S*") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Verclsid.exe Runs COM Object" | eval sigma_description="Detects when verclsid.exe is used to run COM object via GUID"
dispatch.earliest_time = -24h@h
alert.track = 0

[Verclsid.exe Runs COM Object - sysmon]
description = Detects when verclsid.exe is used to run COM object via GUID
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\verclsid.exe" CommandLine="*/C*" CommandLine="*/S*") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1218" | eval sigma_title="Verclsid.exe Runs COM Object" | eval sigma_description="Detects when verclsid.exe is used to run COM object via GUID"
dispatch.earliest_time = -24h@h
alert.track = 0

[VMToolsd Suspicious Child Process - winevent]
description = Detects suspicious child process creations of VMware Tools process which may indicate persistence setup
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\vmtoolsd.exe" ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") OR (OriginalFileName="Cmd.Exe" OR OriginalFileName="PowerShell.EXE" OR OriginalFileName="RUNDLL32.EXE" OR OriginalFileName="REGSVR32.EXE" OR OriginalFileName="wscript.exe" OR OriginalFileName="cscript.exe"))) NOT ((Process_Command_Line="*\\VMware\\VMware Tools\\poweron-vm-default.bat*" OR Process_Command_Line="*\\VMware\\VMware Tools\\poweroff-vm-default.bat*" OR Process_Command_Line="*\\VMware\\VMware Tools\\resume-vm-default.bat*" OR Process_Command_Line="*\\VMware\\VMware Tools\\suspend-vm-default.bat*"))) | table Process_Command_Line,ParentCommandLine,NewValue | eval sigma_attack_tags="attack.execution attack.persistence attack.t1059" | eval sigma_title="VMToolsd Suspicious Child Process" | eval sigma_description="Detects suspicious child process creations of VMware Tools process which may indicate persistence setup"
dispatch.earliest_time = -24h@h
alert.track = 0

[VMToolsd Suspicious Child Process - sysmon]
description = Detects suspicious child process creations of VMware Tools process which may indicate persistence setup
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\vmtoolsd.exe" ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\rundll32.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe") OR (OriginalFileName="Cmd.Exe" OR OriginalFileName="PowerShell.EXE" OR OriginalFileName="RUNDLL32.EXE" OR OriginalFileName="REGSVR32.EXE" OR OriginalFileName="wscript.exe" OR OriginalFileName="cscript.exe"))) NOT ((CommandLine="*\\VMware\\VMware Tools\\poweron-vm-default.bat*" OR CommandLine="*\\VMware\\VMware Tools\\poweroff-vm-default.bat*" OR CommandLine="*\\VMware\\VMware Tools\\resume-vm-default.bat*" OR CommandLine="*\\VMware\\VMware Tools\\suspend-vm-default.bat*"))) | table CommandLine,ParentCommandLine,Details | eval sigma_attack_tags="attack.execution attack.persistence attack.t1059" | eval sigma_title="VMToolsd Suspicious Child Process" | eval sigma_description="Detects suspicious child process creations of VMware Tools process which may indicate persistence setup"
dispatch.earliest_time = -24h@h
alert.track = 0

[Java Running with Remote Debugging - winevent]
description = Detects a JAVA process running with remote debugging allowing more than just localhost to connect
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Process_Command_Line="*transport=dt_socket,address=*" NOT (Process_Command_Line="*address=127.0.0.1*" OR Process_Command_Line="*address=localhost*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1203 attack.execution" | eval sigma_title="Java Running with Remote Debugging" | eval sigma_description="Detects a JAVA process running with remote debugging allowing more than just localhost to connect"
dispatch.earliest_time = -24h@h
alert.track = 0

[Java Running with Remote Debugging - sysmon]
description = Detects a JAVA process running with remote debugging allowing more than just localhost to connect
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) CommandLine="*transport=dt_socket,address=*" NOT (CommandLine="*address=127.0.0.1*" OR CommandLine="*address=localhost*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1203 attack.execution" | eval sigma_title="Java Running with Remote Debugging" | eval sigma_description="Detects a JAVA process running with remote debugging allowing more than just localhost to connect"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Detection With Command Line Keywords - winevent]
description = Detects certain command line parameters often used during reconnaissance activity via web shells
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\caddy.exe" OR Creator_Process_Name="*\\ws_tomcatservice.exe") OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Creator_Process_Name="*-tomcat-*" OR Creator_Process_Name="*\\tomcat*")) OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Process_Command_Line="*catalina.jar*" OR Process_Command_Line="*CATALINA_HOME*"))) (((OriginalFileName="net.exe" OR OriginalFileName="net1.exe") (Process_Command_Line="* user *" OR Process_Command_Line="* use *" OR Process_Command_Line="* group *")) OR (OriginalFileName="ping.exe" Process_Command_Line="* -n *") OR (Process_Command_Line="*&cd&echo*" OR Process_Command_Line="*cd /d *") OR (OriginalFileName="wmic.exe" Process_Command_Line="* /node:*") OR ((New_Process_Name="*\\whoami.exe" OR New_Process_Name="*\\systeminfo.exe" OR New_Process_Name="*\\quser.exe" OR New_Process_Name="*\\ipconfig.exe" OR New_Process_Name="*\\pathping.exe" OR New_Process_Name="*\\tracert.exe" OR New_Process_Name="*\\netstat.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\vssadmin.exe" OR New_Process_Name="*\\wevtutil.exe" OR New_Process_Name="*\\tasklist.exe") OR (OriginalFileName="whoami.exe" OR OriginalFileName="sysinfo.exe" OR OriginalFileName="quser.exe" OR OriginalFileName="ipconfig.exe" OR OriginalFileName="pathping.exe" OR OriginalFileName="tracert.exe" OR OriginalFileName="netstat.exe" OR OriginalFileName="schtasks.exe" OR OriginalFileName="VSSADMIN.EXE" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="tasklist.exe")) OR (Process_Command_Line="* Test-NetConnection *" OR Process_Command_Line="*dir \\*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1018 attack.t1033 attack.t1087" | eval sigma_title="Webshell Detection With Command Line Keywords" | eval sigma_description="Detects certain command line parameters often used during reconnaissance activity via web shells"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Detection With Command Line Keywords - sysmon]
description = Detects certain command line parameters often used during reconnaissance activity via web shells
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\caddy.exe" OR ParentImage="*\\ws_tomcatservice.exe") OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (ParentImage="*-tomcat-*" OR ParentImage="*\\tomcat*")) OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (CommandLine="*catalina.jar*" OR CommandLine="*CATALINA_HOME*"))) (((OriginalFileName="net.exe" OR OriginalFileName="net1.exe") (CommandLine="* user *" OR CommandLine="* use *" OR CommandLine="* group *")) OR (OriginalFileName="ping.exe" CommandLine="* -n *") OR (CommandLine="*&cd&echo*" OR CommandLine="*cd /d *") OR (OriginalFileName="wmic.exe" CommandLine="* /node:*") OR ((Image="*\\whoami.exe" OR Image="*\\systeminfo.exe" OR Image="*\\quser.exe" OR Image="*\\ipconfig.exe" OR Image="*\\pathping.exe" OR Image="*\\tracert.exe" OR Image="*\\netstat.exe" OR Image="*\\schtasks.exe" OR Image="*\\vssadmin.exe" OR Image="*\\wevtutil.exe" OR Image="*\\tasklist.exe") OR (OriginalFileName="whoami.exe" OR OriginalFileName="sysinfo.exe" OR OriginalFileName="quser.exe" OR OriginalFileName="ipconfig.exe" OR OriginalFileName="pathping.exe" OR OriginalFileName="tracert.exe" OR OriginalFileName="netstat.exe" OR OriginalFileName="schtasks.exe" OR OriginalFileName="VSSADMIN.EXE" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="tasklist.exe")) OR (CommandLine="* Test-NetConnection *" OR CommandLine="*dir \\*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1018 attack.t1033 attack.t1087" | eval sigma_title="Webshell Detection With Command Line Keywords" | eval sigma_description="Detects certain command line parameters often used during reconnaissance activity via web shells"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Hacking Activity Patterns - winevent]
description = Detects certain parent child patterns found in cases in which a webshell is used to perform certain credential dumping or exfiltration activities on a compromised system
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\caddy.exe" OR Creator_Process_Name="*\\ws_tomcatservice.exe") OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Creator_Process_Name="*-tomcat-*" OR Creator_Process_Name="*\\tomcat*")) OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Process_Command_Line="*catalina.jar*" OR Process_Command_Line="*CATALINA_HOME*"))) ((Process_Command_Line="*rundll32*" Process_Command_Line="*comsvcs.dll*") OR (Process_Command_Line="* -hp*" Process_Command_Line="* a *" Process_Command_Line="* -m*") OR (Process_Command_Line="*net*" Process_Command_Line="* user *" Process_Command_Line="* /add*") OR (Process_Command_Line="*net*" Process_Command_Line="* localgroup *" Process_Command_Line="* administrators *" Process_Command_Line="*/add*") OR (New_Process_Name="*\\ntdsutil.exe" OR New_Process_Name="*\\ldifde.exe" OR New_Process_Name="*\\adfind.exe" OR New_Process_Name="*\\procdump.exe" OR New_Process_Name="*\\Nanodump.exe" OR New_Process_Name="*\\vssadmin.exe" OR New_Process_Name="*\\fsutil.exe") OR (Process_Command_Line="* -NoP *" OR Process_Command_Line="* -W Hidden *" OR Process_Command_Line="* -decode *" OR Process_Command_Line="* /decode *" OR Process_Command_Line="*reg save *" OR Process_Command_Line="*.downloadstring(*" OR Process_Command_Line="*.downloadfile(*" OR Process_Command_Line="*FromBase64String*" OR Process_Command_Line="* /ticket:*" OR Process_Command_Line="* sekurlsa*" OR Process_Command_Line="*.dmp full*" OR Process_Command_Line="*process call create*" OR Process_Command_Line="*whoami /priv*"))) | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1018 attack.t1033 attack.t1087" | eval sigma_title="Webshell Hacking Activity Patterns" | eval sigma_description="Detects certain parent child patterns found in cases in which a webshell is used to perform certain credential dumping or exfiltration activities on a compromised system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Hacking Activity Patterns - sysmon]
description = Detects certain parent child patterns found in cases in which a webshell is used to perform certain credential dumping or exfiltration activities on a compromised system
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\caddy.exe" OR ParentImage="*\\ws_tomcatservice.exe") OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (ParentImage="*-tomcat-*" OR ParentImage="*\\tomcat*")) OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (CommandLine="*catalina.jar*" OR CommandLine="*CATALINA_HOME*"))) ((CommandLine="*rundll32*" CommandLine="*comsvcs.dll*") OR (CommandLine="* -hp*" CommandLine="* a *" CommandLine="* -m*") OR (CommandLine="*net*" CommandLine="* user *" CommandLine="* /add*") OR (CommandLine="*net*" CommandLine="* localgroup *" CommandLine="* administrators *" CommandLine="*/add*") OR (Image="*\\ntdsutil.exe" OR Image="*\\ldifde.exe" OR Image="*\\adfind.exe" OR Image="*\\procdump.exe" OR Image="*\\Nanodump.exe" OR Image="*\\vssadmin.exe" OR Image="*\\fsutil.exe") OR (CommandLine="* -NoP *" OR CommandLine="* -W Hidden *" OR CommandLine="* -decode *" OR CommandLine="* /decode *" OR CommandLine="*reg save *" OR CommandLine="*.downloadstring(*" OR CommandLine="*.downloadfile(*" OR CommandLine="*FromBase64String*" OR CommandLine="* /ticket:*" OR CommandLine="* sekurlsa*" OR CommandLine="*.dmp full*" OR CommandLine="*process call create*" OR CommandLine="*whoami /priv*"))) | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1018 attack.t1033 attack.t1087" | eval sigma_title="Webshell Hacking Activity Patterns" | eval sigma_description="Detects certain parent child patterns found in cases in which a webshell is used to perform certain credential dumping or exfiltration activities on a compromised system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Recon Detection Via CommandLine & Processes - winevent]
description = Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\caddy.exe" OR Creator_Process_Name="*\\ws_tomcatservice.exe") OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Creator_Process_Name="*-tomcat-*" OR Creator_Process_Name="*\\tomcat*")) OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Process_Command_Line="*catalina.jar*" OR Process_Command_Line="*CATALINA_HOME*"))) (Process_Command_Line="*perl --help*" OR Process_Command_Line="*python --help*" OR Process_Command_Line="*wget --help*" OR Process_Command_Line="*perl -h*")) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Webshell Recon Detection Via CommandLine & Processes" | eval sigma_description="Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed."
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Recon Detection Via CommandLine & Processes - sysmon]
description = Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\caddy.exe" OR ParentImage="*\\ws_tomcatservice.exe") OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (ParentImage="*-tomcat-*" OR ParentImage="*\\tomcat*")) OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (CommandLine="*catalina.jar*" OR CommandLine="*CATALINA_HOME*"))) (CommandLine="*perl --help*" OR CommandLine="*python --help*" OR CommandLine="*wget --help*" OR CommandLine="*perl -h*")) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003" | eval sigma_title="Webshell Recon Detection Via CommandLine & Processes" | eval sigma_description="Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed."
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawned by Web Servers - winevent]
description = Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\caddy.exe" OR Creator_Process_Name="*\\ws_TomcatService.exe" OR Creator_Process_Name="*\\tomcat.exe" OR Creator_Process_Name="*\\UMWorkerProcess.exe") OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (Creator_Process_Name="*-tomcat-*" OR Creator_Process_Name="*\\tomcat*")) OR ((Creator_Process_Name="*\\java.exe" OR Creator_Process_Name="*\\javaw.exe") (ParentCommandLine="*catalina.jar*" OR ParentCommandLine="*CATALINA_HOME*" OR ParentCommandLine="*catalina.home*"))) (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1190" | eval sigma_title="Shells Spawned by Web Servers" | eval sigma_description="Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawned by Web Servers - sysmon]
description = Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\caddy.exe" OR ParentImage="*\\ws_TomcatService.exe" OR ParentImage="*\\tomcat.exe" OR ParentImage="*\\UMWorkerProcess.exe") OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (ParentImage="*-tomcat-*" OR ParentImage="*\\tomcat*")) OR ((ParentImage="*\\java.exe" OR ParentImage="*\\javaw.exe") (ParentCommandLine="*catalina.jar*" OR ParentCommandLine="*CATALINA_HOME*" OR ParentCommandLine="*catalina.home*"))) (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1505.003 attack.t1190" | eval sigma_title="Shells Spawned by Web Servers" | eval sigma_description="Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as Privileged User - winevent]
description = Detects a whoami.exe executed by privileged accounts that are often misused by threat actors
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Account_Name="*TrustedInstaller*" (OriginalFileName="whoami.exe" OR New_Process_Name="*\\whoami.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami as Privileged User" | eval sigma_description="Detects a whoami.exe executed by privileged accounts that are often misused by threat actors"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as Privileged User - sysmon]
description = Detects a whoami.exe executed by privileged accounts that are often misused by threat actors
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) User="*TrustedInstaller*" (OriginalFileName="whoami.exe" OR Image="*\\whoami.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami as Privileged User" | eval sigma_description="Detects a whoami.exe executed by privileged accounts that are often misused by threat actors"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as SYSTEM - winevent]
description = Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*") (OriginalFileName="whoami.exe" OR New_Process_Name="*\\whoami.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami as SYSTEM" | eval sigma_description="Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as SYSTEM - sysmon]
description = Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (User="*AUTHORI*" OR User="*AUTORI*") (OriginalFileName="whoami.exe" OR Image="*\\whoami.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami as SYSTEM" | eval sigma_description="Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami Showing Privileges - winevent]
description = Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privieleges. This is often used after a privilege escalation attempt.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\whoami.exe" OR OriginalFileName="whoami.exe") Process_Command_Line="*/priv*") | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami Showing Privileges" | eval sigma_description="Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privieleges. This is often used after a privilege escalation attempt."
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami Showing Privileges - sysmon]
description = Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privieleges. This is often used after a privilege escalation attempt.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\whoami.exe" OR OriginalFileName="whoami.exe") CommandLine="*/priv*") | eval sigma_attack_tags="attack.privilege_escalation attack.discovery attack.t1033" | eval sigma_title="Run Whoami Showing Privileges" | eval sigma_description="Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privieleges. This is often used after a privilege escalation attempt."
dispatch.earliest_time = -24h@h
alert.track = 0

[MSExchange Transport Agent Installation - winevent]
description = Detects the Installation of a Exchange Transport Agent
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Install-TransportAgent*") | table AssemblyPath | eval sigma_attack_tags="attack.persistence attack.t1505.002" | eval sigma_title="MSExchange Transport Agent Installation" | eval sigma_description="Detects the Installation of a Exchange Transport Agent"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSExchange Transport Agent Installation - sysmon]
description = Detects the Installation of a Exchange Transport Agent
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Install-TransportAgent*") | table AssemblyPath | eval sigma_attack_tags="attack.persistence attack.t1505.002" | eval sigma_title="MSExchange Transport Agent Installation" | eval sigma_description="Detects the Installation of a Exchange Transport Agent"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows 10 Scheduled Task SandboxEscaper 0-day - winevent]
description = Detects Task Scheduler .job import arbitrary DACL write\par
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" OriginalFileName="schtasks.exe" Process_Command_Line="*/change*" Process_Command_Line="*/TN*" Process_Command_Line="*/RU*" Process_Command_Line="*/RP*") | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.005 car.2013-08-001" | eval sigma_title="Windows 10 Scheduled Task SandboxEscaper 0-day" | eval sigma_description="Detects Task Scheduler .job import arbitrary DACL write\par"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows 10 Scheduled Task SandboxEscaper 0-day - sysmon]
description = Detects Task Scheduler .job import arbitrary DACL write\par
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" OriginalFileName="schtasks.exe" CommandLine="*/change*" CommandLine="*/TN*" CommandLine="*/RU*" CommandLine="*/RP*") | eval sigma_attack_tags="attack.privilege_escalation attack.t1053.005 car.2013-08-001" | eval sigma_title="Windows 10 Scheduled Task SandboxEscaper 0-day" | eval sigma_description="Detects Task Scheduler .job import arbitrary DACL write\par"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winword.exe Loads Suspicious DLL - winevent]
description = Detects Winword.exe loading of custmom dll via /l cmd switch
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\winword.exe" Process_Command_Line="*/l*") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Winword.exe Loads Suspicious DLL" | eval sigma_description="Detects Winword.exe loading of custmom dll via /l cmd switch"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winword.exe Loads Suspicious DLL - sysmon]
description = Detects Winword.exe loading of custmom dll via /l cmd switch
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\winword.exe" CommandLine="*/l*") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Winword.exe Loads Suspicious DLL" | eval sigma_description="Detects Winword.exe loading of custmom dll via /l cmd switch"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Backdoor Exchange Transport Agent - winevent]
description = Detects a WMI backdoor in Exchange Transport Agents via WMI event filters
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) Creator_Process_Name="*\\EdgeTransport.exe" NOT (New_Process_Name="C:\\Windows\\System32\\conhost.exe")) | eval sigma_attack_tags="attack.persistence attack.t1546.003" | eval sigma_title="WMI Backdoor Exchange Transport Agent" | eval sigma_description="Detects a WMI backdoor in Exchange Transport Agents via WMI event filters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Backdoor Exchange Transport Agent - sysmon]
description = Detects a WMI backdoor in Exchange Transport Agents via WMI event filters
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ParentImage="*\\EdgeTransport.exe" NOT (Image="C:\\Windows\\System32\\conhost.exe")) | eval sigma_attack_tags="attack.persistence attack.t1546.003" | eval sigma_title="WMI Backdoor Exchange Transport Agent" | eval sigma_description="Detects a WMI backdoor in Exchange Transport Agents via WMI event filters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer - winevent]
description = Detects WMI script event consumers
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="C:\\WINDOWS\\system32\\wbem\\scrcons.exe" Creator_Process_Name="C:\\Windows\\System32\\svchost.exe") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.003" | eval sigma_title="WMI Persistence - Script Event Consumer" | eval sigma_description="Detects WMI script event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer - sysmon]
description = Detects WMI script event consumers
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\WINDOWS\\system32\\wbem\\scrcons.exe" ParentImage="C:\\Windows\\System32\\svchost.exe") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1546.003" | eval sigma_title="WMI Persistence - Script Event Consumer" | eval sigma_description="Detects WMI script event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Spawning Windows PowerShell - winevent]
description = Detects WMI spawning PowerShell
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\wmiprvse.exe" (New_Process_Name="*\\powershell.exe" OR OriginalFileName="PowerShell.EXE")) NOT (Process_Command_Line="null")) NOT (NOT Process_Command_Line="*")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1059.001" | eval sigma_title="WMI Spawning Windows PowerShell" | eval sigma_description="Detects WMI spawning PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Spawning Windows PowerShell - sysmon]
description = Detects WMI spawning PowerShell
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\wmiprvse.exe" (Image="*\\powershell.exe" OR OriginalFileName="PowerShell.EXE")) NOT (CommandLine="null")) NOT (NOT CommandLine="*")) | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1059.001" | eval sigma_title="WMI Spawning Windows PowerShell" | eval sigma_description="Detects WMI spawning PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Hotfix Recon - winevent]
description = Detects wmic known recon method to look for installed hotfixes, often used by pentest and attackers enum scripts
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="wmic.exe" OR New_Process_Name="*\\WMIC.exe") (Process_Command_Line="* qfe *" Process_Command_Line="* get *" Process_Command_Line="*Caption,Description,HotFixID,InstalledOn*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMIC Hotfix Recon" | eval sigma_description="Detects wmic known recon method to look for installed hotfixes, often used by pentest and attackers enum scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Hotfix Recon - sysmon]
description = Detects wmic known recon method to look for installed hotfixes, often used by pentest and attackers enum scripts
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="wmic.exe" OR Image="*\\WMIC.exe") (CommandLine="* qfe *" CommandLine="* get *" CommandLine="*Caption,Description,HotFixID,InstalledOn*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMIC Hotfix Recon" | eval sigma_description="Detects wmic known recon method to look for installed hotfixes, often used by pentest and attackers enum scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Reconnaissance - winevent]
description = An adversary might use WMI to list Processes running on the compromised host or list installed Software hotfix and patches.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\WMIC.exe" OR OriginalFileName="wmic.exe") (Process_Command_Line="*process*" OR Process_Command_Line="*qfe*")) NOT (Process_Command_Line="*call*" Process_Command_Line="*create*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Suspicious WMI Reconnaissance" | eval sigma_description="An adversary might use WMI to list Processes running on the compromised host or list installed Software hotfix and patches."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Reconnaissance - sysmon]
description = An adversary might use WMI to list Processes running on the compromised host or list installed Software hotfix and patches.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\WMIC.exe" OR OriginalFileName="wmic.exe") (CommandLine="*process*" OR CommandLine="*qfe*")) NOT (CommandLine="*call*" CommandLine="*create*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Suspicious WMI Reconnaissance" | eval sigma_description="An adversary might use WMI to list Processes running on the compromised host or list installed Software hotfix and patches."
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Remote Command Execution - winevent]
description = An adversary might use WMI to execute commands on a remote system
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\WMIC.exe" OR OriginalFileName="wmic.exe") (Process_Command_Line="*/node:*" Process_Command_Line="*process*" Process_Command_Line="*call*" Process_Command_Line="*create*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Remote Command Execution" | eval sigma_description="An adversary might use WMI to execute commands on a remote system"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Remote Command Execution - sysmon]
description = An adversary might use WMI to execute commands on a remote system
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\WMIC.exe" OR OriginalFileName="wmic.exe") (CommandLine="*/node:*" CommandLine="*process*" CommandLine="*call*" CommandLine="*create*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Remote Command Execution" | eval sigma_description="An adversary might use WMI to execute commands on a remote system"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Reconnaissance List Remote Services - winevent]
description = An adversary might use WMI to check if a certain Remote Service is running on a remote device.
When the test completes, a service information will be displayed on the screen if it exists.
A common feedback message is that 'No instance(s) Available' if the service queried is not running.
A common error message is 'Node - (provided IP or default) ERROR Description =The RPC server is unavailable' if the provided remote host is unreacheable

search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\WMIC.exe" OR OriginalFileName="wmic.exe") (Process_Command_Line="*/node:*" Process_Command_Line="*service*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Reconnaissance List Remote Services" | eval sigma_description="An adversary might use WMI to check if a certain Remote Service is running on a remote device.
When the test completes, a service information will be displayed on the screen if it exists.
A common feedback message is that 'No instance(s) Available' if the service queried is not running.
A common error message is 'Node - (provided IP or default) ERROR Description =The RPC server is unavailable' if the provided remote host is unreacheable
"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Reconnaissance List Remote Services - sysmon]
description = An adversary might use WMI to check if a certain Remote Service is running on a remote device.
When the test completes, a service information will be displayed on the screen if it exists.
A common feedback message is that 'No instance(s) Available' if the service queried is not running.
A common error message is 'Node - (provided IP or default) ERROR Description =The RPC server is unavailable' if the provided remote host is unreacheable

search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\WMIC.exe" OR OriginalFileName="wmic.exe") (CommandLine="*/node:*" CommandLine="*service*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Reconnaissance List Remote Services" | eval sigma_description="An adversary might use WMI to check if a certain Remote Service is running on a remote device.
When the test completes, a service information will be displayed on the screen if it exists.
A common feedback message is that 'No instance(s) Available' if the service queried is not running.
A common error message is 'Node - (provided IP or default) ERROR Description =The RPC server is unavailable' if the provided remote host is unreacheable
"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Service Start/Stop - winevent]
description = Detects usage of wmic to start or stop a service
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="wmic.exe" OR New_Process_Name="*\\WMIC.exe") (Process_Command_Line="* service *" Process_Command_Line="* call *" (Process_Command_Line="*stopservice*" OR Process_Command_Line="*startservice*"))) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMIC Service Start/Stop" | eval sigma_description="Detects usage of wmic to start or stop a service"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Service Start/Stop - sysmon]
description = Detects usage of wmic to start or stop a service
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="wmic.exe" OR Image="*\\WMIC.exe") (CommandLine="* service *" CommandLine="* call *" (CommandLine="*stopservice*" OR CommandLine="*startservice*"))) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMIC Service Start/Stop" | eval sigma_description="Detects usage of wmic to start or stop a service"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Unquoted Services Path Lookup - winevent]
description = Detects wmic known recon method to look for unquoted serivce paths, often used by pentest and attackers enum scripts
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (OriginalFileName="wmic.exe" OR New_Process_Name="*\\WMIC.exe") (Process_Command_Line="* service *" Process_Command_Line="* get *" (Process_Command_Line="*name*" OR Process_Command_Line="*displayname*" OR Process_Command_Line="*pathname*" OR Process_Command_Line="*startmode*"))) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMIC Unquoted Services Path Lookup" | eval sigma_description="Detects wmic known recon method to look for unquoted serivce paths, often used by pentest and attackers enum scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIC Unquoted Services Path Lookup - sysmon]
description = Detects wmic known recon method to look for unquoted serivce paths, often used by pentest and attackers enum scripts
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (OriginalFileName="wmic.exe" OR Image="*\\WMIC.exe") (CommandLine="* service *" CommandLine="* get *" (CommandLine="*name*" OR CommandLine="*displayname*" OR CommandLine="*pathname*" OR CommandLine="*startmode*"))) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMIC Unquoted Services Path Lookup" | eval sigma_description="Detects wmic known recon method to look for unquoted serivce paths, often used by pentest and attackers enum scripts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Spawning Process - winevent]
description = Detects wmiprvse spawning processes
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Creator_Process_Name="*\\WmiPrvSe.exe" NOT ((SubjectLogonId="0x3e7" OR SubjectLogonId="null") OR (Account_Name="*AUTHORI*" OR Account_Name="*AUTORI*") OR (New_Process_Name="*\\WmiPrvSE.exe" OR New_Process_Name="*\\WerFault.exe"))) NOT (NOT SubjectLogonId="*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Wmiprvse Spawning Process" | eval sigma_description="Detects wmiprvse spawning processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Spawning Process - sysmon]
description = Detects wmiprvse spawning processes
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (ParentImage="*\\WmiPrvSe.exe" NOT ((LogonId="0x3e7" OR LogonId="null") OR (User="*AUTHORI*" OR User="*AUTORI*") OR (Image="*\\WmiPrvSE.exe" OR Image="*\\WerFault.exe"))) NOT (NOT LogonId="*")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Wmiprvse Spawning Process" | eval sigma_description="Detects wmiprvse spawning processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Workflow Compiler - winevent]
description = Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\Microsoft.Workflow.Compiler.exe" OR (OriginalFileName="Microsoft.Workflow.Compiler.exe" Process_Command_Line="*.xml*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1127 attack.t1218" | eval sigma_title="Microsoft Workflow Compiler" | eval sigma_description="Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Workflow Compiler - sysmon]
description = Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\Microsoft.Workflow.Compiler.exe" OR (OriginalFileName="Microsoft.Workflow.Compiler.exe" CommandLine="*.xml*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1127 attack.t1218" | eval sigma_title="Microsoft Workflow Compiler" | eval sigma_description="Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Write Protect For Storage Disabled - winevent]
description = Looks for changes to registry to disable any write-protect property for storage devices. This could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group.
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*reg add*" Process_Command_Line="*hklm\\system\\currentcontrolset\\control*" Process_Command_Line="*write protection*" Process_Command_Line="*0*" (Process_Command_Line="*storage*" OR Process_Command_Line="*storagedevicepolicies*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562" | eval sigma_title="Write Protect For Storage Disabled" | eval sigma_description="Looks for changes to registry to disable any write-protect property for storage devices. This could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group."
dispatch.earliest_time = -24h@h
alert.track = 0

[Write Protect For Storage Disabled - sysmon]
description = Looks for changes to registry to disable any write-protect property for storage devices. This could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group.
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*reg add*" CommandLine="*hklm\\system\\currentcontrolset\\control*" CommandLine="*write protection*" CommandLine="*0*" (CommandLine="*storage*" OR CommandLine="*storagedevicepolicies*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1562" | eval sigma_title="Write Protect For Storage Disabled" | eval sigma_description="Looks for changes to registry to disable any write-protect property for storage devices. This could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group."
dispatch.earliest_time = -24h@h
alert.track = 0

[Wsreset UAC Bypass - winevent]
description = Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC
search = index=wineventlog* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WSreset.exe") | table Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002" | eval sigma_title="Wsreset UAC Bypass" | eval sigma_description="Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wsreset UAC Bypass - sysmon]
description = Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC
search = index=sysmon* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WSreset.exe") | table CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.defense_evasion attack.t1548.002" | eval sigma_title="Wsreset UAC Bypass" | eval sigma_description="Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC"
dispatch.earliest_time = -24h@h
alert.track = 0

[XORDump Use - winevent]
description = Detects suspicious use of XORDump process memory dumping utility
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\xordump.exe" OR (Process_Command_Line="* -process lsass.exe *" OR Process_Command_Line="* -m comsvcs *" OR Process_Command_Line="* -m dbghelp *" OR Process_Command_Line="* -m dbgcore *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="XORDump Use" | eval sigma_description="Detects suspicious use of XORDump process memory dumping utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[XORDump Use - sysmon]
description = Detects suspicious use of XORDump process memory dumping utility
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\xordump.exe" OR (CommandLine="* -process lsass.exe *" OR CommandLine="* -m comsvcs *" OR CommandLine="* -m dbghelp *" OR CommandLine="* -m dbgcore *"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.t1003.001" | eval sigma_title="XORDump Use" | eval sigma_description="Detects suspicious use of XORDump process memory dumping utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[XSL Script Processing - winevent]
description = Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. Rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
search = index=wineventlog* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\wmic.exe" Process_Command_Line="*/format*") OR New_Process_Name="*\\msxsl.exe") NOT ((Process_Command_Line="*/Format:List*" OR Process_Command_Line="*/Format:htable*" OR Process_Command_Line="*/Format:hform*" OR Process_Command_Line="*/Format:table*" OR Process_Command_Line="*/Format:mof*" OR Process_Command_Line="*/Format:value*" OR Process_Command_Line="*/Format:rawxml*" OR Process_Command_Line="*/Format:xml*" OR Process_Command_Line="*/Format:csv*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1220" | eval sigma_title="XSL Script Processing" | eval sigma_description="Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. Rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses."
dispatch.earliest_time = -24h@h
alert.track = 0

[XSL Script Processing - sysmon]
description = Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. Rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
search = index=sysmon* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\wmic.exe" CommandLine="*/format*") OR Image="*\\msxsl.exe") NOT ((CommandLine="*/Format:List*" OR CommandLine="*/Format:htable*" OR CommandLine="*/Format:hform*" OR CommandLine="*/Format:table*" OR CommandLine="*/Format:mof*" OR CommandLine="*/Format:value*" OR CommandLine="*/Format:rawxml*" OR CommandLine="*/Format:xml*" OR CommandLine="*/Format:csv*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1220" | eval sigma_title="XSL Script Processing" | eval sigma_description="Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. Rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses."
dispatch.earliest_time = -24h@h
alert.track = 0
