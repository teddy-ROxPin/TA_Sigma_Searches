
[Powerview Add-DomainObjectAcl DCSync AD Extend Right - builtin]
description = backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5136" LDAPDisplayName="ntSecurityDescriptor" (Value="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR Value="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR Value="*89e95b76-444d-4c62-991a-0facbeda640c*")) | eval sigma_attack_tags="attack.credential_access attack.persistence" | eval sigma_title="Powerview Add-DomainObjectAcl DCSync AD Extend Right" | eval sigma_description="backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer"
dispatch.earliest_time = -24h@h
alert.track = 0

[AD Privileged Users or Groups Reconnaissance - builtin]
description = Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4661" (ObjectType="SAM_USER" OR ObjectType="SAM_GROUP") (ObjectName="*-512" OR ObjectName="*-502" OR ObjectName="*-500" OR ObjectName="*-505" OR ObjectName="*-519" OR ObjectName="*-520" OR ObjectName="*-544" OR ObjectName="*-551" OR ObjectName="*-555" OR ObjectName="*admin*")) | eval sigma_attack_tags="attack.discovery attack.t1087" | eval sigma_title="AD Privileged Users or Groups Reconnaissance" | eval sigma_description="Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs"
dispatch.earliest_time = -24h@h
alert.track = 0

[AD Object WriteDAC Access - builtin]
description = Detects WRITE_DAC access to a domain object
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectServer="DS" AccessMask="262144" (ObjectType="19195a5b-6da0-11d0-afd3-00c04fd930c9" OR ObjectType="domainDNS")) | eval sigma_attack_tags="attack.defense_evasion attack.t1222" | eval sigma_title="AD Object WriteDAC Access" | eval sigma_description="Detects WRITE_DAC access to a domain object"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Replication from Non Machine Account - builtin]
description = Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" AccessMask="0x100" (Properties="*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*" OR Properties="*89e95b76-444d-4c62-991a-0facbeda640c*")) NOT (SubjectUserName="*$" OR SubjectUserName="MSOL_*")) | table ComputerName,SubjectDomainName,SubjectUserName | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Active Directory Replication from Non Machine Account" | eval sigma_description="Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[AD User Enumeration - builtin]
description = Detects access to a domain user from a non-machine account
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4662" (ObjectType="*bf967aba-0de6-11d0-a285-00aa003049e2*")) NOT (SubjectUserName="*$" OR SubjectUserName="MSOL_*")) | eval sigma_attack_tags="attack.discovery attack.t1087" | eval sigma_title="AD User Enumeration" | eval sigma_description="Detects access to a domain user from a non-machine account"
dispatch.earliest_time = -24h@h
alert.track = 0

[Admin User Remote Logon - builtin]
description = Detect remote login by Administrator user depending on internal pattern
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="10" AuthenticationPackageName="Negotiate" AccountName="Admin-*") | eval sigma_attack_tags="attack.lateral_movement attack.t1078 car.2016-04-005" | eval sigma_title="Admin User Remote Logon" | eval sigma_description="Detect remote login by Administrator user depending on internal pattern"
dispatch.earliest_time = -24h@h
alert.track = 0

[Access to ADMIN$ Share - builtin]
description = Detects access to $ADMIN share
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5140" ShareName="Admin$") NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.lateral_movement attack.t1077" | eval sigma_title="Access to ADMIN$ Share" | eval sigma_description="Detects access to $ADMIN share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Enabled User Right in AD to Control User Objects - builtin]
description = Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4704" (Message="*SeEnableDelegationPrivilege*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1078" | eval sigma_title="Enabled User Right in AD to Control User Objects" | eval sigma_description="Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects."
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory User Backdoors - builtin]
description = Detects scenarios where one can control another users or computers account without having to use their credentials.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4738" NOT (AllowedToDelegateTo="-")) NOT (NOT AllowedToDelegateTo="*")) OR (EventCode="5136" AttributeLDAPDisplayName="msDS-AllowedToDelegateTo")) OR (EventCode="5136" ObjectClass="user" AttributeLDAPDisplayName="servicePrincipalName")) OR (EventCode="5136" AttributeLDAPDisplayName="msDS-AllowedToActOnBehalfOfOtherIdentity"))) | eval sigma_attack_tags="attack.t1098 attack.credential_access attack.persistence" | eval sigma_title="Active Directory User Backdoors" | eval sigma_description="Detects scenarios where one can control another users or computers account without having to use their credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Weak Encryption Enabled and Kerberoast - builtin]
description = Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4738" (Message="*DES*" OR Message="*Preauth*" OR Message="*Encrypted*") (Message="*Enabled*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089" | eval sigma_title="Weak Encryption Enabled and Kerberoast" | eval sigma_description="Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access Detected via Attack Surface Reduction - builtin]
description = Detects Access to LSASS Process
search = index=* (EventCode="1121" Path="*\\lsass.exe") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="LSASS Access Detected via Attack Surface Reduction" | eval sigma_description="Detects Access to LSASS Process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Use - builtin]
description = This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)
search = index=* (Message="* mimikatz *" OR Message="* mimilib *" OR Message="* <3 eo.oe *" OR Message="* eo.oe.kiwi *" OR Message="* privilege::debug *" OR Message="* sekurlsa::logonpasswords *" OR Message="* lsadump::sam *" OR Message="* mimidrv.sys *" OR Message="* p::d *" OR Message="* s::l *") | eval sigma_attack_tags="attack.s0002 attack.t1003 attack.lateral_movement attack.credential_access car.2013-07-001 car.2019-04-004" | eval sigma_title="Mimikatz Use" | eval sigma_description="This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hacktool Ruler - builtin]
description = This events that are generated when using the hacktool Ruler by Sensepost
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((EventCode="4776") Workstation="RULER") OR ((EventCode="4624" OR EventCode="4625") WorkstationName="RULER"))) | eval sigma_attack_tags="attack.discovery attack.execution attack.t1087 attack.t1075 attack.t1114 attack.t1059" | eval sigma_title="Hacktool Ruler" | eval sigma_description="This events that are generated when using the hacktool Ruler by Sensepost"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Service Install - builtin]
description = This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET
search = index=* (source="WinEventLog:System" EventCode="7045" (ServiceName="srservice" OR ServiceName="ipvpn" OR ServiceName="hkmsvc")) | eval sigma_attack_tags="attack.persistence attack.g0010 attack.t1050" | eval sigma_title="Turla Service Install" | eval sigma_description="This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET"
dispatch.earliest_time = -24h@h
alert.track = 0

[StoneDrill Service Install - builtin]
description = This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky
search = index=* (source="WinEventLog:System" EventCode="7045" ServiceName="NtsSrv" ServiceFileName="* LocalService") | eval sigma_attack_tags="attack.persistence attack.g0064 attack.t1050" | eval sigma_title="StoneDrill Service Install" | eval sigma_description="This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla PNG Dropper Service - builtin]
description = This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018
search = index=* (source="WinEventLog:System" EventCode="7045" ServiceName="WerFaultSvc") | eval sigma_attack_tags="attack.persistence attack.g0010 attack.t1050" | eval sigma_title="Turla PNG Dropper Service" | eval sigma_description="This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Task Creation via ATSVC Named Pipe - builtin]
description = Detects remote task creation via at.exe or API interacting with ATSVC namedpipe
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="atsvc" Accesses="*WriteData*") | eval sigma_attack_tags="attack.lateral_movement attack.persistence attack.t1053 car.2013-05-004 car.2015-04-001" | eval sigma_title="Remote Task Creation via ATSVC Named Pipe" | eval sigma_description="Detects remote task creation via at.exe or API interacting with ATSVC namedpipe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audit CVE Event - builtin]
description = Detects events generated by Windows to indicate the exploitation of a known vulnerability (e.g. CVE-2020-0601)
search = index=* (source="WinEventLog:Application" Source="Microsoft-Windows-Audit-CVE") | eval sigma_attack_tags="" | eval sigma_title="Audit CVE Event" | eval sigma_description="Detects events generated by Windows to indicate the exploitation of a known vulnerability (e.g. CVE-2020-0601)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Relevant Anti-Virus Event - builtin]
description = This detection method points out highly relevant Antivirus events
search = index=* (source="WinEventLog:Application" (Message="*HTool*" OR Message="*Hacktool*" OR Message="*ASP/Backdoor*" OR Message="*JSP/Backdoor*" OR Message="*PHP/Backdoor*" OR Message="*Backdoor.ASP*" OR Message="*Backdoor.JSP*" OR Message="*Backdoor.PHP*" OR Message="*Webshell*" OR Message="*Portscan*" OR Message="*Mimikatz*" OR Message="*WinCred*" OR Message="*PlugX*" OR Message="*Korplug*" OR Message="*Pwdump*" OR Message="*Chopper*" OR Message="*WmiExec*" OR Message="*Xscan*" OR Message="*Clearlog*" OR Message="*ASPXSpy*") NOT ((Message="*Keygen*" OR Message="*Crack*"))) | eval sigma_attack_tags="" | eval sigma_title="Relevant Anti-Virus Event" | eval sigma_description="This detection method points out highly relevant Antivirus events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz DC Sync - builtin]
description = Detects Mimikatz DC sync security events
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4662" (Properties="*Replicating Directory Changes All*" OR Properties="*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*")) NOT (SubjectDomainName="Window Manager")) NOT ((SubjectUserName="NT AUTHORITY*" OR SubjectUserName="*$"))) | eval sigma_attack_tags="attack.credential_access attack.s0002 attack.t1003" | eval sigma_title="Mimikatz DC Sync" | eval sigma_description="Detects Mimikatz DC sync security events"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disabling Windows Event Auditing - builtin]
description = Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off 'Local Group Policy Object Processing' via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as 'gpedit.msc'. Please note, that disabling 'Local Group Policy Object Processing' may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4719" AuditPolicyChanges="removed") | eval sigma_attack_tags="attack.defense_evasion attack.t1054" | eval sigma_title="Disabling Windows Event Auditing" | eval sigma_description="Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off 'Local Group Policy Object Processing' via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as 'gpedit.msc'. Please note, that disabling 'Local Group Policy Object Processing' may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways."
dispatch.earliest_time = -24h@h
alert.track = 0

[DPAPI Domain Backup Key Extraction - builtin]
description = Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4662" ObjectType="SecretObject" AccessMask="0x2" ObjectName="BCKUPKEY") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="DPAPI Domain Backup Key Extraction" | eval sigma_description="Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers"
dispatch.earliest_time = -24h@h
alert.track = 0

[DPAPI Domain Master Key Backup Attempt - builtin]
description = Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4692") | table ComputerName,SubjectDomainName,SubjectUserName | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="DPAPI Domain Master Key Backup Attempt" | eval sigma_description="Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Registry Modification - builtin]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4657" ObjectName="*\\SOFTWARE\\Microsoft\\.NETFramework" ObjectValueName="ETWEnabled" NewValue="0") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="COMPlus_ETWEnabled Registry Modification" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[External Disk Drive or USB Storage Device - builtin]
description = Detects external diskdrives or plugged in USB devices
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((EventCode="6416") DeviceClassName="DiskDrive") OR DeviceDescription="USB Mass Storage Device")) | eval sigma_attack_tags="attack.t1091 attack.t1200 attack.lateral_movement attack.initial_access" | eval sigma_title="External Disk Drive or USB Storage Device" | eval sigma_description="Detects external diskdrives or plugged in USB devices"
dispatch.earliest_time = -24h@h
alert.track = 0

[Persistence and Execution at Scale via GPO Scheduled Task - builtin]
description = Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\SYSVOL" RelativeTargetName="*ScheduledTasks.xml" Accesses="*WriteData*") | eval sigma_attack_tags="attack.persistence attack.lateral_movement attack.t1053" | eval sigma_title="Persistence and Execution at Scale via GPO Scheduled Task" | eval sigma_description="Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale"
dispatch.earliest_time = -24h@h
alert.track = 0

[smbexec.py Service Installation - builtin]
description = Detects the use of smbexec.py tool by detecting a specific service installation
search = index=* (source="WinEventLog:System" EventCode="7045" ServiceName="BTOBTO" ServiceFileName="*\\execute.bat") | table ServiceName,ServiceFileName | eval sigma_attack_tags="attack.lateral_movement attack.execution attack.t1077 attack.t1035" | eval sigma_title="smbexec.py Service Installation" | eval sigma_description="Detects the use of smbexec.py tool by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Impacket SecretDump Remote Activity - builtin]
description = Detect AD credential dumping using impacket secretdump HKTL
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\ADMIN$" RelativeTargetName="SYSTEM32\\*.tmp") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Possible Impacket SecretDump Remote Activity" | eval sigma_description="Detect AD credential dumping using impacket secretdump HKTL"
dispatch.earliest_time = -24h@h
alert.track = 0

[First Time Seen Remote Named Pipe - builtin]
description = This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="\\*\\IPC$") NOT (EventCode="5145" ShareName="\\*\\IPC$" (RelativeTargetName="atsvc" OR RelativeTargetName="samr" OR RelativeTargetName="lsarpc" OR RelativeTargetName="winreg" OR RelativeTargetName="netlogon" OR RelativeTargetName="srvsvc" OR RelativeTargetName="protected_storage" OR RelativeTargetName="wkssvc" OR RelativeTargetName="browser" OR RelativeTargetName="netdfs" OR RelativeTargetName="svcctl" OR RelativeTargetName="spoolss" OR RelativeTargetName="ntsvcs" OR RelativeTargetName="LSM_API_service" OR RelativeTargetName="HydraLsPipe" OR RelativeTargetName="TermSrv_API_service" OR RelativeTargetName="MsFteWds"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1077" | eval sigma_title="First Time Seen Remote Named Pipe" | eval sigma_description="This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Access from Non System Account - builtin]
description = Detects potential mimikatz-like tools accessing LSASS from non system account
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4663" OR EventCode="4656") ObjectType="Process" ObjectName="*\\lsass.exe") NOT (SubjectUserName="*$")) | table ComputerName,ObjectName,SubjectUserName,ProcessName | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="LSASS Access from Non System Account" | eval sigma_description="Detects potential mimikatz-like tools accessing LSASS from non system account"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Service Installations - builtin]
description = Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity
search = index=* (source="WinEventLog:System" EventCode="7045" (ServiceFileName="*\\PAExec*" OR ServiceName="mssecsvc2.0" OR ServiceFileName="*net user*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1003 attack.t1035 attack.t1050 car.2013-09-005" | eval sigma_title="Malicious Service Installations" | eval sigma_description="Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WCE wceaux.dll Access - builtin]
description = Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4658" OR EventCode="4660" OR EventCode="4663") ObjectName="*\\wceaux.dll") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="WCE wceaux.dll Access" | eval sigma_description="Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Installation - builtin]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation
search = index=* (source="WinEventLog:System" ((ServiceFileName="*cmd*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*%COMSPEC%*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*rundll32*" ServiceFileName="*.dll,a*" ServiceFileName="*/p:*"))) | table ComputerName,SubjectDomainName,SubjectUserName,ServiceFileName (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" ((ServiceFileName="*cmd*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*%COMSPEC%*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*rundll32*" ServiceFileName="*.dll,a*" ServiceFileName="*/p:*"))) | table ComputerName,SubjectDomainName,SubjectUserName,ServiceFileName ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((ServiceFileName="*cmd*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*%COMSPEC%*" ServiceFileName="*/c*" ServiceFileName="*echo*" ServiceFileName="*\\pipe\\*") OR (ServiceFileName="*rundll32*" ServiceFileName="*.dll,a*" ServiceFileName="*/p:*"))) | table ComputerName,SubjectDomainName,SubjectUserName,ServiceFileName | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Installation" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC20 Lateral Movement - builtin]
description = Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\svchost.exe" New_Process_Name="*\\mmc.exe" Process_Command_Line="*-Embedding*") | eval sigma_attack_tags="attack.execution attack.t1175" | eval sigma_title="MMC20 Lateral Movement" | eval sigma_description="Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of '-Embedding' as a child of svchost.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[NetNTLM Downgrade Attack - builtin]
description = Detects post exploitation using NetNTLM downgrade attacks
search = index=* (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="13" (TargetObject="*SYSTEM\\*ControlSet*\\Control\\Lsa\\lmcompatibilitylevel" OR TargetObject="*SYSTEM\\*ControlSet*\\Control\\Lsa*\\NtlmMinClientSec" OR TargetObject="*SYSTEM\\*ControlSet*\\Control\\Lsa*\\RestrictSendingNTLMTraffic")) ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4657" ObjectName="\\REGISTRY\\MACHINE\\SYSTEM\\*ControlSet*\\Control\\Lsa*" (ObjectValueName="LmCompatibilityLevel" OR ObjectValueName="NtlmMinClientSec" OR ObjectValueName="RestrictSendingNTLMTraffic")) | eval sigma_attack_tags="attack.credential_access attack.t1212" | eval sigma_title="NetNTLM Downgrade Attack" | eval sigma_description="Detects post exploitation using NetNTLM downgrade attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[New or Renamed User Account with '$' in Attribute 'SamAccountName'. - builtin]
description = Detects possible bypass EDR and SIEM via abnormal user account name.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4720" OR EventCode="4781") UserName="*$*") | table EventCode,UserName,SubjectAccountName | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="New or Renamed User Account with '$' in Attribute 'SamAccountName'." | eval sigma_description="Detects possible bypass EDR and SIEM via abnormal user account name."
dispatch.earliest_time = -24h@h
alert.track = 0

[Successful Overpass the Hash Attempt - builtin]
description = Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="9" LogonProcessName="seclogo" AuthenticationPackageName="Negotiate") | eval sigma_attack_tags="attack.lateral_movement attack.t1075 attack.s0002" | eval sigma_title="Successful Overpass the Hash Attempt" | eval sigma_description="Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module."
dispatch.earliest_time = -24h@h
alert.track = 0

[Pass the Hash Activity 2 - builtin]
description = Detects the attack technique pass the hash which is used to move laterally inside the network
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4624" ((SubjectUserSid="S-1-0-0" LogonType="3" LogonProcessName="NtLmSsp" KeyLength="0") OR (LogonType="9" LogonProcessName="seclogo"))) NOT (AccountName="ANONYMOUS LOGON")) | eval sigma_attack_tags="attack.lateral_movement attack.t1075" | eval sigma_title="Pass the Hash Activity 2" | eval sigma_description="Detects the attack technique pass the hash which is used to move laterally inside the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pass the Hash Activity - builtin]
description = Detects the attack technique pass the hash which is used to move laterally inside the network
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (LogonType="3" LogonProcessName="NtLmSsp" WorkstationName="%Workstations%" ComputerName="%Workstations%" (EventCode="4624" OR EventCode="4625")) NOT (AccountName="ANONYMOUS LOGON")) | eval sigma_attack_tags="attack.lateral_movement attack.t1075 car.2016-04-004" | eval sigma_title="Pass the Hash Activity" | eval sigma_description="Detects the attack technique pass the hash which is used to move laterally inside the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible DC Shadow - builtin]
description = Detects DC sync via create new SPN
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4742" ServicePrincipalNames="*GC/*") OR (EventCode="5136" LDAPDisplayName="servicePrincipalName" Value="GC/*"))) | eval sigma_attack_tags="attack.credential_access attack.t1207" | eval sigma_title="Possible DC Shadow" | eval sigma_description="Detects DC sync via create new SPN"
dispatch.earliest_time = -24h@h
alert.track = 0

[Protected Storage Service Access - builtin]
description = Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="*IPC*" RelativeTargetName="protected_storage") | eval sigma_attack_tags="attack.lateral_movement attack.t1021" | eval sigma_title="Protected Storage Service Access" | eval sigma_description="Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers"
dispatch.earliest_time = -24h@h
alert.track = 0

[QuarksPwDump Clearing Access History - builtin]
description = Detects QuarksPwDump clearing access history in hive
search = index=* (source="WinEventLog:System" EventCode="16" HiveName="*\\AppData\\Local\\Temp\\SAM*" HiveName="*.dmp") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="QuarksPwDump Clearing Access History" | eval sigma_description="Detects QuarksPwDump clearing access history in hive"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Schtasks Creations - builtin]
description = Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4698") | eventstats count as val by TaskName| search val < 5 | eval sigma_attack_tags="attack.execution attack.privilege_escalation attack.persistence attack.t1053 car.2013-08-001" | eval sigma_title="Rare Schtasks Creations" | eval sigma_description="Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rare Service Installs - builtin]
description = Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services
search = index=* (source="WinEventLog:System" EventCode="7045") | eventstats count as val by ServiceFileName| search val < 5 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050 car.2013-09-005" | eval sigma_title="Rare Service Installs" | eval sigma_description="Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scanner PoC for CVE-2019-0708 RDP RCE Vuln - builtin]
description = Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4625" AccountName="AAAAAAA") | eval sigma_attack_tags="attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Scanner PoC for CVE-2019-0708 RDP RCE Vuln" | eval sigma_description="Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Login from Localhost - builtin]
description = RDP login with localhost source address may be a tunnelled login
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="10" (SourceNetworkAddress="::1" OR SourceNetworkAddress="127.0.0.1")) | eval sigma_attack_tags="attack.lateral_movement attack.t1076 car.2013-07-002" | eval sigma_title="RDP Login from Localhost" | eval sigma_description="RDP login with localhost source address may be a tunnelled login"
dispatch.earliest_time = -24h@h
alert.track = 0

[Potential RDP Exploit CVE-2019-0708 - builtin]
description = Detect suspicious error on protocol RDP, potential CVE-2019-0708
search = index=* (source="WinEventLog:System" (EventCode="56" OR EventCode="50") Source="TermDD") | eval sigma_attack_tags="attack.initial_access attack.lateral_movement attack.t1210 attack.t1190 car.2013-07-002" | eval sigma_title="Potential RDP Exploit CVE-2019-0708" | eval sigma_description="Detect suspicious error on protocol RDP, potential CVE-2019-0708"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP over Reverse SSH Tunnel WFP - builtin]
description = Detects svchost hosting RDP termsvcs communicating with the loopback address
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5156" ((SourcePort="3389" (DestinationAddress="127.*" OR DestinationAddress="::1")) OR (DestinationPort="3389" (SourceAddress="127.*" OR SourceAddress="::1")))) | eval sigma_attack_tags="attack.defense_evasion attack.command_and_control attack.lateral_movement attack.t1076 attack.t1090 car.2013-07-002" | eval sigma_title="RDP over Reverse SSH Tunnel WFP" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating with the loopback address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Register new Logon Process by Rubeus - builtin]
description = Detects potential use of Rubeus via registered new trusted logon process
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4611" LogonProcessName="User32LogonProcesss") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1208" | eval sigma_title="Register new Logon Process by Rubeus" | eval sigma_description="Detects potential use of Rubeus via registered new trusted logon process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Sessions - builtin]
description = Detects basic PowerShell Remoting by monitoring for network inbound connections to ports 5985 OR 5986
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5156" (DestPort="5985" OR DestPort="5986") LayerRTID="44") | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Remote PowerShell Sessions" | eval sigma_description="Detects basic PowerShell Remoting by monitoring for network inbound connections to ports 5985 OR 5986"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Registry Management Using Reg Utility - builtin]
description = Remote registry management using REG utility from non-admin workstation
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" RelativeTargetName="*\\winreg*") NOT (Source_Network_Address="%Admins_Workstations%")) | eval sigma_attack_tags="attack.defense_evasion attack.discovery attack.t1112 attack.t1012 attack.s0075" | eval sigma_title="Remote Registry Management Using Reg Utility" | eval sigma_description="Remote registry management using REG utility from non-admin workstation"
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Registry Hive Handle Request - builtin]
description = Detects handles requested to SAM registry hive
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ObjectType="Key" ObjectName="*\\SAM") | table ComputerName,SubjectDomainName,SubjectUserName,ProcessName,ObjectName | eval sigma_attack_tags="attack.discovery attack.t1012" | eval sigma_title="SAM Registry Hive Handle Request" | eval sigma_description="Detects handles requested to SAM registry hive"
dispatch.earliest_time = -24h@h
alert.track = 0

[SCM Database Handle Failure - builtin]
description = Detects non-system users failing to get a handle of the SCM database.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ObjectType="SC_MANAGER OBJECT" ObjectName="servicesactive" Keywords="Audit Failure" SubjectLogonId="0x3e4") | eval sigma_attack_tags="" | eval sigma_title="SCM Database Handle Failure" | eval sigma_description="Detects non-system users failing to get a handle of the SCM database."
dispatch.earliest_time = -24h@h
alert.track = 0

[SCM Database Privileged Operation - builtin]
description = Detects non-system users performing privileged operation os the SCM database
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4674" ObjectType="SC_MANAGER OBJECT" ObjectName="servicesactive" PrivilegeList="SeTakeOwnershipPrivilege" SubjectLogonId="0x3e4") | eval sigma_attack_tags="" | eval sigma_title="SCM Database Privileged Operation" | eval sigma_description="Detects non-system users performing privileged operation os the SCM database"
dispatch.earliest_time = -24h@h
alert.track = 0

[Addition of Domain Trusts - builtin]
description = Addition of domains is seldom and should be verified for legitimacy.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4706") | eval sigma_attack_tags="attack.persistence" | eval sigma_title="Addition of Domain Trusts" | eval sigma_description="Addition of domains is seldom and should be verified for legitimacy."
dispatch.earliest_time = -24h@h
alert.track = 0

[Addition of SID History to Active Directory Object - builtin]
description = An attacker can use the SID history attribute to gain additional privileges.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4765" OR EventCode="4766") OR ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4738" NOT ((SidHistory="-" OR SidHistory="%%1793"))) NOT (NOT SidHistory="*")))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1178" | eval sigma_title="Addition of SID History to Active Directory Object" | eval sigma_description="An attacker can use the SID history attribute to gain additional privileges."
dispatch.earliest_time = -24h@h
alert.track = 0

[Backup Catalog Deleted - builtin]
description = Detects backup catalog deletions
search = index=* (source="WinEventLog:Application" EventCode="524" Source="Microsoft-Windows-Backup") | eval sigma_attack_tags="attack.defense_evasion attack.t1107" | eval sigma_title="Backup Catalog Deleted" | eval sigma_description="Detects backup catalog deletions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Code Integrity Checks - builtin]
description = Code integrity failures may indicate tampered executables.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5038" OR EventCode="6281")) | eval sigma_attack_tags="attack.defense_evasion attack.t1009" | eval sigma_title="Failed Code Integrity Checks" | eval sigma_description="Code integrity failures may indicate tampered executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Server Error Failed Loading the CallOut DLL - builtin]
description = This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded
search = index=* (source="WinEventLog:System" (EventCode="1031" OR EventCode="1032" OR EventCode="1034") Source="Microsoft-Windows-DHCP-Server") | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="DHCP Server Error Failed Loading the CallOut DLL" | eval sigma_description="This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Server Loaded the CallOut DLL - builtin]
description = This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded
search = index=* (source="WinEventLog:System" EventCode="1033" Source="Microsoft-Windows-DHCP-Server") | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="DHCP Server Loaded the CallOut DLL" | eval sigma_description="This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Server Error Failed Loading the ServerLevelPluginDLL - builtin]
description = This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded
search = index=* (EventCode="150" OR EventCode="770") | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="DNS Server Error Failed Loading the ServerLevelPluginDLL" | eval sigma_description="This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Change on Directory Service Restore Mode (DSRM) Account - builtin]
description = The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4794") | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1098" | eval sigma_title="Password Change on Directory Service Restore Mode (DSRM) Account" | eval sigma_description="The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence."
dispatch.earliest_time = -24h@h
alert.track = 0

[Eventlog Cleared - builtin]
description = One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution
search = index=* (source="WinEventLog:System" EventCode="104" Source="Microsoft-Windows-Eventlog") | eval sigma_attack_tags="attack.defense_evasion attack.t1070 car.2016-04-002" | eval sigma_title="Eventlog Cleared" | eval sigma_description="One of the Windows Eventlogs has been cleared. e.g. caused by 'wevtutil cl' command execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Account Tampering - Suspicious Failed Logon Reasons - builtin]
description = This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4625" OR EventCode="4776") (Status="0xC0000072" OR Status="0xC000006F" OR Status="0xC0000070" OR Status="0xC0000413" OR Status="0xC000018C" OR Status="0xC000015B")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1078" | eval sigma_title="Account Tampering - Suspicious Failed Logon Reasons" | eval sigma_description="This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logon From Public IP - builtin]
description = A login from a public IP can indicate a misconfigured firewall or network boundary.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4625" NOT (((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Source_Network_Address="*-*" OR (Source_Network_Address="10.*" OR Source_Network_Address="192.168.*" OR Source_Network_Address="172.16.*" OR Source_Network_Address="172.17.*" OR Source_Network_Address="172.18.*" OR Source_Network_Address="172.19.*" OR Source_Network_Address="172.20.*" OR Source_Network_Address="172.21.*" OR Source_Network_Address="172.22.*" OR Source_Network_Address="172.23.*" OR Source_Network_Address="172.24.*" OR Source_Network_Address="172.25.*" OR Source_Network_Address="172.26.*" OR Source_Network_Address="172.27.*" OR Source_Network_Address="172.28.*" OR Source_Network_Address="172.29.*" OR Source_Network_Address="172.30.*" OR Source_Network_Address="172.31.*" OR Source_Network_Address="127.*" OR Source_Network_Address="169.254.*") OR Source_Network_Address="::1" OR (Source_Network_Address="fe80::*" OR Source_Network_Address="fc00::*"))))) | eval sigma_attack_tags="attack.initial_access attack.persistence attack.t1078 attack.t1190 attack.t1133" | eval sigma_title="Failed Logon From Public IP" | eval sigma_description="A login from a public IP can indicate a misconfigured firewall or network boundary."
dispatch.earliest_time = -24h@h
alert.track = 0

[Failed Logins with Different Accounts from Single Source System - builtin]
description = Detects suspicious failed logins with different user accounts from a single source system
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="529" OR EventCode="4625") UserName="*" WorkstationName="*") | eventstats dc(UserName) as val by WorkstationName | search val > 3 | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1078" | eval sigma_title="Failed Logins with Different Accounts from Single Source System" | eval sigma_description="Detects suspicious failed logins with different user accounts from a single source system"
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive Logon to Server Systems - builtin]
description = Detects interactive console logons to
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="528" OR EventCode="529" OR EventCode="4624" OR EventCode="4625") LogonType="2" (ComputerName="%ServerSystems%" OR ComputerName="%DomainControllers%")) NOT (LogonProcessName="Advapi" ComputerName="%Workstations%")) | eval sigma_attack_tags="attack.lateral_movement attack.t1078" | eval sigma_title="Interactive Logon to Server Systems" | eval sigma_description="Detects interactive console logons to"
dispatch.earliest_time = -24h@h
alert.track = 0

[Kerberos Manipulation - builtin]
description = This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="675" OR EventCode="4768" OR EventCode="4769" OR EventCode="4771") (FailureCode="0x9" OR FailureCode="0xA" OR FailureCode="0xB" OR FailureCode="0xF" OR FailureCode="0x10" OR FailureCode="0x11" OR FailureCode="0x13" OR FailureCode="0x14" OR FailureCode="0x1A" OR FailureCode="0x1F" OR FailureCode="0x21" OR FailureCode="0x22" OR FailureCode="0x23" OR FailureCode="0x24" OR FailureCode="0x26" OR FailureCode="0x27" OR FailureCode="0x28" OR FailureCode="0x29" OR FailureCode="0x2C" OR FailureCode="0x2D" OR FailureCode="0x2E" OR FailureCode="0x2F" OR FailureCode="0x31" OR FailureCode="0x32" OR FailureCode="0x3E" OR FailureCode="0x3F" OR FailureCode="0x40" OR FailureCode="0x41" OR FailureCode="0x43" OR FailureCode="0x44")) | eval sigma_attack_tags="attack.credential_access attack.t1212" | eval sigma_title="Kerberos Manipulation" | eval sigma_description="This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious LDAP-Attributes Used - builtin]
description = detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5136" AttributeValue="*" (AttributeLDAPDisplayName="primaryInternationalISDNNumber" OR AttributeLDAPDisplayName="otherFacsimileTelephoneNumber" OR AttributeLDAPDisplayName="primaryTelexNumber")) | eval sigma_attack_tags="attack.t1041 attack.persistence" | eval sigma_title="Suspicious LDAP-Attributes Used" | eval sigma_description="detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Windows ANONYMOUS LOGON Local Account Created - builtin]
description = Detects the creation of suspicious accounts simliar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720" SAMAccountName="*ANONYMOUS*LOGON*") | eval sigma_attack_tags="attack.persistence attack.t1136" | eval sigma_title="Suspicious Windows ANONYMOUS LOGON Local Account Created" | eval sigma_description="Detects the creation of suspicious accounts simliar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Generic Password Dumper Activity on LSASS - builtin]
description = Detects process handle on LSASS process with certain access mask
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4656" ObjectName="*\\lsass.exe" (AccessMask="*0x40*" OR AccessMask="*0x1400*" OR AccessMask="*0x1000*" OR AccessMask="*0x100000*" OR AccessMask="*0x1410*" OR AccessMask="*0x1010*" OR AccessMask="*0x1438*" OR AccessMask="*0x143a*" OR AccessMask="*0x1418*" OR AccessMask="*0x1f0fff*" OR AccessMask="*0x1f1fff*" OR AccessMask="*0x1f2fff*" OR AccessMask="*0x1f3fff*")) OR ((EventCode="4663" ObjectName="*\\lsass.exe" (AccessList="*4484*" OR AccessList="*4416*")) NOT ((ProcessName="*\\wmiprvse.exe" OR ProcessName="*\\taskmgr.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\lsm.exe" OR ProcessName="*\\csrss.exe" OR ProcessName="*\\wininit.exe" OR ProcessName="*\\vmtoolsd.exe"))))) | table ComputerName,SubjectDomainName,SubjectUserName,ProcessName,ProcessID | eval sigma_attack_tags="attack.credential_access attack.t1003 car.2019-04-004" | eval sigma_title="Generic Password Dumper Activity on LSASS" | eval sigma_description="Detects process handle on LSASS process with certain access mask"
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Dumper Activity on LSASS - builtin]
description = Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4656" ProcessName="C:\\Windows\\System32\\lsass.exe" AccessMask="0x705" ObjectType="SAM_DOMAIN") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Password Dumper Activity on LSASS" | eval sigma_description="Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Suspicious Execution 01 - builtin]
description = Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" (Process_Command_Line="*vbscript*" OR Process_Command_Line="*.jpg*" OR Process_Command_Line="*.png*" OR Process_Command_Line="*.lnk*" OR Process_Command_Line="*.xls*" OR Process_Command_Line="*.doc*" OR Process_Command_Line="*.zip*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="MSHTA Suspicious Execution 01" | eval sigma_description="Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Malware Protection Engine Crash - builtin]
description = This rule detects a suspicious crash of the Microsoft Malware Protection Engine
search = index=* (source="WinEventLog:Application" ((Source="Application Error" EventCode="1000") OR (Source="Windows Error Reporting" EventCode="1001")) (Message="*MsMpEng.exe*" OR Message="*mpengine.dll*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1089 attack.t1211" | eval sigma_title="Microsoft Malware Protection Engine Crash" | eval sigma_description="This rule detects a suspicious crash of the Microsoft Malware Protection Engine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity - builtin]
description = Detects activity as 'net user administrator /domain' and 'net group domain admins /domain'
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4661" AccessMask="0x2d" ((ObjectType="SAM_USER" ObjectName="S-1-5-21-*-500") OR (ObjectType="SAM_GROUP" ObjectName="S-1-5-21-*-512"))) | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1069 attack.s0039" | eval sigma_title="Reconnaissance Activity" | eval sigma_description="Detects activity as 'net user administrator /domain' and 'net group domain admins /domain'"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTLM Logon - builtin]
description = Detects logons using NTLM, which could be caused by a legacy source or attackers
search = index=* (source="Microsoft-Windows-NTLM/Operational" EventCode="8002" CallingProcessName="*") | eval sigma_attack_tags="attack.lateral_movement attack.t1075" | eval sigma_title="NTLM Logon" | eval sigma_description="Detects logons using NTLM, which could be caused by a legacy source or attackers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PsExec Execution - builtin]
description = detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145" ShareName="\\*\\IPC$" (RelativeTargetName="*-stdin" OR RelativeTargetName="*-stdout" OR RelativeTargetName="*-stderr")) NOT (EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="PSEXESVC*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1077" | eval sigma_title="Suspicious PsExec Execution" | eval sigma_description="detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Access to Sensitive File Extensions - builtin]
description = Detects known sensitive file extensions
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5145") (RelativeTargetName="*.pst" OR RelativeTargetName="*.ost" OR RelativeTargetName="*.msg" OR RelativeTargetName="*.nst" OR RelativeTargetName="*.oab" OR RelativeTargetName="*.edb" OR RelativeTargetName="*.nsf" OR RelativeTargetName="*.bak" OR RelativeTargetName="*.dmp" OR RelativeTargetName="*.kirbi" OR RelativeTargetName="*\\groups.xml" OR RelativeTargetName="*.rdp")) | table ComputerName,SubjectDomainName,SubjectUserName,RelativeTargetName | eval sigma_attack_tags="attack.collection" | eval sigma_title="Suspicious Access to Sensitive File Extensions" | eval sigma_description="Detects known sensitive file extensions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Kerberos RC4 Ticket Encryption - builtin]
description = Detects service ticket requests using RC4 encryption type
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4769" TicketOptions="0x40810000" TicketEncryptionType="0x17") NOT (ServiceName="$*")) | eval sigma_attack_tags="attack.credential_access attack.t1208" | eval sigma_title="Suspicious Kerberos RC4 Ticket Encryption" | eval sigma_description="Detects service ticket requests using RC4 encryption type"
dispatch.earliest_time = -24h@h
alert.track = 0

[RottenPotato Like Attack Pattern - builtin]
description = Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" LogonType="3" TargetUserName="ANONYMOUS_LOGON" WorkstationName="-" SourceNetworkAddress="127.0.0.1") | eval sigma_attack_tags="attack.privilege_escalation attack.credential_access attack.t1171" | eval sigma_title="RottenPotato Like Attack Pattern" | eval sigma_description="Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like"
dispatch.earliest_time = -24h@h
alert.track = 0

[SAM Dump to AppData - builtin]
description = Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers
search = index=* (source="WinEventLog:System" EventCode="16" (Message="*\\AppData\\Local\\Temp\\SAM-*.dmp *")) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="SAM Dump to AppData" | eval sigma_description="Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Secure Deletion with SDelete - builtin]
description = Detects renaming of file while deletion with SDelete tool
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4663" OR EventCode="4658") (ObjectName="*.AAA" OR ObjectName="*.ZZZ")) | eval sigma_attack_tags="attack.defense_evasion attack.t1107 attack.t1066 attack.s0195" | eval sigma_title="Secure Deletion with SDelete" | eval sigma_description="Detects renaming of file while deletion with SDelete tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Eventlog Cleared - builtin]
description = Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="517" OR EventCode="1102")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 car.2016-04-002" | eval sigma_title="Security Eventlog Cleared" | eval sigma_description="Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Unauthorized System Time Modification - builtin]
description = Detect scenarios where a potentially unauthorized application or user is modifying the system time.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4616" NOT (((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((ProcessName="C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe" OR ProcessName="C:\\Windows\\System32\\VBoxService.exe") OR (ProcessName="C:\\Windows\\System32\\svchost.exe" SubjectUserSid="S-1-5-19"))))) | eval sigma_attack_tags="attack.defense_evasion attack.t1099" | eval sigma_title="Unauthorized System Time Modification" | eval sigma_description="Detect scenarios where a potentially unauthorized application or user is modifying the system time."
dispatch.earliest_time = -24h@h
alert.track = 0

[Login with WMI - builtin]
description = Detection of logins performed with WMI
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4624" ProcessName="*\\WmiPrvSE.exe") | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Login with WMI" | eval sigma_description="Detection of logins performed with WMI"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound Kerberos Connection - builtin]
description = Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="5156" DestinationPort="88") NOT ((New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\opera.exe" OR New_Process_Name="*\\chrome.exe" OR New_Process_Name="*\\firefox.exe"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1208" | eval sigma_title="Suspicious Outbound Kerberos Connection" | eval sigma_description="Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote Service Activity via SVCCTL Named Pipe - builtin]
description = Detects remote remote service activity via remote access to the svcctl named pipe
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" ShareName="\\*\\IPC$" RelativeTargetName="svcctl" Accesses="*WriteData*") | eval sigma_attack_tags="attack.lateral_movement attack.persistence" | eval sigma_title="Remote Service Activity via SVCCTL Named Pipe" | eval sigma_description="Detects remote remote service activity via remote access to the svcctl named pipe"
dispatch.earliest_time = -24h@h
alert.track = 0

[SysKey Registry Keys Access - builtin]
description = Detects handle requests and access operations to specific registry keys to calculate the SysKey
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4656" OR EventCode="4663") ObjectType="key" (ObjectName="*lsa\\JD" OR ObjectName="*lsa\\GBG" OR ObjectName="*lsa\\Skew1" OR ObjectName="*lsa\\Data")) | eval sigma_attack_tags="attack.discovery attack.t1012" | eval sigma_title="SysKey Registry Keys Access" | eval sigma_description="Detects handle requests and access operations to specific registry keys to calculate the SysKey"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Driver Installation - builtin]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques
search = index=* (source="WinEventLog:System" EventCode="7045" ImagePath="*tap0901*") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="6" ImagePath="*tap0901*") ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4697" ImagePath="*tap0901*") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Driver Installation" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Transfering Files with Credential Data via Network Shares - builtin]
description = Transfering files with well-known filenames (sensitive files with credential data) using network shares
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="5145" (RelativeTargetName="*\\mimidrv*" OR RelativeTargetName="*\\lsass*" OR RelativeTargetName="*\\windows\\minidump\\*" OR RelativeTargetName="*\\hiberfil*" OR RelativeTargetName="*\\sqldmpr*" OR RelativeTargetName="*\\sam*" OR RelativeTargetName="*\\ntds.dit*" OR RelativeTargetName="*\\security*")) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Transfering Files with Credential Data via Network Shares" | eval sigma_description="Transfering files with well-known filenames (sensitive files with credential data) using network shares"
dispatch.earliest_time = -24h@h
alert.track = 0

[USB Device Plugged - builtin]
description = Detects plugged USB devices
search = index=* (source="Microsoft-Windows-DriverFrameworks-UserMode/Operational" (EventCode="2003" OR EventCode="2100" OR EventCode="2102")) | eval sigma_attack_tags="attack.initial_access attack.t1200" | eval sigma_title="USB Device Plugged" | eval sigma_description="Detects plugged USB devices"
dispatch.earliest_time = -24h@h
alert.track = 0

[User Added to Local Administrators - builtin]
description = This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4732" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (GroupName="Administrators" OR GroupSid="S-1-5-32-544")) NOT (SubjectUserName="*$")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1078" | eval sigma_title="User Added to Local Administrators" | eval sigma_description="This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess' - builtin]
description = The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4673" Service="LsaRegisterLogonProcess()" Keywords="0x8010000000000000") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1208" | eval sigma_title="User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess'" | eval sigma_description="The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA."
dispatch.earliest_time = -24h@h
alert.track = 0

[Local User Creation - builtin]
description = Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4720") | table EventCode,AccountName,AccountDomain | eval sigma_attack_tags="attack.persistence attack.t1136" | eval sigma_title="Local User Creation" | eval sigma_description="Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Loaded By User - builtin]
description = Detects the loading of drivers via 'SeLoadDriverPrivilege' required to load or unload a device driver. With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers. This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff.
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4673" PrivilegeList="SeLoadDriverPrivilege" Service="-") NOT ((ProcessName="*\\Windows\\System32\\Dism.exe*" OR ProcessName="*\\Windows\\System32\\rundll32.exe*" OR ProcessName="*\\Windows\\System32\\fltMC.exe*" OR ProcessName="*\\Windows\\HelpPane.exe*" OR ProcessName="*\\Windows\\System32\\mmc.exe*" OR ProcessName="*\\Windows\\System32\\svchost.exe*" OR ProcessName="*\\Windows\\System32\\wimserv.exe*" OR ProcessName="*\\procexp64.exe*" OR ProcessName="*\\procexp.exe*" OR ProcessName="*\\procmon64.exe*" OR ProcessName="*\\procmon.exe*"))) | eval sigma_attack_tags="attack.t1089 attack.defense_evasion" | eval sigma_title="Suspicious Driver Loaded By User" | eval sigma_description="Detects the loading of drivers via 'SeLoadDriverPrivilege' required to load or unload a device driver. With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers. This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff."
dispatch.earliest_time = -24h@h
alert.track = 0

[CVE-2020-0688 Exploitation via Eventlog - builtin]
description = Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688
search = index=* (source="WinEventLog:Application" (EventCode="4" Source="MSExchange Control Panel" Level="Error") "*&__VIEWSTATE=*") | eval sigma_attack_tags="attack.initial_access attack.t1190" | eval sigma_title="CVE-2020-0688 Exploitation via Eventlog" | eval sigma_description="Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688"
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts - powershell]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ((EventCode="4103" OR EventCode="400") ContextInfo="*") NOT (ContextInfo="powershell.exe" OR Message="powershell.exe")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Alternate PowerShell Hosts" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Clear PowerShell History - powershell]
description = Detects keywords that could indicate clearing PowerShell history
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ("del (Get-PSReadlineOption).HistorySavePath" OR "Set-PSReadlineOption –HistorySaveStyle SaveNothing" OR "Remove-Item (Get-PSReadlineOption).HistorySavePath" OR "rm (Get-PSReadlineOption).HistorySavePath")) | eval sigma_attack_tags="attack.defense_evasion attack.t1146" | eval sigma_title="Clear PowerShell History" | eval sigma_description="Detects keywords that could indicate clearing PowerShell history"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Create Local User - powershell]
description = Detects creation of a local user via PowerShell
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (Message="*New-LocalUser*")) | eval sigma_attack_tags="attack.execution attack.t1086 attack.persistence attack.t1136" | eval sigma_title="PowerShell Create Local User" | eval sigma_description="Detects creation of a local user via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - Powershell - powershell]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" keywords="*-Recurse*" keywords="*|*" keywords="*Compress-Archive*") | eval sigma_attack_tags="attack.exfiltration attack.t1002" | eval sigma_title="Data Compressed - Powershell" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dnscat Execution - powershell]
description = Dnscat exfiltration tool execution
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ScriptBlockText="*Start-Dnscat2*") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Dnscat Execution" | eval sigma_description="Dnscat exfiltration tool execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - powershell]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=* (source="Windows PowerShell" (EventCode="400" EngineVersion="2.*") NOT (HostVersion="2.*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1086" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Called from an Executable Version Mismatch - powershell]
description = Detects PowerShell called from an executable by the version mismatch method
search = index=* (source="Windows PowerShell" EventCode="400" (EngineVersion="2.*" OR EngineVersion="4.*" OR EngineVersion="5.*") HostVersion="3.*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1086" | eval sigma_title="PowerShell Called from an Executable Version Mismatch" | eval sigma_description="Detects PowerShell called from an executable by the version mismatch method"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Commandlets - powershell]
description = Detects Commandlet names from well-known PowerShell exploitation frameworks
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (Message="*Invoke-DllInjection*" OR Message="*Invoke-Shellcode*" OR Message="*Invoke-WmiCommand*" OR Message="*Get-GPPPassword*" OR Message="*Get-Keystrokes*" OR Message="*Get-TimedScreenshot*" OR Message="*Get-VaultCredential*" OR Message="*Invoke-CredentialInjection*" OR Message="*Invoke-Mimikatz*" OR Message="*Invoke-NinjaCopy*" OR Message="*Invoke-TokenManipulation*" OR Message="*Out-Minidump*" OR Message="*VolumeShadowCopyTools*" OR Message="*Invoke-ReflectivePEInjection*" OR Message="*Invoke-UserHunter*" OR Message="*Find-GPOLocation*" OR Message="*Invoke-ACLScanner*" OR Message="*Invoke-DowngradeAccount*" OR Message="*Get-ServiceUnquoted*" OR Message="*Get-ServiceFilePermission*" OR Message="*Get-ServicePermission*" OR Message="*Invoke-ServiceAbuse*" OR Message="*Install-ServiceBinary*" OR Message="*Get-RegAutoLogon*" OR Message="*Get-VulnAutoRun*" OR Message="*Get-VulnSchTask*" OR Message="*Get-UnattendedInstallFile*" OR Message="*Get-ApplicationHost*" OR Message="*Get-RegAlwaysInstallElevated*" OR Message="*Get-Unconstrained*" OR Message="*Add-RegBackdoor*" OR Message="*Add-ScrnSaveBackdoor*" OR Message="*Gupt-Backdoor*" OR Message="*Invoke-ADSBackdoor*" OR Message="*Enabled-DuplicateToken*" OR Message="*Invoke-PsUaCme*" OR Message="*Remove-Update*" OR Message="*Check-VM*" OR Message="*Get-LSASecret*" OR Message="*Get-PassHashes*" OR Message="*Show-TargetScreen*" OR Message="*Port-Scan*" OR Message="*Invoke-PoshRatHttp*" OR Message="*Invoke-PowerShellTCP*" OR Message="*Invoke-PowerShellWMI*" OR Message="*Add-Exfiltration*" OR Message="*Add-Persistence*" OR Message="*Do-Exfiltration*" OR Message="*Start-CaptureServer*" OR Message="*Get-ChromeDump*" OR Message="*Get-ClipboardContents*" OR Message="*Get-FoxDump*" OR Message="*Get-IndexedItem*" OR Message="*Get-Screenshot*" OR Message="*Invoke-Inveigh*" OR Message="*Invoke-NetRipper*" OR Message="*Invoke-EgressCheck*" OR Message="*Invoke-PostExfil*" OR Message="*Invoke-PSInject*" OR Message="*Invoke-RunAs*" OR Message="*MailRaider*" OR Message="*New-HoneyHash*" OR Message="*Set-MacAttribute*" OR Message="*Invoke-DCSync*" OR Message="*Invoke-PowerDump*" OR Message="*Exploit-Jboss*" OR Message="*Invoke-ThunderStruck*" OR Message="*Invoke-VoiceTroll*" OR Message="*Set-Wallpaper*" OR Message="*Invoke-InveighRelay*" OR Message="*Invoke-PsExec*" OR Message="*Invoke-SSHCommand*" OR Message="*Get-SecurityPackages*" OR Message="*Install-SSP*" OR Message="*Invoke-BackdoorLNK*" OR Message="*PowerBreach*" OR Message="*Get-SiteListPassword*" OR Message="*Get-System*" OR Message="*Invoke-BypassUAC*" OR Message="*Invoke-Tater*" OR Message="*Invoke-WScriptBypassUAC*" OR Message="*PowerUp*" OR Message="*PowerView*" OR Message="*Get-RickAstley*" OR Message="*Find-Fruit*" OR Message="*HTTP-Login*" OR Message="*Find-TrustedDocuments*" OR Message="*Invoke-Paranoia*" OR Message="*Invoke-WinEnum*" OR Message="*Invoke-ARPScan*" OR Message="*Invoke-PortScan*" OR Message="*Invoke-ReverseDNSLookup*" OR Message="*Invoke-SMBScanner*" OR Message="*Invoke-Mimikittenz*" OR Message="*Invoke-AllChecks*") NOT ("Get-SystemDriveInfo")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Malicious PowerShell Commandlets" | eval sigma_description="Detects Commandlet names from well-known PowerShell exploitation frameworks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Keywords - powershell]
description = Detects keywords from well-known PowerShell exploitation frameworks
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (Message="*AdjustTokenPrivileges*" OR Message="*IMAGE_NT_OPTIONAL_HDR64_MAGIC*" OR Message="*Microsoft.Win32.UnsafeNativeMethods*" OR Message="*ReadProcessMemory.Invoke*" OR Message="*SE_PRIVILEGE_ENABLED*" OR Message="*LSA_UNICODE_STRING*" OR Message="*MiniDumpWriteDump*" OR Message="*PAGE_EXECUTE_READ*" OR Message="*SECURITY_DELEGATION*" OR Message="*TOKEN_ADJUST_PRIVILEGES*" OR Message="*TOKEN_ALL_ACCESS*" OR Message="*TOKEN_ASSIGN_PRIMARY*" OR Message="*TOKEN_DUPLICATE*" OR Message="*TOKEN_ELEVATION*" OR Message="*TOKEN_IMPERSONATE*" OR Message="*TOKEN_INFORMATION_CLASS*" OR Message="*TOKEN_PRIVILEGES*" OR Message="*TOKEN_QUERY*" OR Message="*Metasploit*" OR Message="*Mimikatz*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Malicious PowerShell Keywords" | eval sigma_description="Detects keywords from well-known PowerShell exploitation frameworks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Nishang PowerShell Commandlets - powershell]
description = Detects Commandlet names and arguments from the Nishang exploitation framework
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ("Add-ConstrainedDelegationBackdoor" OR "Set-DCShadowPermissions" OR "DNS_TXT_Pwnage" OR "Execute-OnTime" OR "HTTP-Backdoor" OR "Set-RemotePSRemoting" OR "Set-RemoteWMI" OR "Invoke-AmsiBypass" OR "Out-CHM" OR "Out-HTA" OR "Out-SCF" OR "Out-SCT" OR "Out-Shortcut" OR "Out-WebQuery" OR "Out-Word" OR "Enable-Duplication" OR "Remove-Update" OR "Download-Execute-PS" OR "Download_Execute" OR "Execute-Command-MSSQL" OR "Execute-DNSTXT-Code" OR "Out-RundllCommand" OR "Copy-VSS" OR "FireBuster" OR "FireListener" OR "Get-Information" OR "Get-PassHints" OR "Get-WLAN-Keys" OR "Get-Web-Credentials" OR "Invoke-CredentialsPhish" OR "Invoke-MimikatzWDigestDowngrade" OR "Invoke-SSIDExfil" OR "Invoke-SessionGopher" OR "Keylogger" OR "Invoke-Interceptor" OR "Create-MultipleSessions" OR "Invoke-NetworkRelay" OR "Run-EXEonRemote" OR "Invoke-Prasadhak" OR "Invoke-BruteForce" OR "Password-List" OR "Invoke-JSRatRegsvr" OR "Invoke-JSRatRundll" OR "Invoke-PoshRatHttps" OR "Invoke-PowerShellIcmp" OR "Invoke-PowerShellUdp" OR "Invoke-PSGcat" OR "Invoke-PsGcatAgent" OR "Remove-PoshRat" OR "Add-Persistance" OR "ExetoText" OR "Invoke-Decode" OR "Invoke-Encode" OR "Parse_Keys" OR "Remove-Persistence" OR "StringtoBase64" OR "TexttoExe" OR "Powerpreter" OR "Nishang" OR "EncodedData" OR "DataToEncode" OR "LoggedKeys" OR "OUT-DNSTXT" OR "Jitter" OR "ExfilOption" OR "Tamper" OR "DumpCerts" OR "DumpCreds" OR "Shellcode32" OR "Shellcode64" OR "NotAllNameSpaces" OR "exfill" OR "FakeDC" OR "Exploit")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Malicious Nishang PowerShell Commandlets" | eval sigma_description="Detects Commandlet names and arguments from the Nishang exploitation framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[NTFS Alternate Data Stream - powershell]
description = Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") ("set-content" OR "add-content") "-stream") | eval sigma_attack_tags="attack.defense_evasion attack.t1096" | eval sigma_title="NTFS Alternate Data Stream" | eval sigma_description="Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging."
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Credential Prompt - powershell]
description = Detects PowerShell calling a credential prompt
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" (Message="*PromptForCredential*")) | eval sigma_attack_tags="attack.execution attack.credential_access attack.t1086" | eval sigma_title="PowerShell Credential Prompt" | eval sigma_description="Detects PowerShell calling a credential prompt"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell PSAttack - powershell]
description = Detects the use of PSAttack PowerShell hack tool
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4103" "PS ATTACK!!!") | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell PSAttack" | eval sigma_description="Detects the use of PSAttack PowerShell hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - powershell]
description = Detects remote PowerShell sessions
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (EventCode="4103" OR EventCode="400") HostName="ServerRemoteHost" HostApplication="*wsmprovhost.exe*") | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell sessions"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell ShellCode - powershell]
description = Detects Base64 encoded Shellcode
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (EventCode="4104" "*AAAAYInlM*") ("*OiCAAAAYInlM*" OR "*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.privilege_escalation attack.execution attack.t1055 attack.t1086" | eval sigma_title="PowerShell ShellCode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Download - powershell]
description = Detects suspicious PowerShell download command
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") Message="*System.Net.WebClient*" (Message="*.DownloadFile(*" OR Message="*.DownloadString(*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Download" | eval sigma_description="Detects suspicious PowerShell download command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Generic - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (" -enc " OR " -EncodedCommand ") (" -w hidden " OR " -window hidden " OR " -windowstyle hidden ") (" -noni " OR " -noninteractive ")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Invocations - Generic" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocations - Specific - powershell]
description = Detects suspicious PowerShell invocation command parameters
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (Message="* -nop -w hidden -c * [Convert]::FromBase64String*" OR Message="* -w hidden -noni -nop -c \"iex(New-Object*" OR Message="* -w hidden -ep bypass -Enc*" OR Message="*powershell.exe reg add HKCU\\software\\microsoft\\windows\\currentversion\\run*" OR Message="*bypass -noprofile -windowstyle hidden (new-object system.net.webclient).download*" OR Message="*iex(New-Object Net.WebClient).Download*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Invocations - Specific" | eval sigma_description="Detects suspicious PowerShell invocation command parameters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Keywords - powershell]
description = Detects keywords that could indicate the use of some PowerShell exploitation framework
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (Message="System.Reflection.Assembly.Load" OR Message="[System.Reflection.Assembly]::Load" OR Message="[Reflection.Assembly]::Load" OR Message="System.Reflection.AssemblyName" OR Message="Reflection.Emit.AssemblyBuilderAccess" OR Message="Runtime.InteropServices.DllImportAttribute" OR Message="SuspendThread")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Keywords" | eval sigma_description="Detects keywords that could indicate the use of some PowerShell exploitation framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell Profile.ps1 Modification - powershell]
description = Detects a change in profile.ps1 of the Powershell profile
search = index=* (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="11" TargetFilename="*\\profile.ps1*" (TargetFilename="*\\My Documents\\PowerShell\\*" OR TargetFilename="*C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation" | eval sigma_title="Powershell Profile.ps1 Modification" | eval sigma_description="Detects a change in profile.ps1 of the Powershell profile"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winlogon Helper DLL - powershell]
description = Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables.
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") EventCode="4104" ("*Set-ItemProperty*" OR "*New-Item*") "*CurrentVersion\\Winlogon*") | eval sigma_attack_tags="attack.persistence attack.t1004" | eval sigma_title="Winlogon Helper DLL" | eval sigma_description="Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables."
dispatch.earliest_time = -24h@h
alert.track = 0

[WMImplant Hack Tool - powershell]
description = Detects parameters used by WMImplant
search = index=* ((source = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR source = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:Microsoft-Windows-PowerShell/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational" OR sourcetype = "WinEventLog:PowerShellCore/Operational") (ScriptBlockText="*WMImplant*" OR ScriptBlockText="* change_user *" OR ScriptBlockText="* gen_cli *" OR ScriptBlockText="* command_exec *" OR ScriptBlockText="* disable_wdigest *" OR ScriptBlockText="* disable_winrm *" OR ScriptBlockText="* enable_wdigest *" OR ScriptBlockText="* enable_winrm *" OR ScriptBlockText="* registry_mod *" OR ScriptBlockText="* remote_posh *" OR ScriptBlockText="* sched_job *" OR ScriptBlockText="* service_mod *" OR ScriptBlockText="* process_kill *" OR ScriptBlockText="* active_users *" OR ScriptBlockText="* basic_info *" OR ScriptBlockText="* power_off *" OR ScriptBlockText="* vacant_system *" OR ScriptBlockText="* logon_events *")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMImplant Hack Tool" | eval sigma_description="Detects parameters used by WMImplant"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable in ADS - sysmon]
description = Detects the creation of an ADS data stream that contains an executable (non-empty imphash)
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="15" NOT ((Imphash="00000000000000000000000000000000") OR (NOT Imphash="*"))) | table TargetFilename,Image | eval sigma_attack_tags="attack.defense_evasion attack.t1027 attack.s0139" | eval sigma_title="Executable in ADS" | eval sigma_description="Detects the creation of an ADS data stream that contains an executable (non-empty imphash)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Alternate PowerShell Hosts Pipe - sysmon]
description = Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="17" PipeName="\\PSHost*") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe"))) | table ComputerName,User,Image,PipeName | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Alternate PowerShell Hosts Pipe" | eval sigma_description="Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Tunnel Technique from MuddyWater - sysmon]
description = Detecting DNS tunnel activity for Muddywater actor
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe") (ParentImage="*\\excel.exe") (CommandLine="*DataExchange.dll*")) | eval sigma_attack_tags="attack.command_and_control attack.t1071" | eval sigma_title="DNS Tunnel Technique from MuddyWater" | eval sigma_description="Detecting DNS tunnel activity for Muddywater actor"
dispatch.earliest_time = -24h@h
alert.track = 0

[OceanLotus Registry Activity - sysmon]
description = Detects registry keys created in OceanLotus (also known as APT32) attacks
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="HKCR\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model" OR TargetObject="HKU\\*_Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model" OR TargetObject="*\\SOFTWARE\\App\\AppXbf13d4ea2945444d8b13e2121cb6b663\\Application" OR TargetObject="*\\SOFTWARE\\App\\AppXbf13d4ea2945444d8b13e2121cb6b663\\DefaultIcon" OR TargetObject="*\\SOFTWARE\\App\\AppX70162486c7554f7f80f481985d67586d\\Application" OR TargetObject="*\\SOFTWARE\\App\\AppX70162486c7554f7f80f481985d67586d\\DefaultIcon" OR TargetObject="*\\SOFTWARE\\App\\AppX37cc7fdccd644b4f85f4b22d5a3f105a\\Application" OR TargetObject="*\\SOFTWARE\\App\\AppX37cc7fdccd644b4f85f4b22d5a3f105a\\DefaultIcon" OR TargetObject="HKU\\*_Classes\\AppXc52346ec40fb4061ad96be0e6cb7d16a\\*" OR TargetObject="HKU\\*_Classes\\AppX3bbba44c6cae4d9695755183472171e2\\*" OR TargetObject="HKU\\*_Classes\\CLSID\\{E3517E26-8E93-458D-A6DF-8030BC80528B}\\*")) | eval sigma_attack_tags="attack.t1112" | eval sigma_title="OceanLotus Registry Activity" | eval sigma_description="Detects registry keys created in OceanLotus (also known as APT32) attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Pandemic Registry Key - sysmon]
description = Detects Pandemic Windows Implant
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="HKLM\\SYSTEM\\CurrentControlSet\\services\\null\\Instance*")) | table EventCode,CommandLine,ParentCommandLine,Image,User,TargetObject (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Command="loaddll -a *") | table EventCode,CommandLine,ParentCommandLine,Image,User,TargetObject | eval sigma_attack_tags="attack.lateral_movement attack.t1105" | eval sigma_title="Pandemic Registry Key" | eval sigma_description="Detects Pandemic Windows Implant"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Named Pipes - sysmon]
description = Detects a named pipe used by Turla group samples
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="17" OR EventCode="18") (PipeName="\\atctl" OR PipeName="\\userpipe" OR PipeName="\\iehelper" OR PipeName="\\sdlrpc" OR PipeName="\\comnap")) | eval sigma_attack_tags="attack.g0010" | eval sigma_title="Turla Group Named Pipes" | eval sigma_description="Detects a named pipe used by Turla group samples"
dispatch.earliest_time = -24h@h
alert.track = 0

[Autorun Keys Modification - sysmon]
description = Detects modification of autostart extensibility point (ASEP) in registry
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR TargetObject="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR TargetObject="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR TargetObject="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR TargetObject="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR TargetObject="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR TargetObject="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR TargetObject="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR TargetObject="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*")) | eval sigma_attack_tags="attack.persistence attack.t1060" | eval sigma_title="Autorun Keys Modification" | eval sigma_description="Detects modification of autostart extensibility point (ASEP) in registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[CACTUSTORCH Remote Thread Creation - sysmon]
description = Detects remote thread creation from CACTUSTORCH as described in references.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="8" (SourceImage="*\\System32\\cscript.exe" OR SourceImage="*\\System32\\wscript.exe" OR SourceImage="*\\System32\\mshta.exe" OR SourceImage="*\\winword.exe" OR SourceImage="*\\excel.exe") TargetImage="*\\SysWOW64\\*" NOT StartModule="*") | eval sigma_attack_tags="attack.execution attack.t1055 attack.t1064" | eval sigma_title="CACTUSTORCH Remote Thread Creation" | eval sigma_description="Detects remote thread creation from CACTUSTORCH as described in references."
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP Execution - sysmon]
description = Detects various indicators of Microsoft Connection Manager Profile Installer execution
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="12" TargetObject="*\\cmmgr32.exe*" EventType="CreateKey") OR (EventCode="13" TargetObject="*\\cmmgr32.exe*") OR (EventCode="10" CallTrace="*cmlua.dll*"))) | table CommandLine,ParentCommandLine,Details (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\cmstp.exe") | table CommandLine,ParentCommandLine,Details | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1191 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP Execution" | eval sigma_description="Detects various indicators of Microsoft Connection Manager Profile Installer execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[CobaltStrike Process Injection - sysmon]
description = Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="8" (TargetProcessAddress="*0B80" OR TargetProcessAddress="*0C7C" OR TargetProcessAddress="*0C88")) | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="CobaltStrike Process Injection" | eval sigma_description="Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons"
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateRemoteThread API and LoadLibrary - sysmon]
description = Detects potential use of CreateRemoteThread api and LoadLibrary function to inject DLL into a process
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="8" StartModule="*\\kernel32.dll" StartFunction="LoadLibraryA") | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="CreateRemoteThread API and LoadLibrary" | eval sigma_description="Detects potential use of CreateRemoteThread api and LoadLibrary function to inject DLL into a process"
dispatch.earliest_time = -24h@h
alert.track = 0

[File Created with System Process Name - sysmon]
description = Detects the creation of a executable with a sytem process name in a suspicious folder
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="11" (TargetFilename="*\\svchost.exe" OR TargetFilename="*\\rundll32.exe" OR TargetFilename="*\\services.exe" OR TargetFilename="*\\powershell.exe" OR TargetFilename="*\\regsvr32.exe" OR TargetFilename="*\\spoolsv.exe" OR TargetFilename="*\\lsass.exe" OR TargetFilename="*\\smss.exe" OR TargetFilename="*\\csrss.exe" OR TargetFilename="*\\conhost.exe" OR TargetFilename="*\\wininit.exe" OR TargetFilename="*\\lsm.exe" OR TargetFilename="*\\winlogon.exe" OR TargetFilename="*\\explorer.exe" OR TargetFilename="*\\taskhost.exe" OR TargetFilename="*\\Taskmgr.exe" OR TargetFilename="*\\taskmgr.exe" OR TargetFilename="*\\sihost.exe" OR TargetFilename="*\\RuntimeBroker.exe" OR TargetFilename="*\\runtimebroker.exe" OR TargetFilename="*\\smartscreen.exe" OR TargetFilename="*\\dllhost.exe" OR TargetFilename="*\\audiodg.exe" OR TargetFilename="*\\wlanext.exe")) NOT ((TargetFilename="C:\\Windows\\System32\\*" OR TargetFilename="C:\\Windows\\system32\\*" OR TargetFilename="C:\\Windows\\SysWow64\\*" OR TargetFilename="C:\\Windows\\SysWOW64\\*" OR TargetFilename="C:\\Windows\\winsxs\\*" OR TargetFilename="C:\\Windows\\WinSxS\\*" OR TargetFilename="\\SystemRoot\\System32\\*"))) | table Image | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="File Created with System Process Name" | eval sigma_description="Detects the creation of a executable with a sytem process name in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Credentials Dumping Tools Accessing LSASS Memory - sysmon]
description = Detects process access LSASS memory which is typical for credentials dumping tools
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="10" TargetImage="*\\lsass.exe" (GrantedAccess="*0x40*" OR GrantedAccess="*0x1000*" OR GrantedAccess="*0x1400*" OR GrantedAccess="*0x100000*" OR GrantedAccess="*0x1410*" OR GrantedAccess="*0x1010*" OR GrantedAccess="*0x1438*" OR GrantedAccess="*0x143a*" OR GrantedAccess="*0x1418*" OR GrantedAccess="*0x1f0fff*" OR GrantedAccess="*0x1f1fff*" OR GrantedAccess="*0x1f2fff*" OR GrantedAccess="*0x1f3fff*")) NOT ((ProcessName="*\\wmiprvse.exe" OR ProcessName="*\\taskmgr.exe" OR ProcessName="*\\procexp64.exe" OR ProcessName="*\\procexp.exe" OR ProcessName="*\\lsm.exe" OR ProcessName="*\\csrss.exe" OR ProcessName="*\\wininit.exe" OR ProcessName="*\\vmtoolsd.exe"))) | table ComputerName,User,SourceImage | eval sigma_attack_tags="attack.t1003 attack.s0002 attack.credential_access car.2019-04-004" | eval sigma_title="Credentials Dumping Tools Accessing LSASS Memory" | eval sigma_description="Detects process access LSASS memory which is typical for credentials dumping tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cred Dump Tools Dropped Files - sysmon]
description = Files with well-known filenames (parts of credential dump software or files produced by them) creation
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" (TargetFilename="*\\pwdump*" OR TargetFilename="*\\kirbi*" OR TargetFilename="*\\pwhashes*" OR TargetFilename="*\\wce_ccache*" OR TargetFilename="*\\wce_krbtkts*" OR TargetFilename="*\\fgdump-log*") (TargetFilename="*\\test.pwd" OR TargetFilename="*\\lsremora64.dll" OR TargetFilename="*\\lsremora.dll" OR TargetFilename="*\\fgexec.exe" OR TargetFilename="*\\wceaux.dll" OR TargetFilename="*\\SAM.out" OR TargetFilename="*\\SECURITY.out" OR TargetFilename="*\\SYSTEM.out" OR TargetFilename="*\\NTDS.out" OR TargetFilename="*\\DumpExt.dll" OR TargetFilename="*\\DumpSvc.exe" OR TargetFilename="*\\cachedump64.exe" OR TargetFilename="*\\cachedump.exe" OR TargetFilename="*\\pstgdump.exe" OR TargetFilename="*\\servpw.exe" OR TargetFilename="*\\servpw64.exe" OR TargetFilename="*\\pwdump.exe" OR TargetFilename="*\\procdump64.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Cred Dump Tools Dropped Files" | eval sigma_description="Files with well-known filenames (parts of credential dump software or files produced by them) creation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cred Dump-Tools Named Pipes - sysmon]
description = Detects well-known credential dumping tools execution via specific named pipes
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="17" (PipeName="*\\lsadump*" OR PipeName="*\\cachedump*" OR PipeName="*\\wceservicepipe*")) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Cred Dump-Tools Named Pipes" | eval sigma_description="Detects well-known credential dumping tools execution via specific named pipes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious New Printer Ports in Registry (CVE-2020-1048) - sysmon]
description = Detects a new and suspicious printer port creation in Registry that could be an attempt to exploit CVE-2020-1048
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="12" OR EventCode="13") TargetObject="HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Ports*" (EventType="SetValue" OR EventType="DeleteValue" OR EventType="CreateValue") (Details="*.dll*" OR Details="*.exe*" OR Details="*.bat*" OR Details="*.com*" OR Details="*C:*")) | eval sigma_attack_tags="attack.persistence attack.execution" | eval sigma_title="Suspicious New Printer Ports in Registry (CVE-2020-1048)" | eval sigma_description="Detects a new and suspicious printer port creation in Registry that could be an attempt to exploit CVE-2020-1048"
dispatch.earliest_time = -24h@h
alert.track = 0

[DHCP Callout DLL Installation - sysmon]
description = Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\Services\\DHCPServer\\Parameters\\CalloutDlls" OR TargetObject="*\\Services\\DHCPServer\\Parameters\\CalloutEnabled")) | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1112" | eval sigma_title="DHCP Callout DLL Installation" | eval sigma_description="Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable Security Events Logging Adding Reg Key MiniNt - sysmon]
description = Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="12" TargetObject="HKLM\\SYSTEM\\CurrentControlSet\\Control\\MiniNt" EventType="CreateKey") OR (EventCode="14" NewName="HKLM\\SYSTEM\\CurrentControlSet\\Control\\MiniNt"))) | table EventCode,Image,TargetObject,NewName | eval sigma_attack_tags="attack.defense_evasion attack.t1089" | eval sigma_title="Disable Security Events Logging Adding Reg Key MiniNt" | eval sigma_description="Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events."
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS ServerLevelPluginDll Install - sysmon]
description = Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="*\\services\\DNS\\Parameters\\ServerLevelPluginDll") | table EventCode,CommandLine,ParentCommandLine,Image,User,TargetObject (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="dnscmd.exe /config /serverlevelplugindll *") | table EventCode,CommandLine,ParentCommandLine,Image,User,TargetObject | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="DNS ServerLevelPluginDll Install" | eval sigma_description="Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)"
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Registry Modification - sysmon]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="*SOFTWARE\\Microsoft\\.NETFramework\\ETWEnabled" Details="DWORD (0x00000000)") | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="COMPlus_ETWEnabled Registry Modification" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of SafetyKatz - sysmon]
description = Detects possible SafetyKatz Behaviour
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" TargetFilename="*\\Temp\\debug.bin") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Detection of SafetyKatz" | eval sigma_description="Detects possible SafetyKatz Behaviour"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dumpert Process Dumper - sysmon]
description = Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Imphash="09D278F9DE118EF09163C6140255C690") ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" TargetFilename="C:\\Windows\\Temp\\dumpert.dmp") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Dumpert Process Dumper" | eval sigma_description="Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Credential Editor - sysmon]
description = Detects the use of Windows Credential Editor (WCE)
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Imphash="a53a02b997935fd8eedcb5f7abab9b9f" OR Imphash="e96a73c7bf33a464c510ede582318bf2") OR (CommandLine="*.exe -S" ParentImage="*\\services.exe"))) ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="*Services\\WCESERVICE\\Start*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="Windows Credential Editor" | eval sigma_description="Detects the use of Windows Credential Editor (WCE)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious In-Memory Module Execution - sysmon]
description = Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display 'UNKNOWN' as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="10" ((CallTrace="C:\\Windows\\SYSTEM32\\ntdll.dll+*|C:\\Windows\\System32\\KERNELBASE.dll+*|UNKNOWN(*)" OR CallTrace="*UNKNOWN(*)|UNKNOWN(*)") OR ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CallTrace="*UNKNOWN*" (GrantedAccess="0x1F0FFF" OR GrantedAccess="0x1F1FFF" OR GrantedAccess="0x143A" OR GrantedAccess="0x1410" OR GrantedAccess="0x1010" OR GrantedAccess="0x1F2FFF" OR GrantedAccess="0x1F3FFF" OR GrantedAccess="0x1FFFFF")))) | table ComputerName,User,SourceImage,TargetImage,CallTrace | eval sigma_attack_tags="attack.privilege_escalation attack.t1055" | eval sigma_title="Suspicious In-Memory Module Execution" | eval sigma_description="Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display 'UNKNOWN' as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious."
dispatch.earliest_time = -24h@h
alert.track = 0

[In-memory PowerShell - sysmon]
description = Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's 'load powershell' extension.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="7" (ImageLoaded="*\\System.Management.Automation.Dll" OR ImageLoaded="*\\System.Management.Automation.ni.Dll")) NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\WINDOWS\\System32\\sdiagnhost.exe"))) | eval sigma_attack_tags="attack.t1086 attack.execution" | eval sigma_title="In-memory PowerShell" | eval sigma_description="Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's 'load powershell' extension."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Memory Asccess - sysmon]
description = Detects suspect access to svchost process memory such as that used by Invoke-Phantom to kill the winRM windows event logging service.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="10" TargetImage="*\\windows\\system32\\svchost.exe" GrantedAccess="0x1f3fff" (CallTrace="*unknown*")) | eval sigma_attack_tags="attack.t1089 attack.defense_evasion" | eval sigma_title="Suspect Svchost Memory Asccess" | eval sigma_description="Detects suspect access to svchost process memory such as that used by Invoke-Phantom to kill the winRM windows event logging service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Logon Scripts (UserInitMprLogonScript) - sysmon]
description = Detects creation or execution of UserInitMprLogonScript persistence method
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\userinit.exe" NOT (Image="*\\explorer.exe")) NOT ((CommandLine="*\\netlogon.bat" OR CommandLine="*\\UsrLogon.cmd"))) (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*UserInitMprLogonScript*") ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="11" OR EventCode="12" OR EventCode="13" OR EventCode="14") TargetObject="*UserInitMprLogonScript*") | eval sigma_attack_tags="attack.t1037 attack.persistence attack.lateral_movement" | eval sigma_title="Logon Scripts (UserInitMprLogonScript)" | eval sigma_description="Detects creation or execution of UserInitMprLogonScript persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dump - sysmon]
description = Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="10" TargetImage="C:\\windows\\system32\\lsass.exe" GrantedAccess="0x1fffff" (CallTrace="*dbghelp.dll*" OR CallTrace="*dbgcore.dll*")) | eval sigma_attack_tags="attack.t1003 attack.s0002 attack.credential_access" | eval sigma_title="LSASS Memory Dump" | eval sigma_description="Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dump File Creation - sysmon]
description = LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" TargetFilename="*lsass*" TargetFilename="*dmp") | table ComputerName,TargetFilename | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="LSASS Memory Dump File Creation" | eval sigma_description="LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Named Pipe - sysmon]
description = Detects the creation of a named pipe used by known APT malware
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="17" OR EventCode="18") (PipeName="\\isapi_http" OR PipeName="\\isapi_dg" OR PipeName="\\isapi_dg2" OR PipeName="\\sdlrpc" OR PipeName="\\ahexec" OR PipeName="\\winsession" OR PipeName="\\lsassw" OR PipeName="\\46a676ab7f179e511e30dd2dc41bd388" OR PipeName="\\9f81f59bc58452127884ce513865ed20" OR PipeName="\\e710f28d59aa529d6792ca6ff0ca1b34" OR PipeName="\\rpchlp_3" OR PipeName="\\NamePipe_MoreWindows" OR PipeName="\\pcheap_reuse" OR PipeName="\\msagent_*" OR PipeName="\\gruntsvc")) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Malicious Named Pipe" | eval sigma_description="Detects the creation of a named pipe used by known APT malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Typical Malware Back Connect Ports - sysmon]
description = Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" Initiated="true" (DestinationPort="4443" OR DestinationPort="2448" OR DestinationPort="8143" OR DestinationPort="1777" OR DestinationPort="1443" OR DestinationPort="243" OR DestinationPort="65535" OR DestinationPort="13506" OR DestinationPort="3360" OR DestinationPort="200" OR DestinationPort="198" OR DestinationPort="49180" OR DestinationPort="13507" OR DestinationPort="6625" OR DestinationPort="4444" OR DestinationPort="4438" OR DestinationPort="1904" OR DestinationPort="13505" OR DestinationPort="13504" OR DestinationPort="12102" OR DestinationPort="9631" OR DestinationPort="5445" OR DestinationPort="2443" OR DestinationPort="777" OR DestinationPort="13394" OR DestinationPort="13145" OR DestinationPort="12103" OR DestinationPort="5552" OR DestinationPort="3939" OR DestinationPort="3675" OR DestinationPort="666" OR DestinationPort="473" OR DestinationPort="5649" OR DestinationPort="4455" OR DestinationPort="4433" OR DestinationPort="1817" OR DestinationPort="100" OR DestinationPort="65520" OR DestinationPort="1960" OR DestinationPort="1515" OR DestinationPort="743" OR DestinationPort="700" OR DestinationPort="14154" OR DestinationPort="14103" OR DestinationPort="14102" OR DestinationPort="12322" OR DestinationPort="10101" OR DestinationPort="7210" OR DestinationPort="4040" OR DestinationPort="9943")) NOT (((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\Program Files*" OR ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*") DestinationIsIpv6="false"))))) | eval sigma_attack_tags="attack.command_and_control attack.t1043" | eval sigma_title="Suspicious Typical Malware Back Connect Ports" | eval sigma_description="Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malware Shellcode in Verclsid Target Process - sysmon]
description = Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="10" TargetImage="*\\verclsid.exe" GrantedAccess="0x1FFFFF") (CallTrace="*|UNKNOWN(*VBE7.DLL*" OR (SourceImage="*\\Microsoft Office\\*" CallTrace="*|UNKNOWN*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Malware Shellcode in Verclsid Target Process" | eval sigma_description="Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz through Windows Remote Management - sysmon]
description = Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="10" TargetImage="C:\\windows\\system32\\lsass.exe" SourceImage="C:\\Windows\\system32\\wsmprovhost.exe") | eval sigma_attack_tags="attack.credential_access attack.execution attack.t1003 attack.t1028 attack.s0005" | eval sigma_title="Mimikatz through Windows Remote Management" | eval sigma_description="Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Narrator's Feedback-Hub Persistence - sysmon]
description = Detects abusing Windows 10 Narrator's Feedback-Hub
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="12" EventType="DeleteValue" TargetObject="*\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\DelegateExecute") OR (EventCode="13" TargetObject="*\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\(Default)"))) | eval sigma_attack_tags="attack.persistence attack.t1060" | eval sigma_title="Narrator's Feedback-Hub Persistence" | eval sigma_description="Detects abusing Windows 10 Narrator's Feedback-Hub"
dispatch.earliest_time = -24h@h
alert.track = 0

[New DLL Added to AppCertDlls Registry Key - sysmon]
description = Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (((EventCode="12" OR EventCode="13") TargetObject="HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls") OR (EventCode="14" NewName="HKLM\\SYSTEM\\CurentControlSet\\Control\\Session Manager\\AppCertDlls"))) | table EventCode,Image,TargetObject,NewName | eval sigma_attack_tags="attack.persistence attack.t1182" | eval sigma_title="New DLL Added to AppCertDlls Registry Key" | eval sigma_description="Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer."
dispatch.earliest_time = -24h@h
alert.track = 0

[New DLL Added to AppInit_DLLs Registry Key - sysmon]
description = DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (((EventCode="12" OR EventCode="13") (TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls" OR TargetObject="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls")) OR (EventCode="14" (NewName="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls" OR NewName="*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls")))) | table EventCode,Image,TargetObject,NewName | eval sigma_attack_tags="attack.persistence attack.t1103" | eval sigma_title="New DLL Added to AppInit_DLLs Registry Key" | eval sigma_description="DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Notepad Making Network Connection - sysmon]
description = Detects suspicious network connection by Notepad
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" Image="*\\notepad.exe") NOT (DestinationPort="9100")) | eval sigma_attack_tags="attack.command_and_control attack.execution" | eval sigma_title="Notepad Making Network Connection" | eval sigma_description="Detects suspicious network connection by Notepad"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Add-In Loading - sysmon]
description = Detects add-ins that load when Microsoft Word or Excel starts (.wll/.xll are simply .dll fit for Word or Excel).
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" (((TargetFilename="*\\Microsoft\\Word\\Startup\\*" TargetFilename="*.wll") OR (TargetFilename="*\\Microsoft\\Excel\\Startup\\*" TargetFilename="*.xll")) OR (TargetFilename="*\\Microsoft\\Addins\\*" (TargetFilename="*.xlam" OR TargetFilename="*.xla")))) | eval sigma_attack_tags="attack.persistence attack.t1137" | eval sigma_title="Microsoft Office Add-In Loading" | eval sigma_description="Detects add-ins that load when Microsoft Word or Excel starts (.wll/.xll are simply .dll fit for Word or Excel)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Password Dumper Remote Thread in LSASS - sysmon]
description = Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage. The process in field Process is the malicious program. A single execution can lead to hundreds of events.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="8" TargetImage="C:\\Windows\\System32\\lsass.exe" NOT StartModule="*") | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="Password Dumper Remote Thread in LSASS" | eval sigma_description="Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage. The process in field Process is the malicious program. A single execution can lead to hundreds of events."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible DNS Rebinding - sysmon]
description = Detects several different DNS-answers by one domain with IPs from internal and external networks. Normally, DNS-answer contain TTL >100. (DNS-record will saved in host cache for a while TTL).
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="22" QueryName="*" QueryStatus="0" (QueryResults="(::ffff:)?10.*" OR QueryResults="(::ffff:)?192.168.*" OR QueryResults="(::ffff:)?172.16.*" OR QueryResults="(::ffff:)?172.17.*" OR QueryResults="(::ffff:)?172.18.*" OR QueryResults="(::ffff:)?172.19.*" OR QueryResults="(::ffff:)?172.20.*" OR QueryResults="(::ffff:)?172.21.*" OR QueryResults="(::ffff:)?172.22.*" OR QueryResults="(::ffff:)?172.23.*" OR QueryResults="(::ffff:)?172.24.*" OR QueryResults="(::ffff:)?172.25.*" OR QueryResults="(::ffff:)?172.26.*" OR QueryResults="(::ffff:)?172.27.*" OR QueryResults="(::ffff:)?172.28.*" OR QueryResults="(::ffff:)?172.29.*" OR QueryResults="(::ffff:)?172.30.*" OR QueryResults="(::ffff:)?172.31.*" OR QueryResults="(::ffff:)?127.*") (EventCode="22" QueryName="*" QueryStatus="0") NOT ((QueryResults="(::ffff:)?10.*" OR QueryResults="(::ffff:)?192.168.*" OR QueryResults="(::ffff:)?172.16.*" OR QueryResults="(::ffff:)?172.17.*" OR QueryResults="(::ffff:)?172.18.*" OR QueryResults="(::ffff:)?172.19.*" OR QueryResults="(::ffff:)?172.20.*" OR QueryResults="(::ffff:)?172.21.*" OR QueryResults="(::ffff:)?172.22.*" OR QueryResults="(::ffff:)?172.23.*" OR QueryResults="(::ffff:)?172.24.*" OR QueryResults="(::ffff:)?172.25.*" OR QueryResults="(::ffff:)?172.26.*" OR QueryResults="(::ffff:)?172.27.*" OR QueryResults="(::ffff:)?172.28.*" OR QueryResults="(::ffff:)?172.29.*" OR QueryResults="(::ffff:)?172.30.*" OR QueryResults="(::ffff:)?172.31.*" OR QueryResults="(::ffff:)?127.*"))) | eventstats dc(QueryName) as val by ComputerName | search val > 3 | eval sigma_attack_tags="attack.command_and_control attack.t1043" | eval sigma_title="Possible DNS Rebinding" | eval sigma_description="Detects several different DNS-answers by one domain with IPs from internal and external networks. Normally, DNS-answer contain TTL >100. (DNS-record will saved in host cache for a while TTL)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Service Permissions Weakness - sysmon]
description = Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" IntegrityLevel="Medium" TargetObject="*\\services\\*" (TargetObject="*\\ImagePath" OR TargetObject="*\\FailureCommand" OR TargetObject="*\\Parameters\\ServiceDll")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1058" | eval sigma_title="Possible Privilege Escalation via Service Permissions Weakness" | eval sigma_description="Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Execution - sysmon]
description = Detects execution of PowerShell
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" Description="system.management.automation" ImageLoaded="*system.management.automation*") | table ComputerName,Image,ProcessID,ImageLoaded | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell Execution" | eval sigma_description="Detects execution of PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious PowerShell Commandlet Names - sysmon]
description = Detects the creation of known powershell scripts for exploitation
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" (TargetFilename="*\\Invoke-DllInjection.ps1" OR TargetFilename="*\\Invoke-WmiCommand.ps1" OR TargetFilename="*\\Get-GPPPassword.ps1" OR TargetFilename="*\\Get-Keystrokes.ps1" OR TargetFilename="*\\Get-VaultCredential.ps1" OR TargetFilename="*\\Invoke-CredentialInjection.ps1" OR TargetFilename="*\\Invoke-Mimikatz.ps1" OR TargetFilename="*\\Invoke-NinjaCopy.ps1" OR TargetFilename="*\\Invoke-TokenManipulation.ps1" OR TargetFilename="*\\Out-Minidump.ps1" OR TargetFilename="*\\VolumeShadowCopyTools.ps1" OR TargetFilename="*\\Invoke-ReflectivePEInjection.ps1" OR TargetFilename="*\\Get-TimedScreenshot.ps1" OR TargetFilename="*\\Invoke-UserHunter.ps1" OR TargetFilename="*\\Find-GPOLocation.ps1" OR TargetFilename="*\\Invoke-ACLScanner.ps1" OR TargetFilename="*\\Invoke-DowngradeAccount.ps1" OR TargetFilename="*\\Get-ServiceUnquoted.ps1" OR TargetFilename="*\\Get-ServiceFilePermission.ps1" OR TargetFilename="*\\Get-ServicePermission.ps1" OR TargetFilename="*\\Invoke-ServiceAbuse.ps1" OR TargetFilename="*\\Install-ServiceBinary.ps1" OR TargetFilename="*\\Get-RegAutoLogon.ps1" OR TargetFilename="*\\Get-VulnAutoRun.ps1" OR TargetFilename="*\\Get-VulnSchTask.ps1" OR TargetFilename="*\\Get-UnattendedInstallFile.ps1" OR TargetFilename="*\\Get-WebConfig.ps1" OR TargetFilename="*\\Get-ApplicationHost.ps1" OR TargetFilename="*\\Get-RegAlwaysInstallElevated.ps1" OR TargetFilename="*\\Get-Unconstrained.ps1" OR TargetFilename="*\\Add-RegBackdoor.ps1" OR TargetFilename="*\\Add-ScrnSaveBackdoor.ps1" OR TargetFilename="*\\Gupt-Backdoor.ps1" OR TargetFilename="*\\Invoke-ADSBackdoor.ps1" OR TargetFilename="*\\Enabled-DuplicateToken.ps1" OR TargetFilename="*\\Invoke-PsUaCme.ps1" OR TargetFilename="*\\Remove-Update.ps1" OR TargetFilename="*\\Check-VM.ps1" OR TargetFilename="*\\Get-LSASecret.ps1" OR TargetFilename="*\\Get-PassHashes.ps1" OR TargetFilename="*\\Show-TargetScreen.ps1" OR TargetFilename="*\\Port-Scan.ps1" OR TargetFilename="*\\Invoke-PoshRatHttp.ps1" OR TargetFilename="*\\Invoke-PowerShellTCP.ps1" OR TargetFilename="*\\Invoke-PowerShellWMI.ps1" OR TargetFilename="*\\Add-Exfiltration.ps1" OR TargetFilename="*\\Add-Persistence.ps1" OR TargetFilename="*\\Do-Exfiltration.ps1" OR TargetFilename="*\\Start-CaptureServer.ps1" OR TargetFilename="*\\Invoke-ShellCode.ps1" OR TargetFilename="*\\Get-ChromeDump.ps1" OR TargetFilename="*\\Get-ClipboardContents.ps1" OR TargetFilename="*\\Get-FoxDump.ps1" OR TargetFilename="*\\Get-IndexedItem.ps1" OR TargetFilename="*\\Get-Screenshot.ps1" OR TargetFilename="*\\Invoke-Inveigh.ps1" OR TargetFilename="*\\Invoke-NetRipper.ps1" OR TargetFilename="*\\Invoke-EgressCheck.ps1" OR TargetFilename="*\\Invoke-PostExfil.ps1" OR TargetFilename="*\\Invoke-PSInject.ps1" OR TargetFilename="*\\Invoke-RunAs.ps1" OR TargetFilename="*\\MailRaider.ps1" OR TargetFilename="*\\New-HoneyHash.ps1" OR TargetFilename="*\\Set-MacAttribute.ps1" OR TargetFilename="*\\Invoke-DCSync.ps1" OR TargetFilename="*\\Invoke-PowerDump.ps1" OR TargetFilename="*\\Exploit-Jboss.ps1" OR TargetFilename="*\\Invoke-ThunderStruck.ps1" OR TargetFilename="*\\Invoke-VoiceTroll.ps1" OR TargetFilename="*\\Set-Wallpaper.ps1" OR TargetFilename="*\\Invoke-InveighRelay.ps1" OR TargetFilename="*\\Invoke-PsExec.ps1" OR TargetFilename="*\\Invoke-SSHCommand.ps1" OR TargetFilename="*\\Get-SecurityPackages.ps1" OR TargetFilename="*\\Install-SSP.ps1" OR TargetFilename="*\\Invoke-BackdoorLNK.ps1" OR TargetFilename="*\\PowerBreach.ps1" OR TargetFilename="*\\Get-SiteListPassword.ps1" OR TargetFilename="*\\Get-System.ps1" OR TargetFilename="*\\Invoke-BypassUAC.ps1" OR TargetFilename="*\\Invoke-Tater.ps1" OR TargetFilename="*\\Invoke-WScriptBypassUAC.ps1" OR TargetFilename="*\\PowerUp.ps1" OR TargetFilename="*\\PowerView.ps1" OR TargetFilename="*\\Get-RickAstley.ps1" OR TargetFilename="*\\Find-Fruit.ps1" OR TargetFilename="*\\HTTP-Login.ps1" OR TargetFilename="*\\Find-TrustedDocuments.ps1" OR TargetFilename="*\\Invoke-Paranoia.ps1" OR TargetFilename="*\\Invoke-WinEnum.ps1" OR TargetFilename="*\\Invoke-ARPScan.ps1" OR TargetFilename="*\\Invoke-PortScan.ps1" OR TargetFilename="*\\Invoke-ReverseDNSLookup.ps1" OR TargetFilename="*\\Invoke-SMBScanner.ps1" OR TargetFilename="*\\Invoke-Mimikittenz.ps1")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Malicious PowerShell Commandlet Names" | eval sigma_description="Detects the creation of known powershell scripts for exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Network Connections - sysmon]
description = Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" Image="*\\powershell.exe" Initiated="true") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.0.0.1") DestinationIsIpv6="false" User="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell Network Connections" | eval sigma_description="Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')"
dispatch.earliest_time = -24h@h
alert.track = 0

[QuarksPwDump Dump File - sysmon]
description = Detects a dump file written by QuarksPwDump password dumper
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" TargetFilename="*\\AppData\\Local\\Temp\\SAM-*.dmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="QuarksPwDump Dump File" | eval sigma_description="Detects a dump file written by QuarksPwDump password dumper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Raw Disk Access Using Illegitimate Tools - sysmon]
description = Raw disk access using illegitimate tools, possible defence evasion
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="9" NOT (Device="*floppy*")) NOT ((Image="*\\wmiprvse.exe" OR Image="*\\sdiagnhost.exe" OR Image="*\\searchindexer.exe" OR Image="*\\csrss.exe" OR Image="*\\defrag.exe" OR Image="*\\smss.exe" OR Image="*\\vssvc.exe" OR Image="*\\compattelrunner.exe" OR Image="*\\wininit.exe" OR Image="*\\autochk.exe" OR Image="*\\taskhost.exe" OR Image="*\\dfsrs.exe" OR Image="*\\vds.exe" OR Image="*\\lsass.exe"))) | table ComputerName,Image,ProcessID,Device | eval sigma_attack_tags="attack.defense_evasion attack.t1006" | eval sigma_title="Raw Disk Access Using Illegitimate Tools" | eval sigma_description="Raw disk access using illegitimate tools, possible defence evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Registry Modification - sysmon]
description = Detects potential malicious modification of the property value of fDenyTSConnections and UserAuthentication to enable remote desktop connections.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\UserAuthentication" OR TargetObject="*\\CurrentControlSet\\Control\\Terminal Server\\fDenyTSConnections") Details="DWORD (0x00000000)") | table ComputerName,Image,EventType,TargetObject | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="RDP Registry Modification" | eval sigma_description="Detects potential malicious modification of the property value of fDenyTSConnections and UserAuthentication to enable remote desktop connections."
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Over Reverse SSH Tunnel - sysmon]
description = Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="3" Image="*\\svchost.exe" Initiated="true" SourcePort="3389" (DestinationIp="127.*" OR DestinationIp="::1")) | eval sigma_attack_tags="attack.defense_evasion attack.command_and_control attack.t1076 car.2013-07-002" | eval sigma_title="RDP Over Reverse SSH Tunnel" | eval sigma_description="Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389"
dispatch.earliest_time = -24h@h
alert.track = 0

[RDP Sensitive Settings Changed - sysmon]
description = Detects changes to RDP terminal service sensitive settings
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\services\\TermService\\Parameters\\ServiceDll*" OR TargetObject="*\\Control\\Terminal Server\\fSingleSessionPerUser*" OR TargetObject="*\\Control\\Terminal Server\\fDenyTSConnections*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="RDP Sensitive Settings Changed" | eval sigma_description="Detects changes to RDP terminal service sensitive settings"
dispatch.earliest_time = -24h@h
alert.track = 0

[Office Security Settings Changed - sysmon]
description = Detects registry changes to Office macro settings
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="12" OR EventCode="13") (TargetObject="*\\Security\\Trusted Documents\\TrustRecords" OR TargetObject="*\\Security\\AccessVBOM" OR TargetObject="*\\Security\\VBAWarnings") (EventType="SetValue" OR EventType="DeleteValue" OR EventType="CreateValue")) | eval sigma_attack_tags="attack.defense_evasion attack.t1112" | eval sigma_title="Office Security Settings Changed" | eval sigma_description="Detects registry changes to Office macro settings"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Registry Persistence COM Key Linking - sysmon]
description = Detects COM object hijacking via TreatAs subkey
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="12" EventType="CreateKey" TargetObject="HKU\\*_Classes\\CLSID\\*\\TreatAs") | eval sigma_attack_tags="attack.persistence attack.t1122" | eval sigma_title="Windows Registry Persistence COM Key Linking" | eval sigma_description="Detects COM object hijacking via TreatAs subkey"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Registry Persistence COM Search Order Hijacking - sysmon]
description = Detects potential COM object hijacking leveraging the COM Search Order
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="13" TargetObject="HKU\\*_Classes\\CLSID\\*\\InProcServer32\\(Default)") NOT ((Details="%%systemroot%%\\system32\\*" OR Details="%%systemroot%%\\SysWow64\\*" OR Details="*\\AppData\\Local\\Microsoft\\OneDrive\\*\\FileCoAuthLib64.dll" OR Details="*\\AppData\\Local\\Microsoft\\OneDrive\\*\\FileSyncShell64.dll" OR Details="*\\AppData\\Local\\Microsoft\\TeamsMeetingAddin\\*\\Microsoft.Teams.AddinLoader.dll"))) | eval sigma_attack_tags="attack.persistence attack.t1038" | eval sigma_title="Windows Registry Persistence COM Search Order Hijacking" | eval sigma_description="Detects potential COM object hijacking leveraging the COM Search Order"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Registry Trust Record Modification - sysmon]
description = Alerts on trust record modification within the registry, indicating usage of macros
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="12" TargetObject="*TrustRecords*") | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Windows Registry Trust Record Modification" | eval sigma_description="Alerts on trust record modification within the registry, indicating usage of macros"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Network Activity - sysmon]
description = Detects network connections and DNS queries initiated by Regsvr32.exe
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" OR EventCode="22") Image="*\\regsvr32.exe") | table ComputerName,User,Image,DestinationIp,DestinationPort | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1117" | eval sigma_title="Regsvr32 Network Activity" | eval sigma_description="Detects network connections and DNS queries initiated by Regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - sysmon]
description = Detects remote PowerShell connections by monitoring network outbount connections to ports 5985 or 5986 from not network service account
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" (DestinationPort="5985" OR DestinationPort="5986")) NOT (User="NT AUTHORITY\\NETWORK SERVICE")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell connections by monitoring network outbount connections to ports 5985 or 5986 from not network service account"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rundll32 Internet Connection - sysmon]
description = Detects a rundll32 that communicates with public IP addresses
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" Image="*\\rundll32.exe" Initiated="true") NOT ((DestinationIp="10.*" OR DestinationIp="192.168.*" OR DestinationIp="172.16.*" OR DestinationIp="172.17.*" OR DestinationIp="172.18.*" OR DestinationIp="172.19.*" OR DestinationIp="172.20.*" OR DestinationIp="172.21.*" OR DestinationIp="172.22.*" OR DestinationIp="172.23.*" OR DestinationIp="172.24.*" OR DestinationIp="172.25.*" OR DestinationIp="172.26.*" OR DestinationIp="172.27.*" OR DestinationIp="172.28.*" OR DestinationIp="172.29.*" OR DestinationIp="172.30.*" OR DestinationIp="172.31.*" OR DestinationIp="127.*"))) | eval sigma_attack_tags="attack.t1085 attack.defense_evasion attack.execution" | eval sigma_title="Rundll32 Internet Connection" | eval sigma_description="Detects a rundll32 that communicates with public IP addresses"
dispatch.earliest_time = -24h@h
alert.track = 0

[Security Support Provider (SSP) Added to LSA Configuration - sysmon]
description = Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="13" (TargetObject="HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages" OR TargetObject="HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages")) NOT (Image="C:\\Windows\\system32\\msiexec.exe" OR Image="C:\\Windows\\syswow64\\MsiExec.exe")) | eval sigma_attack_tags="attack.persistence attack.t1011" | eval sigma_title="Security Support Provider (SSP) Added to LSA Configuration" | eval sigma_description="Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows."
dispatch.earliest_time = -24h@h
alert.track = 0

[Sticky Key Like Backdoor Usage - sysmon]
description = Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\\Debugger" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\\Debugger" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\Debugger" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\Magnify.exe\\Debugger" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\Narrator.exe\\Debugger" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe\\Debugger") EventType="SetValue") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\winlogon.exe") (CommandLine="*cmd.exe sethc.exe *" OR CommandLine="*cmd.exe utilman.exe *" OR CommandLine="*cmd.exe osk.exe *" OR CommandLine="*cmd.exe Magnify.exe *" OR CommandLine="*cmd.exe Narrator.exe *" OR CommandLine="*cmd.exe DisplaySwitch.exe *")) | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1015 car.2014-11-003 car.2014-11-008" | eval sigma_title="Sticky Key Like Backdoor Usage" | eval sigma_description="Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious ADSI-Cache Usage By Unknown Tool - sysmon]
description = detects the usage of ADSI (LDAP) operations by tools. This may also detect tools like LDAPFragger.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="11" TargetFilename="*\\Local\\Microsoft\\Windows\\SchCache\*.sch") NOT ((Image="*C:\\windows\\system32\\svchost.exe*" OR Image="*C:\\windows\\system32\\dllhost.exe*" OR Image="*C:\\windows\\system32\\mmc.exe*" OR Image="*C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe*"))) | eval sigma_attack_tags="attack.t1041 attack.persistence" | eval sigma_title="Suspicious ADSI-Cache Usage By Unknown Tool" | eval sigma_description="detects the usage of ADSI (LDAP) operations by tools. This may also detect tools like LDAPFragger."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious desktop.ini Action - sysmon]
description = Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="11" TargetFilename="*\\desktop.ini") NOT ((Image="C:\\Windows\\explorer.exe" OR Image="C:\\Windows\\System32\\msiexec.exe" OR Image="C:\\Windows\\System32\\mmc.exe"))) | eval sigma_attack_tags="attack.persistence attack.t1023" | eval sigma_title="Suspicious desktop.ini Action" | eval sigma_description="Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RUN Key from Download - sysmon]
description = Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (Image="*\\Downloads\\*" OR Image="*\\Temporary Internet Files\\Content.Outlook\\*" OR Image="*\\Local Settings\\Temporary Internet Files\\*") TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\*") | eval sigma_attack_tags="attack.persistence attack.t1060" | eval sigma_title="Suspicious RUN Key from Download" | eval sigma_description="Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Driver Load from Temp - sysmon]
description = Detects a driver load from a temporary directory
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="6" ImageLoaded="*\\Temp\\*") | eval sigma_attack_tags="attack.persistence attack.t1050" | eval sigma_title="Suspicious Driver Load from Temp" | eval sigma_description="Detects a driver load from a temporary directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fax Service DLL Search Order Hijack - sysmon]
description = The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="7" (Image="*fxssvc.exe") (ImageLoaded="*ualapi.dll")) NOT ((ImageLoaded="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1073 attack.t1038 attack.t1112" | eval sigma_title="Fax Service DLL Search Order Hijack" | eval sigma_description="The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Process Hollowing Image Loading - sysmon]
description = Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\notepad.exe") (ImageLoaded="*\\samlib.dll" OR ImageLoaded="*\\WinSCard.dll")) | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="Possible Process Hollowing Image Loading" | eval sigma_description="Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz"
dispatch.earliest_time = -24h@h
alert.track = 0

[DLL Load via LSASS - sysmon]
description = Detects a method to load DLL via LSASS process using an undocumented Registry key
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="12" OR EventCode="13") (TargetObject="*\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt*" OR TargetObject="*\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt*")) | eval sigma_attack_tags="attack.execution attack.t1177" | eval sigma_title="DLL Load via LSASS" | eval sigma_description="Detects a method to load DLL via LSASS process using an undocumented Registry key"
dispatch.earliest_time = -24h@h
alert.track = 0

[dotNET DLL Loaded Via Office Applications - sysmon]
description = Detects any assembly DLL being loaded by an Office Product
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="C:\\Windows\\assembly\*")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="dotNET DLL Loaded Via Office Applications" | eval sigma_description="Detects any assembly DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[CLR DLL Loaded Via Office Applications - sysmon]
description = Detects CLR DLL being loaded by an Office Product
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\clr.dll*")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="CLR DLL Loaded Via Office Applications" | eval sigma_description="Detects CLR DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[GAC DLL Loaded Via Office Applications - sysmon]
description = Detects any GAC DLL being loaded by an Office Product
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL*")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="GAC DLL Loaded Via Office Applications" | eval sigma_description="Detects any GAC DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Parsing DLL Loaded Via Office Applications - sysmon]
description = Detects DSParse DLL being loaded by an Office Product
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\dsparse.dll*")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Active Directory Parsing DLL Loaded Via Office Applications" | eval sigma_description="Detects DSParse DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[Active Directory Kerberos DLL Loaded Via Office Applications - sysmon]
description = Detects Kerberos DLL being loaded by an Office Product
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\kerberos.dll")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Active Directory Kerberos DLL Loaded Via Office Applications" | eval sigma_description="Detects Kerberos DLL being loaded by an Office Product"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Rundll32 Remote Thread Creation - sysmon]
description = Detects PowerShell remote thread creation in Rundll32.exe
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="8" SourceImage="*\\powershell.exe" TargetImage="*\\rundll32.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1085 attack.t1086" | eval sigma_title="PowerShell Rundll32 Remote Thread Creation" | eval sigma_description="Detects PowerShell remote thread creation in Rundll32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PROCEXP152.sys File Created In TMP - sysmon]
description = Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder. This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="11" TargetFilename="*\\AppData\\Local\\Temp\*\\PROCEXP152.sys") NOT ((Image="*\\procexp64.exe*" OR Image="*\\procexp.exe*" OR Image="*\\procmon64.exe*" OR Image="*\\procmon.exe*"))) | eval sigma_attack_tags="attack.t1089 attack.defense_evasion" | eval sigma_title="Suspicious PROCEXP152.sys File Created In TMP" | eval sigma_description="Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder. This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Location with Network Connections - sysmon]
description = Detects programs with network connections running in suspicious files system locations
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="3" (Image="*\\$Recycle.bin" OR Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\Public\\*" OR Image="*\\Users\\Contacts\\*" OR Image="*\\Users\\Searches\\*" OR Image="C:\\Perflogs\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Program Location with Network Connections" | eval sigma_description="Detects programs with network connections running in suspicious files system locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound RDP Connections - sysmon]
description = Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" DestinationPort="3389" Initiated="true") NOT ((Image="*\\mstsc.exe" OR Image="*\\RTSApp.exe" OR Image="*\\RTS2App.exe" OR Image="*\\RDCMan.exe" OR Image="*\\ws_TunnelService.exe" OR Image="*\\RSSensor.exe" OR Image="*\\RemoteDesktopManagerFree.exe" OR Image="*\\RemoteDesktopManager.exe" OR Image="*\\RemoteDesktopManager64.exe" OR Image="*\\mRemoteNG.exe" OR Image="*\\mRemote.exe" OR Image="*\\Terminals.exe" OR Image="*\\spiceworks-finder.exe" OR Image="*\\FSDiscovery.exe" OR Image="*\\FSAssessment.exe" OR Image="*\\MobaRTE.exe" OR Image="*\\chrome.exe" OR Image="*\\thor.exe" OR Image="*\\thor64.exe"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1210 car.2013-07-002" | eval sigma_title="Suspicious Outbound RDP Connections" | eval sigma_description="Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Persistence via Explorer Run Key - sysmon]
description = Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="*\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run" (Details="C:\\Windows\\Temp\\*" OR Details="C:\\ProgramData\\*" OR Details="*\\AppData\\*" OR Details="C:\\$Recycle.bin\\*" OR Details="C:\\Temp\\*" OR Details="C:\\Users\\Public\\*" OR Details="C:\\Users\\Default\\*")) | table Image,ParentImage | eval sigma_attack_tags="attack.persistence attack.t1060 capec.270" | eval sigma_title="Registry Persistence via Explorer Run Key" | eval sigma_description="Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[New RUN Key Pointing to Suspicious Folder - sysmon]
description = Detects suspicious new RUN key element pointing to an executable in a suspicious folder
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\*" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*") (Details="*C:\\Windows\\Temp\\*" OR Details="*C:\\$Recycle.bin\\*" OR Details="*C:\\Temp\\*" OR Details="*C:\\Users\\Public\\*" OR Details="%Public%\\*" OR Details="*C:\\Users\\Default\\*" OR Details="*C:\\Users\\Desktop\\*" OR Details="wscript*" OR Details="cscript*")) | table Image | eval sigma_attack_tags="attack.persistence attack.t1060" | eval sigma_title="New RUN Key Pointing to Suspicious Folder" | eval sigma_description="Detects suspicious new RUN key element pointing to an executable in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Installed - sysmon]
description = Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders. Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="13" (TargetObject="HKLM\\System\\CurrentControlSet\\Services\\NalDrv\\ImagePath" OR TargetObject="HKLM\\System\\CurrentControlSet\\Services\\PROCEXP152\\ImagePath")) NOT ((Image="*\\procexp64.exe*" OR Image="*\\procexp.exe*" OR Image="*\\procmon64.exe*" OR Image="*\\procmon.exe*"))) NOT ((Details="*\\WINDOWS\\system32\\Drivers\\PROCEXP152.SYS*"))) | eval sigma_attack_tags="attack.t1089 attack.defense_evasion" | eval sigma_title="Suspicious Service Installed" | eval sigma_description="Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders. Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)"
dispatch.earliest_time = -24h@h
alert.track = 0

[VBA DLL Loaded Via Microsoft Word - sysmon]
description = Detects DLL's Loaded Via Word Containing VBA Macros
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\VBE7.DLL" OR ImageLoaded="*\\VBEUI.DLL" OR ImageLoaded="*\\VBE7INTL.DLL")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="VBA DLL Loaded Via Microsoft Word" | eval sigma_description="Detects DLL's Loaded Via Word Containing VBA Macros"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Mangement Instrumentation DLL Loaded Via Microsoft Word - sysmon]
description = Detects DLL's Loaded Via Word Containing VBA Macros Executing WMI Commands
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" (Image="*\\winword.exe" OR Image="*\\powerpnt.exe" OR Image="*\\excel.exe" OR Image="*\\outlook.exe") (ImageLoaded="*\\wmiutils.dll" OR ImageLoaded="*\\wbemcomn.dll" OR ImageLoaded="*\\wbemprox.dll" OR ImageLoaded="*\\wbemdisp.dll" OR ImageLoaded="*\\wbemsvc.dll")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Windows Mangement Instrumentation DLL Loaded Via Microsoft Word" | eval sigma_description="Detects DLL's Loaded Via Word Containing VBA Macros Executing WMI Commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Load of dbghelp/dbgcore DLL from Suspicious Process - sysmon]
description = Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes. Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (((EventCode="7" (ImageLoaded="*\\dbghelp.dll" OR ImageLoaded="*\\dbgcore.dll") (Image="*\\msbuild.exe" OR Image="*\\cmd.exe" OR Image="*\\svchost.exe" OR Image="*\\rundll32.exe" OR Image="*\\powershell.exe" OR Image="*\\word.exe" OR Image="*\\excel.exe" OR Image="*\\powerpnt.exe" OR Image="*\\outlook.exe" OR Image="*\\monitoringhost.exe" OR Image="*\\wmic.exe" OR Image="*\\bash.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\schtasks.exe" OR Image="*\\dnx.exe" OR Image="*\\regsvcs.exe" OR Image="*\\sc.exe" OR Image="*\\scriptrunner.exe")) NOT (Image="*Visual Studio*")) OR ((EventCode="7" (ImageLoaded="*\\dbghelp.dll" OR ImageLoaded="*\\dbgcore.dll") Signed="FALSE") NOT (Image="*Visual Studio*")))) | table ComputerName,User,Image,ImageLoaded | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Load of dbghelp/dbgcore DLL from Suspicious Process" | eval sigma_description="Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes. Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Keyboard Layout Load - sysmon]
description = Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\Keyboard Layout\\Preload\*" OR TargetObject="*\\Keyboard Layout\\Substitutes\*") (Details="*00000429*" OR Details="*00050429*" OR Details="*0000042a*")) | eval sigma_attack_tags="" | eval sigma_title="Suspicious Keyboard Layout Load" | eval sigma_description="Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Outbound Kerberos Connection - sysmon]
description = Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="3" DestinationPort="88" Initiated="true") NOT ((Image="*\\lsass.exe" OR Image="*\\opera.exe" OR Image="*\\chrome.exe" OR Image="*\\firefox.exe"))) | eval sigma_attack_tags="attack.lateral_movement attack.t1208" | eval sigma_title="Suspicious Outbound Kerberos Connection" | eval sigma_description="Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Remote Thread Created - sysmon]
description = Offensive tradecraft is switching away from using APIs like 'CreateRemoteThread', however, this is still largely observed in the wild. This rule aims to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is a generalistic rule, but it should have a low FP ratio due to the selected range of processes.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="8" (SourceImage="*\\bash.exe" OR SourceImage="*\\cvtres.exe" OR SourceImage="*\\defrag.exe" OR SourceImage="*\\dnx.exe" OR SourceImage="*\\esentutl.exe" OR SourceImage="*\\excel.exe" OR SourceImage="*\\expand.exe" OR SourceImage="*\\explorer.exe" OR SourceImage="*\\find.exe" OR SourceImage="*\\findstr.exe" OR SourceImage="*\\forfiles.exe" OR SourceImage="*\\git.exe" OR SourceImage="*\\gpupdate.exe" OR SourceImage="*\\hh.exe" OR SourceImage="*\\iexplore.exe" OR SourceImage="*\\installutil.exe" OR SourceImage="*\\lync.exe" OR SourceImage="*\\makecab.exe" OR SourceImage="*\\mDNSResponder.exe" OR SourceImage="*\\monitoringhost.exe" OR SourceImage="*\\msbuild.exe" OR SourceImage="*\\mshta.exe" OR SourceImage="*\\msiexec.exe" OR SourceImage="*\\mspaint.exe" OR SourceImage="*\\outlook.exe" OR SourceImage="*\\ping.exe" OR SourceImage="*\\powerpnt.exe" OR SourceImage="*\\powershell.exe" OR SourceImage="*\\provtool.exe" OR SourceImage="*\\python.exe" OR SourceImage="*\\regsvr32.exe" OR SourceImage="*\\robocopy.exe" OR SourceImage="*\\runonce.exe" OR SourceImage="*\\sapcimc.exe" OR SourceImage="*\\schtasks.exe" OR SourceImage="*\\smartscreen.exe" OR SourceImage="*\\spoolsv.exe" OR SourceImage="*\\tstheme.exe" OR SourceImage="*\\userinit.exe" OR SourceImage="*\\vssadmin.exe" OR SourceImage="*\\vssvc.exe" OR SourceImage="*\\w3wp.exe*" OR SourceImage="*\\winlogon.exe" OR SourceImage="*\\winscp.exe" OR SourceImage="*\\wmic.exe" OR SourceImage="*\\word.exe" OR SourceImage="*\\wscript.exe")) NOT (SourceImage="*Visual Studio*")) | table ComputerName,User,SourceImage,TargetImage | eval sigma_attack_tags="attack.privilege_escalation attack.t1055" | eval sigma_title="Suspicious Remote Thread Created" | eval sigma_description="Offensive tradecraft is switching away from using APIs like 'CreateRemoteThread', however, this is still largely observed in the wild. This rule aims to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is a generalistic rule, but it should have a low FP ratio due to the selected range of processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Svchost DLL Search Order Hijack - sysmon]
description = IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services 'svchost.exe -k netsvcs' to gain code execution on a remote machine.
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="7" (Image="*\\svchost.exe") (ImageLoaded="*\\tsmsisrv.dll" OR ImageLoaded="*\\tsvipsrv.dll" OR ImageLoaded="*\\wlbsctrl.dll")) NOT ((ImageLoaded="C:\\Windows\\WinSxS\*"))) | eval sigma_attack_tags="attack.persistence attack.defense_evasion attack.t1073 attack.t1038 attack.t1112" | eval sigma_title="Svchost DLL Search Order Hijack" | eval sigma_description="IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services 'svchost.exe -k netsvcs' to gain code execution on a remote machine."
dispatch.earliest_time = -24h@h
alert.track = 0

[Usage of Sysinternals Tools - sysmon]
description = Detects the usage of Sysinternals Tools due to accepteula key being added to Registry
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="*\\EulaAccepted") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* -accepteula*") | eval sigma_attack_tags="" | eval sigma_title="Usage of Sysinternals Tools" | eval sigma_description="Detects the usage of Sysinternals Tools due to accepteula key being added to Registry"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hijack Legit RDP Session to Move Laterally - sysmon]
description = Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" Image="*\\mstsc.exe" TargetFilename="*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*") | eval sigma_attack_tags="" | eval sigma_title="Hijack Legit RDP Session to Move Laterally" | eval sigma_description="Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass via Event Viewer - sysmon]
description = Detects UAC bypass method using Windows event viewer
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="13" TargetObject="HKU\\*\\mscfile\\shell\\open\\command") OR ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" ParentImage="*\\eventvwr.exe") NOT (Image="*\\mmc.exe")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1088 car.2019-04-001" | eval sigma_title="UAC Bypass via Event Viewer" | eval sigma_description="Detects UAC bypass method using Windows event viewer"
dispatch.earliest_time = -24h@h
alert.track = 0

[UAC Bypass via Sdclt - sysmon]
description = Detects changes to HKCU:\Software\Classes\exefile\shell\runas\command\isolatedCommand
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="HKU\\*_Classes\\exefile\\shell\\runas\\command\\isolatedCommand") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1088 car.2019-04-001" | eval sigma_title="UAC Bypass via Sdclt" | eval sigma_description="Detects changes to HKCU:\Software\Classes\exefile\shell\runas\command\isolatedCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Unsigned Image Loaded Into LSASS Process - sysmon]
description = Loading unsigned image (DLL, EXE) into LSASS process
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" Image="*\\lsass.exe" Signed="false") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Unsigned Image Loaded Into LSASS Process" | eval sigma_description="Loading unsigned image (DLL, EXE) into LSASS process"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Webshell Creation - sysmon]
description = Possible webshell file creation on a static web site
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((((EventCode="11" TargetFilename="*\\inetpub\\wwwroot\\*" (TargetFilename="*.asp*" OR TargetFilename="*.ashx*" OR TargetFilename="*.ph*")) NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*"))) OR ((EventCode="11" (TargetFilename="*\\www\\*" OR TargetFilename="*\\htdocs\\*" OR TargetFilename="*\\html\\*") TargetFilename="*.ph*") NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*")))) OR ((EventCode="11" (TargetFilename="*.jsp" OR (TargetFilename="*\\cgi-bin\\*" TargetFilename="*.pl*"))) NOT ((TargetFilename="*\\AppData\\Local\\Temp\\*" OR TargetFilename="*\\Windows\\Temp\\*"))))) | eval sigma_attack_tags="attack.persistence attack.t1100" | eval sigma_title="Windows Webshell Creation" | eval sigma_description="Possible webshell file creation on a static web site"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Binary Github Communication - sysmon]
description = Detects an executable in the Windows folder accessing github.com
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="3" Initiated="true" (DestinationHostname="*.github.com" OR DestinationHostname="*.githubusercontent.com") Image="C:\\Windows\\*") | eval sigma_attack_tags="attack.lateral_movement attack.t1105" | eval sigma_title="Microsoft Binary Github Communication" | eval sigma_description="Detects an executable in the Windows folder accessing github.com"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Binary Suspicious Communication Endpoint - sysmon]
description = Detects an executable in the Windows folder accessing suspicious domains
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="3" Initiated="true" (DestinationHostname="*dl.dropboxusercontent.com" OR DestinationHostname="*.pastebin.com" OR DestinationHostname="*.githubusercontent.com") Image="C:\\Windows\\*") | eval sigma_attack_tags="attack.lateral_movement attack.t1105" | eval sigma_title="Microsoft Binary Suspicious Communication Endpoint" | eval sigma_description="Detects an executable in the Windows folder accessing suspicious domains"
dispatch.earliest_time = -24h@h
alert.track = 0

[Registry Persistence Mechanisms - sysmon]
description = Detects persistence registry keys
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" (TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*\\GlobalFlag" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*\\ReportingMode" OR TargetObject="*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*\\MonitorProcess") EventType="SetValue") | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.defense_evasion attack.t1183 car.2013-01-002" | eval sigma_title="Registry Persistence Mechanisms" | eval sigma_description="Detects persistence registry keys"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Event Subscription - sysmon]
description = Detects creation of WMI event subscription persistence method
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="19" OR EventCode="20" OR EventCode="21")) | eval sigma_attack_tags="attack.t1084 attack.persistence" | eval sigma_title="WMI Event Subscription" | eval sigma_description="Detects creation of WMI event subscription persistence method"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Modules Loaded - sysmon]
description = Detects non wmiprvse loading WMI modules
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="7" (ImageLoaded="*\\wmiclnt.dll" OR ImageLoaded="*\\WmiApRpl.dll" OR ImageLoaded="*\\wmiprov.dll" OR ImageLoaded="*\\wmiutils.dll" OR ImageLoaded="*\\wbemcomn.dll" OR ImageLoaded="*\\wbemprox.dll" OR ImageLoaded="*\\WMINet_Utils.dll" OR ImageLoaded="*\\wbemsvc.dll" OR ImageLoaded="*\\fastprox.dll")) NOT ((Image="*\\WmiPrvSe.exe" OR Image="*\\WmiAPsrv.exe" OR Image="*\\svchost.exe" OR Image="*\\DeviceCensus.exe" OR Image="*\\CompatTelRunner.exe" OR Image="*\\sdiagnhost.exe" OR Image="*\\SIHClient.exe"))) | table ComputerName,User,Image,ImageLoaded | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="WMI Modules Loaded" | eval sigma_description="Detects non wmiprvse loading WMI modules"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Command Line Event Consumer - sysmon]
description = Detects WMI command line event consumers
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" Image="C:\\Windows\\System32\\wbem\\WmiPrvSE.exe" ImageLoaded="wbemcons.dll") | eval sigma_attack_tags="attack.t1084 attack.persistence" | eval sigma_title="WMI Persistence - Command Line Event Consumer" | eval sigma_description="Detects WMI command line event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer File Write - sysmon]
description = Detects file writes of WMI script event consumer
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" Image="C:\\WINDOWS\\system32\\wbem\\scrcons.exe") | eval sigma_attack_tags="attack.t1084 attack.persistence" | eval sigma_title="WMI Persistence - Script Event Consumer File Write" | eval sigma_description="Detects file writes of WMI script event consumer"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Scripting in a WMI Consumer - sysmon]
description = Detects suspicious scripting in WMI Event Consumers
search = index=* ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="20" (Destination="*new-object system.net.webclient).downloadstring(*" OR Destination="*new-object system.net.webclient).downloadfile(*" OR Destination="*new-object net.webclient).downloadstring(*" OR Destination="*new-object net.webclient).downloadfile(*" OR Destination="* iex(*" OR Destination="*WScript.shell*" OR Destination="* -nop *" OR Destination="* -noprofile *" OR Destination="* -decode *" OR Destination="* -enc *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.execution" | eval sigma_title="Suspicious Scripting in a WMI Consumer" | eval sigma_description="Detects suspicious scripting in WMI Event Consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - winevent]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\advanced_ip_scanner*") | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[Advanced IP Scanner - sysmon]
description = Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\advanced_ip_scanner*") | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Advanced IP Scanner" | eval sigma_description="Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups."
dispatch.earliest_time = -24h@h
alert.track = 0

[APT29 - winevent]
description = This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*-noni -ep bypass $*") | eval sigma_attack_tags="attack.execution attack.g0016 attack.t1086" | eval sigma_title="APT29" | eval sigma_description="This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks"
dispatch.earliest_time = -24h@h
alert.track = 0

[APT29 - sysmon]
description = This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*-noni -ep bypass $*") | eval sigma_attack_tags="attack.execution attack.g0016 attack.t1086" | eval sigma_title="APT29" | eval sigma_description="This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Baby Shark Activity - winevent]
description = Detects activity that could be related to Baby Shark malware
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="reg*query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"" OR Process_Command_Line="powershell.exe mshta.exe http*" OR Process_Command_Line="cmd.exe /c taskkill /im cmd.exe")) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1086 attack.discovery attack.t1012 attack.defense_evasion attack.t1170" | eval sigma_title="Baby Shark Activity" | eval sigma_description="Detects activity that could be related to Baby Shark malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Baby Shark Activity - sysmon]
description = Detects activity that could be related to Baby Shark malware
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="reg*query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"" OR CommandLine="powershell.exe mshta.exe http*" OR CommandLine="cmd.exe /c taskkill /im cmd.exe")) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1086 attack.discovery attack.t1012 attack.defense_evasion attack.t1170" | eval sigma_title="Baby Shark Activity" | eval sigma_description="Detects activity that could be related to Baby Shark malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Credential Access Activity - winevent]
description = Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\xcopy.exe" Process_Command_Line="* /S /E /C /Q /H \\*") OR (New_Process_Name="*\\adexplorer.exe" Process_Command_Line="* -snapshot \"\" c:\\users\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1081 attack.t1003" | eval sigma_title="Judgement Panda Credential Access Activity" | eval sigma_description="Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Credential Access Activity - sysmon]
description = Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\xcopy.exe" CommandLine="* /S /E /C /Q /H \\*") OR (Image="*\\adexplorer.exe" CommandLine="* -snapshot \"\" c:\\users\\*"))) | eval sigma_attack_tags="attack.credential_access attack.t1081 attack.t1003" | eval sigma_title="Judgement Panda Credential Access Activity" | eval sigma_description="Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlueMashroom DLL Load - winevent]
description = Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\regsvr32*\\AppData\\Local\\*" OR Process_Command_Line="*\\AppData\\Local\\*,DllEntry*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1117" | eval sigma_title="BlueMashroom DLL Load" | eval sigma_description="Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report"
dispatch.earliest_time = -24h@h
alert.track = 0

[BlueMashroom DLL Load - sysmon]
description = Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\regsvr32*\\AppData\\Local\\*" OR CommandLine="*\\AppData\\Local\\*,DllEntry*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1117" | eval sigma_title="BlueMashroom DLL Load" | eval sigma_description="Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Chafer Activity - winevent]
description = Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018
search = index=* (source="WinEventLog:System" EventCode="7045" (ServiceName="SC Scheduled Scan" OR ServiceName="UpdatMachine")) ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4698" (TaskName="SC Scheduled Scan" OR TaskName="UpdatMachine")) (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="13" EventType="SetValue" ((TargetObject="*SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UMe" OR TargetObject="*SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UT") OR (TargetObject="*\\Control\\SecurityProviders\\WDigest\\UseLogonCredential" Details="DWORD (0x00000001)"))) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\Service.exe i" OR Process_Command_Line="*\\Service.exe u" OR Process_Command_Line="*\\microsoft\\Taskbar\\autoit3.exe" OR Process_Command_Line="C:\\wsc.exe*") OR New_Process_Name="*\\Windows\\Temp\\DB\\*.exe" OR (Process_Command_Line="*\\nslookup.exe -q=TXT*" Creator_Process_Name="*\\Autoit*"))) | eval sigma_attack_tags="attack.persistence attack.g0049 attack.t1053 attack.s0111 attack.defense_evasion attack.t1112" | eval sigma_title="Chafer Activity" | eval sigma_description="Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[Chafer Activity - sysmon]
description = Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018
search = index=* (source="WinEventLog:System" EventCode="7045" (ServiceName="SC Scheduled Scan" OR ServiceName="UpdatMachine")) (source="WinEventLog:Security" EventCode="4698" (TaskName="SC Scheduled Scan" OR TaskName="UpdatMachine")) ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" EventType="SetValue" ((TargetObject="*SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UMe" OR TargetObject="*SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UT") OR (TargetObject="*\\Control\\SecurityProviders\\WDigest\\UseLogonCredential" Details="DWORD (0x00000001)"))) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\Service.exe i" OR CommandLine="*\\Service.exe u" OR CommandLine="*\\microsoft\\Taskbar\\autoit3.exe" OR CommandLine="C:\\wsc.exe*") OR Image="*\\Windows\\Temp\\DB\\*.exe" OR (CommandLine="*\\nslookup.exe -q=TXT*" ParentImage="*\\Autoit*"))) | eval sigma_attack_tags="attack.persistence attack.g0049 attack.t1053 attack.s0111 attack.defense_evasion attack.t1112" | eval sigma_title="Chafer Activity" | eval sigma_description="Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIExec VBS Script - winevent]
description = Detects suspicious file execution by wscript and cscript
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cscript.exe" Process_Command_Line="*.vbs /shell *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.g0045 attack.t1064" | eval sigma_title="WMIExec VBS Script" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMIExec VBS Script - sysmon]
description = Detects suspicious file execution by wscript and cscript
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cscript.exe" CommandLine="*.vbs /shell *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.g0045 attack.t1064" | eval sigma_title="WMIExec VBS Script" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExecWin - winevent]
description = Detects CrackMapExecWin Activity as Described by NCSC
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\crackmapexec.exe")) | eval sigma_attack_tags="attack.g0035" | eval sigma_title="CrackMapExecWin" | eval sigma_description="Detects CrackMapExecWin Activity as Described by NCSC"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExecWin - sysmon]
description = Detects CrackMapExecWin Activity as Described by NCSC
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\crackmapexec.exe")) | eval sigma_attack_tags="attack.g0035" | eval sigma_title="CrackMapExecWin" | eval sigma_description="Detects CrackMapExecWin Activity as Described by NCSC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Elise Backdoor - winevent]
description = Detects Elise backdoor acitivty as used by APT32
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="C:\\Windows\\SysWOW64\\cmd.exe" Process_Command_Line="*\\Windows\\Caches\\NavShExt.dll *") OR Process_Command_Line="*\\AppData\\Roaming\\MICROS~1\\Windows\\Caches\\NavShExt.dll,Setting")) | eval sigma_attack_tags="attack.g0030 attack.g0050 attack.s0081" | eval sigma_title="Elise Backdoor" | eval sigma_description="Detects Elise backdoor acitivty as used by APT32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Elise Backdoor - sysmon]
description = Detects Elise backdoor acitivty as used by APT32
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="C:\\Windows\\SysWOW64\\cmd.exe" CommandLine="*\\Windows\\Caches\\NavShExt.dll *") OR CommandLine="*\\AppData\\Roaming\\MICROS~1\\Windows\\Caches\\NavShExt.dll,Setting")) | eval sigma_attack_tags="attack.g0030 attack.g0050 attack.s0081" | eval sigma_title="Elise Backdoor" | eval sigma_description="Detects Elise backdoor acitivty as used by APT32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emissary Panda Malware SLLauncher - winevent]
description = Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\sllauncher.exe" New_Process_Name="*\\svchost.exe") | eval sigma_attack_tags="" | eval sigma_title="Emissary Panda Malware SLLauncher" | eval sigma_description="Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emissary Panda Malware SLLauncher - sysmon]
description = Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\sllauncher.exe" Image="*\\svchost.exe") | eval sigma_attack_tags="" | eval sigma_title="Emissary Panda Malware SLLauncher" | eval sigma_description="Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire Monkey - winevent]
description = Detects EmpireMonkey APT reported Activity
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*/i:%APPDATA%\\logs.txt scrobj.dll") ((New_Process_Name="*\\cutil.exe") OR (Description="Microsoft(C) Registerserver"))) | eval sigma_attack_tags="attack.t1086 attack.execution" | eval sigma_title="Empire Monkey" | eval sigma_description="Detects EmpireMonkey APT reported Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire Monkey - sysmon]
description = Detects EmpireMonkey APT reported Activity
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*/i:%APPDATA%\\logs.txt scrobj.dll") ((Image="*\\cutil.exe") OR (Description="Microsoft(C) Registerserver"))) | eval sigma_attack_tags="attack.t1086 attack.execution" | eval sigma_title="Empire Monkey" | eval sigma_description="Detects EmpireMonkey APT reported Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Group DLL_U Load - winevent]
description = Detects a specific tool and export used by EquationGroup
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe" Process_Command_Line="*,dll_u") OR Process_Command_Line="* -export dll_u *")) | eval sigma_attack_tags="attack.execution attack.g0020 attack.t1059 attack.defense_evasion attack.t1085" | eval sigma_title="Equation Group DLL_U Load" | eval sigma_description="Detects a specific tool and export used by EquationGroup"
dispatch.earliest_time = -24h@h
alert.track = 0

[Equation Group DLL_U Load - sysmon]
description = Detects a specific tool and export used by EquationGroup
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe" CommandLine="*,dll_u") OR CommandLine="* -export dll_u *")) | eval sigma_attack_tags="attack.execution attack.g0020 attack.t1059 attack.defense_evasion attack.t1085" | eval sigma_title="Equation Group DLL_U Load" | eval sigma_description="Detects a specific tool and export used by EquationGroup"
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - winevent]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (sha1="53a44c2396d15c3a03723fa5e5db54cafd527635" OR sha1="9c5e496921e3bc882dc40694f1dcc3746a75db19" OR sha1="aeb573accfd95758550cf30bf04f389a92922844" OR sha1="79ef78a797403a4ed1a616c68e07fff868a8650a" OR sha1="4f6f38b4cec35e895d91c052b1f5a83d665c2196" OR sha1="1e8c2cac2e4ce7cbd33c3858eb2e24531cb8a84d" OR sha1="e841a63e47361a572db9a7334af459ddca11347a" OR sha1="c28f606df28a9bc8df75a4d5e5837fc5522dd34d" OR sha1="2e94b305d6812a9f96e6781c888e48c7fb157b6b" OR sha1="dd44133716b8a241957b912fa6a02efde3ce3025" OR sha1="8793bf166cb89eb55f0593404e4e933ab605e803" OR sha1="a39b57032dbb2335499a51e13470a7cd5d86b138" OR sha1="41cc2b15c662bc001c0eb92f6cc222934f0beeea" OR sha1="d209430d6af54792371174e70e27dd11d3def7a7" OR sha1="1c6452026c56efd2c94cea7e0f671eb55515edb0" OR sha1="c6b41d3afdcdcaf9f442bbe772f5da871801fd5a" OR sha1="4923d460e22fbbf165bbbaba168e5a46b8157d9f" OR sha1="f201504bd96e81d0d350c3a8332593ee1c9e09de" OR sha1="ddd2db1127632a2a52943a2fe516a2e7d05d70d2")) (EventCode="257" (QNAME="asyspy256.ddns.net" OR QNAME="hotkillmail9sddcc.ddns.net" OR QNAME="rosaf112.ddns.net" OR QNAME="cvdfhjh1231.myftp.biz" OR QNAME="sz2016rose.ddns.net" OR QNAME="dffwescwer4325.myftp.biz" OR QNAME="cvdfhjh1231.ddns.net")) (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (sha1="e570585edc69f9074cb5e8a790708336bd45ca0f") NOT ((New_Process_Name="*:\\Program Files(x86)\\*" OR New_Process_Name="*:\\Program Files\\*"))) | eval sigma_attack_tags="attack.credential_access attack.command_and_control" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[GALLIUM Artefacts - sysmon]
description = Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (sha1="53a44c2396d15c3a03723fa5e5db54cafd527635" OR sha1="9c5e496921e3bc882dc40694f1dcc3746a75db19" OR sha1="aeb573accfd95758550cf30bf04f389a92922844" OR sha1="79ef78a797403a4ed1a616c68e07fff868a8650a" OR sha1="4f6f38b4cec35e895d91c052b1f5a83d665c2196" OR sha1="1e8c2cac2e4ce7cbd33c3858eb2e24531cb8a84d" OR sha1="e841a63e47361a572db9a7334af459ddca11347a" OR sha1="c28f606df28a9bc8df75a4d5e5837fc5522dd34d" OR sha1="2e94b305d6812a9f96e6781c888e48c7fb157b6b" OR sha1="dd44133716b8a241957b912fa6a02efde3ce3025" OR sha1="8793bf166cb89eb55f0593404e4e933ab605e803" OR sha1="a39b57032dbb2335499a51e13470a7cd5d86b138" OR sha1="41cc2b15c662bc001c0eb92f6cc222934f0beeea" OR sha1="d209430d6af54792371174e70e27dd11d3def7a7" OR sha1="1c6452026c56efd2c94cea7e0f671eb55515edb0" OR sha1="c6b41d3afdcdcaf9f442bbe772f5da871801fd5a" OR sha1="4923d460e22fbbf165bbbaba168e5a46b8157d9f" OR sha1="f201504bd96e81d0d350c3a8332593ee1c9e09de" OR sha1="ddd2db1127632a2a52943a2fe516a2e7d05d70d2")) (EventCode="257" (QNAME="asyspy256.ddns.net" OR QNAME="hotkillmail9sddcc.ddns.net" OR QNAME="rosaf112.ddns.net" OR QNAME="cvdfhjh1231.myftp.biz" OR QNAME="sz2016rose.ddns.net" OR QNAME="dffwescwer4325.myftp.biz" OR QNAME="cvdfhjh1231.ddns.net")) (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (sha1="e570585edc69f9074cb5e8a790708336bd45ca0f") NOT ((Image="*:\\Program Files(x86)\\*" OR Image="*:\\Program Files\\*"))) | eval sigma_attack_tags="attack.credential_access attack.command_and_control" | eval sigma_title="GALLIUM Artefacts" | eval sigma_description="Detects artefacts associated with activity group GALLIUM - Microsoft Threat Intelligence Center indicators released in December 2019."
dispatch.earliest_time = -24h@h
alert.track = 0

[Greenbug Campaign Indicators - winevent]
description = Detects tools and process executions as observed in a Greenbug campaign in May 2020
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*bitsadmin /transfer*" Process_Command_Line="*CSIDL_APPDATA*") OR (Process_Command_Line="*CSIDL_SYSTEM_DRIVE*") OR (Process_Command_Line="*\\msf.ps1*" OR Process_Command_Line="*8989 -e cmd.exe*" OR Process_Command_Line="*system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill*" OR Process_Command_Line="*-nop -w hidden -c $k=new-object*" OR Process_Command_Line="*[Net.CredentialCache]::DefaultCredentials;IEX *" OR Process_Command_Line="* -nop -w hidden -c $m=new-object net.webclient;$m*" OR Process_Command_Line="*-noninteractive -executionpolicy bypass whoami*" OR Process_Command_Line="*-noninteractive -executionpolicy bypass netstat -a*" OR Process_Command_Line="*L3NlcnZlc*") OR (New_Process_Name="*\\adobe\\Adobe.exe" OR New_Process_Name="*\\oracle\\local.exe" OR New_Process_Name="*\\revshell.exe" OR New_Process_Name="*infopagesbackup\\ncat.exe" OR New_Process_Name="*CSIDL_SYSTEM\\cmd.exe" OR New_Process_Name="*\\programdata\\oracle\\java.exe" OR New_Process_Name="*CSIDL_COMMON_APPDATA\\comms\\comms.exe" OR New_Process_Name="*\\Programdata\\VMware\\Vmware.exe"))) | eval sigma_attack_tags="attack.g0049" | eval sigma_title="Greenbug Campaign Indicators" | eval sigma_description="Detects tools and process executions as observed in a Greenbug campaign in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Greenbug Campaign Indicators - sysmon]
description = Detects tools and process executions as observed in a Greenbug campaign in May 2020
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*bitsadmin /transfer*" CommandLine="*CSIDL_APPDATA*") OR (CommandLine="*CSIDL_SYSTEM_DRIVE*") OR (CommandLine="*\\msf.ps1*" OR CommandLine="*8989 -e cmd.exe*" OR CommandLine="*system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill*" OR CommandLine="*-nop -w hidden -c $k=new-object*" OR CommandLine="*[Net.CredentialCache]::DefaultCredentials;IEX *" OR CommandLine="* -nop -w hidden -c $m=new-object net.webclient;$m*" OR CommandLine="*-noninteractive -executionpolicy bypass whoami*" OR CommandLine="*-noninteractive -executionpolicy bypass netstat -a*" OR CommandLine="*L3NlcnZlc*") OR (Image="*\\adobe\\Adobe.exe" OR Image="*\\oracle\\local.exe" OR Image="*\\revshell.exe" OR Image="*infopagesbackup\\ncat.exe" OR Image="*CSIDL_SYSTEM\\cmd.exe" OR Image="*\\programdata\\oracle\\java.exe" OR Image="*CSIDL_COMMON_APPDATA\\comms\\comms.exe" OR Image="*\\Programdata\\VMware\\Vmware.exe"))) | eval sigma_attack_tags="attack.g0049" | eval sigma_title="Greenbug Campaign Indicators" | eval sigma_description="Detects tools and process executions as observed in a Greenbug campaign in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hurricane Panda Activity - winevent]
description = Detects Hurricane Panda Activity
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* localgroup administrators admin /add" OR Process_Command_Line="*\\Win64.exe*")) | eval sigma_attack_tags="attack.privilege_escalation attack.g0009 attack.t1068" | eval sigma_title="Hurricane Panda Activity" | eval sigma_description="Detects Hurricane Panda Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hurricane Panda Activity - sysmon]
description = Detects Hurricane Panda Activity
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* localgroup administrators admin /add" OR CommandLine="*\\Win64.exe*")) | eval sigma_attack_tags="attack.privilege_escalation attack.g0009 attack.t1068" | eval sigma_title="Hurricane Panda Activity" | eval sigma_description="Detects Hurricane Panda Activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Exfil Activity - winevent]
description = Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*\\ldifde.exe -f -n *" OR Process_Command_Line="*\\7za.exe a 1.7z *" OR Process_Command_Line="* eprod.ldf" OR Process_Command_Line="*\\aaaa\\procdump64.exe*" OR Process_Command_Line="*\\aaaa\\netsess.exe*" OR Process_Command_Line="*\\aaaa\\7za.exe*" OR Process_Command_Line="*copy .\\1.7z \\*" OR Process_Command_Line="*copy \\client\\c$\\aaaa\\*") OR New_Process_Name="C:\\Users\\Public\\7za.exe")) | eval sigma_attack_tags="attack.lateral_movement attack.g0010 attack.credential_access attack.t1098 attack.exfiltration attack.t1002" | eval sigma_title="Judgement Panda Exfil Activity" | eval sigma_description="Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Judgement Panda Exfil Activity - sysmon]
description = Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*\\ldifde.exe -f -n *" OR CommandLine="*\\7za.exe a 1.7z *" OR CommandLine="* eprod.ldf" OR CommandLine="*\\aaaa\\procdump64.exe*" OR CommandLine="*\\aaaa\\netsess.exe*" OR CommandLine="*\\aaaa\\7za.exe*" OR CommandLine="*copy .\\1.7z \\*" OR CommandLine="*copy \\client\\c$\\aaaa\\*") OR Image="C:\\Users\\Public\\7za.exe")) | eval sigma_attack_tags="attack.lateral_movement attack.g0010 attack.credential_access attack.t1098 attack.exfiltration attack.t1002" | eval sigma_title="Judgement Panda Exfil Activity" | eval sigma_description="Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Session Highjacker - winevent]
description = Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\mstdc.exe" OR New_Process_Name="*\\gpvc.exe") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Lazarus Session Highjacker" | eval sigma_description="Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Lazarus Session Highjacker - sysmon]
description = Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\mstdc.exe" OR Image="*\\gpvc.exe") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Lazarus Session Highjacker" | eval sigma_description="Detects executables launched outside their default directories as used by Lazarus Group (Bluenoroff)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mustang Panda Dropper - winevent]
description = Detects specific process parameters as used by Mustang Panda droppers
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*Temp\\wtask.exe /create*" OR Process_Command_Line="*%windir:~-3,1%%PUBLIC:~-9,1%*" OR Process_Command_Line="*/E:vbscript * C:\\Users\*.txt\" /F" OR Process_Command_Line="*/tn \"Security Script *" OR Process_Command_Line="*%windir:~-1,1%*") OR (New_Process_Name="*Temp\\winwsh.exe"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Mustang Panda Dropper" | eval sigma_description="Detects specific process parameters as used by Mustang Panda droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mustang Panda Dropper - sysmon]
description = Detects specific process parameters as used by Mustang Panda droppers
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*Temp\\wtask.exe /create*" OR CommandLine="*%windir:~-3,1%%PUBLIC:~-9,1%*" OR CommandLine="*/E:vbscript * C:\\Users\*.txt\" /F" OR CommandLine="*/tn \"Security Script *" OR CommandLine="*%windir:~-1,1%*") OR (Image="*Temp\\winwsh.exe"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Mustang Panda Dropper" | eval sigma_description="Detects specific process parameters as used by Mustang Panda droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Defrag Deactivation - winevent]
description = Detects the deactivation of the Scheduled defragmentation task as seen by Slingshot APT group
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*schtasks* /delete *Defrag\\ScheduledDefrag*")) ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4701" TaskName="\\Microsoft\\Windows\\Defrag\\ScheduledDefrag") | eval sigma_attack_tags="attack.persistence attack.t1053 attack.s0111" | eval sigma_title="Defrag Deactivation" | eval sigma_description="Detects the deactivation of the Scheduled defragmentation task as seen by Slingshot APT group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Defrag Deactivation - sysmon]
description = Detects the deactivation of the Scheduled defragmentation task as seen by Slingshot APT group
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*schtasks* /delete *Defrag\\ScheduledDefrag*")) (source="WinEventLog:Security" EventCode="4701" TaskName="\\Microsoft\\Windows\\Defrag\\ScheduledDefrag") | eval sigma_attack_tags="attack.persistence attack.t1053 attack.s0111" | eval sigma_title="Defrag Deactivation" | eval sigma_description="Detects the deactivation of the Scheduled defragmentation task as seen by Slingshot APT group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sofacy Trojan Loader Activity - winevent]
description = Detects Trojan loader acitivty as used by APT28
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="rundll32.exe %APPDATA%\\*.dat\",*" OR Process_Command_Line="rundll32.exe %APPDATA%\\*.dll\",#1")) | eval sigma_attack_tags="attack.g0007 attack.execution attack.t1059 attack.defense_evasion attack.t1085 car.2013-10-002" | eval sigma_title="Sofacy Trojan Loader Activity" | eval sigma_description="Detects Trojan loader acitivty as used by APT28"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sofacy Trojan Loader Activity - sysmon]
description = Detects Trojan loader acitivty as used by APT28
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="rundll32.exe %APPDATA%\\*.dat\",*" OR CommandLine="rundll32.exe %APPDATA%\\*.dll\",#1")) | eval sigma_attack_tags="attack.g0007 attack.execution attack.t1059 attack.defense_evasion attack.t1085 car.2013-10-002" | eval sigma_title="Sofacy Trojan Loader Activity" | eval sigma_description="Detects Trojan loader acitivty as used by APT28"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ps.exe Renamed SysInternals Tool - winevent]
description = Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="ps.exe -accepteula") | eval sigma_attack_tags="attack.defense_evasion attack.g0035 attack.t1036 car.2013-05-009" | eval sigma_title="Ps.exe Renamed SysInternals Tool" | eval sigma_description="Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ps.exe Renamed SysInternals Tool - sysmon]
description = Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="ps.exe -accepteula") | eval sigma_attack_tags="attack.defense_evasion attack.g0035 attack.t1036 car.2013-05-009" | eval sigma_title="Ps.exe Renamed SysInternals Tool" | eval sigma_description="Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report"
dispatch.earliest_time = -24h@h
alert.track = 0

[TropicTrooper Campaign November 2018 - winevent]
description = Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*") | eval sigma_attack_tags="attack.execution attack.t1085" | eval sigma_title="TropicTrooper Campaign November 2018" | eval sigma_description="Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia"
dispatch.earliest_time = -24h@h
alert.track = 0

[TropicTrooper Campaign November 2018 - sysmon]
description = Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*") | eval sigma_attack_tags="attack.execution attack.t1085" | eval sigma_title="TropicTrooper Campaign November 2018" | eval sigma_description="Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Commands May 2020 - winevent]
description = Detects commands used by Turla group as reported by ESET in May 2020
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*tracert -h 10 yahoo.com*" OR Process_Command_Line="*.WSqmCons))|iex;*" OR Process_Command_Line="*Fr`omBa`se6`4Str`ing*") OR (Process_Command_Line="*net use https://docs.live.net*" Process_Command_Line="*@aol.co.uk*"))) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1086 attack.t1053 attack.t1027 attack.discovery attack.t1016" | eval sigma_title="Turla Group Commands May 2020" | eval sigma_description="Detects commands used by Turla group as reported by ESET in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Turla Group Commands May 2020 - sysmon]
description = Detects commands used by Turla group as reported by ESET in May 2020
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*tracert -h 10 yahoo.com*" OR CommandLine="*.WSqmCons))|iex;*" OR CommandLine="*Fr`omBa`se6`4Str`ing*") OR (CommandLine="*net use https://docs.live.net*" CommandLine="*@aol.co.uk*"))) | eval sigma_attack_tags="attack.g0010 attack.execution attack.t1086 attack.t1053 attack.t1027 attack.discovery attack.t1016" | eval sigma_title="Turla Group Commands May 2020" | eval sigma_description="Detects commands used by Turla group as reported by ESET in May 2020"
dispatch.earliest_time = -24h@h
alert.track = 0

[Unidentified Attacker November 2018 - winevent]
description = A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cyzfc.dat, PointFunctionCall") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="11" (TargetFilename="*ds7002.lnk*")) | eval sigma_attack_tags="attack.execution attack.t1085" | eval sigma_title="Unidentified Attacker November 2018" | eval sigma_description="A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016."
dispatch.earliest_time = -24h@h
alert.track = 0

[Unidentified Attacker November 2018 - sysmon]
description = A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cyzfc.dat, PointFunctionCall") ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" (TargetFilename="*ds7002.lnk*")) | eval sigma_attack_tags="attack.execution attack.t1085" | eval sigma_title="Unidentified Attacker November 2018" | eval sigma_description="A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016."
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Malware HK University Campaign - winevent]
description = Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*C:\\Windows\\Temp*" OR Creator_Process_Name="*\\hpqhvind.exe*") New_Process_Name="C:\\ProgramData\\DRM*") OR (Creator_Process_Name="C:\\ProgramData\\DRM*" New_Process_Name="*\\wmplayer.exe") OR (Creator_Process_Name="*\\Test.exe" New_Process_Name="*\\wmplayer.exe") OR New_Process_Name="C:\\ProgramData\\DRM\\CLR\\CLR.exe" OR (Creator_Process_Name="C:\\ProgramData\\DRM\\Windows*" New_Process_Name="*\\SearchFilterHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.g0044" | eval sigma_title="Winnti Malware HK University Campaign" | eval sigma_description="Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Winnti Malware HK University Campaign - sysmon]
description = Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*C:\\Windows\\Temp*" OR ParentImage="*\\hpqhvind.exe*") Image="C:\\ProgramData\\DRM*") OR (ParentImage="C:\\ProgramData\\DRM*" Image="*\\wmplayer.exe") OR (ParentImage="*\\Test.exe" Image="*\\wmplayer.exe") OR Image="C:\\ProgramData\\DRM\\CLR\\CLR.exe" OR (ParentImage="C:\\ProgramData\\DRM\\Windows*" Image="*\\SearchFilterHost.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.g0044" | eval sigma_title="Winnti Malware HK University Campaign" | eval sigma_description="Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operation Wocao Activity - winevent]
description = Detects activity mentioned in Operation Wocao report
search = index=* ((source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") EventCode="4799" GroupName="Administrators" ProcessName="*\\checkadmin.exe") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*checkadmin.exe 127.0.0.1 -all*" OR Process_Command_Line="*netsh advfirewall firewall add rule name=powershell dir=in*" OR Process_Command_Line="*cmd /c powershell.exe -ep bypass -file c:\\s.ps1*" OR Process_Command_Line="*/tn win32times /f*" OR Process_Command_Line="*create win32times binPath=*" OR Process_Command_Line="*\\c$\\windows\\system32\\devmgr.dll*" OR Process_Command_Line="* -exec bypass -enc JgAg*" OR Process_Command_Line="*type *keepass\\KeePass.config.xml*" OR Process_Command_Line="*iie.exe iie.txt*" OR Process_Command_Line="*reg query HKEY_CURRENT_USER\\Software\*\\PuTTY\\Sessions\\*")) | eval sigma_attack_tags="" | eval sigma_title="Operation Wocao Activity" | eval sigma_description="Detects activity mentioned in Operation Wocao report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Operation Wocao Activity - sysmon]
description = Detects activity mentioned in Operation Wocao report
search = index=* (source="WinEventLog:Security" EventCode="4799" GroupName="Administrators" ProcessName="*\\checkadmin.exe") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*checkadmin.exe 127.0.0.1 -all*" OR CommandLine="*netsh advfirewall firewall add rule name=powershell dir=in*" OR CommandLine="*cmd /c powershell.exe -ep bypass -file c:\\s.ps1*" OR CommandLine="*/tn win32times /f*" OR CommandLine="*create win32times binPath=*" OR CommandLine="*\\c$\\windows\\system32\\devmgr.dll*" OR CommandLine="* -exec bypass -enc JgAg*" OR CommandLine="*type *keepass\\KeePass.config.xml*" OR CommandLine="*iie.exe iie.txt*" OR CommandLine="*reg query HKEY_CURRENT_USER\\Software\*\\PuTTY\\Sessions\\*")) | eval sigma_attack_tags="" | eval sigma_title="Operation Wocao Activity" | eval sigma_description="Detects activity mentioned in Operation Wocao report"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZxShell Malware - winevent]
description = Detects a ZxShell start by the called and well-known function name
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Command="rundll32.exe *,zxFunction*" OR Command="rundll32.exe *,RemoteDiskXXXXX")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.g0001 attack.execution attack.t1059 attack.defense_evasion attack.t1085" | eval sigma_title="ZxShell Malware" | eval sigma_description="Detects a ZxShell start by the called and well-known function name"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZxShell Malware - sysmon]
description = Detects a ZxShell start by the called and well-known function name
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Command="rundll32.exe *,zxFunction*" OR Command="rundll32.exe *,RemoteDiskXXXXX")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.g0001 attack.execution attack.t1059 attack.defense_evasion attack.t1085" | eval sigma_title="ZxShell Malware" | eval sigma_description="Detects a ZxShell start by the called and well-known function name"
dispatch.earliest_time = -24h@h
alert.track = 0

[Hiding Files with Attrib.exe - winevent]
description = Detects usage of attrib.exe to hide files from users.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\attrib.exe" Process_Command_Line="* +h *") NOT (((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\desktop.ini *" OR (Creator_Process_Name="*\\cmd.exe" Process_Command_Line="+R +H +S +A \\*.cui" ParentCommandLine="C:\\WINDOWS\\system32\\*.bat"))))) | table Process_Command_Line,ParentCommandLine,Account_Name | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1158" | eval sigma_title="Hiding Files with Attrib.exe" | eval sigma_description="Detects usage of attrib.exe to hide files from users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Hiding Files with Attrib.exe - sysmon]
description = Detects usage of attrib.exe to hide files from users.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\attrib.exe" CommandLine="* +h *") NOT (((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\desktop.ini *" OR (ParentImage="*\\cmd.exe" CommandLine="+R +H +S +A \\*.cui" ParentCommandLine="C:\\WINDOWS\\system32\\*.bat"))))) | table CommandLine,ParentCommandLine,User | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1158" | eval sigma_title="Hiding Files with Attrib.exe" | eval sigma_description="Detects usage of attrib.exe to hide files from users."
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification of Boot Configuration - winevent]
description = Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\bcdedit.exe" Process_Command_Line="*set*") ((Process_Command_Line="*bootstatuspolicy*" Process_Command_Line="*ignoreallfailures*") OR (Process_Command_Line="*recoveryenabled*" Process_Command_Line="*no*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Modification of Boot Configuration" | eval sigma_description="Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique."
dispatch.earliest_time = -24h@h
alert.track = 0

[Modification of Boot Configuration - sysmon]
description = Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\bcdedit.exe" CommandLine="*set*") ((CommandLine="*bootstatuspolicy*" CommandLine="*ignoreallfailures*") OR (CommandLine="*recoveryenabled*" CommandLine="*no*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.impact attack.t1490" | eval sigma_title="Modification of Boot Configuration" | eval sigma_description="Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique."
dispatch.earliest_time = -24h@h
alert.track = 0

[SquiblyTwo - winevent]
description = Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\wmic.exe") (Process_Command_Line="wmic * *format:\\\"http*" OR Process_Command_Line="wmic * /format:'http" OR Process_Command_Line="wmic * /format:http*")) OR ((Imphash="1B1A3F43BF37B5BFE60751F2EE2F326E" OR Imphash="37777A96245A3C74EB217308F3546F4C" OR Imphash="9D87C9D67CE724033C0B40CC4CA1B206") (Process_Command_Line="* *format:\\\"http*" OR Process_Command_Line="* /format:'http" OR Process_Command_Line="* /format:http*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1047" | eval sigma_title="SquiblyTwo" | eval sigma_description="Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash"
dispatch.earliest_time = -24h@h
alert.track = 0

[SquiblyTwo - sysmon]
description = Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\wmic.exe") (CommandLine="wmic * *format:\\\"http*" OR CommandLine="wmic * /format:'http" OR CommandLine="wmic * /format:http*")) OR ((Imphash="1B1A3F43BF37B5BFE60751F2EE2F326E" OR Imphash="37777A96245A3C74EB217308F3546F4C" OR Imphash="9D87C9D67CE724033C0B40CC4CA1B206") (CommandLine="* *format:\\\"http*" OR CommandLine="* /format:'http" OR CommandLine="* /format:http*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1047" | eval sigma_title="SquiblyTwo" | eval sigma_description="Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash"
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association - winevent]
description = When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*cmd*" Process_Command_Line="*/c*" Process_Command_Line="*assoc*") | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1042" | eval sigma_title="Change Default File Association" | eval sigma_description="When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Change Default File Association - sysmon]
description = When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*cmd*" CommandLine="*/c*" CommandLine="*assoc*") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1042" | eval sigma_title="Change Default File Association" | eval sigma_description="When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmdkey Cached Credentials Recon - winevent]
description = Detects usage of cmdkey to look for cached credentials
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmdkey.exe" Process_Command_Line="* /list *") | table Process_Command_Line,ParentCommandLine,Account_Name | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Cmdkey Cached Credentials Recon" | eval sigma_description="Detects usage of cmdkey to look for cached credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmdkey Cached Credentials Recon - sysmon]
description = Detects usage of cmdkey to look for cached credentials
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmdkey.exe" CommandLine="* /list *") | table CommandLine,ParentCommandLine,User | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Cmdkey Cached Credentials Recon" | eval sigma_description="Detects usage of cmdkey to look for cached credentials"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP UAC Bypass via COM Object Access - winevent]
description = Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="*\\DllHost.exe" (ParentCommandLine="*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}" OR ParentCommandLine="*{3E000D72-A845-4CD9-BD83-80C07C3B881F}")) | table Process_Command_Line,ParentCommandLine,Hashes | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.execution attack.t1088 attack.t1191 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP UAC Bypass via COM Object Access" | eval sigma_description="Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[CMSTP UAC Bypass via COM Object Access - sysmon]
description = Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="*\\DllHost.exe" (ParentCommandLine="*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}" OR ParentCommandLine="*{3E000D72-A845-4CD9-BD83-80C07C3B881F}")) | table CommandLine,ParentCommandLine,Hashes | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.execution attack.t1088 attack.t1191 attack.g0069 car.2019-04-001" | eval sigma_title="CMSTP UAC Bypass via COM Object Access" | eval sigma_description="Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmd.exe CommandLine Path Traversal - winevent]
description = detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="*cmd*/c*" Process_Command_Line="*/../../*") | eval sigma_attack_tags="attack.t1059 attack.execution" | eval sigma_title="Cmd.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Cmd.exe CommandLine Path Traversal - sysmon]
description = detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="*cmd*/c*" CommandLine="*/../../*") | eval sigma_attack_tags="attack.t1059 attack.execution" | eval sigma_title="Cmd.exe CommandLine Path Traversal" | eval sigma_description="detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking"
dispatch.earliest_time = -24h@h
alert.track = 0

[Control Panel Items - winevent]
description = Detects the use of a control panel item (.cpl) outside of the System32 folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*.cpl" NOT ((Process_Command_Line="*\\System32\\*" OR Process_Command_Line="*%System%*"))) | eval sigma_attack_tags="attack.execution attack.t1196 attack.defense_evasion" | eval sigma_title="Control Panel Items" | eval sigma_description="Detects the use of a control panel item (.cpl) outside of the System32 folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Control Panel Items - sysmon]
description = Detects the use of a control panel item (.cpl) outside of the System32 folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*.cpl" NOT ((CommandLine="*\\System32\\*" OR CommandLine="*%System%*"))) | eval sigma_attack_tags="attack.execution attack.t1196 attack.defense_evasion" | eval sigma_title="Control Panel Items" | eval sigma_description="Detects the use of a control panel item (.cpl) outside of the System32 folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copying Sensitive Files with Credential Data - winevent]
description = Files with well-known filenames (sensitive files with credential data) copying
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\esentutl.exe" (Process_Command_Line="*vss*" OR Process_Command_Line="* /m *" OR Process_Command_Line="* /y *")) OR (Process_Command_Line="*\\windows\\ntds\\ntds.dit*" OR Process_Command_Line="*\\config\\sam*" OR Process_Command_Line="*\\config\\security*" OR Process_Command_Line="*\\config\\system *" OR Process_Command_Line="*\\repair\\sam*" OR Process_Command_Line="*\\repair\\system*" OR Process_Command_Line="*\\repair\\security*" OR Process_Command_Line="*\\config\\RegBack\\sam*" OR Process_Command_Line="*\\config\\RegBack\\system*" OR Process_Command_Line="*\\config\\RegBack\\security*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003 car.2013-07-001" | eval sigma_title="Copying Sensitive Files with Credential Data" | eval sigma_description="Files with well-known filenames (sensitive files with credential data) copying"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copying Sensitive Files with Credential Data - sysmon]
description = Files with well-known filenames (sensitive files with credential data) copying
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\esentutl.exe" (CommandLine="*vss*" OR CommandLine="* /m *" OR CommandLine="* /y *")) OR (CommandLine="*\\windows\\ntds\\ntds.dit*" OR CommandLine="*\\config\\sam*" OR CommandLine="*\\config\\security*" OR CommandLine="*\\config\\system *" OR CommandLine="*\\repair\\sam*" OR CommandLine="*\\repair\\system*" OR CommandLine="*\\repair\\security*" OR CommandLine="*\\config\\RegBack\\sam*" OR CommandLine="*\\config\\RegBack\\system*" OR CommandLine="*\\config\\RegBack\\security*"))) | eval sigma_attack_tags="attack.credential_access attack.t1003 car.2013-07-001" | eval sigma_title="Copying Sensitive Files with Credential Data" | eval sigma_description="Files with well-known filenames (sensitive files with credential data) copying"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fireball Archer Install - winevent]
description = Detects Archer malware invocation via rundll32
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\rundll32.exe *,InstallArcherSvc") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1085" | eval sigma_title="Fireball Archer Install" | eval sigma_description="Detects Archer malware invocation via rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fireball Archer Install - sysmon]
description = Detects Archer malware invocation via rundll32
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\rundll32.exe *,InstallArcherSvc") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059 attack.defense_evasion attack.t1085" | eval sigma_title="Fireball Archer Install" | eval sigma_description="Detects Archer malware invocation via rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Maze Ransomware - winevent]
description = Detects specific process characteristics of Maze ransomware word document droppers
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\WINWORD.exe") (New_Process_Name="*.tmp")) OR (New_Process_Name="*\\wmic.exe" Creator_Process_Name="*\\Temp\\*" Process_Command_Line="*shadowcopy delete") OR (Process_Command_Line="*shadowcopy delete" Process_Command_Line="*\\..\\..\\system32*"))) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Maze Ransomware" | eval sigma_description="Detects specific process characteristics of Maze ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Maze Ransomware - sysmon]
description = Detects specific process characteristics of Maze ransomware word document droppers
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\WINWORD.exe") (Image="*.tmp")) OR (Image="*\\wmic.exe" ParentImage="*\\Temp\\*" CommandLine="*shadowcopy delete") OR (CommandLine="*shadowcopy delete" CommandLine="*\\..\\..\\system32*"))) | table ComputerName,User,Image | eval sigma_attack_tags="attack.execution attack.t1204" | eval sigma_title="Maze Ransomware" | eval sigma_description="Detects specific process characteristics of Maze ransomware word document droppers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - rar.exe - winevent]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\rar.exe" Process_Command_Line="* a *") | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1002" | eval sigma_title="Data Compressed - rar.exe" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[Data Compressed - rar.exe - sysmon]
description = An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\rar.exe" CommandLine="* a *") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.exfiltration attack.t1002" | eval sigma_title="Data Compressed - rar.exe" | eval sigma_description="An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Exfiltration Tools Execution - winevent]
description = Well-known DNS Exfiltration tools execution
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\iodine.exe" OR New_Process_Name="*\\dnscat2*")) | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="DNS Exfiltration Tools Execution" | eval sigma_description="Well-known DNS Exfiltration tools execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[DNS Exfiltration Tools Execution - sysmon]
description = Well-known DNS Exfiltration tools execution
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\iodine.exe" OR Image="*\\dnscat2*")) | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="DNS Exfiltration Tools Execution" | eval sigma_description="Well-known DNS Exfiltration tools execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - winevent]
description = Detects a discovery of domain trusts
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\dsquery.exe" Process_Command_Line="*-filter*" Process_Command_Line="*trustedDomain*") OR (New_Process_Name="*\\nltest.exe" Process_Command_Line="*domain_trusts*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Detects a discovery of domain trusts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - sysmon]
description = Detects a discovery of domain trusts
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\dsquery.exe" CommandLine="*-filter*" CommandLine="*trustedDomain*") OR (Image="*\\nltest.exe" CommandLine="*domain_trusts*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Detects a discovery of domain trusts"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded FromBase64String - winevent]
description = Detects a base64 encoded FromBase64String keyword in a process command line
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*OjpGcm9tQmFzZTY0U3RyaW5n*" OR Process_Command_Line="*o6RnJvbUJhc2U2NFN0cmluZ*" OR Process_Command_Line="*6OkZyb21CYXNlNjRTdHJpbm*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.t1140 attack.execution attack.defense_evasion" | eval sigma_title="Encoded FromBase64String" | eval sigma_description="Detects a base64 encoded FromBase64String keyword in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded FromBase64String - sysmon]
description = Detects a base64 encoded FromBase64String keyword in a process command line
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*OjpGcm9tQmFzZTY0U3RyaW5n*" OR CommandLine="*o6RnJvbUJhc2U2NFN0cmluZ*" OR CommandLine="*6OkZyb21CYXNlNjRTdHJpbm*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.t1140 attack.execution attack.defense_evasion" | eval sigma_title="Encoded FromBase64String" | eval sigma_description="Detects a base64 encoded FromBase64String keyword in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded IEX - winevent]
description = Detects a base64 encoded IEX command string in a process command line
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*SUVYIChb*" OR Process_Command_Line="*lFWCAoW*" OR Process_Command_Line="*JRVggKF*" OR Process_Command_Line="*aWV4IChb*" OR Process_Command_Line="*lleCAoW*" OR Process_Command_Line="*pZXggKF*" OR Process_Command_Line="*aWV4IChOZX*" OR Process_Command_Line="*lleCAoTmV3*" OR Process_Command_Line="*pZXggKE5ld*" OR Process_Command_Line="*SUVYIChOZX*" OR Process_Command_Line="*lFWCAoTmV3*" OR Process_Command_Line="*JRVggKE5ld*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.t1140 attack.execution" | eval sigma_title="Encoded IEX" | eval sigma_description="Detects a base64 encoded IEX command string in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Encoded IEX - sysmon]
description = Detects a base64 encoded IEX command string in a process command line
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*SUVYIChb*" OR CommandLine="*lFWCAoW*" OR CommandLine="*JRVggKF*" OR CommandLine="*aWV4IChb*" OR CommandLine="*lleCAoW*" OR CommandLine="*pZXggKF*" OR CommandLine="*aWV4IChOZX*" OR CommandLine="*lleCAoTmV3*" OR CommandLine="*pZXggKE5ld*" OR CommandLine="*SUVYIChOZX*" OR CommandLine="*lFWCAoTmV3*" OR CommandLine="*JRVggKE5ld*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.t1140 attack.execution" | eval sigma_title="Encoded IEX" | eval sigma_description="Detects a base64 encoded IEX command string in a process command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Command Line Arguments - winevent]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*COMPlus_ETWEnabled=0*") | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="COMPlus_ETWEnabled Command Line Arguments" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[COMPlus_ETWEnabled Command Line Arguments - sysmon]
description = Potential adversaries stopping ETW providers recording loaded .NET assemblies.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*COMPlus_ETWEnabled=0*") | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="COMPlus_ETWEnabled Command Line Arguments" | eval sigma_description="Potential adversaries stopping ETW providers recording loaded .NET assemblies."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - winevent]
description = Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="* cl */Trace*" OR Process_Command_Line="* clear-log */Trace*" OR Process_Command_Line="* sl* /e:false*" OR Process_Command_Line="* set-log* /e:false*")) | eval sigma_attack_tags="attack.execution attack.t1070 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects a command that clears or disables any ETW trace log which could indicate a logging evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Disable of ETW Trace - sysmon]
description = Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="* cl */Trace*" OR CommandLine="* clear-log */Trace*" OR CommandLine="* sl* /e:false*" OR CommandLine="* set-log* /e:false*")) | eval sigma_attack_tags="attack.execution attack.t1070 car.2016-04-002" | eval sigma_title="Disable of ETW Trace" | eval sigma_description="Detects a command that clears or disables any ETW trace log which could indicate a logging evasion."
dispatch.earliest_time = -24h@h
alert.track = 0

[Exfiltration and Tunneling Tools Execution - winevent]
description = Execution of well known tools for data exfiltration and tunneling
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\plink.exe" OR New_Process_Name="*\\socat.exe" OR New_Process_Name="*\\stunnel.exe" OR New_Process_Name="*\\httptunnel.exe")) | eval sigma_attack_tags="attack.exfiltration attack.t1020" | eval sigma_title="Exfiltration and Tunneling Tools Execution" | eval sigma_description="Execution of well known tools for data exfiltration and tunneling"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exfiltration and Tunneling Tools Execution - sysmon]
description = Execution of well known tools for data exfiltration and tunneling
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\plink.exe" OR Image="*\\socat.exe" OR Image="*\\stunnel.exe" OR Image="*\\httptunnel.exe")) | eval sigma_attack_tags="attack.exfiltration attack.t1020" | eval sigma_title="Exfiltration and Tunneling Tools Execution" | eval sigma_description="Execution of well known tools for data exfiltration and tunneling"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2015-1641 - winevent]
description = Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\MicroScMgmt.exe ") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Exploit for CVE-2015-1641" | eval sigma_description="Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2015-1641 - sysmon]
description = Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\MicroScMgmt.exe ") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Exploit for CVE-2015-1641" | eval sigma_description="Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-0261 - winevent]
description = Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\FLTLDR.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Exploit for CVE-2017-0261" | eval sigma_description="Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-0261 - sysmon]
description = Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\FLTLDR.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Exploit for CVE-2017-0261" | eval sigma_description="Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262"
dispatch.earliest_time = -24h@h
alert.track = 0

[Droppers Exploiting CVE-2017-11882 - winevent]
description = Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\EQNEDT32.EXE") | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1211" | eval sigma_title="Droppers Exploiting CVE-2017-11882" | eval sigma_description="Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Droppers Exploiting CVE-2017-11882 - sysmon]
description = Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\EQNEDT32.EXE") | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1211" | eval sigma_title="Droppers Exploiting CVE-2017-11882" | eval sigma_description="Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-8759 - winevent]
description = Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WINWORD.EXE" New_Process_Name="*\\csc.exe") | eval sigma_attack_tags="attack.execution attack.t1203" | eval sigma_title="Exploit for CVE-2017-8759" | eval sigma_description="Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploit for CVE-2017-8759 - sysmon]
description = Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WINWORD.EXE" Image="*\\csc.exe") | eval sigma_attack_tags="attack.execution attack.t1203" | eval sigma_title="Exploit for CVE-2017-8759" | eval sigma_description="Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting SetupComplete.cmd CVE-2019-1378 - winevent]
description = Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (ParentCommandLine="*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\SetupComplete.cmd" OR ParentCommandLine="*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\PartnerSetupComplete.cmd") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*" OR New_Process_Name="C:\\Windows\\Setup\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Exploiting SetupComplete.cmd CVE-2019-1378" | eval sigma_description="Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting SetupComplete.cmd CVE-2019-1378 - sysmon]
description = Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentCommandLine="*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\SetupComplete.cmd" OR ParentCommandLine="*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\PartnerSetupComplete.cmd") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*" OR Image="C:\\Windows\\Setup\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Exploiting SetupComplete.cmd CVE-2019-1378" | eval sigma_description="Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting CVE-2019-1388 - winevent]
description = Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\consent.exe" New_Process_Name="*\\iexplore.exe" Process_Command_Line="* http*" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (IntegrityLevel="System" OR Account_Name="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Exploiting CVE-2019-1388" | eval sigma_description="Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploiting CVE-2019-1388 - sysmon]
description = Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\consent.exe" Image="*\\iexplore.exe" CommandLine="* http*" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (IntegrityLevel="System" OR User="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Exploiting CVE-2019-1388" | eval sigma_description="Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploited CVE-2020-10189 Zoho ManageEngine - winevent]
description = Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*DesktopCentral_Server\\jre\\bin\\java.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190" | eval sigma_title="Exploited CVE-2020-10189 Zoho ManageEngine" | eval sigma_description="Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189"
dispatch.earliest_time = -24h@h
alert.track = 0

[Exploited CVE-2020-10189 Zoho ManageEngine - sysmon]
description = Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*DesktopCentral_Server\\jre\\bin\\java.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1190" | eval sigma_title="Exploited CVE-2020-10189 Zoho ManageEngine" | eval sigma_description="Detects the exploitation of Zoho ManageEngine Desktop Central Java Deserialization vulnerability reported as CVE-2020-10189"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PrinterPorts Creation (CVE-2020-1048) - winevent]
description = Detects new commands that add new printer port which point to suspicious file
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*Add-PrinterPort -Name*") (Process_Command_Line="*.exe*" OR Process_Command_Line="*.dll*" OR Process_Command_Line="*.bat*")) OR (Process_Command_Line="*Generic / Text Only*"))) | eval sigma_attack_tags="attack.persistence attack.execution" | eval sigma_title="Suspicious PrinterPorts Creation (CVE-2020-1048)" | eval sigma_description="Detects new commands that add new printer port which point to suspicious file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PrinterPorts Creation (CVE-2020-1048) - sysmon]
description = Detects new commands that add new printer port which point to suspicious file
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*Add-PrinterPort -Name*") (CommandLine="*.exe*" OR CommandLine="*.dll*" OR CommandLine="*.bat*")) OR (CommandLine="*Generic / Text Only*"))) | eval sigma_attack_tags="attack.persistence attack.execution" | eval sigma_title="Suspicious PrinterPorts Creation (CVE-2020-1048)" | eval sigma_description="Detects new commands that add new printer port which point to suspicious file"
dispatch.earliest_time = -24h@h
alert.track = 0

[File or Folder Permissions Modifications - winevent]
description = Detects a file or folder permissions modifications
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\takeown.exe" OR New_Process_Name="*\\cacls.exe" OR New_Process_Name="*\\icacls.exe") Process_Command_Line="*/grant*") OR (New_Process_Name="*\\attrib.exe" Process_Command_Line="*-r*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1222" | eval sigma_title="File or Folder Permissions Modifications" | eval sigma_description="Detects a file or folder permissions modifications"
dispatch.earliest_time = -24h@h
alert.track = 0

[File or Folder Permissions Modifications - sysmon]
description = Detects a file or folder permissions modifications
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\takeown.exe" OR Image="*\\cacls.exe" OR Image="*\\icacls.exe") CommandLine="*/grant*") OR (Image="*\\attrib.exe" CommandLine="*-r*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1222" | eval sigma_title="File or Folder Permissions Modifications" | eval sigma_description="Detects a file or folder permissions modifications"
dispatch.earliest_time = -24h@h
alert.track = 0

[Grabbing Sensitive Hives via Reg Utility - winevent]
description = Dump sam, system or security hives using REG.exe utility
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*save*" OR Process_Command_Line="*export*") (Process_Command_Line="*hklm*" OR Process_Command_Line="*hkey_local_machine*") (Process_Command_Line="*\\system" OR Process_Command_Line="*\\sam" OR Process_Command_Line="*\\security")) | eval sigma_attack_tags="attack.credential_access attack.t1003 car.2013-07-001" | eval sigma_title="Grabbing Sensitive Hives via Reg Utility" | eval sigma_description="Dump sam, system or security hives using REG.exe utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Grabbing Sensitive Hives via Reg Utility - sysmon]
description = Dump sam, system or security hives using REG.exe utility
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*save*" OR CommandLine="*export*") (CommandLine="*hklm*" OR CommandLine="*hkey_local_machine*") (CommandLine="*\\system" OR CommandLine="*\\sam" OR CommandLine="*\\security")) | eval sigma_attack_tags="attack.credential_access attack.t1003 car.2013-07-001" | eval sigma_title="Grabbing Sensitive Hives via Reg Utility" | eval sigma_description="Dump sam, system or security hives using REG.exe utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bloodhound and Sharphound Hack Tool - winevent]
description = Detects command line parameters used by Bloodhound and Sharphound hack tools
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\Bloodhound.exe*" OR New_Process_Name="*\\SharpHound.exe*") OR (Process_Command_Line="* -CollectionMethod All *" OR Process_Command_Line="*.exe -c All -d *" OR Process_Command_Line="*Invoke-Bloodhound*" OR Process_Command_Line="*Get-BloodHoundData*") OR (Process_Command_Line="* -JsonFolder *" Process_Command_Line="* -ZipFileName *") OR (Process_Command_Line="* DCOnly *" Process_Command_Line="* --NoSaveCache *"))) | eval sigma_attack_tags="attack.discovery attack.t1087" | eval sigma_title="Bloodhound and Sharphound Hack Tool" | eval sigma_description="Detects command line parameters used by Bloodhound and Sharphound hack tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bloodhound and Sharphound Hack Tool - sysmon]
description = Detects command line parameters used by Bloodhound and Sharphound hack tools
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\Bloodhound.exe*" OR Image="*\\SharpHound.exe*") OR (CommandLine="* -CollectionMethod All *" OR CommandLine="*.exe -c All -d *" OR CommandLine="*Invoke-Bloodhound*" OR CommandLine="*Get-BloodHoundData*") OR (CommandLine="* -JsonFolder *" CommandLine="* -ZipFileName *") OR (CommandLine="* DCOnly *" CommandLine="* --NoSaveCache *"))) | eval sigma_attack_tags="attack.discovery attack.t1087" | eval sigma_title="Bloodhound and Sharphound Hack Tool" | eval sigma_description="Detects command line parameters used by Bloodhound and Sharphound hack tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Koadic Execution - winevent]
description = Detects command line parameters used by Koadic hack tool
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*cmd.exe* /q /c chcp *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1170" | eval sigma_title="Koadic Execution" | eval sigma_description="Detects command line parameters used by Koadic hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Koadic Execution - sysmon]
description = Detects command line parameters used by Koadic hack tool
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*cmd.exe* /q /c chcp *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1170" | eval sigma_title="Koadic Execution" | eval sigma_description="Detects command line parameters used by Koadic hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rubeus Hack Tool - winevent]
description = Detects command line parameters used by Rubeus hack tool
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* asreproast *" OR Process_Command_Line="* dump /service:krbtgt *" OR Process_Command_Line="* kerberoast *" OR Process_Command_Line="* createnetonly /program:*" OR Process_Command_Line="* ptt /ticket:*" OR Process_Command_Line="* /impersonateuser:*" OR Process_Command_Line="* renew /ticket:*" OR Process_Command_Line="* asktgt /user:*" OR Process_Command_Line="* harvest /interval:*")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="Rubeus Hack Tool" | eval sigma_description="Detects command line parameters used by Rubeus hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[Rubeus Hack Tool - sysmon]
description = Detects command line parameters used by Rubeus hack tool
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* asreproast *" OR CommandLine="* dump /service:krbtgt *" OR CommandLine="* kerberoast *" OR CommandLine="* createnetonly /program:*" OR CommandLine="* ptt /ticket:*" OR CommandLine="* /impersonateuser:*" OR CommandLine="* renew /ticket:*" OR CommandLine="* asktgt /user:*" OR CommandLine="* harvest /interval:*")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="Rubeus Hack Tool" | eval sigma_description="Detects command line parameters used by Rubeus hack tool"
dispatch.earliest_time = -24h@h
alert.track = 0

[SecurityXploded Tool - winevent]
description = Detects the execution of SecurityXploded Tools
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Company="SecurityXploded" OR New_Process_Name="*PasswordDump.exe" OR OriginalFilename="*PasswordDump.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="SecurityXploded Tool" | eval sigma_description="Detects the execution of SecurityXploded Tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[SecurityXploded Tool - sysmon]
description = Detects the execution of SecurityXploded Tools
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Company="SecurityXploded" OR Image="*PasswordDump.exe" OR OriginalFilename="*PasswordDump.exe")) | eval sigma_attack_tags="attack.credential_access attack.t1003 attack.s0005" | eval sigma_title="SecurityXploded Tool" | eval sigma_description="Detects the execution of SecurityXploded Tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[HH.exe Execution - winevent]
description = Identifies usage of hh.exe executing recently modified .chm files.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\hh.exe" Process_Command_Line="*.chm*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1223" | eval sigma_title="HH.exe Execution" | eval sigma_description="Identifies usage of hh.exe executing recently modified .chm files."
dispatch.earliest_time = -24h@h
alert.track = 0

[HH.exe Execution - sysmon]
description = Identifies usage of hh.exe executing recently modified .chm files.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\hh.exe" CommandLine="*.chm*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1223" | eval sigma_title="HH.exe Execution" | eval sigma_description="Identifies usage of hh.exe executing recently modified .chm files."
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateMiniDump Hacktool - winevent]
description = Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\CreateMiniDump.exe*" OR Imphash="4a07f944a83e8a7c2525efa35dd30e2f")) (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="11" TargetFilename="*\\lsass.dmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="CreateMiniDump Hacktool" | eval sigma_description="Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[CreateMiniDump Hacktool - sysmon]
description = Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\CreateMiniDump.exe*" OR Imphash="4a07f944a83e8a7c2525efa35dd30e2f")) ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" TargetFilename="*\\lsass.dmp*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="CreateMiniDump Hacktool" | eval sigma_description="Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[HTML Help Shell Spawn - winevent]
description = Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="C:\\Windows\\hh.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\rundll32.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1223" | eval sigma_title="HTML Help Shell Spawn" | eval sigma_description="Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)"
dispatch.earliest_time = -24h@h
alert.track = 0

[HTML Help Shell Spawn - sysmon]
description = Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="C:\\Windows\\hh.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\rundll32.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1223" | eval sigma_title="HTML Help Shell Spawn" | eval sigma_description="Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious HWP Sub Processes - winevent]
description = Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\Hwp.exe" New_Process_Name="*\\gbb.exe") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.initial_access attack.t1059 attack.t1202 attack.t1193 attack.g0032" | eval sigma_title="Suspicious HWP Sub Processes" | eval sigma_description="Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious HWP Sub Processes - sysmon]
description = Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\Hwp.exe" Image="*\\gbb.exe") | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.initial_access attack.t1059 attack.t1202 attack.t1193 attack.g0032" | eval sigma_title="Suspicious HWP Sub Processes" | eval sigma_description="Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Lateralization Detection - winevent]
description = Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Creator_Process_Name="*\\wmiprvse.exe" OR Creator_Process_Name="*\\mmc.exe" OR Creator_Process_Name="*\\explorer.exe" OR Creator_Process_Name="*\\services.exe") (Process_Command_Line="*cmd.exe* /Q /c * \\\\127.0.0.1\\*&1*")) OR ((ParentCommandLine="*svchost.exe -k netsvcs" OR ParentCommandLine="taskeng.exe*") (Process_Command_Line="cmd.exe /C *Windows\\Temp\\*&1")))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1047 attack.t1175" | eval sigma_title="Impacket Lateralization Detection" | eval sigma_description="Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Impacket Lateralization Detection - sysmon]
description = Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((ParentImage="*\\wmiprvse.exe" OR ParentImage="*\\mmc.exe" OR ParentImage="*\\explorer.exe" OR ParentImage="*\\services.exe") (CommandLine="*cmd.exe* /Q /c * \\\\127.0.0.1\\*&1*")) OR ((ParentCommandLine="*svchost.exe -k netsvcs" OR ParentCommandLine="taskeng.exe*") (CommandLine="cmd.exe /C *Windows\\Temp\\*&1")))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1047 attack.t1175" | eval sigma_title="Impacket Lateralization Detection" | eval sigma_description="Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution - winevent]
description = Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\pcalua.exe" OR Creator_Process_Name="*\\forfiles.exe")) | table ComputerName,Account_Name,ParentCommandLine,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Indirect Command Execution" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Indirect Command Execution - sysmon]
description = Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\pcalua.exe" OR ParentImage="*\\forfiles.exe")) | table ComputerName,User,ParentCommandLine,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Indirect Command Execution" | eval sigma_description="Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Debugger Registration Cmdline - winevent]
description = Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\sethc.exe*" OR Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\utilman.exe*" OR Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\osk.exe*" OR Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\magnify.exe*" OR Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\narrator.exe*" OR Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\displayswitch.exe*" OR Process_Command_Line="*\\CurrentVersion\\Image File Execution Options\\atbroker.exe*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1015" | eval sigma_title="Suspicious Debugger Registration Cmdline" | eval sigma_description="Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Debugger Registration Cmdline - sysmon]
description = Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\CurrentVersion\\Image File Execution Options\\sethc.exe*" OR CommandLine="*\\CurrentVersion\\Image File Execution Options\\utilman.exe*" OR CommandLine="*\\CurrentVersion\\Image File Execution Options\\osk.exe*" OR CommandLine="*\\CurrentVersion\\Image File Execution Options\\magnify.exe*" OR CommandLine="*\\CurrentVersion\\Image File Execution Options\\narrator.exe*" OR CommandLine="*\\CurrentVersion\\Image File Execution Options\\displayswitch.exe*" OR CommandLine="*\\CurrentVersion\\Image File Execution Options\\atbroker.exe*")) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1015" | eval sigma_title="Suspicious Debugger Registration Cmdline" | eval sigma_description="Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive AT Job - winevent]
description = Detect an interactive AT job, which may be used as a form of privilege escalation
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\at.exe" Process_Command_Line="*interactive*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1053" | eval sigma_title="Interactive AT Job" | eval sigma_description="Detect an interactive AT job, which may be used as a form of privilege escalation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Interactive AT Job - sysmon]
description = Detect an interactive AT job, which may be used as a form of privilege escalation
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\at.exe" CommandLine="*interactive*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1053" | eval sigma_title="Interactive AT Job" | eval sigma_description="Detect an interactive AT job, which may be used as a form of privilege escalation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Kernel and 3rd-Party Drivers Exploits Token Stealing - winevent]
description = Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentIntegrityLevel="Medium" IntegrityLevel="System" Account_Name="NT AUTHORITY\\SYSTEM") | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Windows Kernel and 3rd-Party Drivers Exploits Token Stealing" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Kernel and 3rd-Party Drivers Exploits Token Stealing - sysmon]
description = Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentIntegrityLevel="Medium" IntegrityLevel="System" User="NT AUTHORITY\\SYSTEM") | eval sigma_attack_tags="attack.privilege_escalation attack.t1068" | eval sigma_title="Windows Kernel and 3rd-Party Drivers Exploits Token Stealing" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spwaned by SVCHOST - winevent]
description = Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\svchost.exe" New_Process_Name="*\\mshta.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1170" | eval sigma_title="MSHTA Spwaned by SVCHOST" | eval sigma_description="Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spwaned by SVCHOST - sysmon]
description = Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\svchost.exe" Image="*\\mshta.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1170" | eval sigma_title="MSHTA Spwaned by SVCHOST" | eval sigma_description="Detects MSHTA.EXE spwaned by SVCHOST as seen in LethalHTA and described in report"
dispatch.earliest_time = -24h@h
alert.track = 0

[Local Accounts Discovery - winevent]
description = Local accounts, System Owner/User discovery using operating systems utilities
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (((New_Process_Name="*\\whoami.exe" OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="*useraccount*" Process_Command_Line="*get*") OR (New_Process_Name="*\\quser.exe" OR New_Process_Name="*\\qwinsta.exe") OR (New_Process_Name="*\\cmdkey.exe" Process_Command_Line="*/list*") OR (New_Process_Name="*\\cmd.exe" Process_Command_Line="*/c*" Process_Command_Line="*dir *" Process_Command_Line="*\\Users\\*")) NOT ((Process_Command_Line="* rmdir *"))) OR (((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*user*") NOT ((Process_Command_Line="*/domain*" OR Process_Command_Line="*/add*" OR Process_Command_Line="*/delete*" OR Process_Command_Line="*/active*" OR Process_Command_Line="*/expires*" OR Process_Command_Line="*/passwordreq*" OR Process_Command_Line="*/scriptpath*" OR Process_Command_Line="*/times*" OR Process_Command_Line="*/workstations*"))))) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1033 attack.t1087" | eval sigma_title="Local Accounts Discovery" | eval sigma_description="Local accounts, System Owner/User discovery using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Local Accounts Discovery - sysmon]
description = Local accounts, System Owner/User discovery using operating systems utilities
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (((Image="*\\whoami.exe" OR (Image="*\\wmic.exe" CommandLine="*useraccount*" CommandLine="*get*") OR (Image="*\\quser.exe" OR Image="*\\qwinsta.exe") OR (Image="*\\cmdkey.exe" CommandLine="*/list*") OR (Image="*\\cmd.exe" CommandLine="*/c*" CommandLine="*dir *" CommandLine="*\\Users\\*")) NOT ((CommandLine="* rmdir *"))) OR (((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*user*") NOT ((CommandLine="*/domain*" OR CommandLine="*/add*" OR CommandLine="*/delete*" OR CommandLine="*/active*" OR CommandLine="*/expires*" OR CommandLine="*/passwordreq*" OR CommandLine="*/scriptpath*" OR CommandLine="*/times*" OR CommandLine="*/workstations*"))))) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1033 attack.t1087" | eval sigma_title="Local Accounts Discovery" | eval sigma_description="Local accounts, System Owner/User discovery using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dumping - winevent]
description = Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((Process_Command_Line="*lsass*" Process_Command_Line="*.dmp*") NOT (New_Process_Name="*\\werfault.exe")) OR (New_Process_Name="*\\procdump*" New_Process_Name="*.exe" Process_Command_Line="*lsass*"))) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="LSASS Memory Dumping" | eval sigma_description="Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[LSASS Memory Dumping - sysmon]
description = Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((CommandLine="*lsass*" CommandLine="*.dmp*") NOT (Image="*\\werfault.exe")) OR (Image="*\\procdump*" Image="*.exe" CommandLine="*lsass*"))) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="LSASS Memory Dumping" | eval sigma_description="Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials."
dispatch.earliest_time = -24h@h
alert.track = 0

[Adwind RAT / JRAT - winevent]
description = Detects javaw.exe in AppData folder as used by Adwind / JRAT
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\AppData\\Roaming\\Oracle*\\java*.exe *" OR Process_Command_Line="*cscript.exe *Retrive*.vbs *")) (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="11" (TargetFilename="*\\AppData\\Roaming\\Oracle\\bin\\java*.exe" OR TargetFilename="*\\Retrive*.vbs")) (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="13" TargetObject="HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run*" Details="%AppData%\\Roaming\\Oracle\\bin\\*") | eval sigma_attack_tags="attack.execution attack.t1064" | eval sigma_title="Adwind RAT / JRAT" | eval sigma_description="Detects javaw.exe in AppData folder as used by Adwind / JRAT"
dispatch.earliest_time = -24h@h
alert.track = 0

[Adwind RAT / JRAT - sysmon]
description = Detects javaw.exe in AppData folder as used by Adwind / JRAT
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\AppData\\Roaming\\Oracle*\\java*.exe *" OR CommandLine="*cscript.exe *Retrive*.vbs *")) ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="11" (TargetFilename="*\\AppData\\Roaming\\Oracle\\bin\\java*.exe" OR TargetFilename="*\\Retrive*.vbs")) ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="13" TargetObject="HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run*" Details="%AppData%\\Roaming\\Oracle\\bin\\*") | eval sigma_attack_tags="attack.execution attack.t1064" | eval sigma_title="Adwind RAT / JRAT" | eval sigma_description="Detects javaw.exe in AppData folder as used by Adwind / JRAT"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dridex Process Pattern - winevent]
description = Detects typical Dridex process patterns
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\svchost.exe C:\\Users\\*\\Desktop\\*" OR (Creator_Process_Name="*\\svchost.exe*" (Process_Command_Line="*whoami.exe /all" OR Process_Command_Line="*net.exe view")))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Dridex Process Pattern" | eval sigma_description="Detects typical Dridex process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Dridex Process Pattern - sysmon]
description = Detects typical Dridex process patterns
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\svchost.exe C:\\Users\\*\\Desktop\\*" OR (ParentImage="*\\svchost.exe*" (CommandLine="*whoami.exe /all" OR CommandLine="*net.exe view")))) | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1055" | eval sigma_title="Dridex Process Pattern" | eval sigma_description="Detects typical Dridex process patterns"
dispatch.earliest_time = -24h@h
alert.track = 0

[DTRACK Process Creation - winevent]
description = Detects specific process parameters as seen in DTRACK infections
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* echo EEEE > *") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="DTRACK Process Creation" | eval sigma_description="Detects specific process parameters as seen in DTRACK infections"
dispatch.earliest_time = -24h@h
alert.track = 0

[DTRACK Process Creation - sysmon]
description = Detects specific process parameters as seen in DTRACK infections
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* echo EEEE > *") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="DTRACK Process Creation" | eval sigma_description="Detects specific process parameters as seen in DTRACK infections"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet Process Creation - winevent]
description = Detects all Emotet like process executions that are not covered by the more generic rules
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -e* PAA*" OR Process_Command_Line="*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*" OR Process_Command_Line="*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*" OR Process_Command_Line="*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*" OR Process_Command_Line="*IgAoACcAKgAnACkAOwAkA*" OR Process_Command_Line="*IAKAAnACoAJwApADsAJA*" OR Process_Command_Line="*iACgAJwAqACcAKQA7ACQA*" OR Process_Command_Line="*JABGAGwAeAByAGgAYwBmAGQ*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Emotet Process Creation" | eval sigma_description="Detects all Emotet like process executions that are not covered by the more generic rules"
dispatch.earliest_time = -24h@h
alert.track = 0

[Emotet Process Creation - sysmon]
description = Detects all Emotet like process executions that are not covered by the more generic rules
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -e* PAA*" OR CommandLine="*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*" OR CommandLine="*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*" OR CommandLine="*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*" OR CommandLine="*IgAoACcAKgAnACkAOwAkA*" OR CommandLine="*IAKAAnACoAJwApADsAJA*" OR CommandLine="*iACgAJwAqACcAKQA7ACQA*" OR CommandLine="*JABGAGwAeAByAGgAYwBmAGQ*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Emotet Process Creation" | eval sigma_description="Detects all Emotet like process executions that are not covered by the more generic rules"
dispatch.earliest_time = -24h@h
alert.track = 0

[Formbook Process Creation - winevent]
description = Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (ParentCommandLine="C:\\Windows\\System32\\*.exe" OR ParentCommandLine="C:\\Windows\\SysWOW64\\*.exe") (Process_Command_Line="* /c del \"C:\\Users\\*\\AppData\\Local\\Temp\\*.exe" OR Process_Command_Line="* /c del \"C:\\Users\\*\\Desktop\\*.exe" OR Process_Command_Line="* /C type nul > \"C:\\Users\\*\\Desktop\\*.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Formbook Process Creation" | eval sigma_description="Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters."
dispatch.earliest_time = -24h@h
alert.track = 0

[Formbook Process Creation - sysmon]
description = Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentCommandLine="C:\\Windows\\System32\\*.exe" OR ParentCommandLine="C:\\Windows\\SysWOW64\\*.exe") (CommandLine="* /c del \"C:\\Users\\*\\AppData\\Local\\Temp\\*.exe" OR CommandLine="* /c del \"C:\\Users\\*\\Desktop\\*.exe" OR CommandLine="* /C type nul > \"C:\\Users\\*\\Desktop\\*.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Formbook Process Creation" | eval sigma_description="Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters."
dispatch.earliest_time = -24h@h
alert.track = 0

[NotPetya Ransomware Activity - winevent]
description = Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\AppData\\Local\\Temp\\* \\.\\pipe\\*" OR (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*.dat,#1") OR "*\\perfc.dat*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.credential_access attack.defense_evasion attack.t1085 attack.t1070 attack.t1003 car.2016-04-002" | eval sigma_title="NotPetya Ransomware Activity" | eval sigma_description="Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil"
dispatch.earliest_time = -24h@h
alert.track = 0

[NotPetya Ransomware Activity - sysmon]
description = Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\AppData\\Local\\Temp\\* \\.\\pipe\\*" OR (Image="*\\rundll32.exe" CommandLine="*.dat,#1") OR "*\\perfc.dat*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.credential_access attack.defense_evasion attack.t1085 attack.t1070 attack.t1003 car.2016-04-002" | eval sigma_title="NotPetya Ransomware Activity" | eval sigma_description="Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil"
dispatch.earliest_time = -24h@h
alert.track = 0

[QBot Process Creation - winevent]
description = Detects QBot like process executions
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Creator_Process_Name="*\\WinRAR.exe" New_Process_Name="*\\wscript.exe") OR Process_Command_Line="* /c ping.exe -n 6 127.0.0.1 & type *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="QBot Process Creation" | eval sigma_description="Detects QBot like process executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[QBot Process Creation - sysmon]
description = Detects QBot like process executions
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((ParentImage="*\\WinRAR.exe" Image="*\\wscript.exe") OR CommandLine="* /c ping.exe -n 6 127.0.0.1 & type *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="QBot Process Creation" | eval sigma_description="Detects QBot like process executions"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - winevent]
description = Detects Ryuk ransomware activity
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*Microsoft\\Windows\\CurrentVersion\\Run*" Process_Command_Line="*C:\\users\\Public\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ryuk Ransomware - sysmon]
description = Detects Ryuk ransomware activity
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*Microsoft\\Windows\\CurrentVersion\\Run*" CommandLine="*C:\\users\\Public\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Ryuk Ransomware" | eval sigma_description="Detects Ryuk ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - winevent]
description = Detects wscript/cscript executions of scripts located in user directories
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="* C:\\Users\\*.jse *" OR Process_Command_Line="* C:\\Users\\*.vbe *" OR Process_Command_Line="* C:\\Users\\*.js *" OR Process_Command_Line="* C:\\Users\\*.vba *" OR Process_Command_Line="* C:\\Users\\*.vbs *" OR Process_Command_Line="* C:\\ProgramData\\*.jse *" OR Process_Command_Line="* C:\\ProgramData\\*.vbe *" OR Process_Command_Line="* C:\\ProgramData\\*.js *" OR Process_Command_Line="* C:\\ProgramData\\*.vba *" OR Process_Command_Line="* C:\\ProgramData\\*.vbs *")) NOT (Creator_Process_Name="*\\winzip*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1064" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects wscript/cscript executions of scripts located in user directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[WScript or CScript Dropper - sysmon]
description = Detects wscript/cscript executions of scripts located in user directories
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="* C:\\Users\\*.jse *" OR CommandLine="* C:\\Users\\*.vbe *" OR CommandLine="* C:\\Users\\*.js *" OR CommandLine="* C:\\Users\\*.vba *" OR CommandLine="* C:\\Users\\*.vbs *" OR CommandLine="* C:\\ProgramData\\*.jse *" OR CommandLine="* C:\\ProgramData\\*.vbe *" OR CommandLine="* C:\\ProgramData\\*.js *" OR CommandLine="* C:\\ProgramData\\*.vba *" OR CommandLine="* C:\\ProgramData\\*.vbs *")) NOT (ParentImage="*\\winzip*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1064" | eval sigma_title="WScript or CScript Dropper" | eval sigma_description="Detects wscript/cscript executions of scripts located in user directories"
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Recon Activity - winevent]
description = Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\nltest.exe") (Process_Command_Line="/domain_trusts /all_trusts" OR Process_Command_Line="/domain_trusts")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1482" | eval sigma_title="Trickbot Malware Recon Activity" | eval sigma_description="Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network."
dispatch.earliest_time = -24h@h
alert.track = 0

[Trickbot Malware Recon Activity - sysmon]
description = Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\nltest.exe") (CommandLine="/domain_trusts /all_trusts" OR CommandLine="/domain_trusts")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1482" | eval sigma_title="Trickbot Malware Recon Activity" | eval sigma_description="Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network."
dispatch.earliest_time = -24h@h
alert.track = 0

[WannaCry Ransomware - winevent]
description = Detects WannaCry ransomware activity
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tasksche.exe" OR New_Process_Name="*\\mssecsvc.exe" OR New_Process_Name="*\\taskdl.exe" OR New_Process_Name="*\\@WanaDecryptor@*" OR New_Process_Name="*\\WanaDecryptor*" OR New_Process_Name="*\\taskhsvc.exe" OR New_Process_Name="*\\taskse.exe" OR New_Process_Name="*\\111.exe" OR New_Process_Name="*\\lhdfrgui.exe" OR New_Process_Name="*\\diskpart.exe" OR New_Process_Name="*\\linuxnew.exe" OR New_Process_Name="*\\wannacry.exe") OR (Process_Command_Line="*icacls * /grant Everyone:F /T /C /Q*" OR Process_Command_Line="*bcdedit /set {default} recoveryenabled no*" OR Process_Command_Line="*wbadmin delete catalog -quiet*" OR Process_Command_Line="*@Please_Read_Me@.txt*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="WannaCry Ransomware" | eval sigma_description="Detects WannaCry ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[WannaCry Ransomware - sysmon]
description = Detects WannaCry ransomware activity
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tasksche.exe" OR Image="*\\mssecsvc.exe" OR Image="*\\taskdl.exe" OR Image="*\\@WanaDecryptor@*" OR Image="*\\WanaDecryptor*" OR Image="*\\taskhsvc.exe" OR Image="*\\taskse.exe" OR Image="*\\111.exe" OR Image="*\\lhdfrgui.exe" OR Image="*\\diskpart.exe" OR Image="*\\linuxnew.exe" OR Image="*\\wannacry.exe") OR (CommandLine="*icacls * /grant Everyone:F /T /C /Q*" OR CommandLine="*bcdedit /set {default} recoveryenabled no*" OR CommandLine="*wbadmin delete catalog -quiet*" OR CommandLine="*@Please_Read_Me@.txt*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="WannaCry Ransomware" | eval sigma_description="Detects WannaCry ransomware activity"
dispatch.earliest_time = -24h@h
alert.track = 0

[MavInject Process Injection - winevent]
description = Detects process injection using the signed Windows tool Mavinject32.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /INJECTRUNNING *") | eval sigma_attack_tags="attack.t1055 attack.t1218" | eval sigma_title="MavInject Process Injection" | eval sigma_description="Detects process injection using the signed Windows tool Mavinject32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[MavInject Process Injection - sysmon]
description = Detects process injection using the signed Windows tool Mavinject32.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /INJECTRUNNING *") | eval sigma_attack_tags="attack.t1055 attack.t1218" | eval sigma_title="MavInject Process Injection" | eval sigma_description="Detects process injection using the signed Windows tool Mavinject32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Start - winevent]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\services.exe" ((Process_Command_Line="*cmd*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*%COMSPEC%*" Process_Command_Line="*/c*" Process_Command_Line="*echo*" Process_Command_Line="*\\pipe\\*") OR (Process_Command_Line="*rundll32*" Process_Command_Line="*.dll,a*" Process_Command_Line="*/p:*"))) NOT (Process_Command_Line="*MpCmdRun*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Start" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Meterpreter or Cobalt Strike Getsystem Service Start - sysmon]
description = Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\services.exe" ((CommandLine="*cmd*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*%COMSPEC%*" CommandLine="*/c*" CommandLine="*echo*" CommandLine="*\\pipe\\*") OR (CommandLine="*rundll32*" CommandLine="*.dll,a*" CommandLine="*/p:*"))) NOT (CommandLine="*MpCmdRun*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Meterpreter or Cobalt Strike Getsystem Service Start" | eval sigma_description="Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Command Line - winevent]
description = Detection well-known mimikatz command line arguments
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*DumpCreds*" OR Process_Command_Line="*invoke-mimikatz*") OR ((Process_Command_Line="*rpc*" OR Process_Command_Line="*token*" OR Process_Command_Line="*crypto*" OR Process_Command_Line="*dpapi*" OR Process_Command_Line="*sekurlsa*" OR Process_Command_Line="*kerberos*" OR Process_Command_Line="*lsadump*" OR Process_Command_Line="*privilege*" OR Process_Command_Line="*process*") (Process_Command_Line="*::*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Mimikatz Command Line" | eval sigma_description="Detection well-known mimikatz command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mimikatz Command Line - sysmon]
description = Detection well-known mimikatz command line arguments
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*DumpCreds*" OR CommandLine="*invoke-mimikatz*") OR ((CommandLine="*rpc*" OR CommandLine="*token*" OR CommandLine="*crypto*" OR CommandLine="*dpapi*" OR CommandLine="*sekurlsa*" OR CommandLine="*kerberos*" OR CommandLine="*lsadump*" OR CommandLine="*privilege*" OR CommandLine="*process*") (CommandLine="*::*")))) | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Mimikatz Command Line" | eval sigma_description="Detection well-known mimikatz command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from MMC.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\mmc.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\reg.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\BITSADMIN*")) | table Process_Command_Line,New_Process_Name,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1175" | eval sigma_title="MMC Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MMC."
dispatch.earliest_time = -24h@h
alert.track = 0

[MMC Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from MMC.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\mmc.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\reg.exe" OR Image="*\\regsvr32.exe" OR Image="*\\BITSADMIN*")) | table CommandLine,Image,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1175" | eval sigma_title="MMC Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MMC."
dispatch.earliest_time = -24h@h
alert.track = 0

[Mshta JavaScript Execution - winevent]
description = Identifies suspicious mshta.exe commands
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\mshta.exe" Process_Command_Line="*javascript*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1170" | eval sigma_title="Mshta JavaScript Execution" | eval sigma_description="Identifies suspicious mshta.exe commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Mshta JavaScript Execution - sysmon]
description = Identifies suspicious mshta.exe commands
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\mshta.exe" CommandLine="*javascript*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1170" | eval sigma_title="Mshta JavaScript Execution" | eval sigma_description="Identifies suspicious mshta.exe commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from MSHTA.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\mshta.exe" (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\reg.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\BITSADMIN*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1170 car.2013-02-003 car.2013-03-001 car.2014-04-003" | eval sigma_title="MSHTA Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MSHTA."
dispatch.earliest_time = -24h@h
alert.track = 0

[MSHTA Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from MSHTA.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\mshta.exe" (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\reg.exe" OR Image="*\\regsvr32.exe" OR Image="*\\BITSADMIN*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1170 car.2013-02-003 car.2013-03-001 car.2014-04-003" | eval sigma_title="MSHTA Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from MSHTA."
dispatch.earliest_time = -24h@h
alert.track = 0

[Quick Execution of a Series of Suspicious Commands - winevent]
description = Detects multiple suspicious process in a limited timeframe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="arp.exe" OR Process_Command_Line="at.exe" OR Process_Command_Line="attrib.exe" OR Process_Command_Line="cscript.exe" OR Process_Command_Line="dsquery.exe" OR Process_Command_Line="hostname.exe" OR Process_Command_Line="ipconfig.exe" OR Process_Command_Line="mimikatz.exe" OR Process_Command_Line="nbtstat.exe" OR Process_Command_Line="net.exe" OR Process_Command_Line="netsh.exe" OR Process_Command_Line="nslookup.exe" OR Process_Command_Line="ping.exe" OR Process_Command_Line="quser.exe" OR Process_Command_Line="qwinsta.exe" OR Process_Command_Line="reg.exe" OR Process_Command_Line="runas.exe" OR Process_Command_Line="sc.exe" OR Process_Command_Line="schtasks.exe" OR Process_Command_Line="ssh.exe" OR Process_Command_Line="systeminfo.exe" OR Process_Command_Line="taskkill.exe" OR Process_Command_Line="telnet.exe" OR Process_Command_Line="tracert.exe" OR Process_Command_Line="wscript.exe" OR Process_Command_Line="xcopy.exe" OR Process_Command_Line="pscp.exe" OR Process_Command_Line="copy.exe" OR Process_Command_Line="robocopy.exe" OR Process_Command_Line="certutil.exe" OR Process_Command_Line="vssadmin.exe" OR Process_Command_Line="powershell.exe" OR Process_Command_Line="wevtutil.exe" OR Process_Command_Line="psexec.exe" OR Process_Command_Line="bcedit.exe" OR Process_Command_Line="wbadmin.exe" OR Process_Command_Line="icacls.exe" OR Process_Command_Line="diskpart.exe")) | eventstats count as val by MachineName| search val > 5 | eval sigma_attack_tags="car.2013-04-002" | eval sigma_title="Quick Execution of a Series of Suspicious Commands" | eval sigma_description="Detects multiple suspicious process in a limited timeframe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Quick Execution of a Series of Suspicious Commands - sysmon]
description = Detects multiple suspicious process in a limited timeframe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="arp.exe" OR CommandLine="at.exe" OR CommandLine="attrib.exe" OR CommandLine="cscript.exe" OR CommandLine="dsquery.exe" OR CommandLine="hostname.exe" OR CommandLine="ipconfig.exe" OR CommandLine="mimikatz.exe" OR CommandLine="nbtstat.exe" OR CommandLine="net.exe" OR CommandLine="netsh.exe" OR CommandLine="nslookup.exe" OR CommandLine="ping.exe" OR CommandLine="quser.exe" OR CommandLine="qwinsta.exe" OR CommandLine="reg.exe" OR CommandLine="runas.exe" OR CommandLine="sc.exe" OR CommandLine="schtasks.exe" OR CommandLine="ssh.exe" OR CommandLine="systeminfo.exe" OR CommandLine="taskkill.exe" OR CommandLine="telnet.exe" OR CommandLine="tracert.exe" OR CommandLine="wscript.exe" OR CommandLine="xcopy.exe" OR CommandLine="pscp.exe" OR CommandLine="copy.exe" OR CommandLine="robocopy.exe" OR CommandLine="certutil.exe" OR CommandLine="vssadmin.exe" OR CommandLine="powershell.exe" OR CommandLine="wevtutil.exe" OR CommandLine="psexec.exe" OR CommandLine="bcedit.exe" OR CommandLine="wbadmin.exe" OR CommandLine="icacls.exe" OR CommandLine="diskpart.exe")) | eventstats count as val by MachineName| search val > 5 | eval sigma_attack_tags="car.2013-04-002" | eval sigma_title="Quick Execution of a Series of Suspicious Commands" | eval sigma_description="Detects multiple suspicious process in a limited timeframe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Enumeration - winevent]
description = Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*view*") NOT (Process_Command_Line="*\\\*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Windows Network Enumeration" | eval sigma_description="Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Network Enumeration - sysmon]
description = Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*view*") NOT (CommandLine="*\\\*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.discovery attack.t1018" | eval sigma_title="Windows Network Enumeration" | eval sigma_description="Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool."
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe User Account Creation - winevent]
description = Identifies creation of local users via the net.exe command
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*user*" Process_Command_Line="*add*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.persistence attack.credential_access attack.t1136" | eval sigma_title="Net.exe User Account Creation" | eval sigma_description="Identifies creation of local users via the net.exe command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe User Account Creation - sysmon]
description = Identifies creation of local users via the net.exe command
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*user*" CommandLine="*add*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.persistence attack.credential_access attack.t1136" | eval sigma_title="Net.exe User Account Creation" | eval sigma_description="Identifies creation of local users via the net.exe command"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Opening - winevent]
description = Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*netsh*" ((Process_Command_Line="*firewall add portopening*" Process_Command_Line="*tcp 3389*") OR (Process_Command_Line="*advfirewall firewall add rule*" Process_Command_Line="*action=allow*" Process_Command_Line="*protocol=TCP*" Process_Command_Line="*localport=3389*"))) | eval sigma_attack_tags="attack.command_and_control attack.t1076" | eval sigma_title="Netsh RDP Port Opening" | eval sigma_description="Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Opening - sysmon]
description = Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*netsh*" ((CommandLine="*firewall add portopening*" CommandLine="*tcp 3389*") OR (CommandLine="*advfirewall firewall add rule*" CommandLine="*action=allow*" CommandLine="*protocol=TCP*" CommandLine="*localport=3389*"))) | eval sigma_attack_tags="attack.command_and_control attack.t1076" | eval sigma_title="Netsh RDP Port Opening" | eval sigma_description="Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Program Allowed with Suspcious Location - winevent]
description = Detects Netsh commands that allows a suspcious application location on Windows Firewall
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*netsh*" (Process_Command_Line="*firewall add allowedprogram*" OR (Process_Command_Line="*advfirewall firewall add rule*" Process_Command_Line="*action=allow*" Process_Command_Line="*program=*")) (Process_Command_Line="*%TEMP%*" OR Process_Command_Line="*:\\RECYCLER\\*" OR Process_Command_Line="*C:\\$Recycle.bin\\*" OR Process_Command_Line="*:\\SystemVolumeInformation\\*" OR Process_Command_Line="*C:\\Windows\\Tasks\\*" OR Process_Command_Line="*C:\\Windows\\debug\\*" OR Process_Command_Line="*C:\\Windows\\fonts\\*" OR Process_Command_Line="*C:\\Windows\\help\\*" OR Process_Command_Line="*C:\\Windows\\drivers\\*" OR Process_Command_Line="*C:\\Windows\\addins\\*" OR Process_Command_Line="*C:\\Windows\\cursors\\*" OR Process_Command_Line="*C:\\Windows\\system32\\tasks\\*" OR Process_Command_Line="*C:\\Windows\\Temp\\*" OR Process_Command_Line="*C:\\Temp\\*" OR Process_Command_Line="*C:\\Users\\Public\\*" OR Process_Command_Line="*%Public%\\*" OR Process_Command_Line="*C:\\Users\\Default\\*" OR Process_Command_Line="*C:\\Users\\Desktop\\*" OR Process_Command_Line="*\\Downloads\\*" OR Process_Command_Line="*\\Temporary Internet Files\\Content.Outlook\\*" OR Process_Command_Line="*\\Local Settings\\Temporary Internet Files\\*")) | eval sigma_attack_tags="attack.lateral_movement attack.command_and_control attack.t1090" | eval sigma_title="Netsh Program Allowed with Suspcious Location" | eval sigma_description="Detects Netsh commands that allows a suspcious application location on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Program Allowed with Suspcious Location - sysmon]
description = Detects Netsh commands that allows a suspcious application location on Windows Firewall
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*netsh*" (CommandLine="*firewall add allowedprogram*" OR (CommandLine="*advfirewall firewall add rule*" CommandLine="*action=allow*" CommandLine="*program=*")) (CommandLine="*%TEMP%*" OR CommandLine="*:\\RECYCLER\\*" OR CommandLine="*C:\\$Recycle.bin\\*" OR CommandLine="*:\\SystemVolumeInformation\\*" OR CommandLine="*C:\\Windows\\Tasks\\*" OR CommandLine="*C:\\Windows\\debug\\*" OR CommandLine="*C:\\Windows\\fonts\\*" OR CommandLine="*C:\\Windows\\help\\*" OR CommandLine="*C:\\Windows\\drivers\\*" OR CommandLine="*C:\\Windows\\addins\\*" OR CommandLine="*C:\\Windows\\cursors\\*" OR CommandLine="*C:\\Windows\\system32\\tasks\\*" OR CommandLine="*C:\\Windows\\Temp\\*" OR CommandLine="*C:\\Temp\\*" OR CommandLine="*C:\\Users\\Public\\*" OR CommandLine="*%Public%\\*" OR CommandLine="*C:\\Users\\Default\\*" OR CommandLine="*C:\\Users\\Desktop\\*" OR CommandLine="*\\Downloads\\*" OR CommandLine="*\\Temporary Internet Files\\Content.Outlook\\*" OR CommandLine="*\\Local Settings\\Temporary Internet Files\\*")) | eval sigma_attack_tags="attack.lateral_movement attack.command_and_control attack.t1090" | eval sigma_title="Netsh Program Allowed with Suspcious Location" | eval sigma_description="Detects Netsh commands that allows a suspcious application location on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port or Application Allowed - winevent]
description = Allow Incoming Connections by Port or Application on Windows Firewall
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*netsh*") (Process_Command_Line="*firewall add*")) | eval sigma_attack_tags="attack.lateral_movement attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port or Application Allowed" | eval sigma_description="Allow Incoming Connections by Port or Application on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port or Application Allowed - sysmon]
description = Allow Incoming Connections by Port or Application on Windows Firewall
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*netsh*") (CommandLine="*firewall add*")) | eval sigma_attack_tags="attack.lateral_movement attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port or Application Allowed" | eval sigma_description="Allow Incoming Connections by Port or Application on Windows Firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture a Network Trace with netsh.exe - winevent]
description = Detects capture a network trace via netsh.exe trace functionality
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*netsh*" Process_Command_Line="*trace*" Process_Command_Line="*start*") | eval sigma_attack_tags="attack.discovery attack.t1040" | eval sigma_title="Capture a Network Trace with netsh.exe" | eval sigma_description="Detects capture a network trace via netsh.exe trace functionality"
dispatch.earliest_time = -24h@h
alert.track = 0

[Capture a Network Trace with netsh.exe - sysmon]
description = Detects capture a network trace via netsh.exe trace functionality
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*netsh*" CommandLine="*trace*" CommandLine="*start*") | eval sigma_attack_tags="attack.discovery attack.t1040" | eval sigma_title="Capture a Network Trace with netsh.exe" | eval sigma_description="Detects capture a network trace via netsh.exe trace functionality"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Forwarding - winevent]
description = Detects netsh commands that configure a port forwarding of port 3389 used for RDP
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="netsh i* p*=3389 c*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021 car.2013-07-002" | eval sigma_title="Netsh RDP Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding of port 3389 used for RDP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh RDP Port Forwarding - sysmon]
description = Detects netsh commands that configure a port forwarding of port 3389 used for RDP
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="netsh i* p*=3389 c*")) | eval sigma_attack_tags="attack.lateral_movement attack.t1021 car.2013-07-002" | eval sigma_title="Netsh RDP Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding of port 3389 used for RDP"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port Forwarding - winevent]
description = Detects netsh commands that configure a port forwarding
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="netsh interface portproxy add v4tov4 *")) | eval sigma_attack_tags="attack.lateral_movement attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding"
dispatch.earliest_time = -24h@h
alert.track = 0

[Netsh Port Forwarding - sysmon]
description = Detects netsh commands that configure a port forwarding
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="netsh interface portproxy add v4tov4 *")) | eval sigma_attack_tags="attack.lateral_movement attack.command_and_control attack.t1090" | eval sigma_title="Netsh Port Forwarding" | eval sigma_description="Detects netsh commands that configure a port forwarding"
dispatch.earliest_time = -24h@h
alert.track = 0

[Harvesting of Wifi Credentials Using netsh.exe - winevent]
description = Detect the harvesting of wifi credentials using netsh.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="netsh wlan s* p* k*=clear")) | eval sigma_attack_tags="attack.discovery attack.t1040" | eval sigma_title="Harvesting of Wifi Credentials Using netsh.exe" | eval sigma_description="Detect the harvesting of wifi credentials using netsh.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Harvesting of Wifi Credentials Using netsh.exe - sysmon]
description = Detect the harvesting of wifi credentials using netsh.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="netsh wlan s* p* k*=clear")) | eval sigma_attack_tags="attack.discovery attack.t1040" | eval sigma_title="Harvesting of Wifi Credentials Using netsh.exe" | eval sigma_description="Detect the harvesting of wifi credentials using netsh.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Sniffing - winevent]
description = Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\tshark.exe" Process_Command_Line="*-i*") OR New_Process_Name="*\\windump.exe")) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.discovery attack.t1040" | eval sigma_title="Network Sniffing" | eval sigma_description="Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
dispatch.earliest_time = -24h@h
alert.track = 0

[Network Sniffing - sysmon]
description = Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\tshark.exe" CommandLine="*-i*") OR Image="*\\windump.exe")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.discovery attack.t1040" | eval sigma_title="Network Sniffing" | eval sigma_description="Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Creation - winevent]
description = Detects creation if a new service
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\sc.exe" Process_Command_Line="*create*" Process_Command_Line="*binpath*") OR (New_Process_Name="*\\powershell.exe" Process_Command_Line="*new-service*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050" | eval sigma_title="New Service Creation" | eval sigma_description="Detects creation if a new service"
dispatch.earliest_time = -24h@h
alert.track = 0

[New Service Creation - sysmon]
description = Detects creation if a new service
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\sc.exe" CommandLine="*create*" CommandLine="*binpath*") OR (Image="*\\powershell.exe" CommandLine="*new-service*"))) | eval sigma_attack_tags="attack.persistence attack.privilege_escalation attack.t1050" | eval sigma_title="New Service Creation" | eval sigma_description="Detects creation if a new service"
dispatch.earliest_time = -24h@h
alert.track = 0

[Non Interactive PowerShell - winevent]
description = Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" NOT (Creator_Process_Name="*\\explorer.exe")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Non Interactive PowerShell" | eval sigma_description="Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent."
dispatch.earliest_time = -24h@h
alert.track = 0

[Non Interactive PowerShell - sysmon]
description = Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" NOT (ParentImage="*\\explorer.exe")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Non Interactive PowerShell" | eval sigma_description="Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Product Spawning Windows Shell - winevent]
description = Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\WINWORD.EXE" OR Creator_Process_Name="*\\EXCEL.EXE" OR Creator_Process_Name="*\\POWERPNT.exe" OR Creator_Process_Name="*\\MSPUB.exe" OR Creator_Process_Name="*\\VISIO.exe" OR Creator_Process_Name="*\\OUTLOOK.EXE") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\scrcons.exe" OR New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\hh.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\forfiles.exe" OR New_Process_Name="*\\scriptrunner.exe" OR New_Process_Name="*\\mftrace.exe" OR New_Process_Name="*\\AppVLP.exe" OR New_Process_Name="*\\svchost.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059 attack.t1202 car.2013-02-003 car.2014-04-003" | eval sigma_title="Microsoft Office Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Office Product Spawning Windows Shell - sysmon]
description = Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\WINWORD.EXE" OR ParentImage="*\\EXCEL.EXE" OR ParentImage="*\\POWERPNT.exe" OR ParentImage="*\\MSPUB.exe" OR ParentImage="*\\VISIO.exe" OR ParentImage="*\\OUTLOOK.EXE") (Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\wscript.exe" OR Image="*\\cscript.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\scrcons.exe" OR Image="*\\schtasks.exe" OR Image="*\\regsvr32.exe" OR Image="*\\hh.exe" OR Image="*\\wmic.exe" OR Image="*\\mshta.exe" OR Image="*\\rundll32.exe" OR Image="*\\msiexec.exe" OR Image="*\\forfiles.exe" OR Image="*\\scriptrunner.exe" OR Image="*\\mftrace.exe" OR Image="*\\AppVLP.exe" OR Image="*\\svchost.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059 attack.t1202 car.2013-02-003 car.2014-04-003" | eval sigma_title="Microsoft Office Product Spawning Windows Shell" | eval sigma_description="Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio."
dispatch.earliest_time = -24h@h
alert.track = 0

[MS Office Product Spawning Exe in User Dir - winevent]
description = Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\WINWORD.EXE" OR Creator_Process_Name="*\\EXCEL.EXE" OR Creator_Process_Name="*\\POWERPNT.exe" OR Creator_Process_Name="*\\MSPUB.exe" OR Creator_Process_Name="*\\VISIO.exe" OR Creator_Process_Name="*\\OUTLOOK.EXE") (New_Process_Name="C:\\users\\*.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059 attack.t1202 FIN7 car.2013-05-002" | eval sigma_title="MS Office Product Spawning Exe in User Dir" | eval sigma_description="Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[MS Office Product Spawning Exe in User Dir - sysmon]
description = Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\WINWORD.EXE" OR ParentImage="*\\EXCEL.EXE" OR ParentImage="*\\POWERPNT.exe" OR ParentImage="*\\MSPUB.exe" OR ParentImage="*\\VISIO.exe" OR ParentImage="*\\OUTLOOK.EXE") (Image="C:\\users\\*.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1059 attack.t1202 FIN7 car.2013-05-002" | eval sigma_title="MS Office Product Spawning Exe in User Dir" | eval sigma_description="Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable Used by PlugX in Uncommon Location - winevent]
description = Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((((((((((((New_Process_Name="*\\CamMute.exe" NOT (New_Process_Name="*\\Lenovo\\Communication Utility\\*")) OR (New_Process_Name="*\\chrome_frame_helper.exe" NOT (New_Process_Name="*\\Google\\Chrome\\application\\*"))) OR (New_Process_Name="*\\dvcemumanager.exe" NOT (New_Process_Name="*\\Microsoft Device Emulator\\*"))) OR (New_Process_Name="*\\Gadget.exe" NOT (New_Process_Name="*\\Windows Media Player\\*"))) OR (New_Process_Name="*\\hcc.exe" NOT (New_Process_Name="*\\HTML Help Workshop\\*"))) OR (New_Process_Name="*\\hkcmd.exe" NOT ((New_Process_Name="*\\System32\\*" OR New_Process_Name="*\\SysNative\\*" OR New_Process_Name="*\\SysWowo64\\*")))) OR (New_Process_Name="*\\Mc.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*")))) OR (New_Process_Name="*\\MsMpEng.exe" NOT ((New_Process_Name="*\\Microsoft Security Client\\*" OR New_Process_Name="*\\Windows Defender\\*" OR New_Process_Name="*\\AntiMalware\\*")))) OR (New_Process_Name="*\\msseces.exe" NOT ((New_Process_Name="*\\Microsoft Security Center\\*" OR New_Process_Name="*\\Microsoft Security Client\\*" OR New_Process_Name="*\\Microsoft Security Essentials\\*")))) OR (New_Process_Name="*\\OInfoP11.exe" NOT (New_Process_Name="*\\Common Files\\Microsoft Shared\\*"))) OR (New_Process_Name="*\\OleView.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*" OR New_Process_Name="*\\Windows Resource Kit\\*")))) OR (New_Process_Name="*\\rc.exe" NOT ((New_Process_Name="*\\Microsoft Visual Studio*" OR New_Process_Name="*\\Microsoft SDK*" OR New_Process_Name="*\\Windows Kit*" OR New_Process_Name="*\\Windows Resource Kit\\*" OR New_Process_Name="*\\Microsoft.NET\\*"))))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.s0013 attack.defense_evasion attack.t1073" | eval sigma_title="Executable Used by PlugX in Uncommon Location" | eval sigma_description="Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executable Used by PlugX in Uncommon Location - sysmon]
description = Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((((((((((((Image="*\\CamMute.exe" NOT (Image="*\\Lenovo\\Communication Utility\\*")) OR (Image="*\\chrome_frame_helper.exe" NOT (Image="*\\Google\\Chrome\\application\\*"))) OR (Image="*\\dvcemumanager.exe" NOT (Image="*\\Microsoft Device Emulator\\*"))) OR (Image="*\\Gadget.exe" NOT (Image="*\\Windows Media Player\\*"))) OR (Image="*\\hcc.exe" NOT (Image="*\\HTML Help Workshop\\*"))) OR (Image="*\\hkcmd.exe" NOT ((Image="*\\System32\\*" OR Image="*\\SysNative\\*" OR Image="*\\SysWowo64\\*")))) OR (Image="*\\Mc.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*")))) OR (Image="*\\MsMpEng.exe" NOT ((Image="*\\Microsoft Security Client\\*" OR Image="*\\Windows Defender\\*" OR Image="*\\AntiMalware\\*")))) OR (Image="*\\msseces.exe" NOT ((Image="*\\Microsoft Security Center\\*" OR Image="*\\Microsoft Security Client\\*" OR Image="*\\Microsoft Security Essentials\\*")))) OR (Image="*\\OInfoP11.exe" NOT (Image="*\\Common Files\\Microsoft Shared\\*"))) OR (Image="*\\OleView.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*" OR Image="*\\Windows Resource Kit\\*")))) OR (Image="*\\rc.exe" NOT ((Image="*\\Microsoft Visual Studio*" OR Image="*\\Microsoft SDK*" OR Image="*\\Windows Kit*" OR Image="*\\Windows Resource Kit\\*" OR Image="*\\Microsoft.NET\\*"))))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.s0013 attack.defense_evasion attack.t1073" | eval sigma_title="Executable Used by PlugX in Uncommon Location" | eval sigma_description="Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Applocker Bypass - winevent]
description = Detects execution of executables that can be used to bypass Applocker whitelisting
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\msdt.exe*" OR Process_Command_Line="*\\installutil.exe*" OR Process_Command_Line="*\\regsvcs.exe*" OR Process_Command_Line="*\\regasm.exe*" OR Process_Command_Line="*\\msbuild.exe*" OR Process_Command_Line="*\\ieexec.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1118 attack.t1121 attack.t1127 attack.t1170" | eval sigma_title="Possible Applocker Bypass" | eval sigma_description="Detects execution of executables that can be used to bypass Applocker whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Applocker Bypass - sysmon]
description = Detects execution of executables that can be used to bypass Applocker whitelisting
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\msdt.exe*" OR CommandLine="*\\installutil.exe*" OR CommandLine="*\\regsvcs.exe*" OR CommandLine="*\\regasm.exe*" OR CommandLine="*\\msbuild.exe*" OR CommandLine="*\\ieexec.exe*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1118 attack.t1121 attack.t1127 attack.t1170" | eval sigma_title="Possible Applocker Bypass" | eval sigma_description="Detects execution of executables that can be used to bypass Applocker whitelisting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of Possible Rotten Potato - winevent]
description = Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((ParentUser="NT AUTHORITY\\NETWORK SERVICE" OR ParentUser="NT AUTHORITY\\LOCAL SERVICE") Account_Name="NT AUTHORITY\\SYSTEM") NOT (New_Process_Name="*\\rundll32.exe" Process_Command_Line="*DavSetCookie*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Detection of Possible Rotten Potato" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of Possible Rotten Potato - sysmon]
description = Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((ParentUser="NT AUTHORITY\\NETWORK SERVICE" OR ParentUser="NT AUTHORITY\\LOCAL SERVICE") User="NT AUTHORITY\\SYSTEM") NOT (Image="*\\rundll32.exe" CommandLine="*DavSetCookie*")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Detection of Possible Rotten Potato" | eval sigma_description="Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell AMSI Bypass via .NET Reflection - winevent]
description = Detects Request to amsiInitFailed that can be used to disable AMSI Scanning
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*System.Management.Automation.AmsiUtils*") (Process_Command_Line="*amsiInitFailed*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1086" | eval sigma_title="Powershell AMSI Bypass via .NET Reflection" | eval sigma_description="Detects Request to amsiInitFailed that can be used to disable AMSI Scanning"
dispatch.earliest_time = -24h@h
alert.track = 0

[Powershell AMSI Bypass via .NET Reflection - sysmon]
description = Detects Request to amsiInitFailed that can be used to disable AMSI Scanning
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*System.Management.Automation.AmsiUtils*") (CommandLine="*amsiInitFailed*")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1086" | eval sigma_title="Powershell AMSI Bypass via .NET Reflection" | eval sigma_description="Detects Request to amsiInitFailed that can be used to disable AMSI Scanning"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via PowerShell - winevent]
description = Detects audio capture via PowerShell Cmdlet
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*WindowsAudioDevice-Powershell-Cmdlet*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via PowerShell" | eval sigma_description="Detects audio capture via PowerShell Cmdlet"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via PowerShell - sysmon]
description = Detects audio capture via PowerShell Cmdlet
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*WindowsAudioDevice-Powershell-Cmdlet*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via PowerShell" | eval sigma_description="Detects audio capture via PowerShell Cmdlet"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Base64 Encoded Shellcode - winevent]
description = Detects Base64 encoded Shellcode
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*AAAAYInlM*" (Process_Command_Line="*OiCAAAAYInlM*" OR Process_Command_Line="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="PowerShell Base64 Encoded Shellcode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Base64 Encoded Shellcode - sysmon]
description = Detects Base64 encoded Shellcode
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*AAAAYInlM*" (CommandLine="*OiCAAAAYInlM*" OR CommandLine="*OiJAAAAYInlM*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="PowerShell Base64 Encoded Shellcode" | eval sigma_description="Detects Base64 encoded Shellcode"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitsadmin Job via PowerShell - winevent]
description = Detect download by BITS jobs via PowerShell
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="*Start-BitsTransfer*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitsadmin Job via PowerShell" | eval sigma_description="Detect download by BITS jobs via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Bitsadmin Job via PowerShell - sysmon]
description = Detect download by BITS jobs via PowerShell
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="*Start-BitsTransfer*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197" | eval sigma_title="Suspicious Bitsadmin Job via PowerShell" | eval sigma_description="Detect download by BITS jobs via PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via DLL - winevent]
description = Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\rundll32.exe") OR (Description="*Windows-Hostprozess (Rundll32)*")) (Process_Command_Line="*Default.GetString*" OR Process_Command_Line="*FromBase64String*")) | eval sigma_attack_tags="attack.execution attack.t1086 car.2014-04-003" | eval sigma_title="Detection of PowerShell Execution via DLL" | eval sigma_description="Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Detection of PowerShell Execution via DLL - sysmon]
description = Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\rundll32.exe") OR (Description="*Windows-Hostprozess (Rundll32)*")) (CommandLine="*Default.GetString*" OR CommandLine="*FromBase64String*")) | eval sigma_attack_tags="attack.execution attack.t1086 car.2014-04-003" | eval sigma_title="Detection of PowerShell Execution via DLL" | eval sigma_description="Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - winevent]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -version 2 *" OR Process_Command_Line="* -versio 2 *" OR Process_Command_Line="* -versi 2 *" OR Process_Command_Line="* -vers 2 *" OR Process_Command_Line="* -ver 2 *" OR Process_Command_Line="* -ve 2 *") New_Process_Name="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1086" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Downgrade Attack - sysmon]
description = Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -version 2 *" OR CommandLine="* -versio 2 *" OR CommandLine="* -versi 2 *" OR CommandLine="* -vers 2 *" OR CommandLine="* -ver 2 *" OR CommandLine="* -ve 2 *") Image="*\\powershell.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1086" | eval sigma_title="PowerShell Downgrade Attack" | eval sigma_description="Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Download from URL - winevent]
description = Detects a Powershell process that contains download commands in its command line string
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" (Process_Command_Line="*new-object system.net.webclient).downloadstring(*" OR Process_Command_Line="*new-object system.net.webclient).downloadfile(*" OR Process_Command_Line="*new-object net.webclient).downloadstring(*" OR Process_Command_Line="*new-object net.webclient).downloadfile(*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.execution" | eval sigma_title="PowerShell Download from URL" | eval sigma_description="Detects a Powershell process that contains download commands in its command line string"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Download from URL - sysmon]
description = Detects a Powershell process that contains download commands in its command line string
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" (CommandLine="*new-object system.net.webclient).downloadstring(*" OR CommandLine="*new-object system.net.webclient).downloadfile(*" OR CommandLine="*new-object net.webclient).downloadstring(*" OR CommandLine="*new-object net.webclient).downloadfile(*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1086 attack.execution" | eval sigma_title="PowerShell Download from URL" | eval sigma_description="Detects a Powershell process that contains download commands in its command line string"
dispatch.earliest_time = -24h@h
alert.track = 0

[FromBase64String Command Line - winevent]
description = Detects suspicious FromBase64String expressions in command line arguments
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*::FromBase64String(*") | eval sigma_attack_tags="attack.t1027 attack.defense_evasion" | eval sigma_title="FromBase64String Command Line" | eval sigma_description="Detects suspicious FromBase64String expressions in command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[FromBase64String Command Line - sysmon]
description = Detects suspicious FromBase64String expressions in command line arguments
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*::FromBase64String(*") | eval sigma_attack_tags="attack.t1027 attack.defense_evasion" | eval sigma_title="FromBase64String Command Line" | eval sigma_description="Detects suspicious FromBase64String expressions in command line arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parameter Substring - winevent]
description = Detects suspicious PowerShell invocation with a parameter substring
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\Powershell.exe") (Process_Command_Line=" -windowstyle h " OR Process_Command_Line=" -windowstyl h" OR Process_Command_Line=" -windowsty h" OR Process_Command_Line=" -windowst h" OR Process_Command_Line=" -windows h" OR Process_Command_Line=" -windo h" OR Process_Command_Line=" -wind h" OR Process_Command_Line=" -win h" OR Process_Command_Line=" -wi h" OR Process_Command_Line=" -win h " OR Process_Command_Line=" -win hi " OR Process_Command_Line=" -win hid " OR Process_Command_Line=" -win hidd " OR Process_Command_Line=" -win hidde " OR Process_Command_Line=" -NoPr " OR Process_Command_Line=" -NoPro " OR Process_Command_Line=" -NoProf " OR Process_Command_Line=" -NoProfi " OR Process_Command_Line=" -NoProfil " OR Process_Command_Line=" -nonin " OR Process_Command_Line=" -nonint " OR Process_Command_Line=" -noninte " OR Process_Command_Line=" -noninter " OR Process_Command_Line=" -nonintera " OR Process_Command_Line=" -noninterac " OR Process_Command_Line=" -noninteract " OR Process_Command_Line=" -noninteracti " OR Process_Command_Line=" -noninteractiv " OR Process_Command_Line=" -ec " OR Process_Command_Line=" -encodedComman " OR Process_Command_Line=" -encodedComma " OR Process_Command_Line=" -encodedComm " OR Process_Command_Line=" -encodedCom " OR Process_Command_Line=" -encodedCo " OR Process_Command_Line=" -encodedC " OR Process_Command_Line=" -encoded " OR Process_Command_Line=" -encode " OR Process_Command_Line=" -encod " OR Process_Command_Line=" -enco " OR Process_Command_Line=" -en ")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Parameter Substring" | eval sigma_description="Detects suspicious PowerShell invocation with a parameter substring"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Parameter Substring - sysmon]
description = Detects suspicious PowerShell invocation with a parameter substring
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\Powershell.exe") (CommandLine=" -windowstyle h " OR CommandLine=" -windowstyl h" OR CommandLine=" -windowsty h" OR CommandLine=" -windowst h" OR CommandLine=" -windows h" OR CommandLine=" -windo h" OR CommandLine=" -wind h" OR CommandLine=" -win h" OR CommandLine=" -wi h" OR CommandLine=" -win h " OR CommandLine=" -win hi " OR CommandLine=" -win hid " OR CommandLine=" -win hidd " OR CommandLine=" -win hidde " OR CommandLine=" -NoPr " OR CommandLine=" -NoPro " OR CommandLine=" -NoProf " OR CommandLine=" -NoProfi " OR CommandLine=" -NoProfil " OR CommandLine=" -nonin " OR CommandLine=" -nonint " OR CommandLine=" -noninte " OR CommandLine=" -noninter " OR CommandLine=" -nonintera " OR CommandLine=" -noninterac " OR CommandLine=" -noninteract " OR CommandLine=" -noninteracti " OR CommandLine=" -noninteractiv " OR CommandLine=" -ec " OR CommandLine=" -encodedComman " OR CommandLine=" -encodedComma " OR CommandLine=" -encodedComm " OR CommandLine=" -encodedCom " OR CommandLine=" -encodedCo " OR CommandLine=" -encodedC " OR CommandLine=" -encoded " OR CommandLine=" -encode " OR CommandLine=" -encod " OR CommandLine=" -enco " OR CommandLine=" -en ")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Parameter Substring" | eval sigma_description="Detects suspicious PowerShell invocation with a parameter substring"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - winevent]
description = Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -bxor*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious XOR Encoded PowerShell Command Line - sysmon]
description = Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -bxor*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious XOR Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands."
dispatch.earliest_time = -24h@h
alert.track = 0

[Default PowerSploit and Empire Schtasks Persistence - winevent]
description = Detects the creation of a schtask via PowerSploit or Empire Default Configuration.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\powershell.exe") (Process_Command_Line="*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*" OR Process_Command_Line="*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*" OR Process_Command_Line="*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*" OR Process_Command_Line="*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*")) | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053 attack.t1086 attack.s0111 attack.g0022 attack.g0060 car.2013-08-001" | eval sigma_title="Default PowerSploit and Empire Schtasks Persistence" | eval sigma_description="Detects the creation of a schtask via PowerSploit or Empire Default Configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[Default PowerSploit and Empire Schtasks Persistence - sysmon]
description = Detects the creation of a schtask via PowerSploit or Empire Default Configuration.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\powershell.exe") (CommandLine="*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*" OR CommandLine="*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*" OR CommandLine="*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*" OR CommandLine="*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*")) | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053 attack.t1086 attack.s0111 attack.g0022 attack.g0060 car.2013-08-001" | eval sigma_title="Default PowerSploit and Empire Schtasks Persistence" | eval sigma_description="Detects the creation of a schtask via PowerSploit or Empire Default Configuration."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Processes Suspicious Parent Directory - winevent]
description = Detect suspicious parent processes of well-known Windows processes
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\taskhost.exe" OR New_Process_Name="*\\lsm.exe" OR New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\services.exe" OR New_Process_Name="*\\lsaiso.exe" OR New_Process_Name="*\\csrss.exe" OR New_Process_Name="*\\wininit.exe" OR New_Process_Name="*\\winlogon.exe") NOT ((Creator_Process_Name="*\\System32\\*" OR Creator_Process_Name="*\\SysWOW64\\*" OR Creator_Process_Name="*\\SavService.exe" OR Creator_Process_Name="*\\Windows Defender\\*\\MsMpEng.exe"))) NOT (NOT Creator_Process_Name="*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Windows Processes Suspicious Parent Directory" | eval sigma_description="Detect suspicious parent processes of well-known Windows processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Processes Suspicious Parent Directory - sysmon]
description = Detect suspicious parent processes of well-known Windows processes
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((Image="*\\svchost.exe" OR Image="*\\taskhost.exe" OR Image="*\\lsm.exe" OR Image="*\\lsass.exe" OR Image="*\\services.exe" OR Image="*\\lsaiso.exe" OR Image="*\\csrss.exe" OR Image="*\\wininit.exe" OR Image="*\\winlogon.exe") NOT ((ParentImage="*\\System32\\*" OR ParentImage="*\\SysWOW64\\*" OR ParentImage="*\\SavService.exe" OR ParentImage="*\\Windows Defender\\*\\MsMpEng.exe"))) NOT (NOT ParentImage="*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Windows Processes Suspicious Parent Directory" | eval sigma_description="Detect suspicious parent processes of well-known Windows processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download - winevent]
description = Detects usage of bitsadmin downloading a file
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\bitsadmin.exe") (Process_Command_Line="* /transfer *")) OR (Process_Command_Line="*copy bitsadmin.exe*"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190" | eval sigma_title="Bitsadmin Download" | eval sigma_description="Detects usage of bitsadmin downloading a file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Bitsadmin Download - sysmon]
description = Detects usage of bitsadmin downloading a file
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\bitsadmin.exe") (CommandLine="* /transfer *")) OR (CommandLine="*copy bitsadmin.exe*"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.persistence attack.t1197 attack.s0190" | eval sigma_title="Bitsadmin Download" | eval sigma_description="Detects usage of bitsadmin downloading a file"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Rundll32 and Comsvcs.dll - winevent]
description = Detects a process memory dump performed via ordinal function 24 in comsvcs.dll
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*comsvcs.dll,#24*" OR Process_Command_Line="*comsvcs.dll,MiniDump*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003 car.2013-05-009" | eval sigma_title="Process Dump via Rundll32 and Comsvcs.dll" | eval sigma_description="Detects a process memory dump performed via ordinal function 24 in comsvcs.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Rundll32 and Comsvcs.dll - sysmon]
description = Detects a process memory dump performed via ordinal function 24 in comsvcs.dll
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*comsvcs.dll,#24*" OR CommandLine="*comsvcs.dll,MiniDump*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003 car.2013-05-009" | eval sigma_title="Process Dump via Rundll32 and Comsvcs.dll" | eval sigma_description="Detects a process memory dump performed via ordinal function 24 in comsvcs.dll"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Service Start - winevent]
description = Detects a PsExec service start
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="C:\\Windows\\PSEXESVC.exe") | eval sigma_attack_tags="attack.execution attack.t1035 attack.s0029" | eval sigma_title="PsExec Service Start" | eval sigma_description="Detects a PsExec service start"
dispatch.earliest_time = -24h@h
alert.track = 0

[PsExec Service Start - sysmon]
description = Detects a PsExec service start
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="C:\\Windows\\PSEXESVC.exe") | eval sigma_attack_tags="attack.execution attack.t1035 attack.s0029" | eval sigma_title="PsExec Service Start" | eval sigma_description="Detects a PsExec service start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Query Registry - winevent]
description = Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" (Process_Command_Line="*query*" OR Process_Command_Line="*save*" OR Process_Command_Line="*export*") (Process_Command_Line="*currentVersion\\windows*" OR Process_Command_Line="*currentVersion\\runServicesOnce*" OR Process_Command_Line="*currentVersion\\runServices*" OR Process_Command_Line="*winlogon\\*" OR Process_Command_Line="*currentVersion\\shellServiceObjectDelayLoad*" OR Process_Command_Line="*currentVersion\\runOnce*" OR Process_Command_Line="*currentVersion\\runOnceEx*" OR Process_Command_Line="*currentVersion\\run*" OR Process_Command_Line="*currentVersion\\policies\\explorer\\run*" OR Process_Command_Line="*currentcontrolset\\services*")) | table New_Process_Name,Process_Command_Line,Account_Name,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1012 attack.t1007" | eval sigma_title="Query Registry" | eval sigma_description="Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
dispatch.earliest_time = -24h@h
alert.track = 0

[Query Registry - sysmon]
description = Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" (CommandLine="*query*" OR CommandLine="*save*" OR CommandLine="*export*") (CommandLine="*currentVersion\\windows*" OR CommandLine="*currentVersion\\runServicesOnce*" OR CommandLine="*currentVersion\\runServices*" OR CommandLine="*winlogon\\*" OR CommandLine="*currentVersion\\shellServiceObjectDelayLoad*" OR CommandLine="*currentVersion\\runOnce*" OR CommandLine="*currentVersion\\runOnceEx*" OR CommandLine="*currentVersion\\run*" OR CommandLine="*currentVersion\\policies\\explorer\\run*" OR CommandLine="*currentcontrolset\\services*")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1012 attack.t1007" | eval sigma_title="Query Registry" | eval sigma_description="Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
dispatch.earliest_time = -24h@h
alert.track = 0

[MSTSC Shadowing - winevent]
description = Detects RDP session hijacking by using MSTSC shadowing
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*noconsentprompt*" Process_Command_Line="*shadow:*") | eval sigma_attack_tags="" | eval sigma_title="MSTSC Shadowing" | eval sigma_description="Detects RDP session hijacking by using MSTSC shadowing"
dispatch.earliest_time = -24h@h
alert.track = 0

[MSTSC Shadowing - sysmon]
description = Detects RDP session hijacking by using MSTSC shadowing
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*noconsentprompt*" CommandLine="*shadow:*") | eval sigma_attack_tags="" | eval sigma_title="MSTSC Shadowing" | eval sigma_description="Detects RDP session hijacking by using MSTSC shadowing"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - winevent]
description = Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\wsmprovhost.exe" OR Creator_Process_Name="*\\wsmprovhost.exe")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Remote PowerShell Session - sysmon]
description = Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\wsmprovhost.exe" OR ParentImage="*\\wsmprovhost.exe")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Remote PowerShell Session" | eval sigma_description="Detects remote PowerShell sections by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote session)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Discovery of a System Time - winevent]
description = Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*time*") OR (New_Process_Name="*\\w32tm.exe" Process_Command_Line="*tz*") OR (New_Process_Name="*\\powershell.exe" Process_Command_Line="*Get-Date*"))) | eval sigma_attack_tags="attack.discovery attack.t1124" | eval sigma_title="Discovery of a System Time" | eval sigma_description="Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Discovery of a System Time - sysmon]
description = Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*time*") OR (Image="*\\w32tm.exe" CommandLine="*tz*") OR (Image="*\\powershell.exe" CommandLine="*Get-Date*"))) | eval sigma_attack_tags="attack.discovery attack.t1124" | eval sigma_title="Discovery of a System Time" | eval sigma_description="Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system."
dispatch.earliest_time = -24h@h
alert.track = 0

[Highly Relevant Renamed Binary - winevent]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe") NOT ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\psexec.exe" OR New_Process_Name="*\\psexec64.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.t1036 attack.defense_evasion" | eval sigma_title="Highly Relevant Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Highly Relevant Renamed Binary - sysmon]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\psexec.exe" OR Image="*\\psexec64.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\certutil.exe" OR Image="*\\rundll32.exe" OR Image="*\\cmstp.exe" OR Image="*\\msiexec.exe"))) | eval sigma_attack_tags="attack.t1036 attack.defense_evasion" | eval sigma_title="Highly Relevant Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Binary - winevent]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (OriginalFileName="cmd.exe" OR OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe" OR OriginalFileName="7z.exe" OR OriginalFileName="winrar.exe" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe" OR OriginalFileName="netsh.exe") NOT ((New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe" OR New_Process_Name="*\\psexec.exe" OR New_Process_Name="*\\psexec64.exe" OR New_Process_Name="*\\cscript.exe" OR New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\mshta.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\cmstp.exe" OR New_Process_Name="*\\msiexec.exe" OR New_Process_Name="*\\7z.exe" OR New_Process_Name="*\\winrar.exe" OR New_Process_Name="*\\wevtutil.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe" OR New_Process_Name="*\\netsh.exe"))) | eval sigma_attack_tags="attack.t1036 attack.defense_evasion" | eval sigma_title="Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed Binary - sysmon]
description = Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (OriginalFileName="cmd.exe" OR OriginalFileName="powershell.exe" OR OriginalFileName="powershell_ise.exe" OR OriginalFileName="psexec.exe" OR OriginalFileName="psexec.c" OR OriginalFileName="cscript.exe" OR OriginalFileName="wscript.exe" OR OriginalFileName="mshta.exe" OR OriginalFileName="regsvr32.exe" OR OriginalFileName="wmic.exe" OR OriginalFileName="certutil.exe" OR OriginalFileName="rundll32.exe" OR OriginalFileName="cmstp.exe" OR OriginalFileName="msiexec.exe" OR OriginalFileName="7z.exe" OR OriginalFileName="winrar.exe" OR OriginalFileName="wevtutil.exe" OR OriginalFileName="net.exe" OR OriginalFileName="net1.exe" OR OriginalFileName="netsh.exe") NOT ((Image="*\\cmd.exe" OR Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe" OR Image="*\\psexec.exe" OR Image="*\\psexec64.exe" OR Image="*\\cscript.exe" OR Image="*\\wscript.exe" OR Image="*\\mshta.exe" OR Image="*\\regsvr32.exe" OR Image="*\\wmic.exe" OR Image="*\\certutil.exe" OR Image="*\\rundll32.exe" OR Image="*\\cmstp.exe" OR Image="*\\msiexec.exe" OR Image="*\\7z.exe" OR Image="*\\winrar.exe" OR Image="*\\wevtutil.exe" OR Image="*\\net.exe" OR Image="*\\net1.exe" OR Image="*\\netsh.exe"))) | eval sigma_attack_tags="attack.t1036 attack.defense_evasion" | eval sigma_title="Renamed Binary" | eval sigma_description="Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint."
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed jusched.exe - winevent]
description = Detects renamed jusched.exe used by cobalt group
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Description="Java Update Scheduler" OR Description="Java(TM) Update Scheduler")) NOT ((New_Process_Name="*\\jusched.exe"))) | eval sigma_attack_tags="attack.t1036 attack.execution" | eval sigma_title="Renamed jusched.exe" | eval sigma_description="Detects renamed jusched.exe used by cobalt group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed jusched.exe - sysmon]
description = Detects renamed jusched.exe used by cobalt group
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Description="Java Update Scheduler" OR Description="Java(TM) Update Scheduler")) NOT ((Image="*\\jusched.exe"))) | eval sigma_attack_tags="attack.t1036 attack.execution" | eval sigma_title="Renamed jusched.exe" | eval sigma_description="Detects renamed jusched.exe used by cobalt group"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Renamed PaExec - winevent]
description = Detects execution of renamed paexec via imphash and executable product string
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Product="*PAExec*") (Imphash="11D40A7B7876288F919AB819CC2D9802" OR Imphash="6444f8a34e99b8f7d9647de66aabe516" OR Imphash="dfd6aa3f7b2b1035b76b718f1ddc689f" OR Imphash="1a6cca4d5460b1710a12dea39e4a592c")) NOT (New_Process_Name="*paexec*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 FIN7 car.2013-05-009" | eval sigma_title="Execution of Renamed PaExec" | eval sigma_description="Detects execution of renamed paexec via imphash and executable product string"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution of Renamed PaExec - sysmon]
description = Detects execution of renamed paexec via imphash and executable product string
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Product="*PAExec*") (Imphash="11D40A7B7876288F919AB819CC2D9802" OR Imphash="6444f8a34e99b8f7d9647de66aabe516" OR Imphash="dfd6aa3f7b2b1035b76b718f1ddc689f" OR Imphash="1a6cca4d5460b1710a12dea39e4a592c")) NOT (Image="*paexec*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 FIN7 car.2013-05-009" | eval sigma_title="Execution of Renamed PaExec" | eval sigma_description="Detects execution of renamed paexec via imphash and executable product string"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PowerShell - winevent]
description = Detects the execution of a renamed PowerShell often used by attackers or malware
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Description="Windows PowerShell" Company="Microsoft Corporation") NOT ((New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\powershell_ise.exe"))) | eval sigma_attack_tags="car.2013-05-009" | eval sigma_title="Renamed PowerShell" | eval sigma_description="Detects the execution of a renamed PowerShell often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PowerShell - sysmon]
description = Detects the execution of a renamed PowerShell often used by attackers or malware
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Description="Windows PowerShell" Company="Microsoft Corporation") NOT ((Image="*\\powershell.exe" OR Image="*\\powershell_ise.exe"))) | eval sigma_attack_tags="car.2013-05-009" | eval sigma_title="Renamed PowerShell" | eval sigma_description="Detects the execution of a renamed PowerShell often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ProcDump - winevent]
description = Detects the execution of a renamed ProcDump executable often used by attackers or malware
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") OriginalFileName="procdump" NOT ((New_Process_Name="*\\procdump.exe" OR New_Process_Name="*\\procdump64.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Renamed ProcDump" | eval sigma_description="Detects the execution of a renamed ProcDump executable often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ProcDump - sysmon]
description = Detects the execution of a renamed ProcDump executable often used by attackers or malware
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") OriginalFileName="procdump" NOT ((Image="*\\procdump.exe" OR Image="*\\procdump64.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Renamed ProcDump" | eval sigma_description="Detects the execution of a renamed ProcDump executable often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PsExec - winevent]
description = Detects the execution of a renamed PsExec often used by attackers or malware
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Description="Execute processes remotely" Product="Sysinternals PsExec") NOT ((New_Process_Name="*\\PsExec.exe" OR New_Process_Name="*\\PsExec64.exe"))) | eval sigma_attack_tags="car.2013-05-009" | eval sigma_title="Renamed PsExec" | eval sigma_description="Detects the execution of a renamed PsExec often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed PsExec - sysmon]
description = Detects the execution of a renamed PsExec often used by attackers or malware
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Description="Execute processes remotely" Product="Sysinternals PsExec") NOT ((Image="*\\PsExec.exe" OR Image="*\\PsExec64.exe"))) | eval sigma_attack_tags="car.2013-05-009" | eval sigma_title="Renamed PsExec" | eval sigma_description="Detects the execution of a renamed PsExec often used by attackers or malware"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run PowerShell Script from ADS - winevent]
description = Detects PowerShell script execution from Alternate Data Stream (ADS)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\powershell.exe" New_Process_Name="*\\powershell.exe" Process_Command_Line="*Get-Content*" Process_Command_Line="*-Stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1096" | eval sigma_title="Run PowerShell Script from ADS" | eval sigma_description="Detects PowerShell script execution from Alternate Data Stream (ADS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run PowerShell Script from ADS - sysmon]
description = Detects PowerShell script execution from Alternate Data Stream (ADS)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\powershell.exe" Image="*\\powershell.exe" CommandLine="*Get-Content*" CommandLine="*-Stream*") | eval sigma_attack_tags="attack.defense_evasion attack.t1096" | eval sigma_title="Run PowerShell Script from ADS" | eval sigma_description="Detects PowerShell script execution from Alternate Data Stream (ADS)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Shim Database Persistence via sdbinst.exe - winevent]
description = Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\sdbinst.exe") (Process_Command_Line="*.sdb*")) | eval sigma_attack_tags="attack.persistence attack.t1138" | eval sigma_title="Possible Shim Database Persistence via sdbinst.exe" | eval sigma_description="Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Shim Database Persistence via sdbinst.exe - sysmon]
description = Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\sdbinst.exe") (CommandLine="*.sdb*")) | eval sigma_attack_tags="attack.persistence attack.t1138" | eval sigma_title="Possible Shim Database Persistence via sdbinst.exe" | eval sigma_description="Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications."
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Execution - winevent]
description = Detects manual service execution (start) via system utilities
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="* start *") | eval sigma_attack_tags="attack.execution attack.t1035" | eval sigma_title="Service Execution" | eval sigma_description="Detects manual service execution (start) via system utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Service Execution - sysmon]
description = Detects manual service execution (start) via system utilities
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="* start *") | eval sigma_attack_tags="attack.execution attack.t1035" | eval sigma_title="Service Execution" | eval sigma_description="Detects manual service execution (start) via system utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Windows Service - winevent]
description = Detects a windows service to be stopped
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\sc.exe" OR New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") Process_Command_Line="*stop*") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="Stop Windows Service" | eval sigma_description="Detects a windows service to be stopped"
dispatch.earliest_time = -24h@h
alert.track = 0

[Stop Windows Service - sysmon]
description = Detects a windows service to be stopped
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\sc.exe" OR Image="*\\net.exe" OR Image="*\\net1.exe") CommandLine="*stop*") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.impact attack.t1489" | eval sigma_title="Stop Windows Service" | eval sigma_description="Detects a windows service to be stopped"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Access via Symlink - winevent]
description = Shadow Copies storage symbolic link creation using operating systems utilities
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*mklink*" Process_Command_Line="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Shadow Copies Access via Symlink" | eval sigma_description="Shadow Copies storage symbolic link creation using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Access via Symlink - sysmon]
description = Shadow Copies storage symbolic link creation using operating systems utilities
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*mklink*" CommandLine="*HarddiskVolumeShadowCopy*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Shadow Copies Access via Symlink" | eval sigma_description="Shadow Copies storage symbolic link creation using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Creation Using Operating Systems Utilities - winevent]
description = Shadow Copies creation using operating systems utilities, possible credential access
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\vssadmin.exe") Process_Command_Line="*shadow*" Process_Command_Line="*create*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Shadow Copies Creation Using Operating Systems Utilities" | eval sigma_description="Shadow Copies creation using operating systems utilities, possible credential access"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Creation Using Operating Systems Utilities - sysmon]
description = Shadow Copies creation using operating systems utilities, possible credential access
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe" OR Image="*\\wmic.exe" OR Image="*\\vssadmin.exe") CommandLine="*shadow*" CommandLine="*create*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Shadow Copies Creation Using Operating Systems Utilities" | eval sigma_description="Shadow Copies creation using operating systems utilities, possible credential access"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Deletion Using Operating Systems Utilities - winevent]
description = Shadow Copies deletion using operating systems utilities
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\wmic.exe" OR New_Process_Name="*\\vssadmin.exe") Process_Command_Line="*shadow*" Process_Command_Line="*delete*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1070 attack.t1490" | eval sigma_title="Shadow Copies Deletion Using Operating Systems Utilities" | eval sigma_description="Shadow Copies deletion using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shadow Copies Deletion Using Operating Systems Utilities - sysmon]
description = Shadow Copies deletion using operating systems utilities
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powershell.exe" OR Image="*\\wmic.exe" OR Image="*\\vssadmin.exe") CommandLine="*shadow*" CommandLine="*delete*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.impact attack.t1070 attack.t1490" | eval sigma_title="Shadow Copies Deletion Using Operating Systems Utilities" | eval sigma_description="Shadow Copies deletion using operating systems utilities"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell Spawning Suspicious Program - winevent]
description = Detects a suspicious child process of a Windows shell
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((Creator_Process_Name="*\\mshta.exe" OR Creator_Process_Name="*\\powershell.exe" OR Creator_Process_Name="*\\rundll32.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\wmiprvse.exe") (New_Process_Name="*\\schtasks.exe" OR New_Process_Name="*\\nslookup.exe" OR New_Process_Name="*\\certutil.exe" OR New_Process_Name="*\\bitsadmin.exe" OR New_Process_Name="*\\mshta.exe")) NOT (CurrentDirectory="*\\ccmcache\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1064" | eval sigma_title="Windows Shell Spawning Suspicious Program" | eval sigma_description="Detects a suspicious child process of a Windows shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows Shell Spawning Suspicious Program - sysmon]
description = Detects a suspicious child process of a Windows shell
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((ParentImage="*\\mshta.exe" OR ParentImage="*\\powershell.exe" OR ParentImage="*\\rundll32.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\wscript.exe" OR ParentImage="*\\wmiprvse.exe") (Image="*\\schtasks.exe" OR Image="*\\nslookup.exe" OR Image="*\\certutil.exe" OR Image="*\\bitsadmin.exe" OR Image="*\\mshta.exe")) NOT (CurrentDirectory="*\\ccmcache\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1064" | eval sigma_title="Windows Shell Spawning Suspicious Program" | eval sigma_description="Detects a suspicious child process of a Windows shell"
dispatch.earliest_time = -24h@h
alert.track = 0

[SILENTTRINITY Stager Execution - winevent]
description = Detects SILENTTRINITY stager use
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Description="*st2stager*") (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="7" Description="*st2stager*") | eval sigma_attack_tags="attack.execution" | eval sigma_title="SILENTTRINITY Stager Execution" | eval sigma_description="Detects SILENTTRINITY stager use"
dispatch.earliest_time = -24h@h
alert.track = 0

[SILENTTRINITY Stager Execution - sysmon]
description = Detects SILENTTRINITY stager use
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="*st2stager*") ((source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") EventCode="7" Description="*st2stager*") | eval sigma_attack_tags="attack.execution" | eval sigma_title="SILENTTRINITY Stager Execution" | eval sigma_description="Detects SILENTTRINITY stager use"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via SoundRecorder - winevent]
description = Detect attacker collecting audio via SoundRecorder application
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\SoundRecorder.exe" Process_Command_Line="*/FILE*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via SoundRecorder" | eval sigma_description="Detect attacker collecting audio via SoundRecorder application"
dispatch.earliest_time = -24h@h
alert.track = 0

[Audio Capture via SoundRecorder - sysmon]
description = Detect attacker collecting audio via SoundRecorder application
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\SoundRecorder.exe" CommandLine="*/FILE*") | eval sigma_attack_tags="attack.collection attack.t1123" | eval sigma_title="Audio Capture via SoundRecorder" | eval sigma_description="Detect attacker collecting audio via SoundRecorder application"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible SPN Enumeration - winevent]
description = Detects Service Principal Name Enumeration used for Kerberoasting
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\setspn.exe" OR Description="*Query or reset the computer* SPN attribute*") Process_Command_Line="*-q*") | eval sigma_attack_tags="attack.credential_access attack.t1208" | eval sigma_title="Possible SPN Enumeration" | eval sigma_description="Detects Service Principal Name Enumeration used for Kerberoasting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible SPN Enumeration - sysmon]
description = Detects Service Principal Name Enumeration used for Kerberoasting
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\setspn.exe" OR Description="*Query or reset the computer* SPN attribute*") CommandLine="*-q*") | eval sigma_attack_tags="attack.credential_access attack.t1208" | eval sigma_title="Possible SPN Enumeration" | eval sigma_description="Detects Service Principal Name Enumeration used for Kerberoasting"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Ransomware or Unauthorized MBR Modifications - winevent]
description = Detects, possibly, malicious unauthorized usage of bcdedit.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bcdedit.exe" (Process_Command_Line="*delete*" OR Process_Command_Line="*deletevalue*" OR Process_Command_Line="*import*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.persistence attack.t1067" | eval sigma_title="Possible Ransomware or Unauthorized MBR Modifications" | eval sigma_description="Detects, possibly, malicious unauthorized usage of bcdedit.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Ransomware or Unauthorized MBR Modifications - sysmon]
description = Detects, possibly, malicious unauthorized usage of bcdedit.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bcdedit.exe" (CommandLine="*delete*" OR CommandLine="*deletevalue*" OR CommandLine="*import*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 attack.persistence attack.t1067" | eval sigma_title="Possible Ransomware or Unauthorized MBR Modifications" | eval sigma_description="Detects, possibly, malicious unauthorized usage of bcdedit.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Bginfo - winevent]
description = Execute VBscript code that is referenced within the *.bgi file.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\bginfo.exe" Process_Command_Line="*/popup*" Process_Command_Line="*/nolicprompt*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Bginfo" | eval sigma_description="Execute VBscript code that is referenced within the *.bgi file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Bginfo - sysmon]
description = Execute VBscript code that is referenced within the *.bgi file.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\bginfo.exe" CommandLine="*/popup*" CommandLine="*/nolicprompt*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Bginfo" | eval sigma_description="Execute VBscript code that is referenced within the *.bgi file."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Calculator Usage - winevent]
description = Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*\\calc.exe *" OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\calc.exe" NOT (New_Process_Name="*\\Windows\\Sys*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Calculator Usage" | eval sigma_description="Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Calculator Usage - sysmon]
description = Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*\\calc.exe *" OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\calc.exe" NOT (Image="*\\Windows\\Sys*")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Calculator Usage" | eval sigma_description="Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner - winevent]
description = Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cdb.exe" Process_Command_Line="*-cf*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner" | eval sigma_description="Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner - sysmon]
description = Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cdb.exe" CommandLine="*-cf*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner" | eval sigma_description="Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certutil Command - winevent]
description = Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -decode *" OR Process_Command_Line="* /decode *" OR Process_Command_Line="* -decodehex *" OR Process_Command_Line="* /decodehex *" OR Process_Command_Line="* -urlcache *" OR Process_Command_Line="* /urlcache *" OR Process_Command_Line="* -verifyctl *" OR Process_Command_Line="* /verifyctl *" OR Process_Command_Line="* -encode *" OR Process_Command_Line="* /encode *" OR Process_Command_Line="*certutil* -URL*" OR Process_Command_Line="*certutil* /URL*" OR Process_Command_Line="*certutil* -ping*" OR Process_Command_Line="*certutil* /ping*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1105 attack.s0189 attack.g0007" | eval sigma_title="Suspicious Certutil Command" | eval sigma_description="Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Certutil Command - sysmon]
description = Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -decode *" OR CommandLine="* /decode *" OR CommandLine="* -decodehex *" OR CommandLine="* /decodehex *" OR CommandLine="* -urlcache *" OR CommandLine="* /urlcache *" OR CommandLine="* -verifyctl *" OR CommandLine="* /verifyctl *" OR CommandLine="* -encode *" OR CommandLine="* /encode *" OR CommandLine="*certutil* -URL*" OR CommandLine="*certutil* /URL*" OR CommandLine="*certutil* -ping*" OR CommandLine="*certutil* /ping*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1105 attack.s0189 attack.g0007" | eval sigma_title="Suspicious Certutil Command" | eval sigma_description="Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certutil Encode - winevent]
description = Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="certutil -f -encode *" OR Process_Command_Line="certutil.exe -f -encode *" OR Process_Command_Line="certutil -encode -f *" OR Process_Command_Line="certutil.exe -encode -f *")) | eval sigma_attack_tags="" | eval sigma_title="Certutil Encode" | eval sigma_description="Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Certutil Encode - sysmon]
description = Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="certutil -f -encode *" OR CommandLine="certutil.exe -f -encode *" OR CommandLine="certutil -encode -f *" OR CommandLine="certutil.exe -encode -f *")) | eval sigma_attack_tags="" | eval sigma_title="Certutil Encode" | eval sigma_description="Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Commandline Escape - winevent]
description = Detects suspicious process that use escape characters
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*h^t^t^p*" OR Process_Command_Line="*h\"t\"t\"p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="Suspicious Commandline Escape" | eval sigma_description="Detects suspicious process that use escape characters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Commandline Escape - sysmon]
description = Detects suspicious process that use escape characters
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*h^t^t^p*" OR CommandLine="*h\"t\"t\"p*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1140" | eval sigma_title="Suspicious Commandline Escape" | eval sigma_description="Detects suspicious process that use escape characters"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Execution with Suspicious URL and AppData Strings - winevent]
description = Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="cmd.exe /c *http://*%AppData%" OR Process_Command_Line="cmd.exe /c *https://*%AppData%")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Command Line Execution with Suspicious URL and AppData Strings" | eval sigma_description="Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Command Line Execution with Suspicious URL and AppData Strings - sysmon]
description = Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="cmd.exe /c *http://*%AppData%" OR CommandLine="cmd.exe /c *https://*%AppData%")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1059" | eval sigma_title="Command Line Execution with Suspicious URL and AppData Strings" | eval sigma_description="Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Code Page Switch - winevent]
description = Detects a code page switch in command line or batch scripts to a rare language
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="chcp* 936" OR Process_Command_Line="chcp* 1258")) | table ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Code Page Switch" | eval sigma_description="Detects a code page switch in command line or batch scripts to a rare language"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Code Page Switch - sysmon]
description = Detects a code page switch in command line or batch scripts to a rare language
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="chcp* 936" OR CommandLine="chcp* 1258")) | table ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Code Page Switch" | eval sigma_description="Detects a code page switch in command line or batch scripts to a rare language"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity with Net Command - winevent]
description = Detects a set of commands often used in recon stages by different attack groups
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="tasklist" OR Process_Command_Line="net time" OR Process_Command_Line="systeminfo" OR Process_Command_Line="whoami" OR Process_Command_Line="nbtstat" OR Process_Command_Line="net start" OR Process_Command_Line="*\\net1 start" OR Process_Command_Line="qprocess" OR Process_Command_Line="nslookup" OR Process_Command_Line="hostname.exe" OR Process_Command_Line="*\\net1 user /domain" OR Process_Command_Line="*\\net1 group /domain" OR Process_Command_Line="*\\net1 group \"domain admins\" /domain" OR Process_Command_Line="*\\net1 group \"Exchange Trusted Subsystem\" /domain" OR Process_Command_Line="*\\net1 accounts /domain" OR Process_Command_Line="*\\net1 user net localgroup administrators" OR Process_Command_Line="netstat -an")) | eventstats count as val by Process_Command_Line| search val > 4 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Reconnaissance Activity with Net Command" | eval sigma_description="Detects a set of commands often used in recon stages by different attack groups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Reconnaissance Activity with Net Command - sysmon]
description = Detects a set of commands often used in recon stages by different attack groups
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="tasklist" OR CommandLine="net time" OR CommandLine="systeminfo" OR CommandLine="whoami" OR CommandLine="nbtstat" OR CommandLine="net start" OR CommandLine="*\\net1 start" OR CommandLine="qprocess" OR CommandLine="nslookup" OR CommandLine="hostname.exe" OR CommandLine="*\\net1 user /domain" OR CommandLine="*\\net1 group /domain" OR CommandLine="*\\net1 group \"domain admins\" /domain" OR CommandLine="*\\net1 group \"Exchange Trusted Subsystem\" /domain" OR CommandLine="*\\net1 accounts /domain" OR CommandLine="*\\net1 user net localgroup administrators" OR CommandLine="netstat -an")) | eventstats count as val by CommandLine| search val > 4 | eval sigma_attack_tags="attack.discovery attack.t1087 attack.t1082 car.2016-03-001" | eval sigma_title="Reconnaissance Activity with Net Command" | eval sigma_description="Detects a set of commands often used in recon stages by different attack groups"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Compression Tool Parameters - winevent]
description = Detects suspicious command line arguments of common data compression tools
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((OriginalFileName="7z*.exe" OR OriginalFileName="*rar.exe" OR OriginalFileName="*Command*Line*RAR*") (Process_Command_Line="* -p*" OR Process_Command_Line="* -ta*" OR Process_Command_Line="* -tb*" OR Process_Command_Line="* -sdel*" OR Process_Command_Line="* -dw*" OR Process_Command_Line="* -hp*")) NOT (Creator_Process_Name="C:\\Program*")) | eval sigma_attack_tags="attack.exfiltration attack.t1020 attack.t1002" | eval sigma_title="Suspicious Compression Tool Parameters" | eval sigma_description="Detects suspicious command line arguments of common data compression tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Compression Tool Parameters - sysmon]
description = Detects suspicious command line arguments of common data compression tools
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((OriginalFileName="7z*.exe" OR OriginalFileName="*rar.exe" OR OriginalFileName="*Command*Line*RAR*") (CommandLine="* -p*" OR CommandLine="* -ta*" OR CommandLine="* -tb*" OR CommandLine="* -sdel*" OR CommandLine="* -dw*" OR CommandLine="* -hp*")) NOT (ParentImage="C:\\Program*")) | eval sigma_attack_tags="attack.exfiltration attack.t1020 attack.t1002" | eval sigma_title="Suspicious Compression Tool Parameters" | eval sigma_description="Detects suspicious command line arguments of common data compression tools"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Comsvcs DLL - winevent]
description = Detects process memory dump via comsvcs.dll and rundll32
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") (Process_Command_Line="*comsvcs*MiniDump*full*" OR Process_Command_Line="*comsvcs*MiniDumpW*full*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Process Dump via Comsvcs DLL" | eval sigma_description="Detects process memory dump via comsvcs.dll and rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Process Dump via Comsvcs DLL - sysmon]
description = Detects process memory dump via comsvcs.dll and rundll32
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\rundll32.exe" OR OriginalFileName="RUNDLL32.EXE") (CommandLine="*comsvcs*MiniDump*full*" OR CommandLine="*comsvcs*MiniDumpW*full*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Process Dump via Comsvcs DLL" | eval sigma_description="Detects process memory dump via comsvcs.dll and rundll32"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Control Panel DLL Load - winevent]
description = Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\System32\\control.exe" Process_Command_Line="*\\rundll32.exe *") NOT (Process_Command_Line="*Shell32.dll*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1085 car.2013-10-002" | eval sigma_title="Suspicious Control Panel DLL Load" | eval sigma_description="Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Control Panel DLL Load - sysmon]
description = Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\System32\\control.exe" CommandLine="*\\rundll32.exe *") NOT (CommandLine="*Shell32.dll*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1073 attack.t1085 car.2013-10-002" | eval sigma_title="Suspicious Control Panel DLL Load" | eval sigma_description="Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Admin Share - winevent]
description = Detects a suspicious copy command from a remote C$ or ADMIN$ share
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*copy *\\c$*" OR Process_Command_Line="*copy *\\ADMIN$*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1077 attack.t1105" | eval sigma_title="Copy from Admin Share" | eval sigma_description="Detects a suspicious copy command from a remote C$ or ADMIN$ share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Copy from Admin Share - sysmon]
description = Detects a suspicious copy command from a remote C$ or ADMIN$ share
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*copy *\\c$*" OR CommandLine="*copy *\\ADMIN$*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.lateral_movement attack.t1077 attack.t1105" | eval sigma_title="Copy from Admin Share" | eval sigma_description="Detects a suspicious copy command from a remote C$ or ADMIN$ share"
dispatch.earliest_time = -24h@h
alert.track = 0

[Covenant Launcher Indicators - winevent]
description = Detects suspicious command lines used in Covenant luanchers
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -Sta -Nop -Window Hidden -Command *" OR Process_Command_Line="* -Sta -Nop -Window Hidden -EncodedCommand *" OR Process_Command_Line="*sv o (New-Object IO.MemorySteam);sv d *" OR Process_Command_Line="*mshta file.hta*" OR Process_Command_Line="*GruntHTTP*" OR Process_Command_Line="*-EncodedCommand cwB2ACAAbwAgA*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Covenant Launcher Indicators" | eval sigma_description="Detects suspicious command lines used in Covenant luanchers"
dispatch.earliest_time = -24h@h
alert.track = 0

[Covenant Launcher Indicators - sysmon]
description = Detects suspicious command lines used in Covenant luanchers
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -Sta -Nop -Window Hidden -Command *" OR CommandLine="* -Sta -Nop -Window Hidden -EncodedCommand *" OR CommandLine="*sv o (New-Object IO.MemorySteam);sv d *" OR CommandLine="*mshta file.hta*" OR CommandLine="*GruntHTTP*" OR CommandLine="*-EncodedCommand cwB2ACAAbwAgA*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Covenant Launcher Indicators" | eval sigma_description="Detects suspicious command lines used in Covenant luanchers"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Execution - winevent]
description = Detect various execution methods of the CrackMapExec pentesting framework
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1" OR Process_Command_Line="*cmd.exe /C * > \\\\*\\*\\* 2>&1" OR Process_Command_Line="*cmd.exe /C * > *\\Temp\\* 2>&1" OR Process_Command_Line="*powershell.exe -exec bypass -noni -nop -w 1 -C \"*" OR Process_Command_Line="*powershell.exe -noni -nop -w 1 -enc *")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1053 attack.t1086" | eval sigma_title="CrackMapExec Command Execution" | eval sigma_description="Detect various execution methods of the CrackMapExec pentesting framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec Command Execution - sysmon]
description = Detect various execution methods of the CrackMapExec pentesting framework
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1" OR CommandLine="*cmd.exe /C * > \\\\*\\*\\* 2>&1" OR CommandLine="*cmd.exe /C * > *\\Temp\\* 2>&1" OR CommandLine="*powershell.exe -exec bypass -noni -nop -w 1 -C \"*" OR CommandLine="*powershell.exe -noni -nop -w 1 -enc *")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1047 attack.t1053 attack.t1086" | eval sigma_title="CrackMapExec Command Execution" | eval sigma_description="Detect various execution methods of the CrackMapExec pentesting framework"
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec PowerShell Obfuscation - winevent]
description = The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*powershell.exe*" (Process_Command_Line="*join*split*" OR Process_Command_Line="*( $ShellId[1]+$ShellId[13]+'x')*" OR Process_Command_Line="*( $PSHome[*]+$PSHOME[*]+*" OR Process_Command_Line="*( $env:Public[13]+$env:Public[5]+'x')*" OR Process_Command_Line="*( $env:ComSpec[4,*,25]-Join'')*" OR Process_Command_Line="*[1,3]+'x'-Join'')*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1086 attack.defense_evasion attack.t1027" | eval sigma_title="CrackMapExec PowerShell Obfuscation" | eval sigma_description="The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[CrackMapExec PowerShell Obfuscation - sysmon]
description = The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*powershell.exe*" (CommandLine="*join*split*" OR CommandLine="*( $ShellId[1]+$ShellId[13]+'x')*" OR CommandLine="*( $PSHome[*]+$PSHOME[*]+*" OR CommandLine="*( $env:Public[13]+$env:Public[5]+'x')*" OR CommandLine="*( $env:ComSpec[4,*,25]-Join'')*" OR CommandLine="*[1,3]+'x'-Join'')*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.execution attack.t1086 attack.defense_evasion attack.t1027" | eval sigma_title="CrackMapExec PowerShell Obfuscation" | eval sigma_description="The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csc.exe Source File Folder - winevent]
description = Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\csc.exe" (Process_Command_Line="*\\AppData\\*" OR Process_Command_Line="*\\Windows\\Temp\\*")) NOT ((Creator_Process_Name="C:\\Program Files*" OR Creator_Process_Name="*\\sdiagnhost.exe" OR Creator_Process_Name="*\\w3wp.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1500" | eval sigma_title="Suspicious Csc.exe Source File Folder" | eval sigma_description="Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Csc.exe Source File Folder - sysmon]
description = Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\csc.exe" (CommandLine="*\\AppData\\*" OR CommandLine="*\\Windows\\Temp\\*")) NOT ((ParentImage="C:\\Program Files*" OR ParentImage="*\\sdiagnhost.exe" OR ParentImage="*\\w3wp.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1500" | eval sigma_title="Suspicious Csc.exe Source File Folder" | eval sigma_description="Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Parent of Csc.exe - winevent]
description = Detects a suspicious parent of csc.exe, which could by a sign of payload delivery
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\csc.exe*" (Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\cscript.exe" OR Creator_Process_Name="*\\mshta.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Parent of Csc.exe" | eval sigma_description="Detects a suspicious parent of csc.exe, which could by a sign of payload delivery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Parent of Csc.exe - sysmon]
description = Detects a suspicious parent of csc.exe, which could by a sign of payload delivery
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\csc.exe*" (ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe" OR ParentImage="*\\mshta.exe")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Parent of Csc.exe" | eval sigma_description="Detects a suspicious parent of csc.exe, which could by a sign of payload delivery"
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Start Combination - winevent]
description = Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*curl* start *") | table Creator_Process_Name,Process_Command_Line | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Curl Start Combination" | eval sigma_description="Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later."
dispatch.earliest_time = -24h@h
alert.track = 0

[Curl Start Combination - sysmon]
description = Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*curl* start *") | table ParentImage,CommandLine | eval sigma_attack_tags="attack.execution attack.t1218" | eval sigma_title="Curl Start Combination" | eval sigma_description="Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later."
dispatch.earliest_time = -24h@h
alert.track = 0

[ZOHO Dctask64 Process Injection - winevent]
description = Detects suspicious process injection using ZOHO's dctask64.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\dctask64.exe") NOT ((Process_Command_Line="*DesktopCentral_Agent\\agent*"))) | table Process_Command_Line,ParentCommandLine,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="ZOHO Dctask64 Process Injection" | eval sigma_description="Detects suspicious process injection using ZOHO's dctask64.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[ZOHO Dctask64 Process Injection - sysmon]
description = Detects suspicious process injection using ZOHO's dctask64.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\dctask64.exe") NOT ((CommandLine="*DesktopCentral_Agent\\agent*"))) | table CommandLine,ParentCommandLine,ParentImage | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="ZOHO Dctask64 Process Injection" | eval sigma_description="Detects suspicious process injection using ZOHO's dctask64.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Devtoolslauncher.exe Executes Specified Binary - winevent]
description = The Devtoolslauncher.exe executes other binary
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\devtoolslauncher.exe" Process_Command_Line="*LaunchForDeploy*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Devtoolslauncher.exe Executes Specified Binary" | eval sigma_description="The Devtoolslauncher.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Devtoolslauncher.exe Executes Specified Binary - sysmon]
description = The Devtoolslauncher.exe executes other binary
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\devtoolslauncher.exe" CommandLine="*LaunchForDeploy*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Devtoolslauncher.exe Executes Specified Binary" | eval sigma_description="The Devtoolslauncher.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Autorun Keys Modification - winevent]
description = Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\reg.exe" Process_Command_Line="*add*" (Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR Process_Command_Line="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR Process_Command_Line="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*" OR Process_Command_Line="*\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1060" | eval sigma_title="Direct Autorun Keys Modification" | eval sigma_description="Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Direct Autorun Keys Modification - sysmon]
description = Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\reg.exe" CommandLine="*add*" (CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\Run*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell*" OR CommandLine="*\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows*" OR CommandLine="*\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders*" OR CommandLine="*\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1060" | eval sigma_title="Direct Autorun Keys Modification" | eval sigma_description="Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe."
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dnx.exe - winevent]
description = Execute C# code located in the consoleapp folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\dnx.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Dnx.exe" | eval sigma_description="Execute C# code located in the consoleapp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dnx.exe - sysmon]
description = Execute C# code located in the consoleapp folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\dnx.exe") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Dnx.exe" | eval sigma_description="Execute C# code located in the consoleapp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Double Extension - winevent]
description = Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*.doc.exe" OR New_Process_Name="*.docx.exe" OR New_Process_Name="*.xls.exe" OR New_Process_Name="*.xlsx.exe" OR New_Process_Name="*.ppt.exe" OR New_Process_Name="*.pptx.exe" OR New_Process_Name="*.rtf.exe" OR New_Process_Name="*.pdf.exe" OR New_Process_Name="*.txt.exe" OR New_Process_Name="*      .exe" OR New_Process_Name="*______.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Suspicious Double Extension" | eval sigma_description="Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Double Extension - sysmon]
description = Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*.doc.exe" OR Image="*.docx.exe" OR Image="*.xls.exe" OR Image="*.xlsx.exe" OR Image="*.ppt.exe" OR Image="*.pptx.exe" OR Image="*.rtf.exe" OR Image="*.pdf.exe" OR Image="*.txt.exe" OR Image="*      .exe" OR Image="*______.exe")) | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Suspicious Double Extension" | eval sigma_description="Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dxcap.exe - winevent]
description = Detects execution of of Dxcap.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\dxcap.exe" Process_Command_Line="*-c*" Process_Command_Line="*.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Dxcap.exe" | eval sigma_description="Detects execution of of Dxcap.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via Dxcap.exe - sysmon]
description = Detects execution of of Dxcap.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\dxcap.exe" CommandLine="*-c*" CommandLine="*.exe*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via Dxcap.exe" | eval sigma_description="Detects execution of of Dxcap.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Eventlog Clear or Configuration Using Wevtutil - winevent]
description = Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (((New_Process_Name="*\\powershell.exe" (Process_Command_Line="*Clear-EventLog*" OR Process_Command_Line="*Remove-EventLog*" OR Process_Command_Line="*Limit-EventLog*")) OR (New_Process_Name="*\\wmic.exe" Process_Command_Line="* ClearEventLog *")) OR (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\wevtutil.exe" (Process_Command_Line="*clear-log*" OR Process_Command_Line="* cl *" OR Process_Command_Line="*set-log*" OR Process_Command_Line="* sl *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 car.2016-04-002" | eval sigma_title="Suspicious Eventlog Clear or Configuration Using Wevtutil" | eval sigma_description="Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Eventlog Clear or Configuration Using Wevtutil - sysmon]
description = Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (((Image="*\\powershell.exe" (CommandLine="*Clear-EventLog*" OR CommandLine="*Remove-EventLog*" OR CommandLine="*Limit-EventLog*")) OR (Image="*\\wmic.exe" CommandLine="* ClearEventLog *")) OR (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\wevtutil.exe" (CommandLine="*clear-log*" OR CommandLine="* cl *" OR CommandLine="*set-log*" OR CommandLine="* sl *")))) | eval sigma_attack_tags="attack.defense_evasion attack.t1070 car.2016-04-002" | eval sigma_title="Suspicious Eventlog Clear or Configuration Using Wevtutil" | eval sigma_description="Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executables Started in Suspicious Folder - winevent]
description = Detects process starts of binaries from a suspicious folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="C:\\PerfLogs\\*" OR New_Process_Name="C:\\$Recycle.bin\\*" OR New_Process_Name="C:\\Intel\\Logs\\*" OR New_Process_Name="C:\\Users\\Default\\*" OR New_Process_Name="C:\\Users\\Public\\*" OR New_Process_Name="C:\\Users\\NetworkService\\*" OR New_Process_Name="C:\\Windows\\Fonts\\*" OR New_Process_Name="C:\\Windows\\Debug\\*" OR New_Process_Name="C:\\Windows\\Media\\*" OR New_Process_Name="C:\\Windows\\Help\\*" OR New_Process_Name="C:\\Windows\\addins\\*" OR New_Process_Name="C:\\Windows\\repair\\*" OR New_Process_Name="C:\\Windows\\security\\*" OR New_Process_Name="*\\RSA\\MachineKeys\\*" OR New_Process_Name="C:\\Windows\\system32\\config\\systemprofile\\*" OR New_Process_Name="C:\\Windows\\Tasks\\*" OR New_Process_Name="C:\\Windows\\System32\\Tasks\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Executables Started in Suspicious Folder" | eval sigma_description="Detects process starts of binaries from a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Executables Started in Suspicious Folder - sysmon]
description = Detects process starts of binaries from a suspicious folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="C:\\PerfLogs\\*" OR Image="C:\\$Recycle.bin\\*" OR Image="C:\\Intel\\Logs\\*" OR Image="C:\\Users\\Default\\*" OR Image="C:\\Users\\Public\\*" OR Image="C:\\Users\\NetworkService\\*" OR Image="C:\\Windows\\Fonts\\*" OR Image="C:\\Windows\\Debug\\*" OR Image="C:\\Windows\\Media\\*" OR Image="C:\\Windows\\Help\\*" OR Image="C:\\Windows\\addins\\*" OR Image="C:\\Windows\\repair\\*" OR Image="C:\\Windows\\security\\*" OR Image="*\\RSA\\MachineKeys\\*" OR Image="C:\\Windows\\system32\\config\\systemprofile\\*" OR Image="C:\\Windows\\Tasks\\*" OR Image="C:\\Windows\\System32\\Tasks\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Executables Started in Suspicious Folder" | eval sigma_description="Detects process starts of binaries from a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Webserver Root Folder - winevent]
description = Detects a suspicious program execution in a web service root folder (filter out false positives)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wwwroot\\*" OR New_Process_Name="*\\wmpub\\*" OR New_Process_Name="*\\htdocs\\*") NOT ((New_Process_Name="*bin\\*" OR New_Process_Name="*\\Tools\\*" OR New_Process_Name="*\\SMSComponent\\*") (Creator_Process_Name="*\\services.exe"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1100" | eval sigma_title="Execution in Webserver Root Folder" | eval sigma_description="Detects a suspicious program execution in a web service root folder (filter out false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Webserver Root Folder - sysmon]
description = Detects a suspicious program execution in a web service root folder (filter out false positives)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wwwroot\\*" OR Image="*\\wmpub\\*" OR Image="*\\htdocs\\*") NOT ((Image="*bin\\*" OR Image="*\\Tools\\*" OR Image="*\\SMSComponent\\*") (ParentImage="*\\services.exe"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1100" | eval sigma_title="Execution in Webserver Root Folder" | eval sigma_description="Detects a suspicious program execution in a web service root folder (filter out false positives)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Non-Executable Folder - winevent]
description = Detects a suspicious exection from an uncommon folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\$Recycle.bin" OR New_Process_Name="*\\Users\\All Users\\*" OR New_Process_Name="*\\Users\\Default\\*" OR New_Process_Name="*\\Users\\Public\\*" OR New_Process_Name="C:\\Perflogs\\*" OR New_Process_Name="*\\config\\systemprofile\\*" OR New_Process_Name="*\\Windows\\Fonts\\*" OR New_Process_Name="*\\Windows\\IME\\*" OR New_Process_Name="*\\Windows\\addins\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution in Non-Executable Folder" | eval sigma_description="Detects a suspicious exection from an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Non-Executable Folder - sysmon]
description = Detects a suspicious exection from an uncommon folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\$Recycle.bin" OR Image="*\\Users\\All Users\\*" OR Image="*\\Users\\Default\\*" OR Image="*\\Users\\Public\\*" OR Image="C:\\Perflogs\\*" OR Image="*\\config\\systemprofile\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Execution in Non-Executable Folder" | eval sigma_description="Detects a suspicious exection from an uncommon folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Characteristics Due to Missing Fields - winevent]
description = Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Description="\?" (FileVersion="\?" OR Product="\?" OR Company="\?") New_Process_Name="*\\Downloads\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1064" | eval sigma_title="Suspicious File Characteristics Due to Missing Fields" | eval sigma_description="Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious File Characteristics Due to Missing Fields - sysmon]
description = Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Description="\?" (FileVersion="\?" OR Product="\?" OR Company="\?") Image="*\\Downloads\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1064" | eval sigma_title="Suspicious File Characteristics Due to Missing Fields" | eval sigma_description="Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Findstr Launching .lnk File - winevent]
description = Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\findstr.exe" Process_Command_Line="*.lnk") | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Findstr Launching .lnk File" | eval sigma_description="Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Findstr Launching .lnk File - sysmon]
description = Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\findstr.exe" CommandLine="*.lnk") | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1202" | eval sigma_title="Findstr Launching .lnk File" | eval sigma_description="Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Firewall Disabled via Netsh - winevent]
description = Detects netsh commands that turns off the Windows firewall
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="netsh firewall set opmode mode=disable" OR Process_Command_Line="netsh advfirewall set * state off")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Firewall Disabled via Netsh" | eval sigma_description="Detects netsh commands that turns off the Windows firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Firewall Disabled via Netsh - sysmon]
description = Detects netsh commands that turns off the Windows firewall
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="netsh firewall set opmode mode=disable" OR CommandLine="netsh advfirewall set * state off")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="Firewall Disabled via Netsh" | eval sigma_description="Detects netsh commands that turns off the Windows firewall"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Suspicious Invocation - winevent]
description = Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") (Process_Command_Line="*deletejournal*" OR Process_Command_Line="*createjournal*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Fsutil Suspicious Invocation" | eval sigma_description="Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Fsutil Suspicious Invocation - sysmon]
description = Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\fsutil.exe" OR OriginalFileName="fsutil.exe") (CommandLine="*deletejournal*" OR CommandLine="*createjournal*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1070" | eval sigma_title="Fsutil Suspicious Invocation" | eval sigma_description="Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GUP Usage - winevent]
description = Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\GUP.exe" NOT ((New_Process_Name="C:\\Users\\*\\AppData\\Local\\Notepad++\\updater\\gup.exe" OR New_Process_Name="C:\\Users\\*\\AppData\\Roaming\\Notepad++\\updater\\gup.exe" OR New_Process_Name="C:\\Program Files\\Notepad++\\updater\\gup.exe" OR New_Process_Name="C:\\Program Files (x86)\\Notepad++\\updater\\gup.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="Suspicious GUP Usage" | eval sigma_description="Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious GUP Usage - sysmon]
description = Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\GUP.exe" NOT ((Image="C:\\Users\\*\\AppData\\Local\\Notepad++\\updater\\gup.exe" OR Image="C:\\Users\\*\\AppData\\Roaming\\Notepad++\\updater\\gup.exe" OR Image="C:\\Program Files\\Notepad++\\updater\\gup.exe" OR Image="C:\\Program Files (x86)\\Notepad++\\updater\\gup.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1073" | eval sigma_title="Suspicious GUP Usage" | eval sigma_description="Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks"
dispatch.earliest_time = -24h@h
alert.track = 0

[IIS Native-Code Module Command Line Installation - winevent]
description = Detects suspicious IIS native-code module installations via command line
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\APPCMD.EXE install module /name:*")) | eval sigma_attack_tags="attack.persistence attack.t1100" | eval sigma_title="IIS Native-Code Module Command Line Installation" | eval sigma_description="Detects suspicious IIS native-code module installations via command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[IIS Native-Code Module Command Line Installation - sysmon]
description = Detects suspicious IIS native-code module installations via command line
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\APPCMD.EXE install module /name:*")) | eval sigma_attack_tags="attack.persistence attack.t1100" | eval sigma_title="IIS Native-Code Module Command Line Installation" | eval sigma_description="Detects suspicious IIS native-code module installations via command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Directory - winevent]
description = Detects suspicious msiexec process starts in an uncommon directory
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\msiexec.exe" NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious MsiExec Directory" | eval sigma_description="Detects suspicious msiexec process starts in an uncommon directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious MsiExec Directory - sysmon]
description = Detects suspicious msiexec process starts in an uncommon directory
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\msiexec.exe" NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\WinSxS\\*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious MsiExec Directory" | eval sigma_description="Detects suspicious msiexec process starts in an uncommon directory"
dispatch.earliest_time = -24h@h
alert.track = 0

[MsiExec Web Install - winevent]
description = Detects suspicious msiexec process starts with web addreses as parameter
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* msiexec*://*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="MsiExec Web Install" | eval sigma_description="Detects suspicious msiexec process starts with web addreses as parameter"
dispatch.earliest_time = -24h@h
alert.track = 0

[MsiExec Web Install - sysmon]
description = Detects suspicious msiexec process starts with web addreses as parameter
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* msiexec*://*")) | eval sigma_attack_tags="attack.defense_evasion" | eval sigma_title="MsiExec Web Install" | eval sigma_description="Detects suspicious msiexec process starts with web addreses as parameter"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Payload Download via Office Binaries - winevent]
description = Downloads payload from remote server
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\powerpnt.exe" OR New_Process_Name="*\\winword.exe" OR New_Process_Name="*\\excel.exe") Process_Command_Line="*http*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Malicious Payload Download via Office Binaries" | eval sigma_description="Downloads payload from remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Payload Download via Office Binaries - sysmon]
description = Downloads payload from remote server
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\powerpnt.exe" OR Image="*\\winword.exe" OR Image="*\\excel.exe") CommandLine="*http*") | eval sigma_attack_tags="attack.command_and_control attack.t1105" | eval sigma_title="Malicious Payload Download via Office Binaries" | eval sigma_description="Downloads payload from remote server"
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe Execution - winevent]
description = Detects execution of Net.exe, whether suspicious or benign.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\net.exe" OR New_Process_Name="*\\net1.exe") (Process_Command_Line="* group*" OR Process_Command_Line="* localgroup*" OR Process_Command_Line="* user*" OR Process_Command_Line="* view*" OR Process_Command_Line="* share" OR Process_Command_Line="* accounts*" OR Process_Command_Line="* use*" OR Process_Command_Line="* stop *")) | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.s0039 attack.t1027 attack.t1049 attack.t1077 attack.t1135 attack.lateral_movement attack.discovery attack.defense_evasion" | eval sigma_title="Net.exe Execution" | eval sigma_description="Detects execution of Net.exe, whether suspicious or benign."
dispatch.earliest_time = -24h@h
alert.track = 0

[Net.exe Execution - sysmon]
description = Detects execution of Net.exe, whether suspicious or benign.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\net.exe" OR Image="*\\net1.exe") (CommandLine="* group*" OR CommandLine="* localgroup*" OR CommandLine="* user*" OR CommandLine="* view*" OR CommandLine="* share" OR CommandLine="* accounts*" OR CommandLine="* use*" OR CommandLine="* stop *")) | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.s0039 attack.t1027 attack.t1049 attack.t1077 attack.t1135 attack.lateral_movement attack.discovery attack.defense_evasion" | eval sigma_title="Net.exe Execution" | eval sigma_description="Detects execution of Net.exe, whether suspicious or benign."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Netsh DLL Persistence - winevent]
description = Detects persitence via netsh helper
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\netsh.exe" Process_Command_Line="*add*" Process_Command_Line="*helper*") | table ComputerName,Account_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1128" | eval sigma_title="Suspicious Netsh DLL Persistence" | eval sigma_description="Detects persitence via netsh helper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Netsh DLL Persistence - sysmon]
description = Detects persitence via netsh helper
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\netsh.exe" CommandLine="*add*" CommandLine="*helper*") | table ComputerName,User,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1128" | eval sigma_title="Suspicious Netsh DLL Persistence" | eval sigma_description="Detects persitence via netsh helper"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invocation of Active Directory Diagnostic Tool (ntdsutil.exe) - winevent]
description = Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\ntdsutil*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)" | eval sigma_description="Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Invocation of Active Directory Diagnostic Tool (ntdsutil.exe) - sysmon]
description = Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\ntdsutil*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)" | eval sigma_description="Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via DLL Loaded by odbcconf.exe - winevent]
description = Detects defence evasion attempt via odbcconf.exe execution to load DLL
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\odbcconf.exe" (Process_Command_Line="*-f*" OR Process_Command_Line="*regsvr*")) OR (Creator_Process_Name="*\\odbcconf.exe" New_Process_Name="*\\rundll32.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via DLL Loaded by odbcconf.exe" | eval sigma_description="Detects defence evasion attempt via odbcconf.exe execution to load DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Application Whitelisting Bypass via DLL Loaded by odbcconf.exe - sysmon]
description = Detects defence evasion attempt via odbcconf.exe execution to load DLL
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\odbcconf.exe" (CommandLine="*-f*" OR CommandLine="*regsvr*")) OR (ParentImage="*\\odbcconf.exe" Image="*\\rundll32.exe"))) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="Application Whitelisting Bypass via DLL Loaded by odbcconf.exe" | eval sigma_description="Detects defence evasion attempt via odbcconf.exe execution to load DLL"
dispatch.earliest_time = -24h@h
alert.track = 0

[OpenWith.exe Executes Specified Binary - winevent]
description = The OpenWith.exe executes other binary
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\OpenWith.exe" Process_Command_Line="*/c*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="OpenWith.exe Executes Specified Binary" | eval sigma_description="The OpenWith.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[OpenWith.exe Executes Specified Binary - sysmon]
description = The OpenWith.exe executes other binary
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\OpenWith.exe" CommandLine="*/c*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1218" | eval sigma_title="OpenWith.exe Executes Specified Binary" | eval sigma_description="The OpenWith.exe executes other binary"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Outlook Temp Folder - winevent]
description = Detects a suspicious program execution in Outlook temp folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Temporary Internet Files\\Content.Outlook\\*") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Execution in Outlook Temp Folder" | eval sigma_description="Detects a suspicious program execution in Outlook temp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Execution in Outlook Temp Folder - sysmon]
description = Detects a suspicious program execution in Outlook temp folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Temporary Internet Files\\Content.Outlook\\*") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.initial_access attack.t1193" | eval sigma_title="Execution in Outlook Temp Folder" | eval sigma_description="Detects a suspicious program execution in Outlook temp folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution from Outlook - winevent]
description = Detects EnableUnsafeClientMailRules used for Script Execution from Outlook
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (Process_Command_Line="*EnableUnsafeClientMailRules*" OR (Creator_Process_Name="*\\outlook.exe" Process_Command_Line="\\\\*\\*.exe"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1202" | eval sigma_title="Suspicious Execution from Outlook" | eval sigma_description="Detects EnableUnsafeClientMailRules used for Script Execution from Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Execution from Outlook - sysmon]
description = Detects EnableUnsafeClientMailRules used for Script Execution from Outlook
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (CommandLine="*EnableUnsafeClientMailRules*" OR (ParentImage="*\\outlook.exe" CommandLine="\\\\*\\*.exe"))) | eval sigma_attack_tags="attack.execution attack.t1059 attack.t1202" | eval sigma_title="Suspicious Execution from Outlook" | eval sigma_description="Detects EnableUnsafeClientMailRules used for Script Execution from Outlook"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ping Hex IP - winevent]
description = Detects a ping command that uses a hex encoded IP address
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\ping.exe 0x*" OR Process_Command_Line="*\\ping 0x*")) | table ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1027" | eval sigma_title="Ping Hex IP" | eval sigma_description="Detects a ping command that uses a hex encoded IP address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Ping Hex IP - sysmon]
description = Detects a ping command that uses a hex encoded IP address
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\ping.exe 0x*" OR CommandLine="*\\ping 0x*")) | table ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1140 attack.t1027" | eval sigma_title="Ping Hex IP" | eval sigma_description="Detects a ping command that uses a hex encoded IP address"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell Launch Parameters - winevent]
description = Detects suspicious powershell command line parameters used in Empire
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -NoP -sta -NonI -W Hidden -Enc *" OR Process_Command_Line="* -noP -sta -w 1 -enc *" OR Process_Command_Line="* -NoP -NonI -W Hidden -enc *")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Empire PowerShell Launch Parameters" | eval sigma_description="Detects suspicious powershell command line parameters used in Empire"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell Launch Parameters - sysmon]
description = Detects suspicious powershell command line parameters used in Empire
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -NoP -sta -NonI -W Hidden -Enc *" OR CommandLine="* -noP -sta -w 1 -enc *" OR CommandLine="* -NoP -NonI -W Hidden -enc *")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Empire PowerShell Launch Parameters" | eval sigma_description="Detects suspicious powershell command line parameters used in Empire"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell UAC Bypass - winevent]
description = Detects some Empire PowerShell UAC bypass methods
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)*" OR Process_Command_Line="* -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1088 car.2019-04-001" | eval sigma_title="Empire PowerShell UAC Bypass" | eval sigma_description="Detects some Empire PowerShell UAC bypass methods"
dispatch.earliest_time = -24h@h
alert.track = 0

[Empire PowerShell UAC Bypass - sysmon]
description = Detects some Empire PowerShell UAC bypass methods
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)*" OR CommandLine="* -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.privilege_escalation attack.t1088 car.2019-04-001" | eval sigma_title="Empire PowerShell UAC Bypass" | eval sigma_description="Detects some Empire PowerShell UAC bypass methods"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - winevent]
description = Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -e JAB*" OR Process_Command_Line="* -e  JAB*" OR Process_Command_Line="* -e   JAB*" OR Process_Command_Line="* -e    JAB*" OR Process_Command_Line="* -e     JAB*" OR Process_Command_Line="* -e      JAB*" OR Process_Command_Line="* -en JAB*" OR Process_Command_Line="* -enc JAB*" OR Process_Command_Line="* -enc* JAB*" OR Process_Command_Line="* -w hidden -e* JAB*" OR Process_Command_Line="* BA^J e-" OR Process_Command_Line="* -e SUVYI*" OR Process_Command_Line="* -e aWV4I*" OR Process_Command_Line="* -e SQBFAFgA*" OR Process_Command_Line="* -e aQBlAHgA*" OR Process_Command_Line="* -enc SUVYI*" OR Process_Command_Line="* -enc aWV4I*" OR Process_Command_Line="* -enc SQBFAFgA*" OR Process_Command_Line="* -enc aQBlAHgA*") NOT (Process_Command_Line="* -ExecutionPolicy remotesigned *")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Encoded PowerShell Command Line - sysmon]
description = Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -e JAB*" OR CommandLine="* -e  JAB*" OR CommandLine="* -e   JAB*" OR CommandLine="* -e    JAB*" OR CommandLine="* -e     JAB*" OR CommandLine="* -e      JAB*" OR CommandLine="* -en JAB*" OR CommandLine="* -enc JAB*" OR CommandLine="* -enc* JAB*" OR CommandLine="* -w hidden -e* JAB*" OR CommandLine="* BA^J e-" OR CommandLine="* -e SUVYI*" OR CommandLine="* -e aWV4I*" OR CommandLine="* -e SQBFAFgA*" OR CommandLine="* -e aQBlAHgA*" OR CommandLine="* -enc SUVYI*" OR CommandLine="* -enc aWV4I*" OR CommandLine="* -enc SQBFAFgA*" OR CommandLine="* -enc aQBlAHgA*") NOT (CommandLine="* -ExecutionPolicy remotesigned *")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious Encoded PowerShell Command Line" | eval sigma_description="Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded PowerShell Keywords in Command Lines - winevent]
description = Detects base64 encoded strings used in hidden malicious PowerShell command lines
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\powershell.exe" Process_Command_Line="* hidden *" (Process_Command_Line="*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*" OR Process_Command_Line="*aXRzYWRtaW4gL3RyYW5zZmVy*" OR Process_Command_Line="*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*" OR Process_Command_Line="*JpdHNhZG1pbiAvdHJhbnNmZX*" OR Process_Command_Line="*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*" OR Process_Command_Line="*Yml0c2FkbWluIC90cmFuc2Zlc*" OR Process_Command_Line="*AGMAaAB1AG4AawBfAHMAaQB6AGUA*" OR Process_Command_Line="*JABjAGgAdQBuAGsAXwBzAGkAegBlA*" OR Process_Command_Line="*JGNodW5rX3Npem*" OR Process_Command_Line="*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*" OR Process_Command_Line="*RjaHVua19zaXpl*" OR Process_Command_Line="*Y2h1bmtfc2l6Z*" OR Process_Command_Line="*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*" OR Process_Command_Line="*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*" OR Process_Command_Line="*lPLkNvbXByZXNzaW9u*" OR Process_Command_Line="*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*" OR Process_Command_Line="*SU8uQ29tcHJlc3Npb2*" OR Process_Command_Line="*Ty5Db21wcmVzc2lvb*" OR Process_Command_Line="*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*" OR Process_Command_Line="*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*" OR Process_Command_Line="*lPLk1lbW9yeVN0cmVhb*" OR Process_Command_Line="*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*" OR Process_Command_Line="*SU8uTWVtb3J5U3RyZWFt*" OR Process_Command_Line="*Ty5NZW1vcnlTdHJlYW*" OR Process_Command_Line="*4ARwBlAHQAQwBoAHUAbgBrA*" OR Process_Command_Line="*5HZXRDaHVua*" OR Process_Command_Line="*AEcAZQB0AEMAaAB1AG4Aaw*" OR Process_Command_Line="*LgBHAGUAdABDAGgAdQBuAGsA*" OR Process_Command_Line="*LkdldENodW5r*" OR Process_Command_Line="*R2V0Q2h1bm*" OR Process_Command_Line="*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*" OR Process_Command_Line="*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*" OR Process_Command_Line="*RIUkVBRF9JTkZPNj*" OR Process_Command_Line="*SFJFQURfSU5GTzY0*" OR Process_Command_Line="*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*" OR Process_Command_Line="*VEhSRUFEX0lORk82N*" OR Process_Command_Line="*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*" OR Process_Command_Line="*cmVhdGVSZW1vdGVUaHJlYW*" OR Process_Command_Line="*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*" OR Process_Command_Line="*NyZWF0ZVJlbW90ZVRocmVhZ*" OR Process_Command_Line="*Q3JlYXRlUmVtb3RlVGhyZWFk*" OR Process_Command_Line="*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*" OR Process_Command_Line="*0AZQBtAG0AbwB2AGUA*" OR Process_Command_Line="*1lbW1vdm*" OR Process_Command_Line="*AGUAbQBtAG8AdgBlA*" OR Process_Command_Line="*bQBlAG0AbQBvAHYAZQ*" OR Process_Command_Line="*bWVtbW92Z*" OR Process_Command_Line="*ZW1tb3Zl*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Malicious Base64 Encoded PowerShell Keywords in Command Lines" | eval sigma_description="Detects base64 encoded strings used in hidden malicious PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Malicious Base64 Encoded PowerShell Keywords in Command Lines - sysmon]
description = Detects base64 encoded strings used in hidden malicious PowerShell command lines
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\powershell.exe" CommandLine="* hidden *" (CommandLine="*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*" OR CommandLine="*aXRzYWRtaW4gL3RyYW5zZmVy*" OR CommandLine="*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*" OR CommandLine="*JpdHNhZG1pbiAvdHJhbnNmZX*" OR CommandLine="*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*" OR CommandLine="*Yml0c2FkbWluIC90cmFuc2Zlc*" OR CommandLine="*AGMAaAB1AG4AawBfAHMAaQB6AGUA*" OR CommandLine="*JABjAGgAdQBuAGsAXwBzAGkAegBlA*" OR CommandLine="*JGNodW5rX3Npem*" OR CommandLine="*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*" OR CommandLine="*RjaHVua19zaXpl*" OR CommandLine="*Y2h1bmtfc2l6Z*" OR CommandLine="*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*" OR CommandLine="*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*" OR CommandLine="*lPLkNvbXByZXNzaW9u*" OR CommandLine="*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*" OR CommandLine="*SU8uQ29tcHJlc3Npb2*" OR CommandLine="*Ty5Db21wcmVzc2lvb*" OR CommandLine="*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*" OR CommandLine="*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*" OR CommandLine="*lPLk1lbW9yeVN0cmVhb*" OR CommandLine="*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*" OR CommandLine="*SU8uTWVtb3J5U3RyZWFt*" OR CommandLine="*Ty5NZW1vcnlTdHJlYW*" OR CommandLine="*4ARwBlAHQAQwBoAHUAbgBrA*" OR CommandLine="*5HZXRDaHVua*" OR CommandLine="*AEcAZQB0AEMAaAB1AG4Aaw*" OR CommandLine="*LgBHAGUAdABDAGgAdQBuAGsA*" OR CommandLine="*LkdldENodW5r*" OR CommandLine="*R2V0Q2h1bm*" OR CommandLine="*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*" OR CommandLine="*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*" OR CommandLine="*RIUkVBRF9JTkZPNj*" OR CommandLine="*SFJFQURfSU5GTzY0*" OR CommandLine="*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*" OR CommandLine="*VEhSRUFEX0lORk82N*" OR CommandLine="*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*" OR CommandLine="*cmVhdGVSZW1vdGVUaHJlYW*" OR CommandLine="*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*" OR CommandLine="*NyZWF0ZVJlbW90ZVRocmVhZ*" OR CommandLine="*Q3JlYXRlUmVtb3RlVGhyZWFk*" OR CommandLine="*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*" OR CommandLine="*0AZQBtAG0AbwB2AGUA*" OR CommandLine="*1lbW1vdm*" OR CommandLine="*AGUAbQBtAG8AdgBlA*" OR CommandLine="*bQBlAG0AbQBvAHYAZQ*" OR CommandLine="*bWVtbW92Z*" OR CommandLine="*ZW1tb3Zl*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Malicious Base64 Encoded PowerShell Keywords in Command Lines" | eval sigma_description="Detects base64 encoded strings used in hidden malicious PowerShell command lines"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocation Based on Parent Process - winevent]
description = Detects suspicious powershell invocations from interpreters or unusual programs
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ((Creator_Process_Name="*\\wscript.exe" OR Creator_Process_Name="*\\cscript.exe") (New_Process_Name="*\\powershell.exe")) NOT (CurrentDirectory="*\\Health Service State\\*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Invocation Based on Parent Process" | eval sigma_description="Detects suspicious powershell invocations from interpreters or unusual programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious PowerShell Invocation Based on Parent Process - sysmon]
description = Detects suspicious powershell invocations from interpreters or unusual programs
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ((ParentImage="*\\wscript.exe" OR ParentImage="*\\cscript.exe") (Image="*\\powershell.exe")) NOT (CurrentDirectory="*\\Health Service State\\*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="Suspicious PowerShell Invocation Based on Parent Process" | eval sigma_description="Detects suspicious powershell invocations from interpreters or unusual programs"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump - winevent]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* -ma *") (Process_Command_Line="* lsass*")) OR (Process_Command_Line="* -ma ls*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003 car.2013-05-009" | eval sigma_title="Suspicious Use of Procdump" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of Procdump - sysmon]
description = Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* -ma *") (CommandLine="* lsass*")) OR (CommandLine="* -ma ls*"))) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 attack.credential_access attack.t1003 car.2013-05-009" | eval sigma_title="Suspicious Use of Procdump" | eval sigma_description="Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Creation - winevent]
description = Detects suspicious process starts on Windows systems based on keywords
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* sekurlsa:*" OR Process_Command_Line="net localgroup administrators * /add" OR Process_Command_Line="net group \"Domain Admins\" * /ADD /DOMAIN" OR Process_Command_Line="certutil.exe *-urlcache* http*" OR Process_Command_Line="certutil.exe *-urlcache* ftp*" OR Process_Command_Line="netsh advfirewall firewall *\\AppData\\*" OR Process_Command_Line="attrib +S +H +R *\\AppData\\*" OR Process_Command_Line="schtasks* /create *\\AppData\\*" OR Process_Command_Line="schtasks* /sc minute*" OR Process_Command_Line="*\\Regasm.exe *\\AppData\\*" OR Process_Command_Line="*\\Regasm *\\AppData\\*" OR Process_Command_Line="*\\bitsadmin* /transfer*" OR Process_Command_Line="*\\certutil.exe * -decode *" OR Process_Command_Line="*\\certutil.exe * -decodehex *" OR Process_Command_Line="*\\certutil.exe -ping *" OR Process_Command_Line="icacls * /grant Everyone:F /T /C /Q" OR Process_Command_Line="* wbadmin.exe delete catalog -quiet*" OR Process_Command_Line="*\\wscript.exe *.jse" OR Process_Command_Line="*\\wscript.exe *.js" OR Process_Command_Line="*\\wscript.exe *.vba" OR Process_Command_Line="*\\wscript.exe *.vbe" OR Process_Command_Line="*\\cscript.exe *.jse" OR Process_Command_Line="*\\cscript.exe *.js" OR Process_Command_Line="*\\cscript.exe *.vba" OR Process_Command_Line="*\\cscript.exe *.vbe" OR Process_Command_Line="*\\fodhelper.exe" OR Process_Command_Line="*waitfor*/s*" OR Process_Command_Line="*waitfor*/si persist*" OR Process_Command_Line="*remote*/s*" OR Process_Command_Line="*remote*/c*" OR Process_Command_Line="*remote*/q*" OR Process_Command_Line="*AddInProcess*" OR Process_Command_Line="* /stext *" OR Process_Command_Line="* /scomma *" OR Process_Command_Line="* /stab *" OR Process_Command_Line="* /stabular *" OR Process_Command_Line="* /shtml *" OR Process_Command_Line="* /sverhtml *" OR Process_Command_Line="* /sxml *")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="car.2013-07-001" | eval sigma_title="Suspicious Process Creation" | eval sigma_description="Detects suspicious process starts on Windows systems based on keywords"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Creation - sysmon]
description = Detects suspicious process starts on Windows systems based on keywords
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* sekurlsa:*" OR CommandLine="net localgroup administrators * /add" OR CommandLine="net group \"Domain Admins\" * /ADD /DOMAIN" OR CommandLine="certutil.exe *-urlcache* http*" OR CommandLine="certutil.exe *-urlcache* ftp*" OR CommandLine="netsh advfirewall firewall *\\AppData\\*" OR CommandLine="attrib +S +H +R *\\AppData\\*" OR CommandLine="schtasks* /create *\\AppData\\*" OR CommandLine="schtasks* /sc minute*" OR CommandLine="*\\Regasm.exe *\\AppData\\*" OR CommandLine="*\\Regasm *\\AppData\\*" OR CommandLine="*\\bitsadmin* /transfer*" OR CommandLine="*\\certutil.exe * -decode *" OR CommandLine="*\\certutil.exe * -decodehex *" OR CommandLine="*\\certutil.exe -ping *" OR CommandLine="icacls * /grant Everyone:F /T /C /Q" OR CommandLine="* wbadmin.exe delete catalog -quiet*" OR CommandLine="*\\wscript.exe *.jse" OR CommandLine="*\\wscript.exe *.js" OR CommandLine="*\\wscript.exe *.vba" OR CommandLine="*\\wscript.exe *.vbe" OR CommandLine="*\\cscript.exe *.jse" OR CommandLine="*\\cscript.exe *.js" OR CommandLine="*\\cscript.exe *.vba" OR CommandLine="*\\cscript.exe *.vbe" OR CommandLine="*\\fodhelper.exe" OR CommandLine="*waitfor*/s*" OR CommandLine="*waitfor*/si persist*" OR CommandLine="*remote*/s*" OR CommandLine="*remote*/c*" OR CommandLine="*remote*/q*" OR CommandLine="*AddInProcess*" OR CommandLine="* /stext *" OR CommandLine="* /scomma *" OR CommandLine="* /stab *" OR CommandLine="* /stabular *" OR CommandLine="* /shtml *" OR CommandLine="* /sverhtml *" OR CommandLine="* /sxml *")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="car.2013-07-001" | eval sigma_title="Suspicious Process Creation" | eval sigma_description="Detects suspicious process starts on Windows systems based on keywords"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Location Process Starts - winevent]
description = Detects programs running in suspicious files system locations
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\$Recycle.bin" OR New_Process_Name="*\\Users\\Public\\*" OR New_Process_Name="C:\\Perflogs\\*" OR New_Process_Name="*\\Windows\\Fonts\\*" OR New_Process_Name="*\\Windows\\IME\\*" OR New_Process_Name="*\\Windows\\addins\\*" OR New_Process_Name="*\\Windows\\debug\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Program Location Process Starts" | eval sigma_description="Detects programs running in suspicious files system locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Program Location Process Starts - sysmon]
description = Detects programs running in suspicious files system locations
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\$Recycle.bin" OR Image="*\\Users\\Public\\*" OR Image="C:\\Perflogs\\*" OR Image="*\\Windows\\Fonts\\*" OR Image="*\\Windows\\IME\\*" OR Image="*\\Windows\\addins\\*" OR Image="*\\Windows\\debug\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Program Location Process Starts" | eval sigma_description="Detects programs running in suspicious files system locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Script Run in AppData - winevent]
description = Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="* /c powershell*\\AppData\\Local\\*" OR Process_Command_Line="* /c powershell*\\AppData\\Roaming\\*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell Script Run in AppData" | eval sigma_description="Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell Script Run in AppData - sysmon]
description = Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="* /c powershell*\\AppData\\Local\\*" OR CommandLine="* /c powershell*\\AppData\\Roaming\\*")) | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell Script Run in AppData" | eval sigma_description="Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell DownloadFile - winevent]
description = Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*powershell*" Process_Command_Line="*.DownloadFile*" Process_Command_Line="*System.Net.WebClient*") | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell DownloadFile" | eval sigma_description="Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[PowerShell DownloadFile - sysmon]
description = Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*powershell*" CommandLine="*.DownloadFile*" CommandLine="*System.Net.WebClient*") | eval sigma_attack_tags="attack.execution attack.t1086" | eval sigma_title="PowerShell DownloadFile" | eval sigma_description="Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psr.exe Capture Screenshots - winevent]
description = The psr.exe captures desktop screenshots and saves them on the local machine
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Psr.exe" Process_Command_Line="*/start*") | eval sigma_attack_tags="attack.persistence attack.t1218" | eval sigma_title="Psr.exe Capture Screenshots" | eval sigma_description="The psr.exe captures desktop screenshots and saves them on the local machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Psr.exe Capture Screenshots - sysmon]
description = The psr.exe captures desktop screenshots and saves them on the local machine
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Psr.exe" CommandLine="*/start*") | eval sigma_attack_tags="attack.persistence attack.t1218" | eval sigma_title="Psr.exe Capture Screenshots" | eval sigma_description="The psr.exe captures desktop screenshots and saves them on the local machine"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RASdial Activity - winevent]
description = Detects suspicious process related to rasdial.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="rasdial")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1064" | eval sigma_title="Suspicious RASdial Activity" | eval sigma_description="Detects suspicious process related to rasdial.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RASdial Activity - sysmon]
description = Detects suspicious process related to rasdial.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="rasdial")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1064" | eval sigma_title="Suspicious RASdial Activity" | eval sigma_description="Detects suspicious process related to rasdial.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reconnaissance Activity - winevent]
description = Detects suspicious command line activity on Windows systems
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="net group \"domain admins\" /domain" OR Process_Command_Line="net localgroup administrators")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1087" | eval sigma_title="Suspicious Reconnaissance Activity" | eval sigma_description="Detects suspicious command line activity on Windows systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Reconnaissance Activity - sysmon]
description = Detects suspicious command line activity on Windows systems
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="net group \"domain admins\" /domain" OR CommandLine="net localgroup administrators")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1087" | eval sigma_title="Suspicious Reconnaissance Activity" | eval sigma_description="Detects suspicious command line activity on Windows systems"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Anomaly - winevent]
description = Detects various anomalies in relation to regsvr32.exe
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\regsvr32.exe" Process_Command_Line="*\\Temp\\*") OR (New_Process_Name="*\\regsvr32.exe" Creator_Process_Name="*\\powershell.exe") OR (New_Process_Name="*\\regsvr32.exe" Creator_Process_Name="*\\cmd.exe") OR (New_Process_Name="*\\regsvr32.exe" (Process_Command_Line="*/i:http* scrobj.dll" OR Process_Command_Line="*/i:ftp* scrobj.dll")) OR (New_Process_Name="*\\wscript.exe" Creator_Process_Name="*\\regsvr32.exe") OR (New_Process_Name="*\\EXCEL.EXE" Process_Command_Line="*..\\..\\..\\Windows\\System32\\regsvr32.exe *"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1117 attack.defense_evasion attack.execution car.2019-04-002 car.2019-04-003" | eval sigma_title="Regsvr32 Anomaly" | eval sigma_description="Detects various anomalies in relation to regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Regsvr32 Anomaly - sysmon]
description = Detects various anomalies in relation to regsvr32.exe
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\regsvr32.exe" CommandLine="*\\Temp\\*") OR (Image="*\\regsvr32.exe" ParentImage="*\\powershell.exe") OR (Image="*\\regsvr32.exe" ParentImage="*\\cmd.exe") OR (Image="*\\regsvr32.exe" (CommandLine="*/i:http* scrobj.dll" OR CommandLine="*/i:ftp* scrobj.dll")) OR (Image="*\\wscript.exe" ParentImage="*\\regsvr32.exe") OR (Image="*\\EXCEL.EXE" CommandLine="*..\\..\\..\\Windows\\System32\\regsvr32.exe *"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1117 attack.defense_evasion attack.execution car.2019-04-002 car.2019-04-003" | eval sigma_title="Regsvr32 Anomaly" | eval sigma_description="Detects various anomalies in relation to regsvr32.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ZOHO Dctask64 - winevent]
description = Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Imphash="6834B1B94E49701D77CCB3C0895E1AFD" NOT (New_Process_Name="*\\dctask64.exe")) | table Process_Command_Line,ParentCommandLine,Creator_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Renamed ZOHO Dctask64" | eval sigma_description="Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed ZOHO Dctask64 - sysmon]
description = Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Imphash="6834B1B94E49701D77CCB3C0895E1AFD" NOT (Image="*\\dctask64.exe")) | table CommandLine,ParentCommandLine,ParentImage | eval sigma_attack_tags="attack.defense_evasion attack.t1055" | eval sigma_title="Renamed ZOHO Dctask64" | eval sigma_description="Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed SysInternals Debug View - winevent]
description = Detects suspicious renamed SysInternals DebugView execution
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Product="Sysinternals DebugView" OR Product="Sysinternals Debugview") NOT (OriginalFilename="Dbgview.exe" New_Process_Name="*\\Dbgview.exe")) | eval sigma_attack_tags="" | eval sigma_title="Renamed SysInternals Debug View" | eval sigma_description="Detects suspicious renamed SysInternals DebugView execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Renamed SysInternals Debug View - sysmon]
description = Detects suspicious renamed SysInternals DebugView execution
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Product="Sysinternals DebugView" OR Product="Sysinternals Debugview") NOT (OriginalFilename="Dbgview.exe" Image="*\\Dbgview.exe")) | eval sigma_attack_tags="" | eval sigma_title="Renamed SysInternals Debug View" | eval sigma_description="Detects suspicious renamed SysInternals DebugView execution"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Start Locations - winevent]
description = Detects suspicious process run from unusual locations
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*:\\RECYCLER\\*" OR New_Process_Name="*:\\SystemVolumeInformation\\*" OR New_Process_Name="C:\\Windows\\Tasks\\*" OR New_Process_Name="C:\\Windows\\debug\\*" OR New_Process_Name="C:\\Windows\\fonts\\*" OR New_Process_Name="C:\\Windows\\help\\*" OR New_Process_Name="C:\\Windows\\drivers\\*" OR New_Process_Name="C:\\Windows\\addins\\*" OR New_Process_Name="C:\\Windows\\cursors\\*" OR New_Process_Name="C:\\Windows\\system32\\tasks\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 car.2013-05-002" | eval sigma_title="Suspicious Process Start Locations" | eval sigma_description="Detects suspicious process run from unusual locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Process Start Locations - sysmon]
description = Detects suspicious process run from unusual locations
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*:\\RECYCLER\\*" OR Image="*:\\SystemVolumeInformation\\*" OR Image="C:\\Windows\\Tasks\\*" OR Image="C:\\Windows\\debug\\*" OR Image="C:\\Windows\\fonts\\*" OR Image="C:\\Windows\\help\\*" OR Image="C:\\Windows\\drivers\\*" OR Image="C:\\Windows\\addins\\*" OR Image="C:\\Windows\\cursors\\*" OR Image="C:\\Windows\\system32\\tasks\\*")) | eval sigma_attack_tags="attack.defense_evasion attack.t1036 car.2013-05-002" | eval sigma_title="Suspicious Process Start Locations" | eval sigma_description="Detects suspicious process run from unusual locations"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity - winevent]
description = Detects suspicious process related to rundll32 based on arguments
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\rundll32.exe* url.dll,*OpenURL *" OR Process_Command_Line="*\\rundll32.exe* url.dll,*OpenURLA *" OR Process_Command_Line="*\\rundll32.exe* url.dll,*FileProtocolHandler *" OR Process_Command_Line="*\\rundll32.exe* zipfldr.dll,*RouteTheCall *" OR Process_Command_Line="*\\rundll32.exe* Shell32.dll,*Control_RunDLL *" OR Process_Command_Line="*\\rundll32.exe javascript:*" OR Process_Command_Line="* url.dll,*OpenURL *" OR Process_Command_Line="* url.dll,*OpenURLA *" OR Process_Command_Line="* url.dll,*FileProtocolHandler *" OR Process_Command_Line="* zipfldr.dll,*RouteTheCall *" OR Process_Command_Line="* Shell32.dll,*Control_RunDLL *" OR Process_Command_Line="* javascript:*" OR Process_Command_Line="*.RegisterXLL*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1085" | eval sigma_title="Suspicious Rundll32 Activity" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Rundll32 Activity - sysmon]
description = Detects suspicious process related to rundll32 based on arguments
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\rundll32.exe* url.dll,*OpenURL *" OR CommandLine="*\\rundll32.exe* url.dll,*OpenURLA *" OR CommandLine="*\\rundll32.exe* url.dll,*FileProtocolHandler *" OR CommandLine="*\\rundll32.exe* zipfldr.dll,*RouteTheCall *" OR CommandLine="*\\rundll32.exe* Shell32.dll,*Control_RunDLL *" OR CommandLine="*\\rundll32.exe javascript:*" OR CommandLine="* url.dll,*OpenURL *" OR CommandLine="* url.dll,*OpenURLA *" OR CommandLine="* url.dll,*FileProtocolHandler *" OR CommandLine="* zipfldr.dll,*RouteTheCall *" OR CommandLine="* Shell32.dll,*Control_RunDLL *" OR CommandLine="* javascript:*" OR CommandLine="*.RegisterXLL*")) | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1085" | eval sigma_title="Suspicious Rundll32 Activity" | eval sigma_description="Detects suspicious process related to rundll32 based on arguments"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Call by Ordinal - winevent]
description = Detects suspicious calls of DLLs in rundll32.dll exports by ordinal
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\rundll32.exe *,#*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1085" | eval sigma_title="Suspicious Call by Ordinal" | eval sigma_description="Detects suspicious calls of DLLs in rundll32.dll exports by ordinal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Call by Ordinal - sysmon]
description = Detects suspicious calls of DLLs in rundll32.dll exports by ordinal
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\rundll32.exe *,#*") | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1085" | eval sigma_title="Suspicious Call by Ordinal" | eval sigma_description="Detects suspicious calls of DLLs in rundll32.dll exports by ordinal"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Creation - winevent]
description = Detects the creation of scheduled tasks in user session
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\schtasks.exe" Process_Command_Line="* /create *") NOT (Account_Name="NT AUTHORITY\\SYSTEM")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053 attack.s0111 car.2013-08-001" | eval sigma_title="Scheduled Task Creation" | eval sigma_description="Detects the creation of scheduled tasks in user session"
dispatch.earliest_time = -24h@h
alert.track = 0

[Scheduled Task Creation - sysmon]
description = Detects the creation of scheduled tasks in user session
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\schtasks.exe" CommandLine="* /create *") NOT (User="NT AUTHORITY\\SYSTEM")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.persistence attack.privilege_escalation attack.t1053 attack.s0111 car.2013-08-001" | eval sigma_title="Scheduled Task Creation" | eval sigma_description="Detects the creation of scheduled tasks in user session"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSF/JSE/JS/VBA/VBE File Execution - winevent]
description = Detects suspicious file execution by wscript and cscript
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wscript.exe" OR New_Process_Name="*\\cscript.exe") (Process_Command_Line="*.jse*" OR Process_Command_Line="*.vbe*" OR Process_Command_Line="*.js*" OR Process_Command_Line="*.vba*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1064" | eval sigma_title="WSF/JSE/JS/VBA/VBE File Execution" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[WSF/JSE/JS/VBA/VBE File Execution - sysmon]
description = Detects suspicious file execution by wscript and cscript
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wscript.exe" OR Image="*\\cscript.exe") (CommandLine="*.jse*" OR CommandLine="*.vbe*" OR CommandLine="*.js*" OR CommandLine="*.vba*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1064" | eval sigma_title="WSF/JSE/JS/VBA/VBE File Execution" | eval sigma_description="Detects suspicious file execution by wscript and cscript"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Path Modification - winevent]
description = Detects service path modification to powershell/cmd
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sc.exe" Process_Command_Line="*config*" Process_Command_Line="*binpath*" (Process_Command_Line="*powershell*" OR Process_Command_Line="*cmd*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1031" | eval sigma_title="Suspicious Service Path Modification" | eval sigma_description="Detects service path modification to powershell/cmd"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Service Path Modification - sysmon]
description = Detects service path modification to powershell/cmd
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sc.exe" CommandLine="*config*" CommandLine="*binpath*" (CommandLine="*powershell*" OR CommandLine="*cmd*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.persistence attack.t1031" | eval sigma_title="Suspicious Service Path Modification" | eval sigma_description="Detects service path modification to powershell/cmd"
dispatch.earliest_time = -24h@h
alert.track = 0

[Squirrel Lolbin - winevent]
description = Detects Possible Squirrel Packages Manager as Lolbin
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\update.exe") (Process_Command_Line="*--processStart*.exe*" OR Process_Command_Line="*--processStartAndWait*.exe*" OR Process_Command_Line="*--createShortcut*.exe*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Squirrel Lolbin" | eval sigma_description="Detects Possible Squirrel Packages Manager as Lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Squirrel Lolbin - sysmon]
description = Detects Possible Squirrel Packages Manager as Lolbin
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\update.exe") (CommandLine="*--processStart*.exe*" OR CommandLine="*--processStartAndWait*.exe*" OR CommandLine="*--createShortcut*.exe*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Squirrel Lolbin" | eval sigma_description="Detects Possible Squirrel Packages Manager as Lolbin"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Activity - winevent]
description = It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") NOT Process_Command_Line="*" New_Process_Name="*\\svchost.exe") NOT ((Creator_Process_Name="*\\rpcnet.exe" OR Creator_Process_Name="*\\rpcnetp.exe"))) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.t1055" | eval sigma_title="Suspect Svchost Activity" | eval sigma_description="It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspect Svchost Activity - sysmon]
description = It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") NOT CommandLine="*" Image="*\\svchost.exe") NOT ((ParentImage="*\\rpcnet.exe" OR ParentImage="*\\rpcnetp.exe"))) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.t1055" | eval sigma_title="Suspect Svchost Activity" | eval sigma_description="It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space."
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Svchost Process - winevent]
description = Detects a suspicious svchost process start
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\svchost.exe" NOT ((Creator_Process_Name="*\\services.exe" OR Creator_Process_Name="*\\MsMpEng.exe" OR Creator_Process_Name="*\\Mrt.exe" OR Creator_Process_Name="*\\rpcnet.exe" OR Creator_Process_Name="*\\svchost.exe"))) NOT (NOT Creator_Process_Name="*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Svchost Process" | eval sigma_description="Detects a suspicious svchost process start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Svchost Process - sysmon]
description = Detects a suspicious svchost process start
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\svchost.exe" NOT ((ParentImage="*\\services.exe" OR ParentImage="*\\MsMpEng.exe" OR ParentImage="*\\Mrt.exe" OR ParentImage="*\\rpcnet.exe" OR ParentImage="*\\svchost.exe"))) NOT (NOT ParentImage="*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Suspicious Svchost Process" | eval sigma_description="Detects a suspicious svchost process start"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysprep on AppData Folder - winevent]
description = Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Process_Command_Line="*\\sysprep.exe *\\AppData\\*" OR Process_Command_Line="sysprep.exe *\\AppData\\*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Sysprep on AppData Folder" | eval sigma_description="Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysprep on AppData Folder - sysmon]
description = Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (CommandLine="*\\sysprep.exe *\\AppData\\*" OR CommandLine="sysprep.exe *\\AppData\\*")) | eval sigma_attack_tags="attack.execution" | eval sigma_title="Sysprep on AppData Folder" | eval sigma_description="Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSVOL Domain Group Policy Access - winevent]
description = Detects Access to Domain Group Policies stored in SYSVOL
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*\\SYSVOL\\*\\policies\\*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Suspicious SYSVOL Domain Group Policy Access" | eval sigma_description="Detects Access to Domain Group Policies stored in SYSVOL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious SYSVOL Domain Group Policy Access - sysmon]
description = Detects Access to Domain Group Policies stored in SYSVOL
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*\\SYSVOL\\*\\policies\\*") | eval sigma_attack_tags="attack.credential_access attack.t1003" | eval sigma_title="Suspicious SYSVOL Domain Group Policy Access" | eval sigma_description="Detects Access to Domain Group Policies stored in SYSVOL"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as LOCAL_SYSTEM - winevent]
description = Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" New_Process_Name="*\\taskmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as LOCAL_SYSTEM" | eval sigma_description="Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as LOCAL_SYSTEM - sysmon]
description = Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" Image="*\\taskmgr.exe") | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as LOCAL_SYSTEM" | eval sigma_description="Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as Parent - winevent]
description = Detects the creation of a process from Windows task manager
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\taskmgr.exe" NOT ((New_Process_Name="*\\resmon.exe" OR New_Process_Name="*\\mmc.exe" OR New_Process_Name="*\\taskmgr.exe"))) | table New_Process_Name,Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as Parent" | eval sigma_description="Detects the creation of a process from Windows task manager"
dispatch.earliest_time = -24h@h
alert.track = 0

[Taskmgr as Parent - sysmon]
description = Detects the creation of a process from Windows task manager
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\taskmgr.exe" NOT ((Image="*\\resmon.exe" OR Image="*\\mmc.exe" OR Image="*\\taskmgr.exe"))) | table Image,CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="Taskmgr as Parent" | eval sigma_description="Detects the creation of a process from Windows task manager"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious TSCON Start - winevent]
description = Detects a tscon.exe start as LOCAL SYSTEM
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" New_Process_Name="*\\tscon.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Suspicious TSCON Start" | eval sigma_description="Detects a tscon.exe start as LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious TSCON Start - sysmon]
description = Detects a tscon.exe start as LOCAL SYSTEM
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" Image="*\\tscon.exe") | eval sigma_attack_tags="attack.command_and_control attack.t1219" | eval sigma_title="Suspicious TSCON Start" | eval sigma_description="Detects a tscon.exe start as LOCAL SYSTEM"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RDP Redirect Using TSCON - winevent]
description = Detects a suspicious RDP session redirect using tscon.exe
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="* /dest:rdp-tcp:*") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1076 car.2013-07-002" | eval sigma_title="Suspicious RDP Redirect Using TSCON" | eval sigma_description="Detects a suspicious RDP session redirect using tscon.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious RDP Redirect Using TSCON - sysmon]
description = Detects a suspicious RDP session redirect using tscon.exe
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="* /dest:rdp-tcp:*") | eval sigma_attack_tags="attack.lateral_movement attack.privilege_escalation attack.t1076 car.2013-07-002" | eval sigma_title="Suspicious RDP Redirect Using TSCON" | eval sigma_description="Detects a suspicious RDP session redirect using tscon.exe"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of CSharp Interactive Console - winevent]
description = Detects the execution of CSharp interactive console by PowerShell
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\csi.exe" Creator_Process_Name="*\\powershell.exe" OriginalFileName="csi.exe") | eval sigma_attack_tags="attack.execution attack.t1127" | eval sigma_title="Suspicious Use of CSharp Interactive Console" | eval sigma_description="Detects the execution of CSharp interactive console by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Use of CSharp Interactive Console - sysmon]
description = Detects the execution of CSharp interactive console by PowerShell
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\csi.exe" ParentImage="*\\powershell.exe" OriginalFileName="csi.exe") | eval sigma_attack_tags="attack.execution attack.t1127" | eval sigma_title="Suspicious Use of CSharp Interactive Console" | eval sigma_description="Detects the execution of CSharp interactive console by PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Userinit Child Process - winevent]
description = Detects a suspicious child process of userinit
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\userinit.exe" NOT (Process_Command_Line="*\\netlogon\\*")) NOT (New_Process_Name="*\\explorer.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Userinit Child Process" | eval sigma_description="Detects a suspicious child process of userinit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious Userinit Child Process - sysmon]
description = Detects a suspicious child process of userinit
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\userinit.exe" NOT (CommandLine="*\\netlogon\\*")) NOT (Image="*\\explorer.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="" | eval sigma_title="Suspicious Userinit Child Process" | eval sigma_description="Detects a suspicious child process of userinit"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution - winevent]
description = Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) (New_Process_Name="*\\whoami.exe" OR OriginalFileName="whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution" | eval sigma_description="Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators"
dispatch.earliest_time = -24h@h
alert.track = 0

[Whoami Execution - sysmon]
description = Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) (Image="*\\whoami.exe" OR OriginalFileName="whoami.exe")) | eval sigma_attack_tags="attack.discovery attack.t1033 car.2016-03-001" | eval sigma_title="Whoami Execution" | eval sigma_description="Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution - winevent]
description = Detects WMI executing suspicious commands
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\wmic.exe") (Process_Command_Line="*/NODE:*process call create *" OR Process_Command_Line="* path AntiVirusProduct get *" OR Process_Command_Line="* path FirewallProduct get *" OR Process_Command_Line="* shadowcopy delete *")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 car.2016-03-002" | eval sigma_title="Suspicious WMI Execution" | eval sigma_description="Detects WMI executing suspicious commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Suspicious WMI Execution - sysmon]
description = Detects WMI executing suspicious commands
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\wmic.exe") (CommandLine="*/NODE:*process call create *" OR CommandLine="* path AntiVirusProduct get *" OR CommandLine="* path FirewallProduct get *" OR CommandLine="* shadowcopy delete *")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.execution attack.t1047 car.2016-03-002" | eval sigma_title="Suspicious WMI Execution" | eval sigma_description="Detects WMI executing suspicious commands"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Driver Unload - winevent]
description = Detect possible Sysmon driver unload
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\fltmc.exe" Process_Command_Line="*unload*" Process_Command_Line="*sys*") | table Process_Command_Line,Details | eval sigma_attack_tags="" | eval sigma_title="Sysmon Driver Unload" | eval sigma_description="Detect possible Sysmon driver unload"
dispatch.earliest_time = -24h@h
alert.track = 0

[Sysmon Driver Unload - sysmon]
description = Detect possible Sysmon driver unload
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\fltmc.exe" CommandLine="*unload*" CommandLine="*sys*") | table CommandLine,Details | eval sigma_attack_tags="" | eval sigma_title="Sysmon Driver Unload" | eval sigma_description="Detect possible Sysmon driver unload"
dispatch.earliest_time = -24h@h
alert.track = 0

[System File Execution Location Anomaly - winevent]
description = Detects a Windows program executable started in a suspicious folder
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (New_Process_Name="*\\svchost.exe" OR New_Process_Name="*\\rundll32.exe" OR New_Process_Name="*\\services.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\regsvr32.exe" OR New_Process_Name="*\\spoolsv.exe" OR New_Process_Name="*\\lsass.exe" OR New_Process_Name="*\\smss.exe" OR New_Process_Name="*\\csrss.exe" OR New_Process_Name="*\\conhost.exe" OR New_Process_Name="*\\wininit.exe" OR New_Process_Name="*\\lsm.exe" OR New_Process_Name="*\\winlogon.exe" OR New_Process_Name="*\\explorer.exe" OR New_Process_Name="*\\taskhost.exe" OR New_Process_Name="*\\Taskmgr.exe" OR New_Process_Name="*\\sihost.exe" OR New_Process_Name="*\\RuntimeBroker.exe" OR New_Process_Name="*\\smartscreen.exe" OR New_Process_Name="*\\dllhost.exe" OR New_Process_Name="*\\audiodg.exe" OR New_Process_Name="*\\wlanext.exe") NOT ((New_Process_Name="C:\\Windows\\System32\\*" OR New_Process_Name="C:\\Windows\\system32\\*" OR New_Process_Name="C:\\Windows\\SysWow64\\*" OR New_Process_Name="C:\\Windows\\SysWOW64\\*" OR New_Process_Name="C:\\Windows\\explorer.exe" OR New_Process_Name="C:\\Windows\\winsxs\\*" OR New_Process_Name="C:\\Windows\\WinSxS\\*" OR New_Process_Name="\\SystemRoot\\System32\\*"))) | table ComputerName,Account_Name,New_Process_Name | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="System File Execution Location Anomaly" | eval sigma_description="Detects a Windows program executable started in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[System File Execution Location Anomaly - sysmon]
description = Detects a Windows program executable started in a suspicious folder
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (Image="*\\svchost.exe" OR Image="*\\rundll32.exe" OR Image="*\\services.exe" OR Image="*\\powershell.exe" OR Image="*\\regsvr32.exe" OR Image="*\\spoolsv.exe" OR Image="*\\lsass.exe" OR Image="*\\smss.exe" OR Image="*\\csrss.exe" OR Image="*\\conhost.exe" OR Image="*\\wininit.exe" OR Image="*\\lsm.exe" OR Image="*\\winlogon.exe" OR Image="*\\explorer.exe" OR Image="*\\taskhost.exe" OR Image="*\\Taskmgr.exe" OR Image="*\\sihost.exe" OR Image="*\\RuntimeBroker.exe" OR Image="*\\smartscreen.exe" OR Image="*\\dllhost.exe" OR Image="*\\audiodg.exe" OR Image="*\\wlanext.exe") NOT ((Image="C:\\Windows\\System32\\*" OR Image="C:\\Windows\\system32\\*" OR Image="C:\\Windows\\SysWow64\\*" OR Image="C:\\Windows\\SysWOW64\\*" OR Image="C:\\Windows\\explorer.exe" OR Image="C:\\Windows\\winsxs\\*" OR Image="C:\\Windows\\WinSxS\\*" OR Image="\\SystemRoot\\System32\\*"))) | table ComputerName,User,Image | eval sigma_attack_tags="attack.defense_evasion attack.t1036" | eval sigma_title="System File Execution Location Anomaly" | eval sigma_description="Detects a Windows program executable started in a suspicious folder"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Installer Execution - winevent]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\tapinstall.exe") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Installer Execution" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tap Installer Execution - sysmon]
description = Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\tapinstall.exe") | eval sigma_attack_tags="attack.exfiltration attack.t1048" | eval sigma_title="Tap Installer Execution" | eval sigma_description="Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tasks Folder Evasion - winevent]
description = The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr
search = index=* ((Process_Command_Line="*echo *" OR Process_Command_Line="*copy *" OR Process_Command_Line="*type *" OR Process_Command_Line="*file createnew*") (Process_Command_Line="* C:\\Windows\\System32\\Tasks\\*" OR Process_Command_Line="* C:\\Windows\\SysWow64\\Tasks\\*")) | table Process_Command_Line,ParentProcess | eval sigma_attack_tags="attack.t1064 attack.t1211 attack.t1059 attack.defense_evasion attack.persistence" | eval sigma_title="Tasks Folder Evasion" | eval sigma_description="The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr"
dispatch.earliest_time = -24h@h
alert.track = 0

[Tasks Folder Evasion - sysmon]
description = The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr
search = index=* ((CommandLine="*echo *" OR CommandLine="*copy *" OR CommandLine="*type *" OR CommandLine="*file createnew*") (CommandLine="* C:\\Windows\\System32\\Tasks\\*" OR CommandLine="* C:\\Windows\\SysWow64\\Tasks\\*")) | table CommandLine,ParentProcess | eval sigma_attack_tags="attack.t1064 attack.t1211 attack.t1059 attack.defense_evasion attack.persistence" | eval sigma_title="Tasks Folder Evasion" | eval sigma_description="The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr"
dispatch.earliest_time = -24h@h
alert.track = 0

[Terminal Service Process Spawn - winevent]
description = Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") ParentCommandLine="*\\svchost.exe*termsvcs" NOT (New_Process_Name="*\\rdpclip.exe")) | eval sigma_attack_tags="car.2013-07-002" | eval sigma_title="Terminal Service Process Spawn" | eval sigma_description="Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Terminal Service Process Spawn - sysmon]
description = Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentCommandLine="*\\svchost.exe*termsvcs" NOT (Image="*\\rdpclip.exe")) | eval sigma_attack_tags="car.2013-07-002" | eval sigma_title="Terminal Service Process Spawn" | eval sigma_description="Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)"
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - winevent]
description = Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\nltest.exe" Process_Command_Line="*domain_trusts*") OR (New_Process_Name="*\\dsquery.exe" Process_Command_Line="*trustedDomain*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Domain Trust Discovery - sysmon]
description = Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\nltest.exe" CommandLine="*domain_trusts*") OR (Image="*\\dsquery.exe" CommandLine="*trustedDomain*"))) | eval sigma_attack_tags="attack.discovery attack.t1482" | eval sigma_title="Domain Trust Discovery" | eval sigma_description="Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via CMSTP - winevent]
description = Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\cmstp.exe" (Process_Command_Line="*/s*" OR Process_Command_Line="*/au*")) | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1191 attack.t1088" | eval sigma_title="Bypass UAC via CMSTP" | eval sigma_description="Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via CMSTP - sysmon]
description = Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\cmstp.exe" (CommandLine="*/s*" OR CommandLine="*/au*")) | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1191 attack.t1088" | eval sigma_title="Bypass UAC via CMSTP" | eval sigma_description="Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe)."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via Fodhelper.exe - winevent]
description = Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\fodhelper.exe") | table ComputerName,Account_Name,Process_Command_Line | eval sigma_attack_tags="attack.privilege_escalation attack.t1088" | eval sigma_title="Bypass UAC via Fodhelper.exe" | eval sigma_description="Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via Fodhelper.exe - sysmon]
description = Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\fodhelper.exe") | table ComputerName,User,CommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.t1088" | eval sigma_title="Bypass UAC via Fodhelper.exe" | eval sigma_description="Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via WSReset.exe - winevent]
description = Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\wsreset.exe" NOT (New_Process_Name="*\\conhost.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1088" | eval sigma_title="Bypass UAC via WSReset.exe" | eval sigma_description="Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Bypass UAC via WSReset.exe - sysmon]
description = Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\wsreset.exe" NOT (Image="*\\conhost.exe")) | eval sigma_attack_tags="attack.privilege_escalation attack.t1088" | eval sigma_title="Bypass UAC via WSReset.exe" | eval sigma_description="Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes."
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Weak Service Permissions - winevent]
description = Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\sc.exe" IntegrityLevel="Medium" (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((Process_Command_Line="*config*" Process_Command_Line="*binPath*") OR (Process_Command_Line="*failure*" Process_Command_Line="*command*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Possible Privilege Escalation via Weak Service Permissions" | eval sigma_description="Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Possible Privilege Escalation via Weak Service Permissions - sysmon]
description = Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\sc.exe" IntegrityLevel="Medium" (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((CommandLine="*config*" CommandLine="*binPath*") OR (CommandLine="*failure*" CommandLine="*command*"))) | eval sigma_attack_tags="attack.privilege_escalation attack.t1134" | eval sigma_title="Possible Privilege Escalation via Weak Service Permissions" | eval sigma_description="Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand"
dispatch.earliest_time = -24h@h
alert.track = 0

[Java Running with Remote Debugging - winevent]
description = Detects a JAVA process running with remote debugging allowing more than just localhost to connect
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Process_Command_Line="*transport=dt_socket,address=*" NOT (Process_Command_Line="*address=127.0.0.1*" OR Process_Command_Line="*address=localhost*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Java Running with Remote Debugging" | eval sigma_description="Detects a JAVA process running with remote debugging allowing more than just localhost to connect"
dispatch.earliest_time = -24h@h
alert.track = 0

[Java Running with Remote Debugging - sysmon]
description = Detects a JAVA process running with remote debugging allowing more than just localhost to connect
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") CommandLine="*transport=dt_socket,address=*" NOT (CommandLine="*address=127.0.0.1*" OR CommandLine="*address=localhost*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.discovery attack.t1046" | eval sigma_title="Java Running with Remote Debugging" | eval sigma_description="Detects a JAVA process running with remote debugging allowing more than just localhost to connect"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Detection With Command Line Keywords - winevent]
description = Detects certain command line parameters often used during reconnaissance activity via web shells
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\apache*" OR Creator_Process_Name="*\\tomcat*" OR Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\httpd.exe") (Process_Command_Line="*whoami*" OR Process_Command_Line="*net user *" OR Process_Command_Line="*ping -n *" OR Process_Command_Line="*systeminfo" OR Process_Command_Line="*&cd&echo*" OR Process_Command_Line="*cd /d*")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1100" | eval sigma_title="Webshell Detection With Command Line Keywords" | eval sigma_description="Detects certain command line parameters often used during reconnaissance activity via web shells"
dispatch.earliest_time = -24h@h
alert.track = 0

[Webshell Detection With Command Line Keywords - sysmon]
description = Detects certain command line parameters often used during reconnaissance activity via web shells
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\apache*" OR ParentImage="*\\tomcat*" OR ParentImage="*\\w3wp.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\httpd.exe") (CommandLine="*whoami*" OR CommandLine="*net user *" OR CommandLine="*ping -n *" OR CommandLine="*systeminfo" OR CommandLine="*&cd&echo*" OR CommandLine="*cd /d*")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1100" | eval sigma_title="Webshell Detection With Command Line Keywords" | eval sigma_description="Detects certain command line parameters often used during reconnaissance activity via web shells"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawned by Web Servers - winevent]
description = Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\w3wp.exe" OR Creator_Process_Name="*\\httpd.exe" OR Creator_Process_Name="*\\nginx.exe" OR Creator_Process_Name="*\\php-cgi.exe" OR Creator_Process_Name="*\\tomcat.exe") (New_Process_Name="*\\cmd.exe" OR New_Process_Name="*\\sh.exe" OR New_Process_Name="*\\bash.exe" OR New_Process_Name="*\\powershell.exe" OR New_Process_Name="*\\bitsadmin.exe")) | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1100" | eval sigma_title="Shells Spawned by Web Servers" | eval sigma_description="Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Shells Spawned by Web Servers - sysmon]
description = Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\w3wp.exe" OR ParentImage="*\\httpd.exe" OR ParentImage="*\\nginx.exe" OR ParentImage="*\\php-cgi.exe" OR ParentImage="*\\tomcat.exe") (Image="*\\cmd.exe" OR Image="*\\sh.exe" OR Image="*\\bash.exe" OR Image="*\\powershell.exe" OR Image="*\\bitsadmin.exe")) | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.privilege_escalation attack.persistence attack.t1100" | eval sigma_title="Shells Spawned by Web Servers" | eval sigma_description="Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack"
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as SYSTEM - winevent]
description = Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Account_Name="NT AUTHORITY\\SYSTEM" New_Process_Name="*\\whoami.exe") | eval sigma_attack_tags="attack.discovery attack.privilege_escalation attack.t1033" | eval sigma_title="Run Whoami as SYSTEM" | eval sigma_description="Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Run Whoami as SYSTEM - sysmon]
description = Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") User="NT AUTHORITY\\SYSTEM" Image="*\\whoami.exe") | eval sigma_attack_tags="attack.discovery attack.privilege_escalation attack.t1033" | eval sigma_title="Run Whoami as SYSTEM" | eval sigma_description="Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation."
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows 10 Scheduled Task SandboxEscaper 0-day - winevent]
description = Detects Task Scheduler .job import arbitrary DACL write\par
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\schtasks.exe" Process_Command_Line="*/change*/TN*/RU*/RP*") | eval sigma_attack_tags="attack.privilege_escalation attack.execution attack.t1053 car.2013-08-001" | eval sigma_title="Windows 10 Scheduled Task SandboxEscaper 0-day" | eval sigma_description="Detects Task Scheduler .job import arbitrary DACL write\par"
dispatch.earliest_time = -24h@h
alert.track = 0

[Windows 10 Scheduled Task SandboxEscaper 0-day - sysmon]
description = Detects Task Scheduler .job import arbitrary DACL write\par
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\schtasks.exe" CommandLine="*/change*/TN*/RU*/RP*") | eval sigma_attack_tags="attack.privilege_escalation attack.execution attack.t1053 car.2013-08-001" | eval sigma_title="Windows 10 Scheduled Task SandboxEscaper 0-day" | eval sigma_description="Detects Task Scheduler .job import arbitrary DACL write\par"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Backdoor Exchange Transport Agent - winevent]
description = Detects a WMi backdoor in Exchange Transport Agents via WMi event filters
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\EdgeTransport.exe") | eval sigma_attack_tags="attack.persistence attack.t1084" | eval sigma_title="WMI Backdoor Exchange Transport Agent" | eval sigma_description="Detects a WMi backdoor in Exchange Transport Agents via WMi event filters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Backdoor Exchange Transport Agent - sysmon]
description = Detects a WMi backdoor in Exchange Transport Agents via WMi event filters
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\EdgeTransport.exe") | eval sigma_attack_tags="attack.persistence attack.t1084" | eval sigma_title="WMI Backdoor Exchange Transport Agent" | eval sigma_description="Detects a WMi backdoor in Exchange Transport Agents via WMi event filters"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer - winevent]
description = Detects WMI script event consumers
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="C:\\WINDOWS\\system32\\wbem\\scrcons.exe" Creator_Process_Name="C:\\Windows\\System32\\svchost.exe") | eval sigma_attack_tags="attack.execution attack.persistence attack.t1047" | eval sigma_title="WMI Persistence - Script Event Consumer" | eval sigma_description="Detects WMI script event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Persistence - Script Event Consumer - sysmon]
description = Detects WMI script event consumers
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="C:\\WINDOWS\\system32\\wbem\\scrcons.exe" ParentImage="C:\\Windows\\System32\\svchost.exe") | eval sigma_attack_tags="attack.execution attack.persistence attack.t1047" | eval sigma_title="WMI Persistence - Script Event Consumer" | eval sigma_description="Detects WMI script event consumers"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Spawning Windows PowerShell - winevent]
description = Detects WMI spawning PowerShell
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\wmiprvse.exe") (New_Process_Name="*\\powershell.exe")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1064" | eval sigma_title="WMI Spawning Windows PowerShell" | eval sigma_description="Detects WMI spawning PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[WMI Spawning Windows PowerShell - sysmon]
description = Detects WMI spawning PowerShell
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\wmiprvse.exe") (Image="*\\powershell.exe")) | eval sigma_attack_tags="attack.execution attack.defense_evasion attack.t1064" | eval sigma_title="WMI Spawning Windows PowerShell" | eval sigma_description="Detects WMI spawning PowerShell"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Spawning Process - winevent]
description = Detects wmiprvse spawning processes
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") Creator_Process_Name="*\\WmiPrvSe.exe" NOT (LogonId="0x3e7" OR Username="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Wmiprvse Spawning Process" | eval sigma_description="Detects wmiprvse spawning processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wmiprvse Spawning Process - sysmon]
description = Detects wmiprvse spawning processes
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") ParentImage="*\\WmiPrvSe.exe" NOT (LogonId="0x3e7" OR Username="NT AUTHORITY\\SYSTEM")) | eval sigma_attack_tags="attack.execution attack.t1047" | eval sigma_title="Wmiprvse Spawning Process" | eval sigma_description="Detects wmiprvse spawning processes"
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Workflow Compiler - winevent]
description = Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") New_Process_Name="*\\Microsoft.Workflow.Compiler.exe") | table Process_Command_Line,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1127" | eval sigma_title="Microsoft Workflow Compiler" | eval sigma_description="Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Microsoft Workflow Compiler - sysmon]
description = Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") Image="*\\Microsoft.Workflow.Compiler.exe") | table CommandLine,ParentCommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1127" | eval sigma_title="Microsoft Workflow Compiler" | eval sigma_description="Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code."
dispatch.earliest_time = -24h@h
alert.track = 0

[Wsreset UAC Bypass - winevent]
description = Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC
search = index=* (EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security") (Creator_Process_Name="*\\WSreset.exe")) | table Process_Command_Line | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1088" | eval sigma_title="Wsreset UAC Bypass" | eval sigma_description="Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC"
dispatch.earliest_time = -24h@h
alert.track = 0

[Wsreset UAC Bypass - sysmon]
description = Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC
search = index=* (EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational") (ParentImage="*\\WSreset.exe")) | table CommandLine | eval sigma_attack_tags="attack.defense_evasion attack.execution attack.t1088" | eval sigma_title="Wsreset UAC Bypass" | eval sigma_description="Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC"
dispatch.earliest_time = -24h@h
alert.track = 0

[XSL Script Processing - winevent]
description = Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses
search = index=* ((EventCode="4688" (source="WinEventLog:Security" OR sourcetype="WinEventLog:Security")) ((New_Process_Name="*\\wmic.exe" Process_Command_Line="*/format*") OR New_Process_Name="*\\msxsl.exe")) | eval sigma_attack_tags="attack.execution attack.t1220" | eval sigma_title="XSL Script Processing" | eval sigma_description="Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses"
dispatch.earliest_time = -24h@h
alert.track = 0

[XSL Script Processing - sysmon]
description = Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses
search = index=* ((EventCode="1" (source="WinEventLog:Microsoft-Windows-Sysmon/Operational" OR sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational")) ((Image="*\\wmic.exe" CommandLine="*/format*") OR Image="*\\msxsl.exe")) | eval sigma_attack_tags="attack.execution attack.t1220" | eval sigma_title="XSL Script Processing" | eval sigma_description="Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses"
dispatch.earliest_time = -24h@h
alert.track = 0
